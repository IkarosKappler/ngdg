(()=>{var e={488:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DefaultFactory=void 0,t.DefaultFactory={newVector2:function(e,t){return new window.THREE.Vector2(e,t)},newVector3:function(e,t,r){return new window.THREE.Vector3(e,t,r)},newMatrix3:function(){return new window.THREE.Matrix3},newMatrix4:function(){return new window.THREE.Matrix4},newObject3D:function(){return new window.THREE.Object3D},newBox3:function(){return new window.THREE.Box3},newSphere:function(){return new window.THREE.Sphere},newBufferGeometry:function(){return new window.THREE.BufferGeometry},generateUUID:function(){return window.THREE.MathUtils.generateUUID()},newFloat32BufferAttribute:function(e,t,r){return new window.THREE.Float32BufferAttribute(e,t,r)},newColor:function(){return new window.THREE.Color},newBufferAttribute:function(e,t,r){return new window.THREE.BufferAttribute(e,t,r)}}},949:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DirectGeometry=void 0;var o=r(488),s=function(){function e(e){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1,this.factory=e||o.DefaultFactory}return e.prototype.computeGroups=function(e){var t,r,o=[],s=void 0,i=e.faces;for(r=0;r<i.length;r++){var n=i[r];n.materialIndex!==s&&(s=n.materialIndex,void 0!==t&&(t.count=3*r-t.start,o.push(t)),t={start:3*r,materialIndex:s})}void 0!==t&&(t.count=3*r-t.start,o.push(t)),this.groups=o},e.prototype.fromGeometry=function(e){var t,r=e.faces,o=e.vertices,s=e.faceVertexUvs,i=s[0]&&s[0].length>0,n=s[1]&&s[1].length>0,a=e.morphTargets,h=a.length;if(h>0){t=[];for(var c=0;c<h;c++)t[c]={name:a[c].name,data:[]};this.morphTargets.position=t}var l,u=e.morphNormals,f=u.length;if(f>0){l=[];for(c=0;c<f;c++)l[c]={name:u[c].name,data:[]};this.morphTargets.normal=l}var p=e.skinIndices,v=e.skinWeights,m=p.length===o.length,d=v.length===o.length;o.length>0&&0===r.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(c=0;c<r.length;c++){var g=r[c];this.vertices.push(o[g.a],o[g.b],o[g.c]);var y=g.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{var x=g.normal;this.normals.push(x,x,x)}var b,w=g.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var N=g.color;this.colors.push(N,N,N)}if(!0===i)void 0!==(b=s[0][c])?this.uvs.push(b[0],b[1],b[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(this.factory.newVector2(),this.factory.newVector2(),this.factory.newVector2()));if(!0===n)void 0!==(b=s[1][c])?this.uvs2.push(b[0],b[1],b[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(this.factory.newVector2(),this.factory.newVector2(),this.factory.newVector2()));for(var V=0;V<h;V++){var U=a[V].vertices;t[V].data.push(U[g.a],U[g.b],U[g.c])}for(V=0;V<f;V++){var B=u[V].vertexNormals[c];l[V].data.push(B.a,B.b,B.c)}m&&this.skinIndices.push(p[g.a],p[g.b],p[g.c]),d&&this.skinWeights.push(v[g.a],v[g.b],v[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},e}();t.DirectGeometry=s},329:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Face3=void 0;var o=r(488),s=function(){function e(e,t,r,s,i,n,a){void 0===n&&(n=0);var h=a||o.DefaultFactory;this.a=e,this.b=t,this.c=r,this.normal=s&&s.isVector3?s:h.newVector3(),this.vertexNormals=Array.isArray(s)?s:[],this.color=i&&i.isColor?i:h.newColor(),this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=n}return e.prototype.clone=function(){return new e(this.a,this.b,this.c,this.normal.clone(),this.color.clone(),this.materialIndex).copy(this)},e.prototype.copy=function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,r=e.vertexNormals.length;t<r;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(t=0,r=e.vertexColors.length;t<r;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this},e}();t.Face3=s},792:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Gmetry=void 0;var o=r(488),s=r(949),i=r(329),n=function(){function e(e){this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1,this.isGeometry=!0,this.factory=e||o.DefaultFactory,this.uuid=this.factory.generateUUID(),this._m1=this.factory.newMatrix4(),this._obj=this.factory.newObject3D(),this._offset=this.factory.newVector3()}return e.prototype.applyMatrix4=function(e){for(var t=this.factory.newMatrix3().getNormalMatrix(e),r=0,o=this.vertices.length;r<o;r++){this.vertices[r].applyMatrix4(e)}for(r=0,o=this.faces.length;r<o;r++){var s=this.faces[r];s.normal.applyMatrix3(t).normalize();for(var i=0,n=s.vertexNormals.length;i<n;i++)s.vertexNormals[i].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},e.prototype.rotateX=function(e){return this._m1.makeRotationX(e),this.applyMatrix4(this._m1),this},e.prototype.rotateY=function(e){return this._m1.makeRotationY(e),this.applyMatrix4(this._m1),this},e.prototype.rotateZ=function(e){return this._m1.makeRotationZ(e),this.applyMatrix4(this._m1),this},e.prototype.translate=function(e,t,r){return this._m1.makeTranslation(e,t,r),this.applyMatrix4(this._m1),this},e.prototype.scale=function(e,t,r){return this._m1.makeScale(e,t,r),this.applyMatrix4(this._m1),this},e.prototype.lookAt=function(e){return this._obj.lookAt(e),this._obj.updateMatrix(),this.applyMatrix4(this._obj.matrix),this},e.prototype.fromBufferGeometry=function(e){var t=this,r=null!==e.index?e.index:void 0,o=e.attributes;if(void 0===o.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var s=o.position,n=o.normal,a=o.color,h=o.uv,c=o.uv2;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var l=0;l<s.count;l++)t.vertices.push(this.factory.newVector3().fromBufferAttribute(s,l)),void 0!==a&&t.colors.push(this.factory.newColor().fromBufferAttribute(a,l));var u=this.factory,f=function(e,r,o,s){var l=void 0===a?[]:[t.colors[e].clone(),t.colors[r].clone(),t.colors[o].clone()],f=void 0===n?[]:[u.newVector3().fromBufferAttribute(n,e),u.newVector3().fromBufferAttribute(n,r),u.newVector3().fromBufferAttribute(n,o)],p=new i.Face3(e,r,o,f,l,s);t.faces.push(p),void 0!==h&&t.faceVertexUvs[0].push([u.newVector2().fromBufferAttribute(h,e),u.newVector2().fromBufferAttribute(h,r),u.newVector2().fromBufferAttribute(h,o)]),void 0!==c&&t.faceVertexUvs[1].push([u.newVector2().fromBufferAttribute(c,e),u.newVector2().fromBufferAttribute(c,r),u.newVector2().fromBufferAttribute(c,o)])},p=e.groups;if(p.length>0)for(l=0;l<p.length;l++)for(var v=p[l],m=v.start,d=m,g=m+v.count;d<g;d+=3)void 0!==r?f(r.getX(d),r.getX(d+1),r.getX(d+2),v.materialIndex):f(d,d+1,d+2,v.materialIndex);else if(void 0!==r)for(l=0;l<r.count;l+=3)f(r.getX(l),r.getX(l+1),r.getX(l+2));else for(l=0;l<s.count;l+=3)f(l,l+1,l+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},e.prototype.center=function(){return this.computeBoundingBox(),this.boundingBox.getCenter(this._offset).negate(),this.translate(this._offset.x,this._offset.y,this._offset.z),this},e.prototype.normalize=function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,r=0===t?1:1/t,o=this.factory.newMatrix4();return o.set(r,0,0,-r*e.x,0,r,0,-r*e.y,0,0,r,-r*e.z,0,0,0,1),this.applyMatrix4(o),this},e.prototype.computeFaceNormals=function(){for(var e=this.factory.newVector3(),t=this.factory.newVector3(),r=0,o=this.faces.length;r<o;r++){var s=this.faces[r],i=this.vertices[s.a],n=this.vertices[s.b],a=this.vertices[s.c];e.subVectors(a,n),t.subVectors(i,n),e.cross(t),e.normalize(),s.normal.copy(e)}},e.prototype.computeVertexNormals=function(e){void 0===e&&(e=!0);for(var t=new Array(this.vertices.length),r=0,o=this.vertices.length;r<o;r++)t[r]=this.factory.newVector3();if(e)for(var s=this.factory.newVector3(),i=this.factory.newVector3(),n=0,a=this.faces.length;n<a;n++){var h=this.faces[n],c=this.vertices[h.a],l=this.vertices[h.b],u=this.vertices[h.c];s.subVectors(u,l),i.subVectors(c,l),s.cross(i),t[h.a].add(s),t[h.b].add(s),t[h.c].add(s)}else{this.computeFaceNormals();for(n=0,a=this.faces.length;n<a;n++){t[(h=this.faces[n]).a].add(h.normal),t[h.b].add(h.normal),t[h.c].add(h.normal)}}for(r=0,o=this.vertices.length;r<o;r++)t[r].normalize();for(n=0,a=this.faces.length;n<a;n++){var f=(h=this.faces[n]).vertexNormals;3===f.length?(f[0].copy(t[h.a]),f[1].copy(t[h.b]),f[2].copy(t[h.c])):(f[0]=t[h.a].clone(),f[1]=t[h.b].clone(),f[2]=t[h.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},e.prototype.computeFlatVertexNormals=function(){this.computeFaceNormals();for(var e=0,t=this.faces.length;e<t;e++){var r=this.faces[e],o=r.vertexNormals;3===o.length?(o[0].copy(r.normal),o[1].copy(r.normal),o[2].copy(r.normal)):(o[0]=r.normal.clone(),o[1]=r.normal.clone(),o[2]=r.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},e.prototype.computeMorphNormals=function(){for(var t=0,r=this.faces.length;t<r;t++){(u=this.faces[t]).__originalFaceNormal?u.__originalFaceNormal.copy(u.normal):u.__originalFaceNormal=u.normal.clone(),u.__originalVertexNormals||(u.__originalVertexNormals=[]);for(var o=0,s=u.vertexNormals.length;o<s;o++)u.__originalVertexNormals[o]?u.__originalVertexNormals[o].copy(u.vertexNormals[o]):u.__originalVertexNormals[o]=u.vertexNormals[o].clone()}var i=new e(this.factory);i.faces=this.faces;for(o=0,s=this.morphTargets.length;o<s;o++){if(!this.morphNormals[o]){this.morphNormals[o]={},this.morphNormals[o].faceNormals=[],this.morphNormals[o].vertexNormals=[];var n=this.morphNormals[o].faceNormals,a=this.morphNormals[o].vertexNormals;for(t=0,r=this.faces.length;t<r;t++){var h=this.factory.newVector3(),c={a:this.factory.newVector3(),b:this.factory.newVector3(),c:this.factory.newVector3()};n.push(h),a.push(c)}}var l=this.morphNormals[o];i.vertices=this.morphTargets[o].vertices,i.computeFaceNormals(),i.computeVertexNormals();for(t=0,r=this.faces.length;t<r;t++){var u=this.faces[t];h=l.faceNormals[t],c=l.vertexNormals[t];h.copy(u.normal),c.a.copy(u.vertexNormals[0]),c.b.copy(u.vertexNormals[1]),c.c.copy(u.vertexNormals[2])}}for(t=0,r=this.faces.length;t<r;t++){(u=this.faces[t]).normal=u.__originalFaceNormal,u.vertexNormals=u.__originalVertexNormals}},e.prototype.computeBoundingBox=function(){null===this.boundingBox&&(this.boundingBox=this.factory.newBox3()),this.boundingBox.setFromPoints(this.vertices)},e.prototype.computeBoundingSphere=function(){null===this.boundingSphere&&(this.boundingSphere=this.factory.newSphere()),this.boundingSphere.setFromPoints(this.vertices)},e.prototype.merge=function(e,t,r){if(void 0===r&&(r=0),e&&e.isGeometry){var o,s=this.vertices.length,n=this.vertices,a=e.vertices,h=this.faces,c=e.faces,l=this.colors,u=e.colors;void 0!==t&&(o=this.factory.newMatrix3().getNormalMatrix(t));for(var f=0,p=a.length;f<p;f++){var v=a[f].clone();void 0!==t&&v.applyMatrix4(t),n.push(v)}for(f=0,p=u.length;f<p;f++)l.push(u[f].clone());for(f=0,p=c.length;f<p;f++){var m=c[f],d=void 0,g=void 0,y=m.vertexNormals,x=m.vertexColors,b=new i.Face3(m.a+s,m.b+s,m.c+s);b.normal.copy(m.normal),void 0!==o&&b.normal.applyMatrix3(o).normalize();for(var w=0,N=y.length;w<N;w++)d=y[w].clone(),void 0!==o&&d.applyMatrix3(o).normalize(),b.vertexNormals.push(d);b.color.copy(m.color);for(w=0,N=x.length;w<N;w++)g=x[w],b.vertexColors.push(g.clone());b.materialIndex=m.materialIndex+r,h.push(b)}for(f=0,p=e.faceVertexUvs.length;f<p;f++){var V=e.faceVertexUvs[f];void 0===this.faceVertexUvs[f]&&(this.faceVertexUvs[f]=[]);for(w=0,N=V.length;w<N;w++){for(var U=V[w],B=[],A=0,_=U.length;A<_;A++)B.push(U[A].clone());this.faceVertexUvs[f].push(B)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e)},e.prototype.mergeMesh=function(e){e&&e.isMesh?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},e.prototype.mergeVertices=function(e){void 0===e&&(e=4);for(var t={},r=[],o=[],s=Math.pow(10,e),i=0,n=this.vertices.length;i<n;i++){var a=this.vertices[i],h=Math.round(a.x*s)+"_"+Math.round(a.y*s)+"_"+Math.round(a.z*s);void 0===t[h]?(t[h]=i,r.push(this.vertices[i]),o[i]=r.length-1):o[i]=o[t[h]]}var c=[];for(i=0,n=this.faces.length;i<n;i++){var l=this.faces[i];l.a=o[l.a],l.b=o[l.b],l.c=o[l.c];for(var u=[l.a,l.b,l.c],f=0;f<3;f++)if(u[f]===u[(f+1)%3]){c.push(i);break}}for(i=c.length-1;i>=0;i--){var p=c[i];this.faces.splice(p,1);for(var v=0,m=this.faceVertexUvs.length;v<m;v++)this.faceVertexUvs[v].splice(p,1)}var d=this.vertices.length-r.length;return this.vertices=r,d},e.prototype.setFromPoints=function(e){this.vertices=[];for(var t=0,r=e.length;t<r;t++){var o=e[t];this.vertices.push(this.factory.newVector3(o.x,o.y,o.z||0))}return this},e.prototype.sortFacesByMaterialIndex=function(){for(var e=this.faces,t=e.length,r=0;r<t;r++)e[r]._id=r;e.sort((function(e,t){return e.materialIndex-t.materialIndex}));var o,s,i=this.faceVertexUvs[0],n=this.faceVertexUvs[1];i&&i.length===t&&(o=[]),n&&n.length===t&&(s=[]);for(r=0;r<t;r++){var a=e[r]._id;o&&o.push(i[a]),s&&s.push(n[a])}o&&(this.faceVertexUvs[0]=o),s&&(this.faceVertexUvs[1]=s)},e.prototype.toJSON=function(){var e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"},uuid:null,type:null,name:null,data:null};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var r in t)void 0!==t[r]&&(e[r]=t[r]);return e}for(var o=[],s=0;s<this.vertices.length;s++){var i=this.vertices[s];o.push(i.x,i.y,i.z)}var n=[],a=[],h={},c=[],l={},u=[],f={};for(s=0;s<this.faces.length;s++){var p=this.faces[s],v=void 0!==this.faceVertexUvs[0][s],m=p.normal.length()>0,d=p.vertexNormals.length>0,g=1!==p.color.r||1!==p.color.g||1!==p.color.b,y=p.vertexColors.length>0,x=0,b=function(e,t,r){return r?e|1<<t:e&~(1<<t)},w=function(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==h[t]||(h[t]=a.length/3,a.push(e.x,e.y,e.z)),h[t]},N=function(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==l[t]||(l[t]=c.length,c.push(e.getHex())),l[t]},V=function(e){var t=e.x.toString()+e.y.toString();return void 0!==f[t]||(f[t]=u.length/2,u.push(e.x,e.y)),f[t]};if(x=b(x,0,0),x=b(x,1,!0),x=b(x,2,!1),x=b(x,3,v),x=b(x,4,m),x=b(x,5,d),x=b(x,6,g),x=b(x,7,y),n.push(x),n.push(p.a,p.b,p.c),n.push(p.materialIndex),v){var U=this.faceVertexUvs[0][s];n.push(V(U[0]),V(U[1]),V(U[2]))}if(m&&n.push(w(p.normal)),d){var B=p.vertexNormals;n.push(w(B[0]),w(B[1]),w(B[2]))}if(g&&n.push(N(p.color)),y){var A=p.vertexColors;n.push(N(A[0]),N(A[1]),N(A[2]))}}return e.data={},e.data.vertices=o,e.data.normals=a,c.length>0&&(e.data.colors=c),u.length>0&&(e.data.uvs=[u]),e.data.faces=n,e},e.prototype.clone=function(){return new e(this.factory).copy(this)},e.prototype.copy=function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;for(var t=e.vertices,r=0,o=t.length;r<o;r++)this.vertices.push(t[r].clone());var s=e.colors;for(r=0,o=s.length;r<o;r++)this.colors.push(s[r].clone());var i=e.faces;for(r=0,o=i.length;r<o;r++)this.faces.push(i[r].clone());for(r=0,o=e.faceVertexUvs.length;r<o;r++){var n=e.faceVertexUvs[r];void 0===this.faceVertexUvs[r]&&(this.faceVertexUvs[r]=[]);for(var a=0,h=n.length;a<h;a++){for(var c=n[a],l=[],u=0,f=c.length;u<f;u++){var p=c[u];l.push(p.clone())}this.faceVertexUvs[r].push(l)}}var v=e.morphTargets;for(r=0,o=v.length;r<o;r++){var m={};if(m.name=v[r].name,void 0!==v[r].vertices){m.vertices=[];for(a=0,h=v[r].vertices.length;a<h;a++)m.vertices.push(v[r].vertices[a].clone())}if(void 0!==v[r].normals){m.normals=[];for(a=0,h=v[r].normals.length;a<h;a++)m.normals.push(v[r].normals[a].clone())}this.morphTargets.push(m)}var d=e.morphNormals;for(r=0,o=d.length;r<o;r++){var g={};if(void 0!==d[r].vertexNormals){g.vertexNormals=[];for(a=0,h=d[r].vertexNormals.length;a<h;a++){var y=d[r].vertexNormals[a],x={a:null,b:null,c:null};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),g.vertexNormals.push(x)}}if(void 0!==d[r].faceNormals){g.faceNormals=[];for(a=0,h=d[r].faceNormals.length;a<h;a++)g.faceNormals.push(d[r].faceNormals[a].clone())}this.morphNormals.push(g)}var b=e.skinWeights;for(r=0,o=b.length;r<o;r++)this.skinWeights.push(b[r].clone());var w=e.skinIndices;for(r=0,o=w.length;r<o;r++)this.skinIndices.push(w[r].clone());var N=e.lineDistances;for(r=0,o=N.length;r<o;r++)this.lineDistances.push(N[r]);var V=e.boundingBox;null!==V&&(this.boundingBox=V.clone());var U=e.boundingSphere;return null!==U&&(this.boundingSphere=U.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},e.prototype.toBufferGeometry=function(){var e=new s.DirectGeometry(this.factory).fromGeometry(this),t=this.factory.newBufferGeometry(),r=new Float32Array(3*e.vertices.length);if(t.setAttribute("position",this.factory.newBufferAttribute(r,3).copyVector3sArray(e.vertices)),e.normals.length>0){var o=new Float32Array(3*e.normals.length);t.setAttribute("normal",this.factory.newBufferAttribute(o,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var i=new Float32Array(3*e.colors.length);t.setAttribute("color",this.factory.newBufferAttribute(i,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var n=new Float32Array(2*e.uvs.length);t.setAttribute("uv",this.factory.newBufferAttribute(n,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var a=new Float32Array(2*e.uvs2.length);t.setAttribute("uv2",this.factory.newBufferAttribute(a,2).copyVector2sArray(e.uvs2))}for(var h in t.groups=e.groups,e.morphTargets){for(var c=[],l=e.morphTargets[h],u=0,f=l.length;u<f;u++){var p=l[u],v=this.factory.newFloat32BufferAttribute(3*p.data.length,3);v.name=p.name,c.push(v.copyVector3sArray(p.data))}t.morphAttributes[h]=c}if(e.skinIndices.length>0){var m=this.factory.newFloat32BufferAttribute(4*e.skinIndices.length,4);t.setAttribute("skinIndex",m.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var d=this.factory.newFloat32BufferAttribute(4*e.skinWeights.length,4);t.setAttribute("skinWeight",d.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(t.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(t.boundingBox=e.boundingBox.clone()),t},e.prototype.computeTangents=function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},e.prototype.computeLineDistances=function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},e.prototype.applyMatrix=function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},e.prototype.dispose=function(){},e.createBufferGeometryFromObject=function(e,t){var r=t||o.DefaultFactory,s=r.newBufferGeometry(),i=e.geometry;if(e.isPoints||e.isLine){var n=r.newFloat32BufferAttribute(3*i.vertices.length,3),a=r.newFloat32BufferAttribute(3*i.colors.length,3);if(s.setAttribute("position",n.copyVector3sArray(i.vertices)),s.setAttribute("color",a.copyColorsArray(i.colors)),i.lineDistances&&i.lineDistances.length===i.vertices.length){var h=r.newFloat32BufferAttribute(i.lineDistances.length,1);s.setAttribute("lineDistance",h.copyArray(i.lineDistances))}null!==i.boundingSphere&&(s.boundingSphere=i.boundingSphere.clone()),null!==i.boundingBox&&(s.boundingBox=i.boundingBox.clone())}else e.isMesh&&(s=i.toBufferGeometry());return s},e}();t.Gmetry=n},867:(e,t,r)=>{"use strict";t.Gc=void 0;var o=r(949);var s=r(329);var i=r(792);var n=r(601);Object.defineProperty(t,"Gc",{enumerable:!0,get:function(){return n.ThreeGeometryHellfix}})},601:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ThreeGeometryHellfix=void 0;var o=r(488),s=r(949),i=r(329),n=r(792);t.ThreeGeometryHellfix={DirectGeometry:s.DirectGeometry,Face3:i.Face3,Gmetry:n.Gmetry,DefaultFactory:o.DefaultFactory}}},t={};function r(o){var s=t[o];if(void 0!==s)return s.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,r),i.exports}globalThis.ThreeGeometryHellfix=globalThis.TGH=r(867).Gc})();
//# sourceMappingURL=three-geometry-hellfix-main.min.js.map
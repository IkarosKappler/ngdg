{"version":3,"file":"ngdg-vendor.min.js","mappings":"uFAQiB,IAITA,EAiEAC,EAoBAC,EAyBAC,EA8CAC,EAgBAC,EAgDAC,EAmBAC,EAuBAC,EAuBAC,EAIAC,EAcAC,EAsDAC,EAIAC,EAeAC,EAoDAC,EAeAC,EAaAC,EAMAC,EAOAC,EAKAC,EAKAC,EAkBAC,EAGAC,EAIAC,EAWAC,EAMAC,EAgBAC,EAgBAC,EAcAC,EAQAC,EAtkBRC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,YAAS,EAEjBF,EAAQE,QAIAnC,EACA,SAAcoC,EAAGC,EAAGC,GAEhBC,KAAKH,EAAIA,EAETG,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAETC,KAAKC,KAAO,KACZD,KAAKE,KAAO,KAEZF,KAAKG,EAAI,KAETH,KAAKI,MAAQ,KACbJ,KAAKK,MAAQ,KAEbL,KAAKM,SAAU,GAiDnB5C,EAAa,SAAU6C,EAAMC,EAAOC,EAAKC,EAAKC,GAC9C,IAAId,EACAe,EACJ,GAAID,IAAepB,EAAWgB,EAAMC,EAAOC,EAAKC,GAAO,EACnD,IAAKb,EAAIW,EAAOX,EAAIY,EAAKZ,GAAKa,EAC1BE,EAAOvB,EAAWQ,EAAGU,EAAKV,GAAIU,EAAKV,EAAI,GAAIe,QAI/C,IAAKf,EAAIY,EAAMC,EAAKb,GAAKW,EAAOX,GAAKa,EACjCE,EAAOvB,EAAWQ,EAAGU,EAAKV,GAAIU,EAAKV,EAAI,GAAIe,GAOnD,OAJIA,GAAQ/B,EAAO+B,EAAMA,EAAKV,QAC1BZ,EAAWsB,GACXA,EAAOA,EAAKV,MAETU,GAGPjD,EAAe,SAAU6C,EAAOC,GAChC,IAAKD,EACD,OAAOA,EACNC,IACDA,EAAMD,GAEV,IAAIK,EAAIL,EACJM,GAAQ,EACZ,GAGI,GADAA,GAAQ,EACHD,EAAEP,UAAYzB,EAAOgC,EAAGA,EAAEX,OAAqC,IAA5BtB,EAAKiC,EAAEZ,KAAMY,EAAGA,EAAEX,MAQtDW,EAAIA,EAAEX,SAR8D,CAGpE,GAFAZ,EAAWuB,IACXA,EAAIJ,EAAMI,EAAEZ,QACFY,EAAEX,KACR,MACJY,GAAQ,SAKPA,GAASD,IAAMJ,GACxB,OAAOA,GAGP7C,EAAe,SAAUmD,EAAKC,EAAWN,EAAKO,EAAMC,EAAMC,EAASC,GACnE,GAAKL,EAAL,EAGKK,GAAQD,GACT7C,EAAWyC,EAAKE,EAAMC,EAAMC,GAMhC,IAJA,IACIlB,EACAC,EAFAmB,EAAON,EAIJA,EAAId,OAASc,EAAIb,MAGpB,GAFAD,EAAOc,EAAId,KACXC,EAAOa,EAAIb,KACPiB,EAAUrD,EAAYiD,EAAKE,EAAMC,EAAMC,GAAWtD,EAAMkD,GAExDC,EAAUM,KAAKrB,EAAKJ,EAAIa,GACxBM,EAAUM,KAAKP,EAAIlB,EAAIa,GACvBM,EAAUM,KAAKpB,EAAKL,EAAIa,GACxBpB,EAAWyB,GAEXA,EAAMb,EAAKA,KACXmB,EAAOnB,EAAKA,UAKhB,IAFAa,EAAMb,KAEMmB,EAAM,CAETD,EAIa,IAATA,GACLL,EAAMhD,EAAuBJ,EAAaoD,GAAMC,EAAWN,GAC3D9C,EAAamD,EAAKC,EAAWN,EAAKO,EAAMC,EAAMC,EAAS,IAGzC,IAATC,GACLpD,EAAY+C,EAAKC,EAAWN,EAAKO,EAAMC,EAAMC,GAT7CvD,EAAaD,EAAaoD,GAAMC,EAAWN,EAAKO,EAAMC,EAAMC,EAAS,GAWzE,SAKRtD,EAAQ,SAAUkD,GAClB,IAAIQ,EAAIR,EAAId,KACRuB,EAAIT,EACJU,EAAIV,EAAIb,KACZ,GAAItB,EAAK2C,EAAGC,EAAGC,IAAM,EACjB,OAAO,EAGX,IADA,IAAIZ,EAAIE,EAAIb,KAAKA,KACVW,IAAME,EAAId,MAAM,CACnB,GAAIvB,EAAgB6C,EAAEzB,EAAGyB,EAAExB,EAAGyB,EAAE1B,EAAG0B,EAAEzB,EAAG0B,EAAE3B,EAAG2B,EAAE1B,EAAGc,EAAEf,EAAGe,EAAEd,IACrDnB,EAAKiC,EAAEZ,KAAMY,EAAGA,EAAEX,OAAS,EAC3B,OAAO,EACXW,EAAIA,EAAEX,KAEV,OAAO,GAEPpC,EAAc,SAAUiD,EAAKE,EAAMC,EAAMC,GACzC,IAAII,EAAIR,EAAId,KACRuB,EAAIT,EACJU,EAAIV,EAAIb,KACZ,GAAItB,EAAK2C,EAAGC,EAAGC,IAAM,EACjB,OAAO,EAQX,IALA,IAAIC,EAAQH,EAAEzB,EAAI0B,EAAE1B,EAAKyB,EAAEzB,EAAI2B,EAAE3B,EAAIyB,EAAEzB,EAAI2B,EAAE3B,EAAM0B,EAAE1B,EAAI2B,EAAE3B,EAAI0B,EAAE1B,EAAI2B,EAAE3B,EAAI6B,EAAQJ,EAAExB,EAAIyB,EAAEzB,EAAKwB,EAAExB,EAAI0B,EAAE1B,EAAIwB,EAAExB,EAAI0B,EAAE1B,EAAMyB,EAAEzB,EAAI0B,EAAE1B,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EAAI6B,EAAQL,EAAEzB,EAAI0B,EAAE1B,EAAKyB,EAAEzB,EAAI2B,EAAE3B,EAAIyB,EAAEzB,EAAI2B,EAAE3B,EAAM0B,EAAE1B,EAAI2B,EAAE3B,EAAI0B,EAAE1B,EAAI2B,EAAE3B,EAAI+B,EAAQN,EAAExB,EAAIyB,EAAEzB,EAAKwB,EAAExB,EAAI0B,EAAE1B,EAAIwB,EAAExB,EAAI0B,EAAE1B,EAAMyB,EAAEzB,EAAI0B,EAAE1B,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EAExR+B,EAAOtD,EAAOkD,EAAOC,EAAOV,EAAMC,EAAMC,GAAUY,EAAOvD,EAAOoD,EAAOC,EAAOZ,EAAMC,EAAMC,GAC1FN,EAAIE,EAAIX,MAAO4B,EAAIjB,EAAIV,MAEpBQ,GAAKA,EAAEV,GAAK2B,GAAQE,GAAKA,EAAE7B,GAAK4B,GAAM,CACzC,GAAIlB,IAAME,EAAId,MAAQY,IAAME,EAAIb,MAE5BxB,EAAgB6C,EAAEzB,EAAGyB,EAAExB,EAAGyB,EAAE1B,EAAG0B,EAAEzB,EAAG0B,EAAE3B,EAAG2B,EAAE1B,EAAGc,EAAEf,EAAGe,EAAEd,IACrDnB,EAAKiC,EAAEZ,KAAMY,EAAGA,EAAEX,OAAS,EAC3B,OAAO,EAEX,GADAW,EAAIA,EAAET,MACF4B,IAAMjB,EAAId,MAAQ+B,IAAMjB,EAAIb,MAE5BxB,EAAgB6C,EAAEzB,EAAGyB,EAAExB,EAAGyB,EAAE1B,EAAG0B,EAAEzB,EAAG0B,EAAE3B,EAAG2B,EAAE1B,EAAGiC,EAAElC,EAAGkC,EAAEjC,IACrDnB,EAAKoD,EAAE/B,KAAM+B,EAAGA,EAAE9B,OAAS,EAC3B,OAAO,EACX8B,EAAIA,EAAE3B,MAGV,KAAOQ,GAAKA,EAAEV,GAAK2B,GAAM,CACrB,GAAIjB,IAAME,EAAId,MAAQY,IAAME,EAAIb,MAE5BxB,EAAgB6C,EAAEzB,EAAGyB,EAAExB,EAAGyB,EAAE1B,EAAG0B,EAAEzB,EAAG0B,EAAE3B,EAAG2B,EAAE1B,EAAGc,EAAEf,EAAGe,EAAEd,IACrDnB,EAAKiC,EAAEZ,KAAMY,EAAGA,EAAEX,OAAS,EAC3B,OAAO,EACXW,EAAIA,EAAET,MAGV,KAAO4B,GAAKA,EAAE7B,GAAK4B,GAAM,CACrB,GAAIC,IAAMjB,EAAId,MAAQ+B,IAAMjB,EAAIb,MAE5BxB,EAAgB6C,EAAEzB,EAAGyB,EAAExB,EAAGyB,EAAE1B,EAAG0B,EAAEzB,EAAG0B,EAAE3B,EAAG2B,EAAE1B,EAAGiC,EAAElC,EAAGkC,EAAEjC,IACrDnB,EAAKoD,EAAE/B,KAAM+B,EAAGA,EAAE9B,OAAS,EAC3B,OAAO,EACX8B,EAAIA,EAAE3B,MAEV,OAAO,GAGPtC,EAAyB,SAAUyC,EAAOQ,EAAWN,GACrD,IAAIG,EAAIL,EACR,EAAG,CACC,IAAIe,EAAIV,EAAEZ,KACNuB,EAAIX,EAAEX,KAAKA,MACVrB,EAAO0C,EAAGC,IAAM1C,EAAWyC,EAAGV,EAAGA,EAAEX,KAAMsB,IAAMtC,EAAcqC,EAAGC,IAAMtC,EAAcsC,EAAGD,KACxFP,EAAUM,KAAKC,EAAE1B,EAAIa,GACrBM,EAAUM,KAAKT,EAAEhB,EAAIa,GACrBM,EAAUM,KAAKE,EAAE3B,EAAIa,GAErBpB,EAAWuB,GACXvB,EAAWuB,EAAEX,MACbW,EAAIL,EAAQgB,GAEhBX,EAAIA,EAAEX,WACDW,IAAML,GACf,OAAO7C,EAAakD,IAGpB7C,EAAc,SAAUwC,EAAOQ,EAAWN,EAAKO,EAAMC,EAAMC,GAE3D,IAAII,EAAIf,EACR,EAAG,CAEC,IADA,IAAIgB,EAAID,EAAErB,KAAKA,KACRsB,IAAMD,EAAEtB,MAAM,CACjB,GAAIsB,EAAE1B,IAAM2B,EAAE3B,GAAKlB,EAAgB4C,EAAGC,GAAI,CAEtC,IAAIC,EAAIrC,EAAamC,EAAGC,GAOxB,OALAD,EAAI5D,EAAa4D,EAAGA,EAAErB,MACtBuB,EAAI9D,EAAa8D,EAAGA,EAAEvB,MAEtBtC,EAAa2D,EAAGP,EAAWN,EAAKO,EAAMC,EAAMC,QAC5CvD,EAAa6D,EAAGT,EAAWN,EAAKO,EAAMC,EAAMC,GAGhDK,EAAIA,EAAEtB,KAEVqB,EAAIA,EAAErB,WACDqB,IAAMf,IAGfvC,EAAiB,SAAUsC,EAAM0B,EAAaC,EAAWxB,GACzD,IACIb,EAEAW,EACAC,EACA0B,EALAC,EAAQ,GAERC,EAAMJ,EAAYK,OAItB,IAAKzC,EAAI,EAAGA,EAAIwC,EAAKxC,IACjBW,EAAQyB,EAAYpC,GAAKa,EACzBD,EAAMZ,EAAIwC,EAAM,EAAIJ,EAAYpC,EAAI,GAAKa,EAAMH,EAAK+B,QACpDH,EAAOzE,EAAW6C,EAAMC,EAAOC,EAAKC,GAAK,MAC5ByB,EAAKjC,OACdiC,EAAK7B,SAAU,GACnB8B,EAAMd,KAAK7C,EAAY0D,IAI3B,IAFAC,EAAMG,KAAKrE,GAEN2B,EAAI,EAAGA,EAAIuC,EAAME,OAAQzC,IAC1B1B,EAAciE,EAAMvC,GAAIqC,GACxBA,EAAYvE,EAAauE,EAAWA,EAAUhC,MAElD,OAAOgC,GAEPhE,EAAW,SAAUqD,EAAGC,GACxB,OAAOD,EAAEzB,EAAI0B,EAAE1B,GAGf3B,EAAgB,SAAUqE,EAAMN,GAChC,IAAIO,EAASrE,EAAeoE,EAAMN,GAClC,IAAKO,EACD,OAAOP,EAEX,IAAIQ,EAAgBtD,EAAaqD,EAAQD,GAErCG,EAAiBhF,EAAa8E,EAAQA,EAAOvC,MAGjD,OAFAvC,EAAa+E,EAAeA,EAAcxC,MAEnCgC,IAAcO,EAASE,EAAiBT,GAI/C9D,EAAiB,SAAUoE,EAAMN,GACjC,IAIIU,EAJA/B,EAAIqB,EACJW,EAAKL,EAAK1C,EACVgD,EAAKN,EAAKzC,EACVgD,GAAK,IAIT,EAAG,CACC,GAAID,GAAMjC,EAAEd,GAAK+C,GAAMjC,EAAEX,KAAKH,GAAKc,EAAEX,KAAKH,IAAMc,EAAEd,EAAG,CACjD,IAAID,EAAIe,EAAEf,GAAKgD,EAAKjC,EAAEd,IAAMc,EAAEX,KAAKJ,EAAIe,EAAEf,IAAMe,EAAEX,KAAKH,EAAIc,EAAEd,GAC5D,GAAID,GAAK+C,GAAM/C,EAAIiD,EAAI,CAEnB,GADAA,EAAKjD,EACDA,IAAM+C,EAAI,CACV,GAAIC,IAAOjC,EAAEd,EACT,OAAOc,EACX,GAAIiC,IAAOjC,EAAEX,KAAKH,EACd,OAAOc,EAAEX,KAEjB0C,EAAI/B,EAAEf,EAAIe,EAAEX,KAAKJ,EAAIe,EAAIA,EAAEX,MAGnCW,EAAIA,EAAEX,WACDW,IAAMqB,GACf,IAAKU,EACD,OAAO,KAEX,GAAIC,IAAOE,EACP,OAAOH,EAKX,IAIII,EAJA3B,EAAOuB,EACPK,EAAKL,EAAE9C,EACPoD,EAAKN,EAAE7C,EACPoD,EAASC,EAAAA,EAEbvC,EAAI+B,EACJ,GACQC,GAAMhC,EAAEf,GAAKe,EAAEf,GAAKmD,GAAMJ,IAAOhC,EAAEf,GACnCpB,EAAgBoE,EAAKI,EAAKL,EAAKE,EAAID,EAAIG,EAAIC,EAAIJ,EAAKI,EAAKH,EAAKF,EAAIC,EAAIjC,EAAEf,EAAGe,EAAEd,KAC7EiD,EAAMK,KAAKC,IAAIR,EAAKjC,EAAEd,IAAM8C,EAAKhC,EAAEf,GAC/BZ,EAAc2B,EAAG2B,KAChBQ,EAAMG,GAAWH,IAAQG,IAAWtC,EAAEf,EAAI8C,EAAE9C,GAAMe,EAAEf,IAAM8C,EAAE9C,GAAKzB,EAAqBuE,EAAG/B,OAC1F+B,EAAI/B,EACJsC,EAASH,IAGjBnC,EAAIA,EAAEX,WACDW,IAAMQ,GACf,OAAOuB,GAGPvE,EAAuB,SAAUuE,EAAG/B,GACpC,OAAOjC,EAAKgE,EAAE3C,KAAM2C,EAAG/B,EAAEZ,MAAQ,GAAKrB,EAAKiC,EAAEX,KAAM0C,EAAGA,EAAE1C,MAAQ,GAGhE5B,EAAa,SAAUkC,EAAOS,EAAMC,EAAMC,GAC1C,IAAIN,EAAIL,EACR,GACgB,OAARK,EAAEV,IACFU,EAAEV,EAAI3B,EAAOqC,EAAEf,EAAGe,EAAEd,EAAGkB,EAAMC,EAAMC,IACvCN,EAAET,MAAQS,EAAEZ,KACZY,EAAER,MAAQQ,EAAEX,KACZW,EAAIA,EAAEX,WACDW,IAAML,GACfK,EAAET,MAAMC,MAAQ,KAChBQ,EAAET,MAAQ,KACV7B,EAAWsC,IAIXtC,EAAa,SAAU4D,GACvB,IAAItC,EACAgB,EACA0C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAS,EACb,EAAG,CAKC,IAJAhD,EAAIsB,EACJA,EAAO,KACPsB,EAAO,KACPC,EAAY,EACL7C,GAAG,CAIN,IAHA6C,IACAH,EAAI1C,EACJ8C,EAAQ,EACH9D,EAAI,EAAGA,EAAIgE,IACZF,IACAJ,EAAIA,EAAElD,OAFcR,KAOxB,IADA+D,EAAQC,EACDF,EAAQ,GAAMC,EAAQ,GAAKL,GAChB,IAAVI,IAA0B,IAAVC,IAAgBL,GAAK1C,EAAEV,GAAKoD,EAAEpD,IAC9CqD,EAAI3C,EACJA,EAAIA,EAAER,MACNsD,MAGAH,EAAID,EACJA,EAAIA,EAAElD,MACNuD,KAEAH,EACAA,EAAKpD,MAAQmD,EAEbrB,EAAOqB,EACXA,EAAEpD,MAAQqD,EACVA,EAAOD,EAEX3C,EAAI0C,EAERE,EAAKpD,MAAQ,KACbwD,GAAU,QACLH,EAAY,GACrB,OAAOvB,GAGP3D,EAAS,SAAUsB,EAAGC,EAAGkB,EAAMC,EAAMC,GAYrC,OALArB,EAAqB,aADrBA,EAAqB,YADrBA,EAAqB,YADrBA,EAAqB,WAFrBA,EAAI,OAASA,EAAImB,GAAQE,GAEfrB,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAIfC,EAAqB,aADrBA,EAAqB,YADrBA,EAAqB,YADrBA,EAAqB,WALrBA,EAAI,OAASA,EAAImB,GAAQC,GAKfpB,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KACE,GAGjBtB,EAAc,SAAU+B,GACxB,IAAIK,EAAIL,EACJsD,EAAWtD,EACf,IACQK,EAAEf,EAAIgE,EAAShE,GAAMe,EAAEf,IAAMgE,EAAShE,GAAKe,EAAEd,EAAI+D,EAAS/D,KAC1D+D,EAAWjD,GAEfA,EAAIA,EAAEX,WACDW,IAAML,GACf,OAAOsD,GAIPpF,EAAkB,SAAUqF,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACxD,OAAQH,EAAKE,IAAOL,EAAKM,IAAOP,EAAKM,IAAOD,EAAKE,IAAO,IACnDP,EAAKM,IAAOH,EAAKI,IAAOL,EAAKI,IAAOL,EAAKM,IAAO,IAChDL,EAAKI,IAAOD,EAAKE,IAAOH,EAAKE,IAAOH,EAAKI,IAAO,GAGrD3F,EAAkB,SAAU4C,EAAGC,GAC/B,OAAOD,EAAErB,KAAKL,IAAM2B,EAAE3B,GAAK0B,EAAEtB,KAAKJ,IAAM2B,EAAE3B,IAAMZ,EAAkBsC,EAAGC,KAChEtC,EAAcqC,EAAGC,IAAMtC,EAAcsC,EAAGD,IAAMpC,EAAaoC,EAAGC,IACH,IAA5B,GAA3B5C,EAAK2C,EAAEtB,KAAMsB,EAAGC,EAAEvB,OAAcrB,EAAK2C,EAAGC,EAAEvB,KAAMuB,KACjD3C,EAAO0C,EAAGC,IAAM5C,EAAK2C,EAAEtB,KAAMsB,EAAGA,EAAErB,MAAQ,GAAKtB,EAAK4C,EAAEvB,KAAMuB,EAAGA,EAAEtB,MAAQ,IAGjFtB,EAAO,SAAUiC,EAAG0C,EAAGgB,GACvB,OAAQhB,EAAExD,EAAIc,EAAEd,IAAMwE,EAAEzE,EAAIyD,EAAEzD,IAAMyD,EAAEzD,EAAIe,EAAEf,IAAMyE,EAAExE,EAAIwD,EAAExD,IAI1DlB,EAAS,SAAU2F,EAAIC,GACvB,OAAOD,EAAG1E,IAAM2E,EAAG3E,GAAK0E,EAAGzE,IAAM0E,EAAG1E,GAIpCjB,EAAa,SAAU0F,EAAIE,EAAID,EAAIE,GACnC,IAAIC,EAAK5F,EAAKJ,EAAK4F,EAAIE,EAAID,IACvBI,EAAK7F,EAAKJ,EAAK4F,EAAIE,EAAIC,IACvBG,EAAK9F,EAAKJ,EAAK6F,EAAIE,EAAIH,IACvBO,EAAK/F,EAAKJ,EAAK6F,EAAIE,EAAID,IAC3B,OAAIE,IAAOC,GAAMC,IAAOC,KAEb,IAAPH,IAAY7F,EAAUyF,EAAIC,EAAIC,OAEvB,IAAPG,IAAY9F,EAAUyF,EAAIG,EAAID,OAEvB,IAAPI,IAAY/F,EAAU0F,EAAID,EAAIG,OAEvB,IAAPI,IAAYhG,EAAU0F,EAAIC,EAAIC,KAKlC5F,EAAY,SAAU8B,EAAG0C,EAAGgB,GAC5B,OAAOhB,EAAEzD,GAAKuD,KAAK2B,IAAInE,EAAEf,EAAGyE,EAAEzE,IAAMyD,EAAEzD,GAAKuD,KAAK4B,IAAIpE,EAAEf,EAAGyE,EAAEzE,IAAMyD,EAAExD,GAAKsD,KAAK2B,IAAInE,EAAEd,EAAGwE,EAAExE,IAAMwD,EAAExD,GAAKsD,KAAK4B,IAAIpE,EAAEd,EAAGwE,EAAExE,IAErHf,EAAO,SAAUkG,GACjB,OAAOA,EAAM,EAAI,EAAIA,EAAM,GAAK,EAAI,GAGpCjG,EAAoB,SAAUsC,EAAGC,GACjC,IAAIX,EAAIU,EACR,EAAG,CACC,GAAIV,EAAEhB,IAAM0B,EAAE1B,GAAKgB,EAAEX,KAAKL,IAAM0B,EAAE1B,GAAKgB,EAAEhB,IAAM2B,EAAE3B,GAAKgB,EAAEX,KAAKL,IAAM2B,EAAE3B,GAAKf,EAAW+B,EAAGA,EAAEX,KAAMqB,EAAGC,GAC/F,OAAO,EAEXX,EAAIA,EAAEX,WACDW,IAAMU,GACf,OAAO,GAGPrC,EAAgB,SAAUqC,EAAGC,GAC7B,OAAO5C,EAAK2C,EAAEtB,KAAMsB,EAAGA,EAAErB,MAAQ,EAC7BtB,EAAK2C,EAAGC,EAAGD,EAAErB,OAAS,GAAKtB,EAAK2C,EAAGA,EAAEtB,KAAMuB,IAAM,EACjD5C,EAAK2C,EAAGC,EAAGD,EAAEtB,MAAQ,GAAKrB,EAAK2C,EAAGA,EAAErB,KAAMsB,GAAK,GAGnDrC,EAAe,SAAUoC,EAAGC,GAC5B,IAAIX,EAAIU,EACJ4D,GAAS,EACTd,GAAM9C,EAAEzB,EAAI0B,EAAE1B,GAAK,EACnBwE,GAAM/C,EAAExB,EAAIyB,EAAEzB,GAAK,EAEvB,GACUc,EAAEd,EAAIuE,GAASzD,EAAEX,KAAKH,EAAIuE,GAAQzD,EAAEX,KAAKH,IAAMc,EAAEd,GAClDsE,GAAMxD,EAAEX,KAAKJ,EAAIe,EAAEf,IAAMwE,EAAKzD,EAAEd,IAAMc,EAAEX,KAAKH,EAAIc,EAAEd,GAAKc,EAAEf,IAC3DqF,GAAUA,GACdtE,EAAIA,EAAEX,WACDW,IAAMU,GACf,OAAO4D,GAIP/F,EAAe,SAAUmC,EAAGC,GAC5B,IAAI4D,EAAK,IAAI3H,EAAK8D,EAAE1B,EAAG0B,EAAEzB,EAAGyB,EAAExB,GAC1BsF,EAAK,IAAI5H,EAAK+D,EAAE3B,EAAG2B,EAAE1B,EAAG0B,EAAEzB,GAC1BuF,EAAK/D,EAAErB,KACPqF,EAAK/D,EAAEvB,KASX,OARAsB,EAAErB,KAAOsB,EACTA,EAAEvB,KAAOsB,EACT6D,EAAGlF,KAAOoF,EACVA,EAAGrF,KAAOmF,EACVC,EAAGnF,KAAOkF,EACVA,EAAGnF,KAAOoF,EACVE,EAAGrF,KAAOmF,EACVA,EAAGpF,KAAOsF,EACHF,GAGPhG,EAAa,SAAUQ,EAAGC,EAAGC,EAAGa,GAChC,IAAIC,EAAI,IAAIpD,EAAKoC,EAAGC,EAAGC,GAWvB,OAVKa,GAKDC,EAAEX,KAAOU,EAAKV,KACdW,EAAEZ,KAAOW,EACTA,EAAKV,KAAKD,KAAOY,EACjBD,EAAKV,KAAOW,IAPZA,EAAEZ,KAAOY,EACTA,EAAEX,KAAOW,GAQNA,GAEPvB,EAAa,SAAUuB,GACvBA,EAAEX,KAAKD,KAAOY,EAAEZ,KAChBY,EAAEZ,KAAKC,KAAOW,EAAEX,KACZW,EAAET,QACFS,EAAET,MAAMC,MAAQQ,EAAER,OAClBQ,EAAER,QACFQ,EAAER,MAAMD,MAAQS,EAAET,QAEtBb,EAAa,SAAUgB,EAAMC,EAAOC,EAAKC,GAEzC,IADA,IAAI8E,EAAM,EACD3F,EAAIW,EAAOiF,EAAIhF,EAAMC,EAAKb,EAAIY,EAAKZ,GAAKa,EAC7C8E,IAAQjF,EAAKkF,GAAKlF,EAAKV,KAAOU,EAAKV,EAAI,GAAKU,EAAKkF,EAAI,IACrDA,EAAI5F,EAER,OAAO2F,GAhjBE,SAAUjF,EAAM0B,EAAavB,QAC1B,IAARA,IAAkBA,EAAM,GAC5BA,EAAMA,GAAO,EACb,IAMIO,EACAC,EACAwE,EACAC,EACA7F,EACAC,EACAoB,EAZAyE,EAAW3D,GAAeA,EAAYK,OAAS,EAC/CuD,EAAWD,EAAW3D,EAAY,GAAKvB,EAAMH,EAAK+B,OAClDJ,EAAYxE,EAAW6C,EAAM,EAAGsF,EAAUnF,GAAK,GAC/CM,EAAY,GAChB,IAAKkB,GAAaA,EAAUhC,OAASgC,EAAUjC,KAC3C,OAAOe,EAaX,GALI4E,IACA1D,EAAYjE,EAAesC,EAAM0B,EAAaC,EAAWxB,IAIzDH,EAAK+B,OAAS,GAAK5B,EAAK,CACxBO,EAAOyE,EAAOnF,EAAK,GACnBW,EAAOyE,EAAOpF,EAAK,GACnB,IAAK,IAAIV,EAAIa,EAAKb,EAAIgG,EAAUhG,GAAKa,GACjCZ,EAAIS,EAAKV,IAEDoB,IACJA,EAAOnB,IAFXC,EAAIQ,EAAKV,EAAI,IAGLqB,IACJA,EAAOnB,GACPD,EAAI4F,IACJA,EAAO5F,GACPC,EAAI4F,IACJA,EAAO5F,GAIfoB,EAAsB,KADtBA,EAAUkC,KAAK2B,IAAIU,EAAOzE,EAAM0E,EAAOzE,IACb,EAAIC,EAAU,EAG5C,OADAvD,EAAasE,EAAWlB,EAAWN,EAAKO,EAAMC,EAAMC,GAC7CH,K,6fCnER,MAAM8E,EACTC,cACI,MAAO,GAAGD,EAAaE,WAG/BF,EAAaE,QAAU,ECQhB,MAAMC,EAUTC,cAKI,IAAK,IAAIC,KAJTnG,KAAKoG,WAAY,EACjBpG,KAAKqG,YAAa,EAClBrG,KAAKsG,YAAa,EAClBtG,KAAKuG,SAAU,EACCN,EAAWO,MACvBxG,KAAKmG,GAAOF,EAAWO,MAAML,IAUzCF,EAAWO,MAAQ,CACfJ,WAAW,EACXC,YAAY,EACZC,YAAY,EACZC,SAAS,GC/BN,MAAME,EAQTP,YAAYQ,GACR1G,KAAK2G,MAAQ,GACb3G,KAAK4G,KAAO,GACZ5G,KAAK6G,UAAY,GACjB7G,KAAK8G,QAAU,GACf9G,KAAK0G,OAASA,EAYlBK,iBAAiBC,GAEb,OADAP,EAAgBQ,aAAajH,KAAK2G,MAAOK,GAClChH,KAiBXkH,oBAAoBF,GAEhB,OADAhH,KAAK2G,MAAQF,EAAgBU,gBAAgBnH,KAAK2G,MAAOK,GAClDhH,KAiBXoH,gBAAgBJ,GAEZ,OADAP,EAAgBQ,aAAajH,KAAK4G,KAAMI,GACjChH,KAiBXqH,mBAAmBL,GAEf,OADAhH,KAAK4G,KAAOH,EAAgBU,gBAAgBnH,KAAK4G,KAAMI,GAChDhH,KAYXsH,qBAAqBN,GAEjB,OADAP,EAAgBQ,aAAajH,KAAK6G,UAAWG,GACtChH,KAiBXuH,wBAAwBP,GAEpB,OADAhH,KAAK6G,UAAYJ,EAAgBU,gBAAgBnH,KAAK6G,UAAWG,GAC1DhH,KAYXwH,mBAAmBR,GAGf,OADAP,EAAgBQ,aAAajH,KAAK8G,QAASE,GACpChH,KAiBXyH,sBAAsBT,GAGlB,OADAhH,KAAK8G,QAAUL,EAAgBU,gBAAgBnH,KAAK8G,QAASE,GACtDhH,KAaX0H,eAAelE,GACXiD,EAAgBkB,WAAW3H,KAAMA,KAAK2G,MAAOnD,GAajDoE,cAAcpE,GACViD,EAAgBkB,WAAW3H,KAAMA,KAAK4G,KAAMpD,GAahDqE,mBAAmBrE,GACfiD,EAAgBkB,WAAW3H,KAAMA,KAAK6G,UAAWrD,GAarDsE,iBAAiBtE,GACbiD,EAAgBkB,WAAW3H,KAAMA,KAAK8G,QAAStD,GAMnDuC,kBAAkBgC,EAAOC,EAAWxE,GAChC,MAAMyE,EAAKzE,EAKX,IAAK,IAAI3D,UAJe,IAAboI,EAAGC,OACVD,EAAGC,OAAS,CAAExB,OAAQqB,EAAMrB,QAE5BuB,EAAGC,OAAOxB,OAASqB,EAAMrB,OACfsB,EACVA,EAAUnI,GAAGoI,GAOrBlC,oBAAoBiC,EAAWG,GAC3B,IAAK,IAAItI,KAAKmI,EACV,GAAIA,EAAUnI,IAAMsI,EAChB,OAAO,EAGf,OADAH,EAAU1G,KAAK6G,IACR,EAMXpC,uBAAuBiC,EAAWI,GAC9B,IAAK,IAAIvI,EAAI,EAAGA,EAAImI,EAAU1F,OAAQzC,IAClC,GAAImI,EAAUnI,IAAMuI,EAChB,OAAOJ,EAAUK,OAAOxI,EAAG,GAEnC,OAAOmI,GC1NR,MAAMM,EASTpC,YAAYpG,EAAGC,GAMX,GAFAC,KAAKuI,UAAY,SACjBvI,KAAKwI,IAAM1C,EAAa5F,YACR,IAALJ,EACPE,KAAKF,EAAI,EACTE,KAAKD,EAAI,OAER,GAAgB,iBAALD,GAA6B,iBAALC,EACpCC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,MAER,CACD,MAAM0I,EAAQ3I,EACQ,iBAAX2I,EAAM3I,GAAmC,iBAAX2I,EAAM1I,GAC3CC,KAAKF,EAAI2I,EAAM3I,EACfE,KAAKD,EAAI0I,EAAM1I,IAIXC,KAAKF,EADO,iBAALA,EACEA,OACQ,IAALA,EACH,EAEA4I,IAET1I,KAAKD,EADO,iBAALA,EACEA,OACQ,IAALA,EACH,EAEA2I,KAGrB1I,KAAK2I,KAAO,IAAI1C,EAChBjG,KAAKgI,UAAY,IAAIvB,EAAgBzG,MAYzC4I,IAAI9I,EAAGC,GACH,GAAgB,iBAALD,GAA6B,iBAALC,EAC/BC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,MAER,CACD,MAAM0I,EAAQ3I,EACQ,iBAAX2I,EAAM3I,GAAmC,iBAAX2I,EAAM1I,GAC3CC,KAAKF,EAAI2I,EAAM3I,EACfE,KAAKD,EAAI0I,EAAM1I,IAIXC,KAAKF,EADO,iBAALA,EACEA,OACQ,IAALA,EACH,EAEA4I,IAET1I,KAAKD,EADO,iBAALA,EACEA,OACQ,IAALA,EACH,EAEA2I,KAGrB,OAAO1I,KAWX6I,KAAK/I,GAED,OADAE,KAAKF,EAAIA,EACFE,KAWX8I,KAAK/I,GAED,OADAC,KAAKD,EAAIA,EACFC,KAUX+I,OAEI,OADA/I,KAAKF,GAAKE,KAAKF,EACRE,KAUXgJ,OAEI,OADAhJ,KAAKD,GAAKC,KAAKD,EACRC,KAeXiJ,IAAInJ,EAAGC,GACH,GAAgB,iBAALD,GAA6B,iBAALC,EAC/BC,KAAKF,GAAKA,EACVE,KAAKD,GAAKA,MAET,CACD,MAAM0I,EAAQ3I,EACd,GAAsB,iBAAX2I,EAAM3I,GAAmC,iBAAX2I,EAAM1I,EAC3CC,KAAKF,GAAK2I,EAAM3I,EAChBE,KAAKD,GAAK0I,EAAM1I,MAEf,CACD,GAAgB,iBAALD,EAGP,KAAM,qBAAqBA,4BAC/B,GAHIE,KAAKF,GAAKA,EAGE,iBAALC,EAGP,KAAM,qBAAqBA,4BAF3BC,KAAKD,GAAKA,GAKtB,OAAOC,KAYXkJ,MAAMC,EAASC,GAGX,OAFApJ,KAAKF,GAAKqJ,EACVnJ,KAAKD,GAAKqJ,EACHpJ,KAWXqJ,KAAKF,GAED,OADAnJ,KAAKF,GAAKqJ,EACHnJ,KAWXsJ,KAAKF,GAED,OADApJ,KAAKD,GAAKqJ,EACHpJ,KAeXuJ,IAAIzJ,EAAGC,GACH,GAAgB,iBAALD,GAA6B,iBAALC,EAC/BC,KAAKF,GAAKA,EACVE,KAAKD,GAAKA,MAET,CACD,MAAM0I,EAAQ3I,EACd,GAAsB,iBAAX2I,EAAM3I,GAAmC,iBAAX2I,EAAM1I,EAC3CC,KAAKF,GAAK2I,EAAM3I,EAChBE,KAAKD,GAAK0I,EAAM1I,MAEf,CACD,GAAgB,iBAALD,EAGP,KAAM,qBAAqBA,4BAC/B,GAHIE,KAAKF,GAAKA,EAGE,iBAALC,EAGP,KAAM,qBAAqBA,4BAF3BC,KAAKD,GAAKA,GAKtB,OAAOC,KAaXnB,OAAO6H,GACH,IAAI8C,EAAMnG,KAAKC,IAAItD,KAAKF,EAAI4G,EAAO5G,GAAKwI,EAAOmB,QAC3CC,EAAMrG,KAAKC,IAAItD,KAAKD,EAAI2G,EAAO3G,GAAKuI,EAAOmB,QAE/C,OADaD,GAAOE,EAWxBC,QACI,OAAO,IAAIrB,EAAOtI,KAAKF,EAAGE,KAAKD,GAWnC6J,SAASC,GACL,OAAOxG,KAAKyG,KAAKzG,KAAK0G,IAAIF,EAAK/J,EAAIE,KAAKF,EAAG,GAAKuD,KAAK0G,IAAIF,EAAK9J,EAAIC,KAAKD,EAAG,IAW9EiK,MAAMC,GACF,MAAM1I,OAAsB,IAAX0I,EACX5G,KAAK6G,GAAK,EAAI7G,KAAK8G,MAAMnK,KAAKF,EAAGE,KAAKD,GACtCsD,KAAK6G,GAAK,EAAI7G,KAAK8G,MAAMF,EAAOnK,EAAIE,KAAKF,EAAGmK,EAAOlK,EAAIC,KAAKD,GAElE,OAAOwB,EAAI,EAAc,EAAV8B,KAAK6G,GAAS3I,EAAIA,EAarC6I,WAAWP,GACP,OAAO,IAAIvB,EAAOuB,EAAK/J,EAAIE,KAAKF,EAAG+J,EAAK9J,EAAIC,KAAKD,GAarDsK,MAAMC,EAAQC,GAKV,OAJKA,QAA4B,IAAXA,IAClBA,EAAS,IAAIjC,EAAO,EAAG,IAC3BtI,KAAKF,EAAIyK,EAAOzK,GAAKE,KAAKF,EAAIyK,EAAOzK,GAAKwK,EAC1CtK,KAAKD,EAAIwK,EAAOxK,GAAKC,KAAKD,EAAIwK,EAAOxK,GAAKuK,EACnCtK,KAaXwK,OAAOR,EAAOO,GACLA,QAA4B,IAAXA,IAClBA,EAAS,CAAEzK,EAAG,EAAGC,EAAG,IAExBC,KAAKuJ,IAAIgB,GACTP,GAAS3G,KAAK8G,MAAMnK,KAAKD,EAAGC,KAAKF,GACjC,IAAIuC,EAAMrC,KAAK4J,SAAStB,EAAOmC,MAI/B,OAHAzK,KAAKF,EAAIuC,EAAMgB,KAAKqH,IAAIV,GACxBhK,KAAKD,EAAIsC,EAAMgB,KAAKsH,IAAIX,GACxBhK,KAAKiJ,IAAIsB,GACFvK,KAcX4K,eAAeC,GAGX,OAFA7K,KAAKF,GAAK+K,EACV7K,KAAKD,GAAK8K,EACH7K,KAUX8K,QAGI,OAFA9K,KAAKF,EAAIuD,KAAKyH,MAAM9K,KAAKF,GACzBE,KAAKD,EAAIsD,KAAKyH,MAAM9K,KAAKD,GAClBC,KAUX+K,MAGI,OAFA/K,KAAKF,GAAKE,KAAKF,EACfE,KAAKD,GAAKC,KAAKD,EACRC,KAUXgL,WACI,MAAO,IAAMhL,KAAKF,EAAI,IAAME,KAAKD,EAAI,IAYzCkL,YAAYC,GACRA,EAAUA,GAAW,GACrB,IAAIC,EAAS,GAQb,OAPAA,EAAO7J,KAAK,WACR4J,EAAQ3C,WACR4C,EAAO7J,KAAK,WAAa4J,EAAQ3C,UAAY,KACjD4C,EAAO7J,KAAK,QAAUtB,KAAKF,EAAI,KAC/BqL,EAAO7J,KAAK,QAAUtB,KAAKD,EAAI,KAC/BoL,EAAO7J,KAAK,UACZ6J,EAAO7J,KAAK,OACL6J,EAAOC,KAAK,IASvBrF,oBAAoBsF,GAChB,OAAO,IAAI/C,EAAO+C,EAASpG,IAAInF,EAAIuD,KAAKiI,UAAYD,EAASrG,IAAIlF,EAAIuL,EAASpG,IAAInF,GAAIuL,EAASpG,IAAIlF,EAAIsD,KAAKiI,UAAYD,EAASrG,IAAIjF,EAAIsL,EAASpG,IAAIlF,KAG9JuI,EAAOmC,KAAO,IAAInC,EAAO,EAAG,GAO5BA,EAAOmB,QAAU,KACjBnB,EAAOiD,MAAQ,CA2BXC,eAAgB,CAACC,EAAIC,EAAIC,EAASC,EAAQC,KAEtC,IAAI7B,EAAQ3G,KAAK8G,OAAOuB,EAAG3L,EAAI0L,EAAG1L,GAAK8L,GAASH,EAAG5L,EAAI2L,EAAG3L,GAAK8L,GAC3DE,EAAW,GAKf,OAJAA,EAASxK,KAAK,IAAIgH,EAAOoD,EAAG5L,EAAI8L,EAASD,EAAUtI,KAAKqH,IAAIV,GAAQ0B,EAAG3L,EAAI8L,EAASF,EAAUtI,KAAKsH,IAAIX,KACvG8B,EAASxK,KAAK,IAAIgH,EAAOoD,EAAG5L,EAAI8L,EAAmB,KAAVD,EAAiBtI,KAAKqH,IAAIV,EAAQ3G,KAAK6G,GAAK,GAAIwB,EAAG3L,EAAI8L,EAAmB,KAAVF,EAAiBtI,KAAKsH,IAAIX,EAAQ3G,KAAK6G,GAAK,KACrJ4B,EAASxK,KAAK,IAAIgH,EAAOoD,EAAG5L,EAAI8L,EAAQF,EAAG3L,EAAI8L,IAC/CC,EAASxK,KAAK,IAAIgH,EAAOoD,EAAG5L,EAAI8L,EAAmB,KAAVD,EAAiBtI,KAAKqH,IAAIV,EAAQ3G,KAAK6G,GAAK,GAAIwB,EAAG3L,EAAI8L,EAAmB,KAAVF,EAAiBtI,KAAKsH,IAAIX,EAAQ3G,KAAK6G,GAAK,KAC9I4B,IChfR,MAAMC,EAST7F,YAAY4F,EAAUE,GAIlBhM,KAAKuI,UAAY,UACjBvI,KAAKwI,IAAM1C,EAAa5F,YACD,IAAZ4L,IACPA,EAAW,IACf9L,KAAK8L,SAAWA,EAChB9L,KAAKgM,OAASA,EAWlBC,UAAUpC,GACN7J,KAAK8L,SAASxK,KAAKuI,GAmBvBqC,YAAYC,GACR,OAAIA,EAAQ,EACDnM,KAAK8L,SAAS9L,KAAK8L,SAASxJ,OAAUe,KAAKC,IAAI6I,GAASnM,KAAK8L,SAASxJ,QAEtEtC,KAAK8L,SAASK,EAAQnM,KAAK8L,SAASxJ,QAYnD8J,KAAKvC,GACD,IAAK,IAAIhK,KAAKG,KAAK8L,SACf9L,KAAK8L,SAASjM,GAAGoJ,IAAIY,GAEzB,OAAO7J,KAeXqM,aAAaxC,GAIT,IADA,IAAI1E,GAAS,EACJtF,EAAI,EAAG4F,EAAIzF,KAAK8L,SAASxJ,OAAS,EAAGzC,EAAIG,KAAK8L,SAASxJ,OAAQmD,EAAI5F,IAAK,CAC7E,IAAIyM,EAAKtM,KAAK8L,SAASjM,GAAGC,EAAGyM,EAAKvM,KAAK8L,SAASjM,GAAGE,EAC/CyM,EAAKxM,KAAK8L,SAASrG,GAAG3F,EAAG2M,EAAKzM,KAAK8L,SAASrG,GAAG1F,EACjCwM,EAAK1C,EAAK9J,GAAO0M,EAAK5C,EAAK9J,GACrC8J,EAAK/J,GAAK0M,EAAKF,IAAOzC,EAAK9J,EAAIwM,IAAOE,EAAKF,GAAMD,IAErDnH,GAAUA,GAElB,OAAOA,EAaXvG,OACI,OAAOmN,EAAQR,MAAM3M,KAAKoB,KAAK8L,UAYnCvM,aACI,OAAOwM,EAAQR,MAAMhM,WAAWS,KAAK8L,UAWzCY,cACI,OAAOX,EAAQR,MAAMhM,WAAWS,KAAK8L,UAAY,EAarDzB,MAAMC,EAAQC,GACV,IAAK,IAAI1K,KAAKG,KAAK8L,SACsB,mBAA1B9L,KAAK8L,SAASjM,GAAGwK,MACxBrK,KAAK8L,SAASjM,GAAGwK,MAAMC,EAAQC,GAE/BoC,QAAQC,IAAI,mCAAoC5M,KAAK8L,SAASjM,IAEtE,OAAOG,KAaXwK,OAAOR,EAAOO,GACV,IAAK,IAAI1K,KAAKG,KAAK8L,SACf9L,KAAK8L,SAASjM,GAAG2K,OAAOR,EAAOO,GAEnC,OAAOvK,KAWX6M,YACI,OAAOC,EAAOC,oBAAoB/M,KAAK8L,UAe3CkB,wBACI,GAAIhN,KAAK8L,SAASxJ,OAAS,EACvB,MAAO,GACX,IAAI2K,EAAU,GACVC,EAAMlN,KAAK8L,SAAS,GACpBqB,EAAMnN,KAAK8L,SAAS,GACpBsB,EAAa,IAAI9E,EAAO4E,EAAIpN,GAAKqN,EAAIrN,EAAIoN,EAAIpN,GAAK,EAAGoN,EAAInN,GAAKoN,EAAIpN,EAAImN,EAAInN,GAAK,GACnFkN,EAAQ3L,KAAK8L,GAEb,IADA,IAAIC,EAAQrN,KAAKgM,OAAShM,KAAK8L,SAASxJ,OAAStC,KAAK8L,SAASxJ,OAAS,EAC/DgL,EAAI,EAAGA,EAAID,EAAOC,IAAK,CAC5BJ,EAAMlN,KAAK8L,SAASwB,EAAItN,KAAK8L,SAASxJ,QACtC6K,EAAMnN,KAAK8L,UAAUwB,EAAI,GAAKtN,KAAK8L,SAASxJ,QACxC8K,EAAa,IAAI9E,EAAO4E,EAAIpN,GAAKqN,EAAIrN,EAAIoN,EAAIpN,GAAK,EAAGoN,EAAInN,GAAKoN,EAAIpN,EAAImN,EAAInN,GAAK,GACnFkN,EAAQ3L,KAAK4L,GACbD,EAAQ3L,KAAK8L,GACbF,EAAMC,EAEV,OAAOF,EAWXM,6BACI,IAAIC,EAAQxN,KAAKgN,wBACjB,GAAoB,GAAhBQ,EAAMlL,OACN,MAAO,GAEX,IADA,IAAI6I,EAAS,CAAC,KAAOqC,EAAM,GAAG1N,EAAI,IAAM0N,EAAM,GAAGzN,GACxCF,EAAI,EAAGA,EAAI2N,EAAMlL,OAAQzC,GAAK,EACnCsL,EAAO7J,KAAK,KAAOkM,EAAM3N,GAAGC,EAAI,IAAM0N,EAAM3N,GAAGE,EAAI,KAAOyN,EAAM3N,EAAI,GAAGC,EAAI,IAAM0N,EAAM3N,EAAI,GAAGE,GAElG,OAAOoL,EAAOC,KAAK,KAkBvBqC,kBAAkBC,GAGd,QAFwB,IAAbA,IACPA,EAAY,GACZ1N,KAAK8L,SAASxJ,OAAS,EACvB,MAAO,GACX,IAAIqL,EAAU,GACVpM,EAAIvB,KAAK8L,SAAS,GAClBtK,EAAIxB,KAAK8L,SAAS,GAClBsB,EAAa,IAAI9E,EAAO/G,EAAEzB,GAAK0B,EAAE1B,EAAIyB,EAAEzB,GAAK,EAAGyB,EAAExB,GAAKyB,EAAEzB,EAAIwB,EAAExB,GAAK,GACvE4N,EAAQrM,KAAK8L,GAEb,IADA,IAAIC,EAAQrN,KAAKgM,OAAShM,KAAK8L,SAASxJ,OAAS,EAAItC,KAAK8L,SAASxJ,OAC1DgL,EAAI,EAAGA,EAAID,EAAOC,IAAK,CACxB/L,EAAIvB,KAAK8L,SAASwB,EAAItN,KAAK8L,SAASxJ,QACpCd,EAAIxB,KAAK8L,UAAUwB,EAAI,GAAKtN,KAAK8L,SAASxJ,QAD9C,IAEIb,EAAIzB,KAAK8L,UAAUwB,EAAI,GAAKtN,KAAK8L,SAASxJ,QAC1CsL,EAAU,IAAItF,EAAO/G,EAAEzB,GAAK0B,EAAE1B,EAAIyB,EAAEzB,GAAK,EAAGyB,EAAExB,GAAKyB,EAAEzB,EAAIwB,EAAExB,GAAK,GAChE8N,EAAU,IAAIvF,EAAO9G,EAAE1B,GAAK2B,EAAE3B,EAAI0B,EAAE1B,GAAK,EAAG0B,EAAEzB,GAAK0B,EAAE1B,EAAIyB,EAAEzB,GAAK,GAChEqF,EAAK,IAAIkD,EAAOsF,EAAQ9N,GAAK0B,EAAE1B,EAAI8N,EAAQ9N,GAAK4N,EAAWE,EAAQ7N,GAAKyB,EAAEzB,EAAI6N,EAAQ7N,GAAK2N,GAC3FI,EAAK,IAAIxF,EAAOuF,EAAQ/N,GAAK0B,EAAE1B,EAAI+N,EAAQ/N,GAAK4N,EAAWG,EAAQ9N,GAAKyB,EAAEzB,EAAI8N,EAAQ9N,GAAK2N,GAC/FC,EAAQrM,KAAK8D,GACbuI,EAAQrM,KAAKwM,GACbH,EAAQrM,KAAKuM,GAEjB,OAAOF,EAWXI,uBAAuBL,GACnB,IAAIF,EAAQxN,KAAKyN,kBAAkBC,GACnC,GAAoB,GAAhBF,EAAMlL,OACN,MAAO,GAEX,IADA,IAAI6I,EAAS,CAAC,KAAOqC,EAAM,GAAG1N,EAAI,IAAM0N,EAAM,GAAGzN,GACxCF,EAAI,EAAGA,EAAI2N,EAAMlL,OAAQzC,GAAK,EACnCsL,EAAO7J,KAAK,KAAOkM,EAAM3N,GAAGC,EAAI,IAAM0N,EAAM3N,GAAGE,EAAI,KAAOyN,EAAM3N,EAAI,GAAGC,EAAI,IAAM0N,EAAM3N,EAAI,GAAGE,EAAI,KAAOyN,EAAM3N,EAAI,GAAGC,EAAI,IAAM0N,EAAM3N,EAAI,GAAGE,GAEjJ,OAAOoL,EAAOC,KAAK,KAYvB4C,kBAAkBN,GAId,IAHA,IAAIF,EAAQxN,KAAKyN,kBAAkBC,GAE/BO,EAAW,GACNpO,EAAI,EAAGA,EAAI,EAAI2N,EAAMlL,OAAQzC,GAAK,EACvCoO,EAAS3M,KAAK,CAACkM,EAAM3N,GAAI2N,EAAM3N,EAAI,GAAI2N,EAAM3N,EAAI,GAAI2N,EAAM3N,EAAI,KAEnE,OAAOqO,EAAWC,UAAUF,GAahChD,YAAYC,GACRA,EAAUA,GAAW,GACrB,IAAIC,EAAS,GAKb,GAJAA,EAAO7J,KAAK,SACR4J,EAAQ3C,WACR4C,EAAO7J,KAAK,WAAa4J,EAAQ3C,UAAY,KACjD4C,EAAO7J,KAAK,QACRtB,KAAK8L,SAASxJ,OAAS,EAAG,CAC1B6I,EAAO7J,KAAK,MACZ6J,EAAO7J,KAAKtB,KAAK8L,SAAS,GAAGhM,EAAEkL,YAC/BG,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAKtB,KAAK8L,SAAS,GAAG/L,EAAEiL,YAC/B,IAAK,IAAInL,EAAI,EAAGA,EAAIG,KAAK8L,SAASxJ,OAAQzC,IACtCsL,EAAO7J,KAAK,OACZ6J,EAAO7J,KAAKtB,KAAK8L,SAASjM,GAAGC,EAAEkL,YAC/BG,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAKtB,KAAK8L,SAASjM,GAAGE,EAAEiL,YAE9BhL,KAAKgM,QACNb,EAAO7J,KAAK,MAIpB,OADA6J,EAAO7J,KAAK,QACL6J,EAAOC,KAAK,KAI3BW,EAAQR,MAAQ,CASZ3M,KAAKkN,GAGD,IAAIsC,EAAQ,EACZ,IAAK,IAAIvO,EAAI,EAAGwO,EAAIvC,EAASxJ,OAAQzC,EAAIwO,EAAGxO,IAAK,CAK7CuO,GAJatC,EAASjM,GAAGC,EACZgM,GAAUjM,EAAI,GAAKwO,GAAGtO,EAGX,GACxBqO,GAHatC,GAAUjM,EAAI,GAAKwO,GAAGvO,EACtBgM,EAASjM,GAAGE,EAED,GAE5B,OAAOsD,KAAKC,IAAI8K,IASpB7O,WAAWuM,GACP,IAAItG,EAAM,EACV,MAAMxD,EAAI8J,EAASxJ,OACnB,IAAK,IAAIzC,EAAI,EAAGA,EAAImC,EAAGnC,IAAK,CACxB,MAAM4F,GAAK5F,EAAI,GAAKmC,EACpBwD,IAAQsG,EAASrG,GAAG3F,EAAIgM,EAASjM,GAAGC,IAAMgM,EAASjM,GAAGE,EAAI+L,EAASrG,GAAG1F,GAE1E,OAAOyF,IC9ZR,MAAMsH,EAST5G,YAAYjB,EAAKD,GACbhF,KAAKiF,IAAMA,EACXjF,KAAKgF,IAAMA,EACXhF,KAAKsO,MAAQtJ,EAAIlF,EAAImF,EAAInF,EACzBE,KAAKuO,OAASvJ,EAAIjF,EAAIkF,EAAIlF,EAU9ByO,YACI,OAAO,IAAIzC,EAAQ,CAAC,IAAIzD,EAAOtI,KAAKiF,KAAM,IAAIqD,EAAOtI,KAAKgF,IAAIlF,EAAGE,KAAKiF,IAAIlF,GAAI,IAAIuI,EAAOtI,KAAKgF,KAAM,IAAIsD,EAAOtI,KAAKiF,IAAInF,EAAGE,KAAKgF,IAAIjF,KAAK,GAE7I0O,YACI,OAAO,IAAInG,EAAOtI,KAAKiF,IAAInF,GAAKE,KAAKgF,IAAIlF,EAAIE,KAAKiF,IAAInF,GAAK,EAAKE,KAAKiF,IAAIlF,GAAKC,KAAKgF,IAAIjF,EAAIC,KAAKiF,IAAIlF,GAAK,GAa7GgG,2BAA2B+F,GACvB,GAAuB,GAAnBA,EAASxJ,OACT,OAAO,IAAIwK,EAAO,IAAIxE,EAAO,EAAG,GAAI,IAAIA,EAAO,EAAG,IACtD,IAIIuB,EAJA6E,EAAO5C,EAAS,GAAGhM,EACnB6O,EAAO7C,EAAS,GAAGhM,EACnB8O,EAAO9C,EAAS,GAAG/L,EACnB8O,EAAO/C,EAAS,GAAG/L,EAEvB,IAAK,IAAIF,KAAKiM,EACVjC,EAAOiC,EAASjM,GAChB6O,EAAOrL,KAAK4B,IAAIyJ,EAAM7E,EAAK/J,GAC3B6O,EAAOtL,KAAK2B,IAAI2J,EAAM9E,EAAK/J,GAC3B8O,EAAOvL,KAAK4B,IAAI2J,EAAM/E,EAAK9J,GAC3B8O,EAAOxL,KAAK2B,IAAI6J,EAAMhF,EAAK9J,GAE/B,OAAO,IAAI+M,EAAO,IAAIxE,EAAOoG,EAAME,GAAO,IAAItG,EAAOqG,EAAME,KCpD5D,MAAMC,EAST5I,YAAY3E,EAAGC,EAAGuN,GACd/O,KAAKwI,IAAM1C,EAAa5F,OACxBF,KAAKuB,EAAIA,EACTvB,KAAKwB,EAAIA,EACTxB,KAAK+O,QAAUA,EASnBzM,SACI,OAAOe,KAAKyG,KAAKzG,KAAK0G,IAAI/J,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,EAAG,GAAKuD,KAAK0G,IAAI/J,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,EAAG,IAYtFiP,UAAU1M,GACN,OAAOtC,KAAKqK,MAAM/H,EAAStC,KAAKsC,UAYpCiH,IAAI0F,GAGA,OAFAjP,KAAKuB,EAAEgI,IAAI0F,GACXjP,KAAKwB,EAAE+H,IAAI0F,GACJjP,KAYXiJ,IAAIgG,GAGA,OAFAjP,KAAKuB,EAAE0H,IAAIgG,GACXjP,KAAKwB,EAAEyH,IAAIgG,GACJjP,KAWXkP,YAEI,OADAlP,KAAKwB,EAAEoH,IAAI5I,KAAKuB,EAAEzB,GAAKE,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,GAAKE,KAAKsC,SAAUtC,KAAKuB,EAAExB,GAAKC,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,GAAKC,KAAKsC,UAC9FtC,KAYXqK,MAAMC,GAEF,OADAtK,KAAKwB,EAAEoH,IAAI5I,KAAKuB,EAAEzB,GAAKE,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,GAAKwK,EAAQtK,KAAKuB,EAAExB,GAAKC,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,GAAKuK,GAClFtK,KAYXmP,OAAOC,GACH,IAAIC,EAAOrP,KAAKuB,EAAE6I,WAAWgF,GAG7B,OAFApP,KAAKuB,EAAE0H,IAAIoG,GACXrP,KAAKwB,EAAEyH,IAAIoG,GACJrP,KAYXgK,MAAMsF,GACU,MAARA,QAA+B,IAARA,IACvBA,EAAOtP,KAAK+O,QAAQ,IAAIzG,EAAO,EAAG,GAAI,IAAIA,EAAO,IAAK,KAG1D,MAAMiH,EAAKvP,KAAKwB,EAAEmI,QAAQJ,IAAIvJ,KAAKuB,GAC7BiO,EAAKF,EAAK9N,EAAEmI,QAAQJ,IAAI+F,EAAK/N,GAGnC,OAAO8B,KAAK8G,MAAMqF,EAAG1P,EAAG0P,EAAGzP,GAAKsD,KAAK8G,MAAMoF,EAAGzP,EAAGyP,EAAGxP,GAexD0P,OAAOnC,GACH,OAAO,IAAIhF,EAAOtI,KAAKuB,EAAEzB,GAAKE,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,GAAKwN,EAAGtN,KAAKuB,EAAExB,GAAKC,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,GAAKuN,GAc/FoC,YAAYJ,GAER,OAASA,EAAK9N,EAAEzB,EAAIuP,EAAK/N,EAAExB,IAAMC,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,IAAQwP,EAAK9N,EAAE1B,EAAIwP,EAAK/N,EAAEzB,IAAME,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,GAczG4P,SAASL,GACL,OAAOjM,KAAKC,IAAItD,KAAK0P,YAAYJ,IAAShH,EAAOmB,QAerDmG,YAAY/O,GACR,IAAIgP,EAAKf,EAAUgB,QAAQC,MAAM/P,KAAKuB,EAAGvB,KAAKwB,GAC9C,OAAW,IAAPqO,EACO,IACDhP,EAAEf,EAAIE,KAAKuB,EAAEzB,IAAME,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,IAAMe,EAAEd,EAAIC,KAAKuB,EAAExB,IAAMC,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,IAAM8P,EAkBpGG,SAASC,EAAOC,GACZ,MAAM5C,EAAItN,KAAK4P,YAAYK,GAE3B,QAAgC,IAArBC,GAAoCA,EAAkB,CAE7D,OADiB7M,KAAKyG,KAAKgF,EAAUgB,QAAQC,MAAME,EAAOjQ,KAAKyP,OAAOnC,KACpDhF,EAAOmB,SAAW6D,GAAK,GAAKA,GAAK,EAGnD,OAAOA,GAAK,GAAKA,GAAK,EAY9B6C,gBAAgBtP,GACZ,IAAIyM,EAAItN,KAAK4P,YAAY/O,GACzB,OAAOb,KAAKyP,OAAOnC,GAYvB8C,cAAcvP,GAGV,OAAOwC,KAAKyG,KAAKgF,EAAUgB,QAAQC,MAAMlP,EAAGb,KAAKyP,OAAOzP,KAAK4P,YAAY/O,MAW7E8I,QACI,OAAO3J,KAAK+O,QAAQ/O,KAAKuB,EAAEoI,QAAS3J,KAAKwB,EAAEmI,SAW/CqB,WACI,MAAO,SAAWhL,KAAKuB,EAAEyJ,WAAa,SAAWhL,KAAKwB,EAAEwJ,WAAa,MAO7E8D,EAAUgB,QAAU,CAChBC,MAAO,CAACM,EAAGC,KACCD,EAAEvQ,EAAIwQ,EAAExQ,IAAMuQ,EAAEvQ,EAAIwQ,EAAExQ,IAAMuQ,EAAEtQ,EAAIuQ,EAAEvQ,IAAMsQ,EAAEtQ,EAAIuQ,EAAEvQ,ICtR3D,MAAMwQ,UAAezB,EAUxB5I,YAAYsK,EAAOC,GACfC,MAAMF,EAAOC,GAAO,CAAClP,EAAGC,IAAM,IAAI+O,EAAOhP,EAAGC,KAI5CxB,KAAKuI,UAAY,SASrBoI,OACI,IAAIN,EAAIrQ,KAAK2J,QAKb,OAJA0G,EAAE9G,IAAIvJ,KAAKuB,IACX8O,EAAI,IAAIE,EAAO,IAAIjI,EAAU,IAAIA,GAAQ+H,EAAE7O,EAAEzB,EAAGsQ,EAAE7O,EAAE1B,KAClDyB,EAAE0H,IAAIjJ,KAAKuB,GACb8O,EAAE7O,EAAEyH,IAAIjJ,KAAKuB,GACN8O,EAUXO,UACI,IAAIC,EAAM7Q,KAAKuB,EAGf,OAFAvB,KAAKuB,EAAIvB,KAAKwB,EACdxB,KAAKwB,EAAIqP,EACF7Q,KAQX+K,MAGI,OAFA/K,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,GAAKE,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,GACzCE,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,GAAKC,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,GAClCC,KAYX8Q,aAAaxB,GACT,IAAII,EAAc1P,KAAK0P,YAAYJ,GACnC,GAAmB,GAAfI,EACA,OAAO,KACX,IAAInO,EAAIvB,KAAKuB,EAAExB,EAAIuP,EAAK/N,EAAExB,EACtByB,EAAIxB,KAAKuB,EAAEzB,EAAIwP,EAAK/N,EAAEzB,EACtBiR,GAAezB,EAAK9N,EAAE1B,EAAIwP,EAAK/N,EAAEzB,GAAKyB,GAAO+N,EAAK9N,EAAEzB,EAAIuP,EAAK/N,EAAExB,GAAKyB,EACpEwP,GAAehR,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,GAAKyB,GAAOvB,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,GAAKyB,EAMxE,OALAD,EAAIwP,EAAarB,EACjBlO,EAAIwP,EAAatB,EAIV,IAAIpH,EAAOtI,KAAKuB,EAAEzB,EAAKyB,GAAKvB,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,GAAKE,KAAKuB,EAAExB,EAAKwB,GAAKvB,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,IAcjGkL,YAAYC,GACRA,EAAUA,GAAW,GACrB,IAAIC,EAAS,GACTW,EAAWyE,EAAOhF,MAAMC,eAAexL,KAAKuB,EAAGvB,KAAKwB,EAAG,EAAG,EAAK,GACnE2J,EAAO7J,KAAK,MACR4J,EAAQ3C,WACR4C,EAAO7J,KAAK,WAAa4J,EAAQ3C,UAAY,KACjD4C,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK,YACZ6J,EAAO7J,KAAK,QAAUtB,KAAKuB,EAAEzB,EAAI,KACjCqL,EAAO7J,KAAK,QAAUtB,KAAKuB,EAAExB,EAAI,KACjCoL,EAAO7J,KAAK,QAAUwK,EAAS,GAAGhM,EAAI,KACtCqL,EAAO7J,KAAK,QAAUwK,EAAS,GAAG/L,EAAI,KACtCoL,EAAO7J,KAAK,OAEZ6J,EAAO7J,KAAK,wBACZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIiM,EAASxJ,OAAQzC,IAC7BA,EAAI,GACJsL,EAAO7J,KAAK,KAChB6J,EAAO7J,KAAUwK,EAASjM,GAAGC,EAAI,IAAMgM,EAASjM,GAAGE,GAIvD,OAFAoL,EAAO7J,KAAK,OACZ6J,EAAO7J,KAAK,QACL6J,EAAOC,KAAK,KAI3BmF,EAAOhF,MAAQ,CA0BXC,eAAgB,CAACC,EAAIC,EAAIC,EAASC,EAAQC,KACtC,IAAI7B,EAAQ3G,KAAK8G,OAAOuB,EAAG3L,EAAI0L,EAAG1L,GAAK8L,GAASH,EAAG5L,EAAI2L,EAAG3L,GAAK8L,GAC3DE,EAAW,GAKf,OAJAA,EAASxK,KAAK,IAAIgH,EAAOoD,EAAG5L,EAAI8L,EAAS,EAAYvI,KAAKqH,IAAIV,GAAQ0B,EAAG3L,EAAI8L,EAAS,EAAYxI,KAAKsH,IAAIX,KAC3G8B,EAASxK,KAAK,IAAIgH,EAAOoD,EAAG5L,EAAI8L,EAAoB,KAAVD,EAAkBtI,KAAKqH,IAAIV,EAAQ3G,KAAK6G,GAAK,GAAIwB,EAAG3L,EAAI8L,EAAoB,KAAVF,EAAkBtI,KAAKsH,IAAIX,EAAQ3G,KAAK6G,GAAK,KACzJ4B,EAASxK,KAAK,IAAIgH,EAAOoD,EAAG5L,EAAI8L,EAAQF,EAAG3L,EAAI8L,IAC/CC,EAASxK,KAAK,IAAIgH,EAAOoD,EAAG5L,EAAI8L,EAAoB,KAAVD,EAAkBtI,KAAKqH,IAAIV,EAAQ3G,KAAK6G,GAAK,GAAIwB,EAAG3L,EAAI8L,EAAoB,KAAVF,EAAkBtI,KAAKsH,IAAIX,EAAQ3G,KAAK6G,GAAK,KAClJ4B,IC9IR,MAAMmF,EAWT/K,YAAYgL,EAAYC,EAAUC,EAAmBC,GAEjDrR,KAAKsR,YAAcL,EAAiBK,YAEpCtR,KAAKuR,oBAAsBN,EAAiBM,oBAE5CvR,KAAKwR,kBAAoBP,EAAiBO,kBAE1CxR,KAAKyR,UAAYR,EAAiBQ,UAClCzR,KAAKwI,IAAM1C,EAAa5F,OACxBF,KAAKkR,WAAaA,EAClBlR,KAAKoR,kBAAoBA,EACzBpR,KAAKmR,SAAWA,EAChBnR,KAAKqR,gBAAkBA,EACvBrR,KAAK0R,eAAiB,GAEtB1R,KAAK2R,aAAe,GAEpB3R,KAAK4R,eAAiB,GAEtB5R,KAAK6R,UAAY,KACjB7R,KAAK8R,mBAgBTC,eAAeC,EAASC,EAAYC,EAAkBJ,GAC9CE,GAAWhS,KAAKsR,aAChBtR,KAAKmS,gBAAgBlJ,IAAIgJ,GACrBC,GACAlS,KAAKoS,uBAAuBnJ,IAAIgJ,IAE/BD,GAAWhS,KAAKuR,oBACrBvR,KAAKoS,uBAAuBnJ,IAAIgJ,GAE3BD,GAAWhS,KAAKwR,kBACrBxR,KAAKqS,qBAAqBpJ,IAAIgJ,GAEzBD,GAAWhS,KAAKyR,WACrBzR,KAAKsS,cAAcrJ,IAAIgJ,GACnBC,GACAlS,KAAKqS,qBAAqBpJ,IAAIgJ,IAGlCtF,QAAQC,IAAI,8CAA8CoF,eAE1DF,GACA9R,KAAK8R,mBAYbS,UAAUtD,GAKN,OAJAjP,KAAKkR,WAAWjI,IAAIgG,GACpBjP,KAAKoR,kBAAkBnI,IAAIgG,GAC3BjP,KAAKqR,gBAAgBpI,IAAIgG,GACzBjP,KAAKmR,SAASlI,IAAIgG,GACXjP,KAYXwS,UACI,IAAI3B,EAAM7Q,KAAKkR,WAMf,OALAlR,KAAKkR,WAAalR,KAAKmR,SACvBnR,KAAKmR,SAAWN,EAChBA,EAAM7Q,KAAKoR,kBACXpR,KAAKoR,kBAAoBpR,KAAKqR,gBAC9BrR,KAAKqR,gBAAkBR,EAChB7Q,KAkBXyS,YACI,OAAOzS,KAAK6R,UAehBC,mBACI,IAAIY,EAAS1S,KAAKkR,WAAWvH,QACzBgJ,EAAS,IAAIrK,EAAO,EAAG,GACvBsK,EAAY,EAAM5S,KAAK0R,eAE3B1R,KAAK2R,aAAe,GAEpB3R,KAAK2R,aAAarQ,KAAKtB,KAAKkR,YAC5BlR,KAAK4R,eAAiB,GACtB,IAAIiB,EAAY,EAChB,IAAIvF,EAAI,EACR,IAAIwF,EACJ,KAAOxF,GAAK,GACRqF,EAAS3S,KAAK+S,WAAWzF,GAEzBtN,KAAK2R,aAAarQ,KAAKqR,GAEvBG,EAAYJ,EAAO9I,SAAS+I,GAC5B3S,KAAK4R,eAAetQ,KAAKwR,GACzBD,GAAaC,EACbJ,EAASC,EACTrF,GAAKsF,EAET5S,KAAK6R,UAAYgB,EAarBjD,YAAY/O,GAER,IACImS,EAAS,CAAE1F,EAAG,EAAG2F,MAAO,EAAKC,MAAO,GACpCC,EAAY,EAChB,GACIH,EAAShT,KAAKoT,yBAAyBvS,EAAGmS,EAAOC,MAAOD,EAAOE,MAAOlT,KAAK0R,gBAC3EyB,UAEKA,EAAY,GAAKnT,KAAK+S,WAAWC,EAAOC,OAAOrJ,SAAS5J,KAAK+S,WAAWC,EAAOE,QAPnE,GAQrB,OAAOF,EAAO1F,EAiBlB8F,yBAAyBvS,EAAGwS,EAAQC,EAAMC,GACtC,IAAIC,GAAY,EACZC,EAAU,EACVnG,EAAI,EACR,MAAMoG,EAAQJ,EAAOD,EACrB,IAAK,IAAIxT,EAAI,EAAGA,GAAK0T,EAAW1T,IAAK,CACjCyN,EAAI+F,EAASK,GAAS7T,EAAI0T,GAC1B,IACII,EADO3T,KAAK+S,WAAWzF,GACX1D,SAAS/I,KACR,GAAb2S,GAAkBG,EAAOF,KACzBD,EAAW3T,EACX4T,EAAUE,GAGlB,MAAO,CAAErG,EAAG+F,EAASK,GAASF,EAAWD,GACrCN,MAAOI,EAASK,GAASrQ,KAAK2B,IAAI,EAAGwO,EAAW,GAAKD,GACrDL,MAAOG,EAASK,GAASrQ,KAAK4B,IAAIsO,EAAWC,EAAW,GAAKD,IAYrE1G,YACI,IAAI5H,EAAM,IAAIqD,EAAOsL,OAAOC,kBAAmBD,OAAOC,mBAClD7O,EAAM,IAAIsD,EAAOsL,OAAOE,kBAAmBF,OAAOE,mBACtD,IAAIzD,EACJ,IAAK,IAAIxQ,EAAI,EAAGA,EAAIG,KAAK2R,aAAarP,OAAQzC,IAC1CwQ,EAAIrQ,KAAK2R,aAAa9R,GACtBoF,EAAInF,EAAIuD,KAAK4B,IAAIA,EAAInF,EAAGuQ,EAAEvQ,GAC1BmF,EAAIlF,EAAIsD,KAAK4B,IAAIA,EAAIlF,EAAGsQ,EAAEtQ,GAC1BiF,EAAIlF,EAAIuD,KAAK2B,IAAIA,EAAIlF,EAAGuQ,EAAEvQ,GAC1BkF,EAAIjF,EAAIsD,KAAK2B,IAAIA,EAAIjF,EAAGsQ,EAAEtQ,GAE9B,OAAO,IAAI+M,EAAO7H,EAAKD,GAa3BmN,gBACI,OAAOnS,KAAKkR,WAahBoB,cACI,OAAOtS,KAAKmR,SAahBiB,uBACI,OAAOpS,KAAKoR,kBAahBiB,qBACI,OAAOrS,KAAKqR,gBAYhB0C,aAAaC,GACT,GAAIA,GAAMhU,KAAKsR,YACX,OAAOtR,KAAKkR,WAChB,GAAI8C,GAAMhU,KAAKyR,UACX,OAAOzR,KAAKmR,SAChB,GAAI6C,GAAMhU,KAAKuR,oBACX,OAAOvR,KAAKoR,kBAChB,GAAI4C,GAAMhU,KAAKwR,kBACX,OAAOxR,KAAKqR,gBAChB,MAAM,IAAI4C,MAAM,qBAAqBD,OAezCjB,WAAWzF,GAEP,MAAMxN,EAAIE,KAAKkR,WAAWpR,EAAIuD,KAAK0G,IAAI,EAAMuD,EAAG,GAAgC,EAA3BtN,KAAKoR,kBAAkBtR,EAAQwN,EAAIjK,KAAK0G,IAAI,EAAMuD,EAAG,GAC3E,EAAzBtN,KAAKqR,gBAAgBvR,EAAQuD,KAAK0G,IAAIuD,EAAG,IAAM,EAAMA,GAAKtN,KAAKmR,SAASrR,EAAIuD,KAAK0G,IAAIuD,EAAG,GACxFvN,EAAIC,KAAKkR,WAAWnR,EAAIsD,KAAK0G,IAAI,EAAMuD,EAAG,GAAgC,EAA3BtN,KAAKoR,kBAAkBrR,EAAQuN,EAAIjK,KAAK0G,IAAI,EAAMuD,EAAG,GAC3E,EAAzBtN,KAAKqR,gBAAgBtR,EAAQsD,KAAK0G,IAAIuD,EAAG,IAAM,EAAMA,GAAKtN,KAAKmR,SAASpR,EAAIsD,KAAK0G,IAAIuD,EAAG,GAC9F,OAAO,IAAIhF,EAAOxI,EAAGC,GAezBmU,SAASC,GACL,OAAOnU,KAAK+S,WAAWoB,EAAInU,KAAK6R,WAcpCuC,aAAa9G,GACT,MAAM/L,EAAIvB,KAAKmS,gBACT3Q,EAAIxB,KAAKoS,uBACT3Q,EAAIzB,KAAKqS,qBACTgC,EAAIrU,KAAKsS,cAETgC,EAAKhH,EAAIA,EAETiH,EAAM,EAAI,EAAIjH,EAAIgH,EAClBE,GAAM,EAAIjT,EAAEzB,EAAIyU,EAClB/S,EAAE1B,GAAK,EAAIyU,EAAM,GAAKjH,EAAIgH,IAC1B7S,EAAE3B,GAAK,GAAKwN,EAAIgH,GAAM,EAAIA,GAC1B,EAAID,EAAEvU,EAAIwU,EACRG,GAAM,EAAIlT,EAAExB,EAAIwU,EAClB/S,EAAEzB,GAAK,EAAIwU,EAAM,GAAKjH,EAAIgH,IAC1B7S,EAAE1B,GAAK,GAAKuN,EAAIgH,GAAM,EAAIA,GAC1B,EAAID,EAAEtU,EAAIuU,EAEd,OAAO,IAAIhM,EAAOkM,EAAIC,GAe1BC,cAAcrB,EAAQC,GAClB,MAAMqB,EAAW,IAAIpE,EAAOvQ,KAAK+S,WAAWM,GAASrT,KAAKoU,aAAaf,IACjEuB,EAAS,IAAIrE,EAAOvQ,KAAK+S,WAAWO,GAAOtT,KAAKoU,aAAad,GAAMvI,OASzE,OAPA4J,EAASnT,EAAEyH,IAAI0L,EAASpT,GACxBqT,EAAOpT,EAAEyH,IAAI2L,EAAOrT,GAEpBoT,EAAStK,MAAM,WAAciJ,EAAOD,IACpCuB,EAAOvK,MAAM,WAAciJ,EAAOD,IAG3B,IAAIpC,EAAiB0D,EAASpT,EAAGqT,EAAOrT,EAAGoT,EAASnT,EAAGoT,EAAOpT,GAYzEqT,WAAWV,GACP,OAAO9Q,KAAK2B,IAAI,EAAK3B,KAAK4B,IAAI,EAAMkP,EAAInU,KAAK6R,YAcjDiD,WAAWX,GACP,OAAOnU,KAAKoU,aAAapU,KAAK6U,WAAWV,IAc7CY,iBAAiBZ,GACb,OAAOnU,KAAKgV,mBAAmBhV,KAAK6U,WAAWV,IAcnDa,mBAAmB1H,GACf,MAAM2H,EAAgBjV,KAAKoU,aAAa9G,GACxC,OAAO,IAAIhF,EAAO2M,EAAclV,GAAIkV,EAAcnV,GAWtD6J,QACI,OAAO,IAAIsH,EAAiBjR,KAAKmS,gBAAgBxI,QAAS3J,KAAKsS,cAAc3I,QAAS3J,KAAKoS,uBAAuBzI,QAAS3J,KAAKqS,qBAAqB1I,SAgBzJ9K,OAAOqW,GAGH,QAAKA,OAEAA,EAAMhE,YACNgE,EAAM/D,UACN+D,EAAM9D,mBACN8D,EAAM7D,mBAEJrR,KAAKkR,WAAWrS,OAAOqW,EAAMhE,aAC7BlR,KAAKmR,SAAStS,OAAOqW,EAAM/D,WAC3BnR,KAAKoR,kBAAkBvS,OAAOqW,EAAM9D,oBACpCpR,KAAKqR,gBAAgBxS,OAAOqW,EAAM7D,mBAa7CtL,kBAAkBoP,GAad,OAAOA,aAAelE,EAgB1BmE,gBACI,IAAIjK,EAAS,GAiBb,OAhBAA,EAAO7J,KAAK,MACZ6J,EAAO7J,KAAKtB,KAAKkR,WAAWpR,EAAEkL,YAC9BG,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAKtB,KAAKkR,WAAWnR,EAAEiL,YAC9BG,EAAO7J,KAAK,OACZ6J,EAAO7J,KAAKtB,KAAKoR,kBAAkBtR,EAAEkL,YACrCG,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAKtB,KAAKoR,kBAAkBrR,EAAEiL,YACrCG,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAKtB,KAAKqR,gBAAgBvR,EAAEkL,YACnCG,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAKtB,KAAKqR,gBAAgBtR,EAAEiL,YACnCG,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAKtB,KAAKmR,SAASrR,EAAEkL,YAC5BG,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAKtB,KAAKmR,SAASpR,EAAEiL,YACrBG,EAAOC,KAAK,IAYvBiK,OAAOC,GAYH,MAXiB,MACZA,EAAe,OAAS,IACzB,mBAAuBtV,KAAKmS,gBAAgBrS,EAAI,IAAME,KAAKmS,gBAAgBpS,EAAI,OAC9EuV,EAAe,OAAS,IACzB,iBAAqBtV,KAAKsS,cAAcxS,EAAI,IAAME,KAAKsS,cAAcvS,EAAI,OACxEuV,EAAe,OAAS,IACzB,yBAA6BtV,KAAKoS,uBAAuBtS,EAAI,IAAME,KAAKoS,uBAAuBrS,EAAI,OAClGuV,EAAe,OAAS,IACzB,wBAA4BtV,KAAKqS,qBAAqBvS,EAAI,IAAME,KAAKqS,qBAAqBtS,EAAI,KAC7FuV,EAAe,OAAS,IACzB,KAcRvP,gBAAgBwP,GACZ,IAAIJ,EAAMK,KAAKC,MAAMF,GACrB,OAAOtE,EAAiByE,WAAWP,GAavCpP,kBAAkBoP,GACd,GAAmB,iBAARA,EACP,KAAM,8BACV,IAAKA,EAAIjE,WACL,KAAM,sCACV,IAAKiE,EAAIhE,SACL,KAAM,oCACV,IAAKgE,EAAI/D,kBACL,KAAM,6CACV,IAAK+D,EAAI9D,gBACL,KAAM,2CACV,OAAO,IAAIJ,EAAiB,IAAI3I,EAAO6M,EAAIjE,WAAW,GAAIiE,EAAIjE,WAAW,IAAK,IAAI5I,EAAO6M,EAAIhE,SAAS,GAAIgE,EAAIhE,SAAS,IAAK,IAAI7I,EAAO6M,EAAI/D,kBAAkB,GAAI+D,EAAI/D,kBAAkB,IAAK,IAAI9I,EAAO6M,EAAI9D,gBAAgB,GAAI8D,EAAI9D,gBAAgB,KAYvPtL,iBAAiB4P,GACb,IAAKC,MAAMC,QAAQF,GACf,KAAM,8BACV,GAAkB,GAAdA,EAAIrT,OACJ,KAAM,gDACV,OAAO,IAAI2O,EAAiB0E,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,KAKhE1E,EAAiBK,YAAc,EAE/BL,EAAiBM,oBAAsB,EAEvCN,EAAiBO,kBAAoB,EAErCP,EAAiBQ,UAAY,ECnpBtB,MAAMvD,EAaThI,YAAY4P,GAIR9V,KAAKuI,UAAY,aAEjBvI,KAAKsR,YAAc,EAEnBtR,KAAKuR,oBAAsB,EAE3BvR,KAAKwR,kBAAoB,EAEzBxR,KAAKyR,UAAY,EACjBzR,KAAKwI,IAAM1C,EAAa5F,OACnB4V,IACDA,EAAa,IACjB9V,KAAK+V,eAAiB,EAGtB/V,KAAKgW,gBAAiB,EACtBhW,KAAKiW,aAAe,GAWxBC,SAAShB,GACL,GAAa,MAATA,QAAiC,IAATA,EACxB,KAAM,wCACVlV,KAAKiW,aAAa3U,KAAK4T,GACnBlV,KAAKiW,aAAa3T,OAAS,GAC3B4S,EAAMhE,WAAalR,KAAKiW,aAAajW,KAAKiW,aAAa3T,OAAS,GAAG6O,SACnEnR,KAAKmW,4BAA4BnW,KAAKiW,aAAa3T,OAAS,GAC5D,GACA,IAIAtC,KAAK+V,gBAAkBb,EAAMzC,YAYrC2D,wBAAwBnG,GAEpB,IAAK,IAAIpQ,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAC1C,GAAIG,KAAKiW,aAAapW,GAAGqR,WAAWrS,OAAOoR,GACvC,OAAOpQ,EAEf,OAAQ,EAWZwW,sBAAsBpG,GAElB,IAAK,IAAIpQ,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAC1C,GAAIG,KAAKiW,aAAapW,GAAGsR,SAAStS,OAAOoR,GACrC,OAAOpQ,EAEf,OAAQ,EAWZyW,+BAA+BrG,GAE3B,IAAK,IAAIpQ,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAC1C,GAAIG,KAAKiW,aAAapW,GAAGuR,kBAAkBvS,OAAOoR,GAC9C,OAAOpQ,EAEf,OAAQ,EAQZ0W,6BAA6BtG,GAEzB,IAAK,IAAIpQ,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAC1C,GAAIG,KAAKiW,aAAapW,GAAGwR,gBAAgBxS,OAAOoR,GAC5C,OAAOpQ,EAEf,OAAQ,EAaZ4S,YACI,OAAOzS,KAAK+V,eAehBjE,mBACI9R,KAAK+V,eAAiB,EACtB,IAAK,IAAIlW,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAC1CG,KAAKiW,aAAapW,GAAGiS,mBACrB9R,KAAK+V,gBAAkB/V,KAAKiW,aAAapW,GAAG4S,YAWpD+D,gBACI,OAAOxW,KAAKiW,aAAa3T,OAW7BmU,WAAWC,GACP,OAAO1W,KAAKiW,aAAaS,GA6N7BnE,UAAUtD,GACN,IAAK,IAAIpP,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAAK,EAC3CqV,EAAQlV,KAAKiW,aAAapW,IACxBsS,gBAAgBlJ,IAAIgG,GAC1BiG,EAAM9C,uBAAuBnJ,IAAIgG,GACjCiG,EAAM7C,qBAAqBpJ,IAAIgG,GAGnC,IAAIiG,EAGJ,OAHIA,EAAQlV,KAAKiW,aAAajW,KAAKiW,aAAa3T,OAAS,IACnDgQ,cAAcrJ,IAAIgG,GACxBjP,KAAK8R,mBACE9R,KAYXqK,MAAMsM,EAAQC,GACV,IAAK,IAAI/W,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAAK,CAC/C,IAAIqV,EAAQlV,KAAKiW,aAAapW,GAC9BqV,EAAM/C,gBAAgB9H,MAAMuM,EAASD,GACrCzB,EAAM9C,uBAAuB/H,MAAMuM,EAASD,GAC5CzB,EAAM7C,qBAAqBhI,MAAMuM,EAASD,GAU9C,OAJI3W,KAAKiW,aAAa3T,OAAS,IAAMtC,KAAKgW,gBACtChW,KAAKiW,aAAajW,KAAKiW,aAAa3T,OAAS,GAAGgQ,cAAcjI,MAAMuM,EAASD,GAEjF3W,KAAK8R,mBACE9R,KAYXwK,OAAOR,EAAOO,GACV,IAAK,IAAI1K,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAAK,CAC/C,IAAIqV,EAAQlV,KAAKiW,aAAapW,GAC9BqV,EAAM/C,gBAAgB3H,OAAOR,EAAOO,GACpC2K,EAAM9C,uBAAuB5H,OAAOR,EAAOO,GAC3C2K,EAAM7C,qBAAqB7H,OAAOR,EAAOO,GAMzCvK,KAAKiW,aAAa3T,OAAS,IAAMtC,KAAKgW,gBACtChW,KAAKiW,aAAajW,KAAKiW,aAAa3T,OAAS,GAAGgQ,cAAc9H,OAAOR,EAAOO,GASpFqF,YAAY/O,GAQR,IANA,IAAI2S,GAAY,EACZC,EAAU,EACVE,EAAO,EACPkD,EAAS,EACTC,EAAO,EACP3C,EAAI,EACCtU,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAC1CgX,EAAS7W,KAAKiW,aAAapW,GAAG+P,YAAY/O,GAC1C8S,EAAO3T,KAAKiW,aAAapW,GAAGkT,WAAW8D,GAAQjN,SAAS/I,KACvC,GAAb2S,GAAkBG,EAAOF,KACzBD,EAAW3T,EACX4T,EAAUE,EACVmD,EAAO3C,EAAI0C,EAAS7W,KAAKiW,aAAapW,GAAG4S,aAE7C0B,GAAKnU,KAAKiW,aAAapW,GAAG4S,YAE9B,OAAOpP,KAAK2B,IAAI,EAAK3B,KAAK4B,IAAI,EAAK6R,EAAO9W,KAAK+V,iBAWnD7B,SAASC,IACDA,EAAI,GAAKA,EAAInU,KAAK+V,kBAClBpJ,QAAQoK,KAAK,gDAAkD5C,EAAI,KACnEA,EAAI9Q,KAAK4B,IAAIjF,KAAK+V,eAAgB1S,KAAK2B,IAAImP,EAAG,KAKlD,IAFA,IAAItU,EAAI,EACJmX,EAAQ,EACLnX,EAAIG,KAAKiW,aAAa3T,QAAU0U,EAAQhX,KAAKiW,aAAapW,GAAG4S,YAAc0B,GAC9E6C,GAAShX,KAAKiW,aAAapW,GAAG4S,YAC9B5S,IAIJ,GAAIA,GAAKG,KAAKiW,aAAa3T,OACvB,OAAOtC,KAAKiW,aAAajW,KAAKiW,aAAa3T,OAAS,GAAGgQ,cAAc3I,QACzE,IACIsN,EAAY9C,EAAI6C,EACpB,OAFahX,KAAKiW,aAAapW,GAEjBqU,SAAS+C,GAW3BlE,WAAWzF,GACP,OAAOtN,KAAKkU,SAAS5G,EAAItN,KAAK+V,gBAalC3B,aAAa9G,GACT,OAAOtN,KAAK8U,WAAWxH,EAAItN,KAAK+V,gBAapCjB,WAAWX,IACHA,EAAI,GAAKA,EAAInU,KAAK+V,kBAClBpJ,QAAQoK,KAAK,kDAAoD5C,EAAI,KAErEA,EAAI9Q,KAAK4B,IAAIjF,KAAK+V,eAAgB1S,KAAK2B,IAAI,EAAGmP,KAKlD,IAFA,IAAItU,EAAI,EACJmX,EAAQ,EACLnX,EAAIG,KAAKiW,aAAa3T,QAAU0U,EAAQhX,KAAKiW,aAAapW,GAAG4S,YAAc0B,GAC9E6C,GAAShX,KAAKiW,aAAapW,GAAG4S,YAC9B5S,IAEJ,IACIoX,EAAY9C,EAAI6C,EACpB,OAFahX,KAAKiW,aAAapW,GAEjBiV,WAAWmC,GAa7BjC,mBAAmB1H,GACf,OAAOtN,KAAK+U,iBAAiBzH,EAAItN,KAAK+V,gBAa1ChB,iBAAiBZ,IACTA,EAAI,GAAKA,EAAInU,KAAK+V,kBAClBpJ,QAAQC,IAAI,wDAA0DuH,EAAI,KAC1EA,EAAI9Q,KAAK4B,IAAIjF,KAAK+V,eAAgB1S,KAAK2B,IAAI,EAAGmP,KAGlD,IAAI+C,EAAUhJ,EAAWiJ,cAAcnX,KAAMmU,GACzCiD,EAASpX,KAAKiW,aAAaiB,EAAQrX,GACnCoX,EAAY9C,EAAI+C,EAAQG,MAC5B,OAAOD,EAAOrC,iBAAiBkC,GAcnClR,qBAAqBuR,EAAMnD,GAIvB,IAHA,IAAItU,EAAI,EACJmX,EAAQ,EACRO,EAAU,EACP1X,EAAIyX,EAAKrB,aAAa3T,QAAU0U,EAAQM,EAAKrB,aAAapW,GAAG4S,YAAc0B,GAC9E6C,GAASM,EAAKrB,aAAapW,GAAG4S,YAC1B5S,EAAI,EAAIyX,EAAKrB,aAAa3T,SAC1BiV,GAAWD,EAAKrB,aAAapW,GAAG4S,aACpC5S,IAEJ,MAAO,CAAEA,EAAGA,EAAGwX,MAAOL,EAAOO,QAASA,GAoB1CC,aAAaC,EAAQC,GACjBD,EAASpU,KAAK2B,IAAI,EAAGyS,GACrBC,EAAOrU,KAAK4B,IAAI,EAAKyS,GACrB,IAAIC,EAASF,EAASzX,KAAK+V,eACvB6B,EAAOF,EAAO1X,KAAK+V,eACvB,IAAI8B,EAAe3J,EAAWiJ,cAAcnX,KAAM2X,GAC9CG,EAAa5J,EAAWiJ,cAAcnX,KAAM4X,GAC5CG,GAAUJ,EAASE,EAAaN,SAAWvX,KAAKiW,aAAa4B,EAAahY,GAAG4S,YACjF,GAAIoF,EAAahY,GAAKiY,EAAWjY,EAAG,CAEhC,IAAImY,GAASJ,EAAOE,EAAWP,SAAWvX,KAAKiW,aAAa6B,EAAWjY,GAAG4S,YACtEwF,EAAajY,KAAKiW,aAAa4B,EAAahY,GAAG6U,cAAcqD,EAAQC,GACzE,OAAO9J,EAAWC,UAAU,CAAC8J,IAG7B,IAAIC,EAAS,GACb,GAAIL,EAAahY,EAAIiY,EAAWjY,EAAG,CAE3BoY,EAAajY,KAAKiW,aAAa4B,EAAahY,GAAG6U,cAAcqD,EAAQ,GACzEG,EAAO5W,KAAK2W,GACZ,IAAK,IAAIpY,EAAIgY,EAAahY,EAAI,EAAGA,EAAIiY,EAAWjY,EAAGA,IAC/CqY,EAAO5W,KAAKtB,KAAKiW,aAAapW,GAAG8J,QAAQ6I,WAEzCwF,GAASJ,EAAOE,EAAWP,SAAWvX,KAAKiW,aAAa6B,EAAWjY,GAAG4S,YAC1EyF,EAAO5W,KAAKtB,KAAKiW,aAAa6B,EAAWjY,GAAG6U,cAAc,EAAKsD,QAE9D,CAEGC,EAAajY,KAAKiW,aAAa4B,EAAahY,GAAG6U,cAAcqD,EAAQ,GACzEG,EAAO5W,KAAK2W,GACZ,IAASpY,EAAIgY,EAAahY,EAAI,EAAGA,EAAIiY,EAAWjY,GAAKA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAC/EqY,EAAO5W,KAAKtB,KAAKiW,aAAapW,GAAG8J,SAEjCqO,GAASJ,EAAOE,EAAWP,SAAWvX,KAAKiW,aAAa6B,EAAWjY,GAAG4S,YAC1EyF,EAAO5W,KAAKtB,KAAKiW,aAAa6B,EAAWjY,GAAG6U,cAAc,EAAGsD,IAEjE,OAAO9J,EAAWC,UAAU+J,GAkBpCnG,eAAe2E,EAAY1E,EAASC,GAOhC,GANajS,KAAKyW,WAAWC,GACtB3E,eAAeC,EAASC,GAAY,GAC3C,GAIID,GAAWhS,KAAKsR,cAAgBoF,EAAa,GAAK1W,KAAKgW,gBAErChW,KAAKyW,WAAWC,EAAa,EAAI,EAAI1W,KAAKiW,aAAa3T,QAAUoU,EAAa,GAAKA,EAAa,GACtG3E,eAAe/R,KAAKwR,kBAAmBS,GAAY,GAC/D,QAGC,GAAID,GAAWhS,KAAKyR,YAAciF,EAAa,EAAI1W,KAAKiW,aAAa3T,QAAUtC,KAAKgW,gBAAiB,CAEtFhW,KAAKyW,YAAYC,EAAa,GAAK1W,KAAKiW,aAAa3T,QAC3DyP,eAAe/R,KAAKuR,oBAAqBU,GAAY,GAC/D,QAGKD,GAAWhS,KAAKuR,qBAAuBmF,EAAa,EACzD1W,KAAKmY,8BAA8BzB,GAAY,GAC/C,GAGK1E,GAAWhS,KAAKwR,mBAAqBkF,EAAa,EAAI1W,KAAKwW,iBAChExW,KAAKmW,4BAA4BO,GAAY,GAC7C,GAKJ1W,KAAK8R,mBAcTqG,8BAA8BzB,EAAY0B,EAAoBtG,GAC1D,GAAK9R,KAAKgW,kBAAkBU,GAAc,GAA1C,CAEA,IAAI2B,EAAYrY,KAAKyW,WAAWC,GAC5B4B,EAAiBtY,KAAKyW,WAAWC,EAAa,EAAI,EAAI1W,KAAKwW,iBAAmBE,EAAa,GAAKA,EAAa,GACjHxI,EAAWqK,4BAA4BF,EAAWC,EAAgBD,EAAUlG,gBAC5EkG,EAAUjG,uBACVkG,EAAehG,cACfgG,EAAejG,qBACf+F,EAAoBtG,IAcxBqE,4BAA4BO,EAAY0B,EAAoBtG,GACxD,GAAK9R,KAAKgW,kBAAkBU,EAAa,EAAI1W,KAAKwW,iBAAlD,CAEA,IAAI6B,EAAYrY,KAAKyW,WAAWC,GAC5B4B,EAAiBtY,KAAKyW,YAAYC,EAAa,GAAK1W,KAAKwW,iBAChDtI,EAAWqK,4BAA4BF,EAAWC,EAAgBD,EAAU/F,cACzF+F,EAAUhG,qBACViG,EAAenG,gBACfmG,EAAelG,uBACfgG,EAAoBtG,IAmBxB/L,mCAAmCyS,EACnCF,EAAgBG,EAAWC,EAAkBC,EAAgBC,EAAuBC,EAAqBC,GAGrG,IAAIC,EAAmB,IAAIzQ,EAAOoQ,EAAiB5Y,EAAI2Y,EAAU3Y,EAAG4Y,EAAiB3Y,EAAI0Y,EAAU1Y,GAC/FiZ,EAAwB,IAAI1Q,EAAOsQ,EAAsB9Y,EAAI6Y,EAAe7Y,EAAG8Y,EAAsB7Y,EAAI4Y,EAAe5Y,GACxHkZ,EAAmB5V,KAAKyG,KAAKzG,KAAK0G,IAAIgP,EAAiBjZ,EAAG,GAAKuD,KAAK0G,IAAIgP,EAAiBhZ,EAAG,IAC5FmZ,EAAwB7V,KAAKyG,KAAKzG,KAAK0G,IAAIiP,EAAsBlZ,EAAG,GAAKuD,KAAK0G,IAAIiP,EAAsBjZ,EAAG,IAC3GkZ,GAAoB,KAGpBJ,EACAD,EAAsBhQ,IAAI+P,EAAe7Y,EAAIiZ,EAAiBjZ,GAAKoZ,EAAwBD,GAAmBN,EAAe5Y,EAAIgZ,EAAiBhZ,GAAKmZ,EAAwBD,IAG/KL,EAAsBhQ,IAAI+P,EAAe7Y,EAAIiZ,EAAiBjZ,EAAG6Y,EAAe5Y,EAAIgZ,EAAiBhZ,GAEzGuY,EAAexG,oBAUnBjF,YACI,MAAM5H,EAAM,IAAIqD,EAAOsL,OAAOC,kBAAmBD,OAAOC,mBAClD7O,EAAM,IAAIsD,EAAOsL,OAAOE,kBAAmBF,OAAOE,mBAExD,IADA,IAAItS,EACK3B,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAC1C2B,EAAIxB,KAAKiW,aAAapW,GAAGgN,YACzB5H,EAAInF,EAAIuD,KAAK4B,IAAIA,EAAInF,EAAG0B,EAAEyD,IAAInF,GAC9BmF,EAAIlF,EAAIsD,KAAK4B,IAAIA,EAAIlF,EAAGyB,EAAEyD,IAAIlF,GAC9BiF,EAAIlF,EAAIuD,KAAK2B,IAAIA,EAAIlF,EAAG0B,EAAEwD,IAAIlF,GAC9BkF,EAAIjF,EAAIsD,KAAK2B,IAAIA,EAAIjF,EAAGyB,EAAEwD,IAAIjF,GAElC,OAAO,IAAI+M,EAAO7H,EAAKD,GAU3B2E,QAEI,IADA,IAAI2N,EAAO,IAAIpJ,OAAWiL,GACjBtZ,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAC1CyX,EAAKrB,aAAa3U,KAAKtB,KAAKiW,aAAapW,GAAG8J,SAExC9J,EAAI,IACJyX,EAAKrB,aAAapW,EAAI,GAAGsR,SAAWmG,EAAKrB,aAAapW,GAAGqR,YAIjE,OAFAoG,EAAKxF,mBACLwF,EAAKtB,eAAiBhW,KAAKgW,eACpBsB,EAWXzY,OAAOyY,GACH,IAAKA,EACD,OAAO,EAEX,IAAKA,EAAKrB,aACN,OAAO,EACX,QAAuC,IAA5BqB,EAAKrB,aAAa3T,OACzB,OAAO,EACX,GAAIgV,EAAKrB,aAAa3T,QAAUtC,KAAKiW,aAAa3T,OAC9C,OAAO,EACX,IAAK,IAAIzC,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAC1C,IAAKG,KAAKiW,aAAapW,GAAGhB,OAAOyY,EAAKrB,aAAapW,IAC/C,OAAO,EAEf,OAAO,EAaXoL,YAAYC,GACRA,EAAUA,GAAW,GACrB,IAAIC,EAAS,GACbA,EAAO7J,KAAK,SACR4J,EAAQ3C,WACR4C,EAAO7J,KAAK,WAAa4J,EAAQ3C,UAAY,KACjD4C,EAAO7J,KAAK,QACZ,IAAK,IAAIG,EAAI,EAAGA,EAAIzB,KAAKiW,aAAa3T,OAAQb,IACtCA,EAAI,GACJ0J,EAAO7J,KAAK,KAChB6J,EAAO7J,KAAKtB,KAAKiW,aAAaxU,GAAG2T,iBAGrC,OADAjK,EAAO7J,KAAK,QACL6J,EAAOC,KAAK,IAWvBiK,OAAOC,GACH,IAAInK,EAAS,GACbA,EAAO7J,KAAK,KACZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IACtCA,EAAI,GACJsL,EAAO7J,KAAK,KACZgU,EACAnK,EAAO7J,KAAK,QAEZ6J,EAAO7J,KAAK,KAChB6J,EAAO7J,KAAKtB,KAAKiW,aAAapW,GAAGwV,OAAOC,IAK5C,OAHgC,GAA5BtV,KAAKiW,aAAa3T,QAClB6I,EAAO7J,KAAK,KAChB6J,EAAO7J,KAAK,KACL6J,EAAOC,KAAK,IAYvBrF,gBAAgBwP,GACZ,IAAIJ,EAAMK,KAAKC,MAAMF,GACrB,OAAOrH,EAAWC,UAAUgH,GAYhCpP,iBAAiBoP,GACb,IAAKS,MAAMC,QAAQV,GACf,KAAM,yDACV,MAAMQ,EAAMR,EACZ,GAAIQ,EAAIrT,OAAS,EACb,KAAM,mFAAqFqT,EAAIrT,OAAS,KAI5G,IAFA,IAAI8W,EAAQ,IAAIlL,OAAWiL,GACvBE,EAAY,KACPxZ,EAAI,EAAGA,EAAI8V,EAAIrT,OAAQzC,IAAK,CAEjC,IAAIuX,EACJ,GAAInG,EAAiBqI,WAAW3D,EAAI9V,IAChCuX,EAASzB,EAAI9V,GAAG8J,aAEf,GAAI,KAAKgM,EAAI9V,IAAM,KAAK8V,EAAI9V,IAAM,KAAK8V,EAAI9V,IAAM,KAAK8V,EAAI9V,GAAI,CAC/D,KAAK8V,EAAI9V,GAAG,IAAO8V,EAAI9V,GAAG,IAAO8V,EAAI9V,GAAG,IAAO8V,EAAI9V,GAAG,IAClD,KAAM,6FAA+FA,EAAI,MAAQ8V,EAAI9V,GACzHuX,EAASnG,EAAiB9C,UAAUwH,EAAI9V,SAGxCuX,EAASnG,EAAiByE,WAAWC,EAAI9V,IAIzCwZ,IACAjC,EAAOlG,WAAamI,EAAUlI,UAElCiI,EAAMnD,aAAa3U,KAAK8V,GAExBiC,EAAYjC,EAIhB,OAFAgC,EAAMtH,mBAECsH,EAgBXG,4BAA4BC,QACH,IAAVA,IACPA,EAAS,GACb,IAAIrO,EAAS,GACbA,EAAO7J,KAAK,KACZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIG,KAAKiW,aAAa3T,OAAQzC,IAAK,CAC/C,IAAIqV,EAAQlV,KAAKiW,aAAapW,GAC9BsL,EAAO7J,KAAK4T,EAAM/C,gBAAgBrS,EAAE2Z,QAAQD,IAC5CrO,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK4T,EAAM/C,gBAAgBpS,EAAE0Z,QAAQD,IAC5CrO,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK4T,EAAM9C,uBAAuBtS,EAAE2Z,QAAQD,IACnDrO,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK4T,EAAM9C,uBAAuBrS,EAAE0Z,QAAQD,IACnDrO,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK4T,EAAM7C,qBAAqBvS,EAAE2Z,QAAQD,IACjDrO,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK4T,EAAM7C,qBAAqBtS,EAAE0Z,QAAQD,IACjDrO,EAAO7J,KAAK,KAEhB,GAAgC,GAA5BtB,KAAKiW,aAAa3T,OAAa,CAC3B4S,EAAQlV,KAAKiW,aAAajW,KAAKiW,aAAa3T,OAAS,GACzD6I,EAAO7J,KAAK4T,EAAM5C,cAAcxS,EAAE2Z,QAAQD,IAC1CrO,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK4T,EAAM5C,cAAcvS,EAAE0Z,QAAQD,IAG9C,OADArO,EAAO7J,KAAK,KACL6J,EAAOC,KAAK,IAcvBrF,qCAAqC2T,EAAU1D,GAE3C,IAAI2D,EAAanE,KAAKC,MAAMiE,GAC5B,IAAKC,EAAWrX,OAEZ,MADAqK,QAAQC,IAAI,6EACN,4EAEV,GAAI+M,EAAWrX,OAAS,EAEpB,MADAqK,QAAQC,IAAI,0FACN,yFAEV,OAAOsB,EAAW0L,gBAAgBD,EAAY3D,GAalDjQ,uBAAuB4T,EAAY3D,GAE/B,IAEI9E,EACAE,EACAC,EACAF,EALA0I,EAAa,IAAI3L,EAAW,MAM5BrO,EAAI,EACR,EAAG,CACU,GAALA,IAEAqR,EAAa,IAAI5I,EAAOqR,EAAW9Z,GAAI8Z,EAAW9Z,EAAI,KAE1DuR,EAAoB,IAAI9I,EAAOqR,EAAW9Z,EAAI,GAAI8Z,EAAW9Z,EAAI,IACjEwR,EAAkB,IAAI/I,EAAOqR,EAAW9Z,EAAI,GAAI8Z,EAAW9Z,EAAI,IAI/DsR,EAAW,IAAI7I,EAAOqR,EAAW9Z,EAAI,GAAI8Z,EAAW9Z,EAAI,IAExD,IAAIuX,EAAS,IAAInG,EAAiBC,EAAYC,EAAUC,EAAmBC,GAC3EwI,EAAW5D,aAAa3U,KAAK8V,GAC7BlG,EAAaC,EACbtR,GAAK,QACAA,EAAI,EAAI8Z,EAAWrX,QAM5B,OALAuX,EAAW7D,eAAiBA,EACxBA,IACA6D,EAAW5D,aAAa4D,EAAW5D,aAAa3T,OAAS,GAAG6O,SAAW0I,EAAW5D,aAAa,GAAG/E,YAEtG2I,EAAW/H,mBACJ+H,GAOf3L,EAAWoD,YAAc,EAEzBpD,EAAWqD,oBAAsB,EAEjCrD,EAAWsD,kBAAoB,EAE/BtD,EAAWuD,UAAY,ECnnChB,MAAMqI,UAAahL,EAStB5I,YAAY3E,EAAGC,GACXkP,MAAMnP,EAAGC,GAAG,CAACD,EAAGC,IAAM,IAAIsY,EAAKvY,EAAGC,KAIlCxB,KAAKuI,UAAY,OAYrBuI,aAAaxB,GACT,MAAMI,EAAc1P,KAAK0P,YAAYJ,GACrC,GAAmB,GAAfI,EACA,OAAO,KACX,IAAInO,EAAIvB,KAAKuB,EAAExB,EAAIuP,EAAK/N,EAAExB,EACtByB,EAAIxB,KAAKuB,EAAEzB,EAAIwP,EAAK/N,EAAEzB,EAC1B,MAAMiR,GAAezB,EAAK9N,EAAE1B,EAAIwP,EAAK/N,EAAEzB,GAAKyB,GAAO+N,EAAK9N,EAAEzB,EAAIuP,EAAK/N,EAAExB,GAAKyB,EACpEwP,GAAehR,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,GAAKyB,GAAOvB,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,GAAKyB,EAC1ED,EAAIwP,EAAarB,EACjBlO,EAAIwP,EAAatB,EAEjB,MAAM5P,EAAIE,KAAKuB,EAAEzB,EAAKyB,GAAKvB,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,GACvCC,EAAIC,KAAKuB,EAAExB,EAAKwB,GAAKvB,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,GAC7C,OAAIga,MAAMxY,IAAMwY,MAAMja,IAAMia,MAAMha,QAAlC,EAIO,IAAIuI,EAAOxI,EAAGC,GAczBkL,YAAYC,GACRA,EAAUA,GAAW,GACrB,IAAIC,EAAS,GASb,OARAA,EAAO7J,KAAK,SACR4J,EAAQ3C,WACR4C,EAAO7J,KAAK,WAAa4J,EAAQ3C,UAAY,KACjD4C,EAAO7J,KAAK,QAAUtB,KAAKuB,EAAEzB,EAAI,KACjCqL,EAAO7J,KAAK,QAAUtB,KAAKuB,EAAExB,EAAI,KACjCoL,EAAO7J,KAAK,QAAUtB,KAAKwB,EAAE1B,EAAI,KACjCqL,EAAO7J,KAAK,QAAUtB,KAAKwB,EAAEzB,EAAI,KACjCoL,EAAO7J,KAAK,OACL6J,EAAOC,KAAK,KCvEpB,MAAM4O,EAST9T,YAAYqE,EAAQ0P,GAIhBja,KAAKuI,UAAY,SACjBvI,KAAKwI,IAAM1C,EAAa5F,OACxBF,KAAKuK,OAASA,EACdvK,KAAKia,OAASA,EAYlBC,eAAeC,GACX,OAAOna,KAAKuK,OAAOX,SAASuQ,EAAO5P,QAAU4P,EAAOF,OAASja,KAAKia,OAiBtEG,aAAa9K,GAET,OAD2BA,EAAKa,gBAAgBnQ,KAAKuK,QAC3BX,SAAS5J,KAAKuK,QAAUvK,KAAKia,OAY3DxK,OAAOzF,GAEH,OAAOgQ,EAAOK,YAAY5K,OAAOzF,EAAOhK,KAAKia,QAAQhR,IAAIjJ,KAAKuK,QAclE+P,UAAUtQ,GACN,MAAM0I,EAASsH,EAAOK,YAAY5K,OAAOzF,EAAOhK,KAAKia,QAErD,OAAO,IAAI1J,EAAOmC,EAAQ,IAAIpK,EAAO,EAAG,IAAIW,IAAIjJ,KAAKuK,QAAQoG,OAYjE4J,mBAAmBJ,GAEf,GAAIna,KAAKuK,OAAOX,SAASuQ,EAAO5P,QAAUvK,KAAKia,OAASE,EAAOF,OAC3D,OAAO,KAGX,GAAIja,KAAKuK,OAAOX,SAASuQ,EAAO5P,QAAUlH,KAAKC,IAAItD,KAAKia,OAASE,EAAOF,QACpE,OAAO,KAwBX,IAAIO,EAAKxa,KAAKuK,OACV/F,EAAK2V,EAAO5P,OACZ8J,EAAImG,EAAG5Q,SAASpF,GAChBjD,GAAKvB,KAAKia,OAASja,KAAKia,OAASE,EAAOF,OAASE,EAAOF,OAAS5F,EAAIA,IAAM,EAAIA,GAC/EoG,EAAIpX,KAAKyG,KAAK9J,KAAKia,OAASja,KAAKia,OAAS1Y,EAAIA,GAC9CkD,EAAKD,EAAGmF,QAAQU,MAAM9I,EAAI8S,EAAGmG,GAC7BE,EAAKjW,EAAG3E,EAAI2a,GAAKjW,EAAGzE,EAAIya,EAAGza,GAAKsU,EAChCsG,EAAKlW,EAAG1E,EAAI0a,GAAKjW,EAAG1E,EAAI0a,EAAG1a,GAAKuU,EAChCuG,EAAKnW,EAAG3E,EAAI2a,GAAKjW,EAAGzE,EAAIya,EAAGza,GAAKsU,EAChCwG,EAAKpW,EAAG1E,EAAI0a,GAAKjW,EAAG1E,EAAI0a,EAAG1a,GAAKuU,EACpC,OAAO,IAAIyF,EAAK,IAAIxR,EAAOoS,EAAIC,GAAK,IAAIrS,EAAOsS,EAAIC,IAavD5P,YAAYC,GACRA,EAAUA,GAAW,GACrB,IAAIC,EAAS,GAQb,OAPAA,EAAO7J,KAAK,WACR4J,EAAQ3C,WACR4C,EAAO7J,KAAK,WAAa4J,EAAQ3C,UAAY,KACjD4C,EAAO7J,KAAK,QAAUtB,KAAKuK,OAAOzK,EAAI,KACtCqL,EAAO7J,KAAK,QAAUtB,KAAKuK,OAAOxK,EAAI,KACtCoL,EAAO7J,KAAK,OAAStB,KAAKia,OAAS,KACnC9O,EAAO7J,KAAK,OACL6J,EAAOC,KAAK,KAI3B4O,EAAOK,YAAc,CACjB5K,OAAQ,CAACzF,EAAOiQ,IAGL,IAAI3R,EAAOjF,KAAKqH,IAAIV,GAASiQ,EAAQ5W,KAAKsH,IAAIX,GAASiQ,IC5K/D,MAAMa,EAUT5U,YAAYiU,EAAQY,EAAYC,GAI5Bhb,KAAKuI,UAAY,eACjBvI,KAAKwI,IAAM1C,EAAa5F,OACxBF,KAAKma,OAASA,EACdna,KAAK+a,WAAaA,EAClB/a,KAAKgb,SAAWA,EAYpB/P,YAAYC,GACRA,EAAUA,GAAW,GACrB,IAAIC,EAAS,GACbA,EAAO7J,KAAK,UACR4J,EAAQ3C,WACR4C,EAAO7J,KAAK,WAAa4J,EAAQ3C,UAAY,KACjD,MAAMhI,EAAOua,EAAaG,kBAAkBC,eAAelb,KAAKma,OAAO5P,OAAOzK,EAAGE,KAAKma,OAAO5P,OAAOxK,EAAGC,KAAKma,OAAOF,OAAQja,KAAK+a,WAAY/a,KAAKgb,UAEjJ,OADA7P,EAAO7J,KAAK,OAASf,EAAK6K,KAAK,KAAO,QAC/BD,EAAOC,KAAK,KAI3B0P,EAAaG,kBAAoB,CAQ7BE,iBAAkB,CAACC,EAASC,EAASpB,EAAQjQ,KAClC,CACHlK,EAAGsb,EAAWnB,EAAS5W,KAAKqH,IAAIV,GAChCjK,EAAGsb,EAAWpB,EAAS5W,KAAKsH,IAAIX,KAYxCkR,eAAgB,CAACpb,EAAGC,EAAGka,EAAQc,EAAYC,EAAU9P,UAC1B,IAAZA,IACPA,EAAU,CAAEoQ,aAAa,IAC7B,MAAM7a,EAAMqa,EAAaG,kBAAkBE,iBAAiBrb,EAAGC,EAAGka,EAAQe,GACpExa,EAAQsa,EAAaG,kBAAkBE,iBAAiBrb,EAAGC,EAAGka,EAAQc,GAG5E,GAAc,EAAV1X,KAAK6G,GAAS7G,KAAKC,IAAIyX,EAAaC,GAAY,KAAO,CACvD,MAAMO,EAAYT,EAAaG,kBAAkBC,eAAepb,EAAGC,EAAGka,EAAQc,EAAYA,GAAcC,EAAWD,GAAc,EAAG7P,GAC9HsQ,EAAaV,EAAaG,kBAAkBC,eAAepb,EAAGC,EAAGka,EAAQc,GAAcC,EAAWD,GAAc,EAAGC,EAAU9P,GACnI,OAAOqQ,EAAUE,OAAOD,GAG5B,MAAMnM,EAAO2L,EAAWD,EACxB,IAAIW,EACAC,EACAtM,EAAO,GACPqM,EAAerY,KAAKC,IAAI+L,GAAQhM,KAAK6G,GAAK,EAAI,EAC9CyR,EAAY,IAGZD,EAAerY,KAAKC,IAAI+L,GAAQhM,KAAK6G,GAAK,EAAI,EAC9CyR,EAAY,GAEhB,MAAMC,EAAW,GAKjB,OAJI1Q,EAAQoQ,aACRM,EAASta,KAAK,IAAKd,EAAMV,EAAGU,EAAMT,GAEtC6b,EAASta,KAAK,IAAK2Y,EAAQA,EAAQ,EAAGyB,EAAcC,EAAWlb,EAAIX,EAAGW,EAAIV,GACnE6b,IC3Ef,MAAMC,EAAa,IAAMxY,KAAK6G,GAUvB,MAAM4R,EAeT5V,YAAY6V,EAASC,EAAQ3R,EAAO4R,EAAYC,EAAYC,EAAYC,EAAaC,EAAOC,GACxFtc,KAAK+b,QAAUA,EACf/b,KAAKgc,OAAS,IAAI1T,EAAO,EAAG,GAAGM,IAAIoT,GACnChc,KAAKqK,MAAQ,IAAI/B,EAAO,EAAG,GAAGM,IAAIyB,GAClCrK,KAAKkc,WAAaA,EAClBlc,KAAKoc,YAAcA,EACnBpc,KAAKuc,qBAAuB,GAC5Bvc,KAAKwc,MAAQ,IAAIC,IACjBzc,KAAK0c,QAAQT,GACTG,GACApc,KAAKqc,MAAQA,EACbrc,KAAKsc,YAAcA,IAGnBtc,KAAK2c,aAAaR,GAClBnc,KAAKqc,MAAQrc,KAAK4c,cAAc,KAChC5c,KAAKsc,YAActc,KAAK4c,cAAc,KACtC5c,KAAK+b,QAAQc,YAAY7c,KAAKqc,QAGtCM,aAAaR,GACTnc,KAAK8c,UAAY9c,KAAK4c,cAAc,SACpC5c,KAAK+b,QAAQc,YAAY7c,KAAK8c,WAG9B,MAAMC,EAAO,CACT,QAAW,UACX,SAAY,WACZ,QAAW,UACX,cAAiB,gBACjB,OAAU,SACV,aAAgB,eAChB,OAAU,SACV,KAAQ,OACR,OAAU,SACV,MAAS,QACT,KAAQ,QAGNC,EAAQ,GACd,IAAK,IAAIC,KAAKF,EAAM,CAChB,MAAMxU,EAAYwU,EAAKE,GACjBC,EAAef,EAAWc,GAC5BC,EACAF,EAAM1b,KAAK,IAAIiH,4BAAoC2U,EAAaC,wBAAwBD,EAAaE,iBAGrGzQ,QAAQoK,KAAK,iDAAiDkG,yBAGtEjd,KAAK8c,UAAUO,UAAYL,EAAM5R,KAAK,MAa1CkS,mBAAmBC,GACf,MAAMpS,EAAS,GACfoS,EAAKC,SAAQ,CAAC7d,EAAOwG,KACjBgF,EAAO7J,KAAK6E,EAAM,MAAQxG,EAAQ,SAEtCK,KAAK8c,UAAUO,WAAa,0BAA4BlS,EAAOC,KAAK,MAaxEqS,YAAYtX,EAAKuX,GACb,IAAIC,EAAO3d,KAAKwc,MAAMoB,IAAIzX,GAC1B,OAAIwX,GAAQA,EAAKD,SAASG,gBAAkBH,EAASG,eACjD7d,KAAKwc,MAAMsB,OAAO3X,GACXwX,GAEJ,KAYXf,cAAcc,GACV,OAAOK,SAASC,gBAAgB,6BAA8BN,GAclEO,SAASP,GAIL,IAAIC,EAAO3d,KAAKyd,YAAYzd,KAAKke,MAAOR,GASxC,OARKC,IAGDA,EAAO3d,KAAK4c,cAAcc,IAE1B1d,KAAKuc,qBAAqB4B,YAC1BR,EAAKS,MAAM,kBAAoBpe,KAAKuc,qBAAqB4B,WAEtDR,EAsBXU,cAAcV,EAAMpV,EAAW4U,EAAOC,GAiBlC,OAhBIpd,KAAKse,aACLX,EAAKY,aAAa,QAAS,GAAGhW,KAAavI,KAAKse,gBAGhDX,EAAKY,aAAa,QAAShW,GAE/BoV,EAAKY,aAAa,OAAQve,KAAKkc,WAAaiB,EAAQ,QACpDQ,EAAKY,aAAa,SAAUve,KAAKkc,WAAa,OAASiB,GACvDQ,EAAKY,aAAa,eAAgB,GAAGnB,GAAa,KAC9Cpd,KAAKke,OACLP,EAAKY,aAAa,KAAM,GAAGve,KAAKke,SAE/BP,EAAKa,YAENxe,KAAKsc,YAAYO,YAAYc,GAE1BA,EAUXjB,QAAQT,GACJjc,KAAKic,WAAaA,EAClBjc,KAAK+b,QAAQwC,aAAa,UAAW,OAAOve,KAAKic,WAAW3N,SAAStO,KAAKic,WAAW1N,UACrFvO,KAAK+b,QAAQwC,aAAa,QAAS,GAAGve,KAAKic,WAAW3N,SACtDtO,KAAK+b,QAAQwC,aAAa,SAAU,GAAGve,KAAKic,WAAW1N,UAM3DkQ,aAAavC,GAIT,OAHW,IAAIJ,EAAa9b,KAAK+b,QAAS/b,KAAKgc,OAAQhc,KAAKqK,MAAOrK,KAAKic,WAAYC,EAAY,MAChG,EACAlc,KAAKqc,MAAOrc,KAAKsc,aAUrBoC,iBAAiBC,GACb3e,KAAKuc,qBAAuBoC,EAYhCC,aAAapW,GACTxI,KAAKke,MAAQ1V,EAYjBqW,oBAAoBtW,GAChBvI,KAAKse,aAAe/V,EAYxBuW,eAAeC,GAEX/e,KAAKwc,MAAMwC,QAEX,IAAK,IAAInf,EAAI,EAAGA,EAAIG,KAAKsc,YAAY2C,WAAW3c,OAAQzC,IAAK,CAGzD,IAAIqf,EAAQlf,KAAKsc,YAAY2C,WAAWpf,GACxCG,KAAKwc,MAAM5T,IAAIsW,EAAMC,aAAa,MAAOD,GAE7Clf,KAAKof,sBAYTC,aAAaN,GACJ/e,KAAKoc,aAKNpc,KAAK+b,QAAQuD,aAAatf,KAAKsc,YAAatc,KAAKqc,OAErD,IAAIxL,EAAM7Q,KAAKqc,MACfrc,KAAKqc,MAAQrc,KAAKsc,YAClBtc,KAAKsc,YAAczL,EAEvB0O,GAAGzf,GACC,OAAOE,KAAKgc,OAAOlc,EAAIE,KAAKqK,MAAMvK,EAAIA,EAE1C0f,GAAGzf,GACC,OAAOC,KAAKgc,OAAOjc,EAAIC,KAAKqK,MAAMtK,EAAIA,EAc1CuP,KAAK7D,EAAIC,EAAIyR,EAAOC,GAChB,MAAM9N,EAAOtP,KAAKie,SAAS,QAK3B,OAJA3O,EAAKiP,aAAa,KAAM,GAAGve,KAAKuf,GAAG9T,EAAG3L,MACtCwP,EAAKiP,aAAa,KAAM,GAAGve,KAAKwf,GAAG/T,EAAG1L,MACtCuP,EAAKiP,aAAa,KAAM,GAAGve,KAAKuf,GAAG7T,EAAG5L,MACtCwP,EAAKiP,aAAa,KAAM,GAAGve,KAAKwf,GAAG9T,EAAG3L,MAC/BC,KAAKqe,cAAc/O,EAAM,OAAQ6N,EAAOC,GAAa,GAchEqC,MAAMhU,EAAIC,EAAIyR,EAAOC,GACjB,MAAMO,EAAO3d,KAAKie,SAAS,QAC3B,IACInS,EAAWxD,EAAOiD,MAAMC,eAAeC,EAAIC,EADjC,EAC8C1L,KAAKqK,MAAMvK,EAAGE,KAAKqK,MAAMtK,GACrF,MAAMsU,EAAI,CAAC,IAAKrU,KAAKuf,GAAG9T,EAAG3L,GAAIE,KAAKwf,GAAG/T,EAAG1L,IAC1C,IAAK,IAAIF,EAAI,EAAGA,GAAKiM,EAASxJ,OAAQzC,IAClCwU,EAAE/S,KAAK,KAEP+S,EAAE/S,KAAKtB,KAAKgc,OAAOlc,EAAIgM,EAASjM,EAAIiM,EAASxJ,QAAQxC,GACrDuU,EAAE/S,KAAKtB,KAAKgc,OAAOjc,EAAI+L,EAASjM,EAAIiM,EAASxJ,QAAQvC,GAGzD,OADA4d,EAAKY,aAAa,IAAKlK,EAAEjJ,KAAK,MACvBpL,KAAKqe,cAAcV,EAAM,QAASR,EAAOC,GAAa,GAejEsC,MAAMA,EAAOC,EAAUC,GACnB,MAAMjC,EAAO3d,KAAKie,SAAS,SAErB4B,EAAgBH,IAClB,GAAIA,EAAMI,aAAc,CACpB,MAAMC,EAASH,EAAK9f,EAAI4f,EAAMI,aACxBE,EAASJ,EAAK7f,EAAI2f,EAAMO,cAC9BtC,EAAKY,aAAa,QAAS,GAAGmB,EAAMI,aAAe9f,KAAKqK,MAAMvK,GAC9D6d,EAAKY,aAAa,SAAU,GAAGmB,EAAMO,cAAgBjgB,KAAKqK,MAAMtK,GAChE4d,EAAKY,aAAa,UAAW,MAC7BZ,EAAKY,aAAa,YAAa,aAAave,KAAKuf,GAAGI,EAAS7f,MAAME,KAAKwf,GAAGG,EAAS5f,aAAaggB,KAAUC,QAanH,OAVAN,EAAMQ,iBAAiB,QAAQC,IAC3BN,EAAaH,MAIjB/B,EAAKY,aAAa,IAAK,KACvBZ,EAAKY,aAAa,IAAK,KACvBZ,EAAKY,aAAa,UAAW,QAC7BsB,EAAaH,GACb/B,EAAKY,aAAa,OAAQmB,EAAMU,KACzBpgB,KAAKqe,cAAcV,EAAM,QAAS,KAAM,MAgBnD0C,YAAYnP,EAAYC,EAAUC,EAAmBC,EAAiB8L,EAAOC,GACzE,GAAIlM,aAAsBD,EACtB,OAAOjR,KAAKqgB,YAAYnP,EAAWA,WAAYA,EAAWC,SAAUD,EAAWE,kBAAmBF,EAAWG,gBAAiB8L,EAAOC,GAEzI,MAAMO,EAAO3d,KAAKie,SAAS,QAErB5J,EAAI,CACN,IACArU,KAAKuf,GAAGrO,EAAWpR,GACnBE,KAAKwf,GAAGtO,EAAWnR,GACnB,IACAC,KAAKuf,GAAGnO,EAAkBtR,GAC1BE,KAAKwf,GAAGpO,EAAkBrR,GAC1BC,KAAKuf,GAAGlO,EAAgBvR,GACxBE,KAAKwf,GAAGnO,EAAgBtR,GACxBC,KAAKuf,GAAGpO,EAASrR,GACjBE,KAAKwf,GAAGrO,EAASpR,IAGrB,OADA4d,EAAKY,aAAa,IAAKlK,EAAEjJ,KAAK,MACvBpL,KAAKqe,cAAcV,EAAM,eAAgBR,EAAOC,GAiB3DkD,gBAAgBhJ,EAAM6F,EAAOC,GACzB,MAAMO,EAAO3d,KAAKie,SAAS,QAC3B,IAAK3G,GAAuB,GAAfA,EAAKhV,OACd,OAAOqb,EAEX,MAAMtJ,EAAI,CAAC,IAAKrU,KAAKuf,GAAGjI,EAAK,GAAGxX,GAAIE,KAAKwf,GAAGlI,EAAK,GAAGvX,IAKpD,IAHA,IAAIoR,EACAC,EACAC,EACKxR,EAAI,EAAGA,EAAIyX,EAAKhV,OAAQzC,GAAK,EAClCuR,EAAoBkG,EAAKzX,GACzBwR,EAAkBiG,EAAKzX,EAAI,GAC3BsR,EAAWmG,EAAKzX,EAAI,GACpBwU,EAAE/S,KAAK,IAAKtB,KAAKuf,GAAGnO,EAAkBtR,GAAIE,KAAKwf,GAAGpO,EAAkBrR,GAAIC,KAAKuf,GAAGlO,EAAgBvR,GAAIE,KAAKwf,GAAGnO,EAAgBtR,GAAIC,KAAKuf,GAAGpO,EAASrR,GAAIE,KAAKwf,GAAGrO,EAASpR,IAG1K,OADA4d,EAAKY,aAAa,IAAKlK,EAAEjJ,KAAK,MACvBpL,KAAKqe,cAAcV,EAAM,kBAAmBR,EAAOC,GAAa,GAc3EmD,OAAOrP,EAAYC,GAEfnR,KAAKiQ,MAAMiB,EAAY,iBACvBlR,KAAKwgB,OAAOrP,EAAU,EAAG,uBAY7BsP,WAAWvP,EAAYC,GACnBnR,KAAKsP,KAAK4B,EAAYC,EAAU,oBAYpCuP,IAAI7f,EAAGsc,GACH,MAAMQ,EAAO3d,KAAKie,SAAS,QAC3B,OAAOje,KAAKqe,cAAcV,EAAM,MAAOR,EAAO,GAYlDlN,MAAMpP,EAAGsc,GAEL,MAAMQ,EAAO3d,KAAKie,SAAS,UAI3B,OAHAN,EAAKY,aAAa,KAAM,GAAGve,KAAKuf,GAAG1e,EAAEf,MACrC6d,EAAKY,aAAa,KAAM,GAAGve,KAAKwf,GAAG3e,EAAEd,MACrC4d,EAAKY,aAAa,IAAK,KAChBve,KAAKqe,cAAcV,EAAM,QAASR,EAAO,GAgBpDhD,OAAO5P,EAAQ0P,EAAQkD,EAAOC,GAE1B,MAAMO,EAAO3d,KAAKie,SAAS,UAI3B,OAHAN,EAAKY,aAAa,KAAM,GAAGve,KAAKuf,GAAGhV,EAAOzK,MAC1C6d,EAAKY,aAAa,KAAM,GAAGve,KAAKwf,GAAGjV,EAAOxK,MAC1C4d,EAAKY,aAAa,IAAK,GAAGtE,EAASja,KAAKqK,MAAMvK,GACvCE,KAAKqe,cAAcV,EAAM,SAAUR,EAAOC,GAAa,GAelEuD,UAAUpW,EAAQ0P,EAAQc,EAAYC,EAAUmC,EAAOC,GACnD,MAAMO,EAAO3d,KAAKie,SAAS,QACrB2C,EAAU9F,EAAaG,kBAAkBC,eAAelb,KAAKuf,GAAGhV,EAAOzK,GAAIE,KAAKwf,GAAGjV,EAAOxK,GAAIka,EAASja,KAAKqK,MAAMvK,EACxHib,EAAYC,GAEZ,OADA2C,EAAKY,aAAa,IAAKqC,EAAQxV,KAAK,MAC7BpL,KAAKqe,cAAcV,EAAM,YAAaR,EAAOC,GAAa,GAgBrEyD,QAAQtW,EAAQuW,EAASC,EAAS5D,EAAOC,EAAW4D,QACxB,IAAbA,IACPA,EAAW,GAEf,MAAMrD,EAAO3d,KAAKie,SAAS,WAO3B,OANAN,EAAKY,aAAa,KAAM,GAAGve,KAAKuf,GAAGhV,EAAOzK,MAC1C6d,EAAKY,aAAa,KAAM,GAAGve,KAAKwf,GAAGjV,EAAOxK,MAC1C4d,EAAKY,aAAa,KAAM,GAAGuC,EAAU9gB,KAAKqK,MAAMvK,GAChD6d,EAAKY,aAAa,KAAM,GAAGwC,EAAU/gB,KAAKqK,MAAMtK,GAEhD4d,EAAKY,aAAa,YAAa,UAAsB,IAAXyC,EAAkB3d,KAAK6G,MAAMlK,KAAKuf,GAAGhV,EAAOzK,MAAME,KAAKwf,GAAGjV,EAAOxK,OACpGC,KAAKqe,cAAcV,EAAM,UAAWR,EAAOC,GAAa,GAgBnEoD,OAAOjW,EAAQqV,EAAMzC,EAAOC,GACxB,MAAMO,EAAO3d,KAAKie,SAAS,aAK3B,OAJAN,EAAKY,aAAa,IAAK,GAAGve,KAAKuf,GAAGhV,EAAOzK,EAAI8f,EAAO,MACpDjC,EAAKY,aAAa,IAAK,GAAGve,KAAKwf,GAAGjV,EAAOxK,EAAI6f,EAAO,MACpDjC,EAAKY,aAAa,QAAS,GAAGqB,EAAO5f,KAAKqK,MAAMvK,GAChD6d,EAAKY,aAAa,SAAU,GAAGqB,EAAO5f,KAAKqK,MAAMtK,GAC1CC,KAAKqe,cAAcV,EAAM,SAAUR,EAAOC,GAAa,GAWlE6D,KAAKtB,EAAUrR,EAAOC,EAAQ4O,EAAOC,GACjC,MAAMO,EAAO3d,KAAKie,SAAS,QAK3B,OAJAN,EAAKY,aAAa,IAAK,GAAGve,KAAKuf,GAAGI,EAAS7f,MAC3C6d,EAAKY,aAAa,IAAK,GAAGve,KAAKwf,GAAGG,EAAS5f,MAC3C4d,EAAKY,aAAa,QAAS,GAAGjQ,EAAQtO,KAAKqK,MAAMvK,GACjD6d,EAAKY,aAAa,SAAU,GAAGhQ,EAASvO,KAAKqK,MAAMtK,GAC5CC,KAAKqe,cAAcV,EAAM,OAAQR,EAAOC,GAAa,GAgBhE8D,KAAK3W,EAAQ+D,EAAOC,EAAQ4S,EAAOC,EAAOjE,GACtC,MAAMQ,EAAO3d,KAAKie,SAAS,QACrB5J,EAAI,GAGV,IAFA,IAAIzF,GAAQvL,KAAKge,KAAe,GAAT9S,EAAgB6S,GAASA,EAC5CvS,EAAON,EAAS,EACXzO,GAAKuD,KAAKge,KAAc,GAAR/S,EAAe6S,GAASA,EAAOrhB,EAAIwO,EAAQ,EAAGxO,GAAKqhB,EACxE9M,EAAE/S,KAAK,IAAKtB,KAAKuf,GAAGhV,EAAOzK,EAAIA,GAAIE,KAAKwf,GAAGjV,EAAOxK,EAAI6O,IACtDyF,EAAE/S,KAAK,IAAKtB,KAAKuf,GAAGhV,EAAOzK,EAAIA,GAAIE,KAAKwf,GAAGjV,EAAOxK,EAAI8O,IAI1D,IAFA,IAAIH,GAAQrL,KAAKge,KAAc,GAAR/S,EAAe6S,GAASA,EAC3CxS,EAAOL,EAAQ,EACVvO,GAAKsD,KAAKge,KAAe,GAAT9S,EAAgB6S,GAASA,EAAOrhB,EAAIwO,EAAS,EAAGxO,GAAKqhB,EAC1E/M,EAAE/S,KAAK,IAAKtB,KAAKuf,GAAGhV,EAAOzK,EAAI4O,GAAO1O,KAAKwf,GAAGjV,EAAOxK,EAAIA,IACzDsU,EAAE/S,KAAK,IAAKtB,KAAKuf,GAAGhV,EAAOzK,EAAI6O,GAAO3O,KAAKwf,GAAGjV,EAAOxK,EAAIA,IAG7D,OADA4d,EAAKY,aAAa,IAAKlK,EAAEjJ,KAAK,MACvBpL,KAAKqe,cAAcV,EAAM,OAAQR,EAAO,GAkBnDmE,OAAO/W,EAAQ+D,EAAOC,EAAQ4S,EAAOC,EAAOjE,GACxC,MAAMQ,EAAO3d,KAAKie,SAAS,QACrB5J,EAAI,GACV,IAAK,IAAIvU,GAAKuD,KAAKge,KAAc,GAAR/S,EAAe6S,GAASA,EAAOrhB,EAAIwO,EAAQ,EAAGxO,GAAKqhB,EACxE,IAAK,IAAIphB,GAAKsD,KAAKge,KAAe,GAAT9S,EAAgB6S,GAASA,EAAOrhB,EAAIwO,EAAS,EAAGxO,GAAKqhB,EAE1E/M,EAAE/S,KAAK,IAAKtB,KAAKuf,GAAGhV,EAAOzK,EAAIA,GAAK,EAAGE,KAAKwf,GAAGjV,EAAOxK,EAAIA,IAC1DsU,EAAE/S,KAAK,IAAKtB,KAAKuf,GAAGhV,EAAOzK,EAAIA,GAAK,EAAGE,KAAKwf,GAAGjV,EAAOxK,EAAIA,IAC1DsU,EAAE/S,KAAK,IAAKtB,KAAKuf,GAAGhV,EAAOzK,EAAIA,GAAIE,KAAKwf,GAAGjV,EAAOxK,EAAIA,GAAK,GAC3DsU,EAAE/S,KAAK,IAAKtB,KAAKuf,GAAGhV,EAAOzK,EAAIA,GAAIE,KAAKwf,GAAGjV,EAAOxK,EAAIA,GAAK,GAInE,OADA4d,EAAKY,aAAa,IAAKlK,EAAEjJ,KAAK,MACvBpL,KAAKqe,cAAcV,EAAM,SAAUR,EAAO,GAiBrDoE,cAAchX,EAAQqV,EAAMzC,GACxB,MAAMQ,EAAO3d,KAAKie,SAAS,QACrB5J,EAAI,CACN,IACArU,KAAKuf,GAAGhV,EAAOzK,GAAK8f,EAAO,EAC3B5f,KAAKwf,GAAGjV,EAAOxK,GACf,IACAC,KAAKuf,GAAGhV,EAAOzK,GACfE,KAAKwf,GAAGjV,EAAOxK,GAAK6f,EAAO,EAC3B,IACA5f,KAAKuf,GAAGhV,EAAOzK,GAAK8f,EAAO,EAC3B5f,KAAKwf,GAAGjV,EAAOxK,GACf,IACAC,KAAKuf,GAAGhV,EAAOzK,GACfE,KAAKwf,GAAGjV,EAAOxK,GAAK6f,EAAO,EAC3B,KAGJ,OADAjC,EAAKY,aAAa,IAAKlK,EAAEjJ,KAAK,MACvBpL,KAAKqe,cAAcV,EAAM,gBAAiBR,EAAO,GAiB5DqE,aAAajX,EAAQqV,EAAMzC,GACvB,MAAMQ,EAAO3d,KAAKie,SAAS,QAK3B,OAJAN,EAAKY,aAAa,IAAK,IAAGve,KAAKuf,GAAGhV,EAAOzK,GAAK8f,EAAO,IACrDjC,EAAKY,aAAa,IAAK,IAAGve,KAAKwf,GAAGjV,EAAOxK,GAAK6f,EAAO,IACrDjC,EAAKY,aAAa,QAAS,GAAGqB,KAC9BjC,EAAKY,aAAa,SAAU,GAAGqB,KACxB5f,KAAKqe,cAAcV,EAAM,eAAgBR,EAAO,GAiB3DsE,aAAalX,EAAQ0P,EAAQkD,GACzBlD,EAASA,GAAU,EACnB,MAAM0D,EAAO3d,KAAKie,SAAS,UAI3B,OAHAN,EAAKY,aAAa,KAAM,GAAGve,KAAKuf,GAAGhV,EAAOzK,MAC1C6d,EAAKY,aAAa,KAAM,GAAGve,KAAKwf,GAAGjV,EAAOxK,MAC1C4d,EAAKY,aAAa,IAAK,GAAGtE,KACnBja,KAAKqe,cAAcV,EAAM,eAAgBR,EAAO,GAe3DuE,UAAUnX,EAAQ0P,EAAQkD,GACtB,MAAMQ,EAAO3d,KAAKie,SAAS,QACrB5J,EAAI,CACN,IACArU,KAAKuf,GAAGhV,EAAOzK,GAAKma,EACpBja,KAAKwf,GAAGjV,EAAOxK,GACf,IACAC,KAAKuf,GAAGhV,EAAOzK,GAAKma,EACpBja,KAAKwf,GAAGjV,EAAOxK,GACf,IACAC,KAAKuf,GAAGhV,EAAOzK,GACfE,KAAKwf,GAAGjV,EAAOxK,GAAKka,EACpB,IACAja,KAAKuf,GAAGhV,EAAOzK,GACfE,KAAKwf,GAAGjV,EAAOxK,GAAKka,GAGxB,OADA0D,EAAKY,aAAa,IAAKlK,EAAEjJ,KAAK,MACvBpL,KAAKqe,cAAcV,EAAM,YAAaR,EAAO,IAaxDwE,QAAQA,EAASxE,EAAOC,GACpB,OAAOpd,KAAK4hB,SAASD,EAAQ7V,SAAU6V,EAAQ3V,OAAQmR,EAAOC,GAclEwE,SAAS9V,EAAUE,EAAQmR,EAAOC,GAC9B,MAAMO,EAAO3d,KAAKie,SAAS,QAC3B,GAAuB,GAAnBnS,EAASxJ,OACT,OAAOqb,EAEX,MAAMtJ,EAAI,CAAC,IAAKrU,KAAKuf,GAAGzT,EAAS,GAAGhM,GAAIE,KAAKwf,GAAG1T,EAAS,GAAG/L,IAE5D,IADA,IAAIiC,EAAI8J,EAASxJ,OACRzC,EAAI,EAAGA,EAAImC,EAAGnC,IACnBwU,EAAE/S,KAAK,IAAKtB,KAAKuf,GAAGzT,EAASjM,GAAGC,GAAIE,KAAKwf,GAAG1T,EAASjM,GAAGE,IAK5D,OAHKiM,GACDqI,EAAE/S,KAAK,KACXqc,EAAKY,aAAa,IAAKlK,EAAEjJ,KAAK,MACvBpL,KAAKqe,cAAcV,EAAM,UAAWR,EAAOC,GAAa,GAqBnEyE,KAAKA,EAAM/hB,EAAGC,EAAGmL,GACb,IAAI4W,EAAIC,EAER,MAAM5E,GADNjS,EAAUA,GAAW,IACCiS,OAAS,QACzB6E,GAAqG,QAAtFD,EAAmC,QAA7BD,EAAK5W,EAAQ8W,kBAA+B,IAAPF,EAAgBA,EAAK5W,EAAQ+W,gBAA6B,IAAPF,EAAgBA,EAAK,GAAK/hB,KAAKqK,MAAMvK,EAGlJoiB,EAAkC,SAAtBhX,EAAQgX,WAA8C,UAAtBhX,EAAQgX,UACpD,QACsB,WAAtBhX,EAAQgX,UACJ,SACsB,UAAtBhX,EAAQgX,WAA+C,QAAtBhX,EAAQgX,UACrC,MACA,QACRC,EAAkB,GAAGniB,KAAKuf,GAAGzf,QAAQE,KAAKwf,GAAGzf,OAC7CwS,EAAY,aAAavS,KAAKuf,GAAGzf,MAAME,KAAKwf,GAAGzf,GAAKiiB,EAAa,KAKjExX,EAASU,EAAQ8V,SAAW,UAAU9V,EAAQ8V,SAAWnF,SAAoB,GAC7E8B,EAAO3d,KAAKie,SAAS,KACrBC,EAAQle,KAAKke,MACnBle,KAAKke,MAAQA,EAAQ,QACrB,MAAMkE,EAAWpiB,KAAKie,SAAS,QAc/B,OAbAN,EAAKd,YAAYuF,GACjBA,EAAS7D,aAAa,cAAerT,EAAQmX,YAC7CD,EAAS7D,aAAa,YAAarT,EAAQ+W,SAAW,GAAG/W,EAAQ+W,SAAWjiB,KAAKqK,MAAMvK,EAAM,MAC7FsiB,EAAS7D,aAAa,aAAcrT,EAAQoX,UAAY,GAAGpX,EAAQoX,YAAc,MACjFF,EAAS7D,aAAa,cAAerT,EAAQqX,WAAa,GAAGrX,EAAQqX,aAAe,MACpFH,EAAS7D,aAAa,cAAe2D,GACrCE,EAAS7D,aAAa,mBAAoB,OAC1C6D,EAAS7D,aAAa,YAAa/T,GACnCmT,EAAKY,aAAa,mBAAoB4D,GACtCxE,EAAKY,aAAa,YAAahM,GAC/B6P,EAAS/E,UAAYwE,EAErB7hB,KAAKke,MAAQA,EACNle,KAAKqe,cAAcV,EAAM,OAAQR,EAAO,GAenDqF,MAAMX,EAAM/hB,EAAGC,EAAGihB,EAAU7D,GACxB,MAAMQ,EAAO3d,KAAKie,SAAS,QAQ3B,OANAN,EAAKY,aAAa,YAAa,aAAaze,KAAKC,eAAgBihB,GAAY,GAAK3d,KAAK6G,GAAM,QAC7FyT,EAAKY,aAAa,cAAe,SACjCZ,EAAKY,aAAa,YAAa,OAC/BZ,EAAKY,aAAa,aAAc,UAChCZ,EAAKY,aAAa,cAAe,WACjCZ,EAAKN,UAAYwE,EACV7hB,KAAKqe,cAAcV,EAAM,QAASR,GAAS,QAAS,MAc/D7F,KAAKsE,EAAUuB,EAAOC,EAAWlS,GAC7B,MAAMyS,EAAO3d,KAAKie,SAAS,QAErB5J,EAAInJ,GAAWA,EAAQuX,QAAU7G,EAAWE,EAAa4G,aAAa9G,GAG5E,OAFAE,EAAa6G,kBAAkBtO,EAAGrU,KAAKgc,OAAQhc,KAAKqK,OACpDsT,EAAKY,aAAa,IAAKlK,EAAEjJ,KAAK,MACvBpL,KAAKqe,cAAcV,EAAM,OAAQR,EAAOC,GAanD4B,MAAM7B,GAGF,GAAInd,KAAKoc,YACL,OAWJpc,KAAKke,MAAQ,aACble,KAAKse,kBAAenF,EACpB,MAAMwE,EAAO3d,KAAKie,SAAS,QAG3BN,EAAKY,aAAa,IAAK,KACvBZ,EAAKY,aAAa,IAAK,KACvBZ,EAAKY,aAAa,QAAS,GAAGve,KAAKic,WAAW3N,SAC9CqP,EAAKY,aAAa,SAAU,GAAGve,KAAKic,WAAW1N,UAE/CvO,KAAKqe,cAAcV,EAAM3d,KAAKke,MAAO,KAAM,MAC3CP,EAAKY,aAAa,YAAyB,IAAVpB,EAAwB,OAASA,GAElEnd,KAAKke,WAAQ/E,EAOjBiG,sBACI,KAAOpf,KAAKsc,YAAYsG,WACpB5iB,KAAKsc,YAAYuG,YAAY7iB,KAAKsc,YAAYsG,WAWtD7c,mBACI,OAAOgY,SAASC,gBAAgB,6BAA8B,OAUlEjY,oBAAoBxF,GAChB,MAAMuiB,EAAO,IAAIlN,MAAMrV,EAAK+B,QAC5B,IAAK,IAAIzC,EAAI,EAAGmC,EAAIzB,EAAK+B,OAAQzC,EAAImC,EAAGnC,IACpCijB,EAAKjjB,GAAKU,EAAKV,GAEnB,OAAOijB,EAYX/c,yBAAyBxF,EAAMyb,EAAQ3R,GAEnC,MAAM0Y,EAAQ5W,IACV5L,EAAK4L,GAAS6P,EAAOlc,EAAIuK,EAAMvK,EAAI8T,OAAOrT,EAAK4L,KAE7C6W,EAAQ7W,IACV5L,EAAK4L,GAAS6P,EAAOjc,EAAIsK,EAAMtK,EAAI6T,OAAOrT,EAAK4L,KAG7C8W,EAAO9W,IACT5L,EAAK4L,GAAS9B,EAAMvK,EAAI8T,OAAOrT,EAAK4L,KAElC+W,EAAO/W,IACT5L,EAAK4L,GAAS9B,EAAMtK,EAAI6T,OAAOrT,EAAK4L,KAsBxC,IAPA,IAAItM,EAAI,EACJsjB,EAAY,CAAErjB,EAAG4I,IAAK3I,EAAG2I,KAEzB0a,EAAQjX,IACRgX,EAAUrjB,EAAI8T,OAAOrT,EAAK4L,IAC1BgX,EAAUpjB,EAAI6T,OAAOrT,EAAK4L,EAAQ,KAE/BtM,EAAIU,EAAK+B,QAAQ,CAEpB,OADY/B,EAAKV,IAEb,IAAK,IAEL,IAAK,IAEL,IAAK,IAEDkjB,EAAKljB,EAAI,GACTmjB,EAAKnjB,EAAI,GACTujB,EAAKvjB,EAAI,GACTA,GAAK,EACL,MACJ,IAAK,IAEL,IAAK,IAEL,IAAK,IAEDojB,EAAIpjB,EAAI,GACRqjB,EAAIrjB,EAAI,GACRujB,EAAKvjB,EAAI,GACTA,GAAK,EACL,MACJ,IAAK,IAEDkjB,EAAKljB,EAAI,GACTsjB,EAAUrjB,EAAI8T,OAAOrT,EAAKV,EAAI,IAC9BA,GAAK,EACL,MACJ,IAAK,IAEDojB,EAAIpjB,EAAI,GACRsjB,EAAUrjB,EAAI8T,OAAOrT,EAAKV,EAAI,IAC9BA,GAAK,EACL,MACJ,IAAK,IAEDmjB,EAAKnjB,EAAI,GACTsjB,EAAUpjB,EAAI6T,OAAOrT,EAAKV,EAAI,IAC9BA,GAAK,EACL,MACJ,IAAK,IAEDqjB,EAAIrjB,EAAI,GACRsjB,EAAUpjB,EAAI6T,OAAOrT,EAAKV,EAAI,IAC9BA,GAAK,EACL,MACJ,IAAK,IAEDkjB,EAAKljB,EAAI,GACTmjB,EAAKnjB,EAAI,GACTkjB,EAAKljB,EAAI,GACTmjB,EAAKnjB,EAAI,GACTkjB,EAAKljB,EAAI,GACTmjB,EAAKnjB,EAAI,GACTujB,EAAKvjB,EAAI,GACTA,GAAK,EACL,MACJ,IAAK,IAEDojB,EAAIpjB,EAAI,GACRqjB,EAAIrjB,EAAI,GACRojB,EAAIpjB,EAAI,GACRqjB,EAAIrjB,EAAI,GACRojB,EAAIpjB,EAAI,GACRqjB,EAAIrjB,EAAI,GACRujB,EAAKvjB,EAAI,GACTA,GAAK,EACL,MACJ,IAAK,IACL,IAAK,IAGDkjB,EAAKljB,EAAI,GACTmjB,EAAKnjB,EAAI,GACTkjB,EAAKljB,EAAI,GACTmjB,EAAKnjB,EAAI,GACTujB,EAAKvjB,EAAI,GACTA,GAAK,EACL,MACJ,IAAK,IACL,IAAK,IAGDojB,EAAIpjB,EAAI,GACRqjB,EAAIrjB,EAAI,GACRojB,EAAIpjB,EAAI,GACRqjB,EAAIrjB,EAAI,GACRujB,EAAKvjB,EAAI,GACTA,GAAK,EACL,MACJ,IAAK,IAMDojB,EAAIpjB,EAAI,GACRqjB,EAAIrjB,EAAI,GACRkjB,EAAKljB,EAAI,GACTmjB,EAAKnjB,EAAI,GACTujB,EAAKvjB,EAAI,IAEJwK,EAAMvK,EAAI,GAAKuK,EAAMtK,GAAK,GAAOsK,EAAMvK,GAAK,GAAKuK,EAAMtK,EAAI,KAC5DQ,EAAKV,EAAI,GAAKU,EAAKV,EAAI,GAAK,EAAI,GAEpCA,GAAK,EACL,MACJ,IAAK,IAEDojB,EAAIpjB,EAAI,GACRqjB,EAAIrjB,EAAI,GACRojB,EAAIpjB,EAAI,GACRqjB,EAAIrjB,EAAI,GACRujB,EAAKvjB,EAAI,GACTA,GAAK,EACL,MASJ,QACIA,OAKpBic,EAAauH,SAAW,CACpB,yDACA,kDACA,uEACA,IACFjY,KAAK,MCnqCA,MAAMkY,EASTpd,YAAYqd,EAASrH,GACjBlc,KAAKwjB,IAAMD,EACXvjB,KAAKgc,OAAS,IAAI1T,EAAO,EAAG,GAC5BtI,KAAKqK,MAAQ,IAAI/B,EAAO,EAAG,GAC3BtI,KAAKkc,WAAaA,EAMtB4C,eAAeC,IAafM,aAAaN,IAUbL,iBAAiBC,GACb3e,KAAKwjB,IAAIC,yBAA2B9E,EAAcR,UAUtDS,aAAapW,IAWbqW,oBAAoBtW,IAepB+G,KAAK7D,EAAIC,EAAIyR,EAAOC,GAChBpd,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,EAAI2L,EAAG3L,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAI0L,EAAG1L,EAAIC,KAAKqK,MAAMtK,GACvFC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,EAAI4L,EAAG5L,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAI2L,EAAG3L,EAAIC,KAAKqK,MAAMtK,GACvFC,KAAKwjB,IAAIK,YAAc1G,EACvBnd,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKwjB,IAAIM,SACT9jB,KAAKwjB,IAAIO,UAcbtE,MAAMhU,EAAIC,EAAIyR,EAAOC,GAIjBpd,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIG,YACT,IAAI7X,EAAWxD,EAAOiD,MAAMC,eAAeC,EAAIC,EALjC,EAK8C1L,KAAKqK,MAAMvK,EAAGE,KAAKqK,MAAMtK,GACrFC,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,EAAI2L,EAAG3L,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAI0L,EAAG1L,EAAIC,KAAKqK,MAAMtK,GACvF,IAAK,IAAIF,EAAI,EAAGA,EAAIiM,EAASxJ,OAAQzC,IACjCG,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,EAAIgM,EAASjM,GAAGC,EAAGE,KAAKgc,OAAOjc,EAAI+L,EAASjM,GAAGE,GAE/EC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,EAAIgM,EAAS,GAAGhM,EAAGE,KAAKgc,OAAOjc,EAAI+L,EAAS,GAAG/L,GAC3EC,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKgkB,YAAY7G,GACjBnd,KAAKwjB,IAAIO,UAebrE,MAAMA,EAAOC,EAAUC,GACdF,EAAMuE,UAAavE,EAAMI,eAI9B9f,KAAKwjB,IAAIE,OAGT1jB,KAAKwjB,IAAIU,UAAUxE,EAAO,EAAG,EAAGA,EAAMI,aAAe,EACrDJ,EAAMO,cAAgB,EACtBjgB,KAAKgc,OAAOlc,EAAI6f,EAAS7f,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAI4f,EAAS5f,EAAIC,KAAKqK,MAAMtK,EAAG6f,EAAK9f,EAAIE,KAAKqK,MAAMvK,EAAG8f,EAAK7f,EAAIC,KAAKqK,MAAMtK,GACjIC,KAAKwjB,IAAIO,WAWb9C,KAAKtB,EAAUrR,EAAOC,EAAQ4O,EAAOC,GACjCpd,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,EAAI6f,EAAS7f,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAI4f,EAAS5f,EAAIC,KAAKqK,MAAMtK,GACnGC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,GAAK6f,EAAS7f,EAAIwO,GAAStO,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAI4f,EAAS5f,EAAIC,KAAKqK,MAAMtK,GAC7GC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,GAAK6f,EAAS7f,EAAIwO,GAAStO,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,GAAK4f,EAAS5f,EAAIwO,GAAUvO,KAAKqK,MAAMtK,GACxHC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,EAAI6f,EAAS7f,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,GAAK4f,EAAS5f,EAAIwO,GAAUvO,KAAKqK,MAAMtK,GAE9GC,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKgkB,YAAY7G,GACjBnd,KAAKwjB,IAAIO,UAcbC,YAAY7G,GACJnd,KAAKkc,YACLlc,KAAKwjB,IAAIY,UAAYjH,EACrBnd,KAAKwjB,IAAIa,SAGTrkB,KAAKwjB,IAAIK,YAAc1G,EACvBnd,KAAKwjB,IAAIM,UAiBjBzD,YAAYnP,EAAYC,EAAUC,EAAmBC,EAAiB8L,EAAOC,GACrElM,aAAsBD,EACtBjR,KAAKqgB,YAAYnP,EAAWA,WAAYA,EAAWC,SAAUD,EAAWE,kBAAmBF,EAAWG,gBAAiB8L,EAAOC,IAIlIpd,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,EAAIoR,EAAWpR,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAImR,EAAWnR,EAAIC,KAAKqK,MAAMtK,GACvGC,KAAKwjB,IAAIc,cAActkB,KAAKgc,OAAOlc,EAAIsR,EAAkBtR,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIqR,EAAkBrR,EAAIC,KAAKqK,MAAMtK,EAAGC,KAAKgc,OAAOlc,EAAIuR,EAAgBvR,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIsR,EAAgBtR,EAAIC,KAAKqK,MAAMtK,EAAGC,KAAKgc,OAAOlc,EAAIqR,EAASrR,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIoR,EAASpR,EAAIC,KAAKqK,MAAMtK,GAEtTC,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKgkB,YAAY7G,GACjBnd,KAAKwjB,IAAIO,WAebQ,gBAAgBrT,EAAYsT,EAAcrT,EAAUgM,EAAOC,GAEvDpd,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,EAAIoR,EAAWpR,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAImR,EAAWnR,EAAIC,KAAKqK,MAAMtK,GACvGC,KAAKwjB,IAAIiB,iBAAiBzkB,KAAKgc,OAAOlc,EAAI0kB,EAAa1kB,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIykB,EAAazkB,EAAIC,KAAKqK,MAAMtK,EAAGC,KAAKgc,OAAOlc,EAAIqR,EAASrR,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIoR,EAASpR,EAAIC,KAAKqK,MAAMtK,GAC3MC,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKgkB,YAAY7G,GACjBnd,KAAKwjB,IAAIO,UAiBbzD,gBAAgBhJ,EAAM6F,EAAOC,GACzB,GAAK9F,GAAuB,GAAfA,EAAKhV,OAAlB,CAKA,IAAI6O,EACAC,EACAC,EAJJrR,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIG,YAIT3jB,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,EAAIwX,EAAK,GAAGxX,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIuX,EAAK,GAAGvX,EAAIC,KAAKqK,MAAMtK,GACjG,IAAK,IAAIF,EAAI,EAAGA,EAAIyX,EAAKhV,OAAQzC,GAAK,EAClCuR,EAAoBkG,EAAKzX,GACzBwR,EAAkBiG,EAAKzX,EAAI,GAC3BsR,EAAWmG,EAAKzX,EAAI,GACpBG,KAAKwjB,IAAIc,cAActkB,KAAKgc,OAAOlc,EAAIsR,EAAkBtR,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIqR,EAAkBrR,EAAIC,KAAKqK,MAAMtK,EAAGC,KAAKgc,OAAOlc,EAAIuR,EAAgBvR,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIsR,EAAgBtR,EAAIC,KAAKqK,MAAMtK,EAAGC,KAAKgc,OAAOlc,EAAIqR,EAASrR,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIoR,EAASpR,EAAIC,KAAKqK,MAAMtK,GAE1TC,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKgkB,YAAY7G,GACjBnd,KAAKwjB,IAAIO,WAcbxD,OAAOrP,EAAYC,GAGfnR,KAAKiQ,MAAMiB,EAAY,iBACvBlR,KAAKwgB,OAAOrP,EAAU,EAAG,uBAY7BsP,WAAWvP,EAAYC,GAEnBnR,KAAKsP,KAAK4B,EAAYC,EAAU,oBAYpCuP,IAAI7f,EAAGsc,GACHnd,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIrU,OAAO9L,KAAKyH,MAAM9K,KAAKgc,OAAOlc,EAAIE,KAAKqK,MAAMvK,EAAIe,EAAEf,GAAIuD,KAAKyH,MAAM9K,KAAKgc,OAAOjc,EAAIC,KAAKqK,MAAMtK,EAAIc,EAAEd,IAC5GC,KAAKwjB,IAAII,OAAOvgB,KAAKyH,MAAM9K,KAAKgc,OAAOlc,EAAIE,KAAKqK,MAAMvK,EAAIe,EAAEf,EAAI,GAAIuD,KAAKyH,MAAM9K,KAAKgc,OAAOjc,EAAIC,KAAKqK,MAAMtK,EAAIc,EAAEd,EAAI,IACpHC,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIpG,UAAY,EACrBpd,KAAKgkB,YAAY7G,GACjBnd,KAAKwjB,IAAIO,UAYb9T,MAAMpP,EAAGsc,GAELnd,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIkB,IAAI1kB,KAAKgc,OAAOlc,EAAIe,EAAEf,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIc,EAAEd,EAAIC,KAAKqK,MAAMtK,EAFrE,EAEgF,EAAG,EAAIsD,KAAK6G,IAAI,GAC7GlK,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIpG,UAAY,EACrBpd,KAAKgkB,YAAY7G,GAgBrBhD,OAAO5P,EAAQ0P,EAAQkD,EAAOC,GAC1Bpd,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAI3C,QAAQ7gB,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,EAAGka,EAASja,KAAKqK,MAAMvK,EAAGma,EAASja,KAAKqK,MAAMtK,EAAG,EAAK,EAAe,EAAVsD,KAAK6G,IAChKlK,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKgkB,YAAY7G,GAiBrBwD,UAAUpW,EAAQ0P,EAAQc,EAAYC,EAAUmC,EAAOC,EAAWlS,GACzDA,GAAYA,EAAQyZ,WACrB3kB,KAAKwjB,IAAIG,YAEb3jB,KAAKwjB,IAAI3C,QAAQ7gB,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,EAAGka,EAASja,KAAKqK,MAAMvK,EAAGma,EAASja,KAAKqK,MAAMtK,EAAG,EAAKgb,EAAYC,GAAU,GACvK9P,GAAYA,EAAQyZ,YAErB3kB,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKgkB,YAAY7G,GAAS,YAiBlC0D,QAAQtW,EAAQuW,EAASC,EAAS5D,EAAOC,EAAW4D,QACxB,IAAbA,IACPA,EAAW,GAEfhhB,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAI3C,QAAQ7gB,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,EAAG+gB,EAAU9gB,KAAKqK,MAAMvK,EAAGihB,EAAU/gB,KAAKqK,MAAMtK,EAAGihB,EAAU,EAAe,EAAV3d,KAAK6G,IACvKlK,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKgkB,YAAY7G,GAgBrBqD,OAAOjW,EAAQqV,EAAMzC,EAAOC,GACxBpd,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIvC,KAAKjhB,KAAKgc,OAAOlc,GAAKyK,EAAOzK,EAAI8f,EAAO,GAAO5f,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,GAAKwK,EAAOxK,EAAI6f,EAAO,GAAO5f,KAAKqK,MAAMtK,EAAG6f,EAAO5f,KAAKqK,MAAMvK,EAAG8f,EAAO5f,KAAKqK,MAAMtK,GACrKC,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKgkB,YAAY7G,GAgBrB+D,KAAK3W,EAAQ+D,EAAOC,EAAQ4S,EAAOC,EAAOjE,GACtCnd,KAAKwjB,IAAIG,YAGT,IAFA,IAAI/U,GAAQvL,KAAKge,KAAe,GAAT9S,EAAgB6S,GAASA,EAC5CvS,EAAON,EAAS,EACXzO,GAAKuD,KAAKge,KAAc,GAAR/S,EAAe6S,GAASA,EAAOrhB,EAAIwO,EAAQ,EAAGxO,GAAKqhB,EACxEnhB,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,GAAKyK,EAAOzK,EAAIA,GAAKE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,GAAKwK,EAAOxK,EAAI6O,GAAQ5O,KAAKqK,MAAMtK,GAC9GC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,GAAKyK,EAAOzK,EAAIA,GAAKE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,GAAKwK,EAAOxK,EAAI8O,GAAQ7O,KAAKqK,MAAMtK,GAIlH,IAFA,IAAI2O,GAAQrL,KAAKge,KAAc,GAAR/S,EAAe6S,GAASA,EAC3CxS,EAAOL,EAAQ,EACVvO,GAAKsD,KAAKge,KAAe,GAAT9S,EAAgB6S,GAASA,EAAOrhB,EAAIwO,EAAS,EAAGxO,GAAKqhB,EAC1EphB,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,GAAKyK,EAAOzK,EAAI4O,GAAQ1O,KAAKqK,MAAMvK,EAAI,EAAGE,KAAKgc,OAAOjc,GAAKwK,EAAOxK,EAAIA,GAAKC,KAAKqK,MAAMtK,GAClHC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,GAAKyK,EAAOzK,EAAI6O,GAAQ3O,KAAKqK,MAAMvK,EAAI,EAAGE,KAAKgc,OAAOjc,GAAKwK,EAAOxK,EAAIA,GAAKC,KAAKqK,MAAMtK,GAEtHC,KAAKwjB,IAAIK,YAAc1G,EACvBnd,KAAKwjB,IAAIpG,UAAY,EACrBpd,KAAKwjB,IAAIM,SACT9jB,KAAKwjB,IAAIW,YAkBb7C,OAAO/W,EAAQ+D,EAAOC,EAAQ4S,EAAOC,EAAOjE,GACxCnd,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIG,YACT,IAAK,IAAI7jB,GAAKuD,KAAKge,KAAc,GAAR/S,EAAe6S,GAASA,EAAOrhB,EAAIwO,EAAQ,EAAGxO,GAAKqhB,EACxE,IAAK,IAAIphB,GAAKsD,KAAKge,KAAe,GAAT9S,EAAgB6S,GAASA,EAAOrhB,EAAIwO,EAAS,EAAGxO,GAAKqhB,EAE1EphB,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,GAAKyK,EAAOzK,EAAIA,GAAKE,KAAKqK,MAAMvK,EAAI,EAAGE,KAAKgc,OAAOjc,GAAKwK,EAAOxK,EAAIA,GAAKC,KAAKqK,MAAMtK,GAC/GC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,GAAKyK,EAAOzK,EAAIA,GAAKE,KAAKqK,MAAMvK,EAAI,EAAGE,KAAKgc,OAAOjc,GAAKwK,EAAOxK,EAAIA,GAAKC,KAAKqK,MAAMtK,GAC/GC,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,GAAKyK,EAAOzK,EAAIA,GAAKE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,GAAKwK,EAAOxK,EAAIA,GAAKC,KAAKqK,MAAMtK,EAAI,GAC/GC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,GAAKyK,EAAOzK,EAAIA,GAAKE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,GAAKwK,EAAOxK,EAAIA,GAAKC,KAAKqK,MAAMtK,EAAI,GAGvHC,KAAKwjB,IAAIK,YAAc1G,EACvBnd,KAAKwjB,IAAIpG,UAAY,EACrBpd,KAAKwjB,IAAIM,SACT9jB,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIO,UAiBbxC,cAAchX,EAAQqV,EAAMzC,GACxBnd,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAI8f,EAAO,EAAK5f,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,GAC5GC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,EAAI6f,EAAO,GAC1G5f,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAI8f,EAAO,EAAK5f,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,GAC5GC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,EAAI6f,EAAO,GAC1G5f,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIpG,UAAY,EACrBpd,KAAKgkB,YAAY7G,GAiBrBqE,aAAajX,EAAQqV,EAAMzC,GACvBnd,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIvC,KAAKjhB,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAI8f,EAAO,EAAK5f,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,EAAI6f,EAAO,EAAKA,EAAMA,GAChI5f,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIpG,UAAY,EACrBpd,KAAKgkB,YAAY7G,GAiBrBsE,aAAalX,EAAQ0P,EAAQkD,GACzBlD,EAASA,GAAU,EACnBja,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIkB,IAAI1kB,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,EAAGka,EAAQ,EAAG,EAAI5W,KAAK6G,IAAI,GACvHlK,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIpG,UAAY,EACrBpd,KAAKgkB,YAAY7G,GAerBuE,UAAUnX,EAAQ0P,EAAQkD,GACtBnd,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAIma,EAAQja,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,GACxGC,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAIma,EAAQja,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,GACxGC,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,EAAIka,GACnGja,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,EAAIyK,EAAOzK,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAIwK,EAAOxK,EAAIC,KAAKqK,MAAMtK,EAAIka,GACnGja,KAAKwjB,IAAIK,YAAc1G,EACvBnd,KAAKwjB,IAAIpG,UAAY,GACrBpd,KAAKwjB,IAAIM,SACT9jB,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIO,UAabpC,QAAQA,EAASxE,EAAOC,GACpBpd,KAAK4hB,SAASD,EAAQ7V,SAAU6V,EAAQ3V,OAAQmR,EAAOC,GAc3DwE,SAAS9V,EAAUE,EAAQmR,EAAOC,GAC9B,KAAItR,EAASxJ,QAAU,GAAvB,CAEAtC,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIG,YACT3jB,KAAKwjB,IAAIpG,UAAYA,GAAa,EAClCpd,KAAKwjB,IAAIrU,OAAOnP,KAAKgc,OAAOlc,EAAIgM,EAAS,GAAGhM,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAI+L,EAAS,GAAG/L,EAAIC,KAAKqK,MAAMtK,GACzG,IAAK,IAAIF,EAAI,EAAGA,EAAIiM,EAASxJ,OAAQzC,IACjCG,KAAKwjB,IAAII,OAAO5jB,KAAKgc,OAAOlc,EAAIgM,EAASjM,GAAGC,EAAIE,KAAKqK,MAAMvK,EAAGE,KAAKgc,OAAOjc,EAAI+L,EAASjM,GAAGE,EAAIC,KAAKqK,MAAMtK,GAExGiM,GAEDhM,KAAKwjB,IAAIW,YACbnkB,KAAKgkB,YAAY7G,GACjBnd,KAAKwjB,IAAIW,YACTnkB,KAAKwjB,IAAIoB,YAAY,IACrB5kB,KAAKwjB,IAAIO,WAqBblC,KAAKA,EAAM/hB,EAAGC,EAAGmL,GAEb,IAAI4W,EAAIC,EAAI8C,EACZ3Z,EAAUA,GAAW,GACrBlL,KAAKwjB,IAAIE,OACT,IAAIoB,EAAO9kB,KAAKgc,OAAOlc,EAAIA,EAAIE,KAAKqK,MAAMvK,EACtCilB,EAAO/kB,KAAKgc,OAAOjc,EAAIA,EAAIC,KAAKqK,MAAMtK,EAC1C,MAAMod,EAAQjS,EAAQiS,OAAS,SAC3BjS,EAAQ+W,UAAY/W,EAAQmX,cAE5BriB,KAAKwjB,IAAIwB,MACJ9Z,EAAQqX,WAAarX,EAAQqX,WAAa,IAAM,KAC5CrX,EAAQoX,UAAYpX,EAAQoX,UAAY,IAAM,KAC9CpX,EAAQ+W,SAAW/W,EAAQ+W,SAAWjiB,KAAKqK,MAAMvK,EAAI,MAAQ,MAC7DoL,EAAQmX,YACkC,IAArCnX,EAAQmX,WAAW4C,QAAQ,KACvB/Z,EAAQmX,WACR,IAAInX,EAAQmX,cAChB,UAEdnX,EAAQgX,YACRliB,KAAKwjB,IAAItB,UAAYhX,EAAQgX,WAEjC,MAAMlB,EAAuC,QAA3Bc,EAAK5W,EAAQ8V,gBAA6B,IAAPc,EAAgBA,EAAK,EACpEE,GAAqG,QAAtF6C,EAAmC,QAA7B9C,EAAK7W,EAAQ8W,kBAA+B,IAAPD,EAAgBA,EAAK7W,EAAQ+W,gBAA6B,IAAP4C,EAAgBA,EAAK,GAAK7kB,KAAKqK,MAAMvK,EACxJE,KAAKwjB,IAAIjR,UAAUuS,EAAMC,GACzB/kB,KAAKwjB,IAAIhZ,OAAOwW,GACZhhB,KAAKkc,YACLlc,KAAKwjB,IAAIY,UAAYjH,EACrBnd,KAAKwjB,IAAI0B,SAASrD,EAAM,EAAGG,EAAa,KAGxChiB,KAAKwjB,IAAIK,YAAc1G,EACvBnd,KAAKwjB,IAAI2B,WAAWtD,EAAM,EAAGG,EAAa,IAI9ChiB,KAAKwjB,IAAIO,UAiBbvB,MAAMX,EAAM/hB,EAAGC,EAAGihB,EAAU7D,GACxBnd,KAAKwjB,IAAIE,OACT1jB,KAAKwjB,IAAIwB,KAAO,oBAChBhlB,KAAKwjB,IAAIjR,UAAUzS,EAAGC,QACE,IAAbihB,GACPhhB,KAAKwjB,IAAIhZ,OAAOwW,GACpBhhB,KAAKwjB,IAAIY,UAAYjH,GAAS,QAC1Bnd,KAAKkc,WACLlc,KAAKwjB,IAAI0B,SAASrD,EAAM,EAAG,GAG3B7hB,KAAKwjB,IAAI2B,WAAWtD,EAAM,EAAG,GAEjC7hB,KAAKwjB,IAAIO,UAebzM,KAAKsE,EAAUuB,EAAOC,EAAWlS,GAC7B,MAAMmJ,EAAInJ,GAAWA,EAAQuX,QAAU7G,EAAWE,EAAa4G,aAAa9G,GAC5EE,EAAa6G,kBAAkBtO,EAAGrU,KAAKgc,OAAQhc,KAAKqK,OACpDrK,KAAKwjB,IAAIK,YAAc1G,EACvBnd,KAAKwjB,IAAIpG,UAAYA,GAAa,EAC9Bpd,KAAKkc,YACLlc,KAAKwjB,IAAIY,UAAYjH,EACrBnd,KAAKwjB,IAAIa,KAAK,IAAIe,OAAO/Q,EAAEjJ,KAAK,SAGhCpL,KAAKwjB,IAAIK,YAAc1G,EACvBnd,KAAKwjB,IAAIM,OAAO,IAAIsB,OAAO/Q,EAAEjJ,KAAK,QAW1C4T,MAAM7B,GACFnd,KAAKwjB,IAAI6B,UAAU,EAAG,EAAGrlB,KAAKwjB,IAAI8B,OAAOhX,MAAOtO,KAAKwjB,IAAI8B,OAAO/W,QAChEvO,KAAKwjB,IAAIY,UAAYjH,EACrBnd,KAAKwjB,IAAI+B,SAAS,EAAG,EAAGvlB,KAAKwjB,IAAI8B,OAAOhX,MAAOtO,KAAKwjB,IAAI8B,OAAO/W,SCpyBhE,MAAMiX,EASTtf,YAAYqd,EAASrH,GACjBlc,KAAKylB,GAAKlC,EACVvjB,KAAKgc,OAAS,IAAI1T,EAAO,EAAG,GAC5BtI,KAAKqK,MAAQ,IAAI/B,EAAO,EAAG,GAC3BtI,KAAKkc,WAAaA,EAClBlc,KAAK0lB,QAAU,EACA,MAAXnC,QAAsC,IAAZA,IAE9BvjB,KAAK2lB,QAAU,IAAIC,EAAIrC,GAMvBvjB,KAAK6lB,YAAc7lB,KAAK2lB,QAAQG,cAAcN,EAAYO,SAAU/lB,KAAKylB,GAAGO,eAC5EhmB,KAAKimB,YAAcjmB,KAAK2lB,QAAQG,cAAcN,EAAYU,SAAUlmB,KAAKylB,GAAGU,iBAC5EnmB,KAAKomB,SAAWpmB,KAAK2lB,QAAQU,YAAYrmB,KAAK6lB,YAAa7lB,KAAKimB,aAEhEjmB,KAAKsmB,cAAgBtmB,KAAKylB,GAAGc,eAG7B5Z,QAAQC,IAAI,mBAEhB4Z,OAAO1mB,GACH,OAASE,KAAKqK,MAAMvK,EAAIA,EAAIE,KAAKgc,OAAOlc,GAAKE,KAAKylB,GAAGH,OAAOhX,MAAS,EAAM,EAE/EmY,OAAO1mB,GACH,OAASC,KAAKgc,OAAOjc,EAAIC,KAAKqK,MAAMtK,EAAIA,GAAKC,KAAKylB,GAAGH,OAAO/W,OAAU,EAAM,EAMhFkQ,aAAavC,GACT,IAAI4G,EAAO,IAAI0C,EAAY,KAAMtJ,GAMjC,OALA4G,EAAK2C,GAAKzlB,KAAKylB,GACf3C,EAAK6C,QAAU3lB,KAAK2lB,QACpB7C,EAAK+C,YAAc7lB,KAAK6lB,YACxB/C,EAAKmD,YAAcjmB,KAAKimB,YACxBnD,EAAKsD,SAAWpmB,KAAKomB,SACdtD,EAMXhE,eAAeC,GACX/e,KAAK0lB,QAAU,EACf1lB,KAAK+e,WAAaA,EAYtBM,aAAaN,IAUbL,iBAAiBC,IAWjBC,aAAapW,GAETxI,KAAKke,MAAQ1V,EAUjBqW,oBAAoBtW,IAcpB+G,KAAK7D,EAAIC,EAAIyR,GACT,MAAMrR,EAAW,IAAI4a,aAAa,GAClC5a,EAAS,GAAK9L,KAAKwmB,OAAO/a,EAAG3L,GAC7BgM,EAAS,GAAK9L,KAAKymB,OAAOhb,EAAG1L,GAC7B+L,EAAS,GAAK9L,KAAK0lB,QACnB5Z,EAAS,GAAK9L,KAAKwmB,OAAO9a,EAAG5L,GAC7BgM,EAAS,GAAK9L,KAAKymB,OAAO/a,EAAG3L,GAC7B+L,EAAS,GAAK9L,KAAK0lB,QACnB1lB,KAAK0lB,SAAW,KAIhB1lB,KAAKylB,GAAGkB,WAAW3mB,KAAKylB,GAAGmB,aAAc5mB,KAAKsmB,eAE9CtmB,KAAKylB,GAAGoB,WAAW7mB,KAAKylB,GAAGmB,aAAc9a,EAAU9L,KAAKylB,GAAGqB,aAI3D,IAAIC,EAAQ/mB,KAAKylB,GAAGuB,kBAAkBhnB,KAAKomB,SAAU,YAErDpmB,KAAKylB,GAAGwB,oBAAoBF,EAAO,EAAG/mB,KAAKylB,GAAGyB,OAAO,EAAO,EAAG,GAE/DlnB,KAAKylB,GAAG0B,wBAAwBJ,GAIhC/mB,KAAKylB,GAAG2B,SAAS,EAAG,EAAGpnB,KAAKylB,GAAGH,OAAOhX,MAAOtO,KAAKylB,GAAGH,OAAO/W,QAC5D,IAAI8Y,EAAkBrnB,KAAKylB,GAAG6B,mBAAmBtnB,KAAKomB,SAAU,mBAKhEpmB,KAAKylB,GAAG8B,WAAWF,EAHG,CAAC,EAAK,IAI5BrnB,KAAKylB,GAAGrI,UAAU,GAElBpd,KAAKylB,GAAG+B,WAAWxnB,KAAKylB,GAAGgC,MAAO,EAAG3b,EAASxJ,OAAS,GAe3Dmd,MAAMhU,EAAIC,EAAIyR,IAgBduC,MAAMA,EAAOC,EAAUC,IAcvBoE,YAAY7G,IAiBZkD,YAAYnP,EAAYC,EAAUC,EAAmBC,EAAiB8L,EAAOC,IAkB7EkD,gBAAgBhJ,EAAM6F,EAAOC,IAe7BmD,OAAOrP,EAAYC,IAanBsP,WAAWvP,EAAYC,IAavBuP,IAAI7f,EAAGsc,IAaPlN,MAAMpP,EAAGsc,IAiBThD,OAAO5P,EAAQ0P,EAAQkD,EAAOC,IAgB9BuD,UAAUpW,EAAQ0P,EAAQc,EAAYC,EAAUmC,EAAOC,IAiBvDyD,QAAQtW,EAAQuW,EAASC,EAAS5D,EAAOC,EAAW4D,IAiBpDR,OAAOjW,EAAQqV,EAAMzC,EAAOC,IAY5B6D,KAAKtB,EAAUrR,EAAOC,EAAQ4O,EAAOC,IAiBrC8D,KAAK3W,EAAQ+D,EAAOC,EAAQ4S,EAAOC,EAAOjE,IAmB1CmE,OAAO/W,EAAQ+D,EAAOC,EAAQ4S,EAAOC,EAAOjE,IAkB5CoE,cAAchX,EAAQqV,EAAMzC,IAkB5BqE,aAAajX,EAAQqV,EAAMzC,IAkB3BsE,aAAalX,EAAQqV,EAAMzC,IAgB3BuE,UAAUnX,EAAQ0P,EAAQkD,IAa1BwE,QAAQA,EAASxE,EAAOC,GACpB,MAAMtR,EAAW,IAAI4a,aAAuC,EAA1B/E,EAAQ7V,SAASxJ,QACnD,IAAK,IAAIzC,EAAI,EAAGA,EAAI8hB,EAAQ7V,SAASxJ,OAAQzC,IACzCiM,EAAa,EAAJjM,EAAQ,GAAKG,KAAKwmB,OAAO7E,EAAQ7V,SAASjM,GAAGC,GACtDgM,EAAa,EAAJjM,EAAQ,GAAKG,KAAKymB,OAAO9E,EAAQ7V,SAASjM,GAAGE,GACtD+L,EAAa,EAAJjM,EAAQ,GAAKG,KAAK0lB,QAE/B1lB,KAAK0lB,SAAW,KAKhB1lB,KAAKylB,GAAGkB,WAAW3mB,KAAKylB,GAAGmB,aAAc5mB,KAAKsmB,eAE9CtmB,KAAKylB,GAAGoB,WAAW7mB,KAAKylB,GAAGmB,aAAc9a,EAAU9L,KAAKylB,GAAGqB,aAI3D,IAAIC,EAAQ/mB,KAAKylB,GAAGuB,kBAAkBhnB,KAAKomB,SAAU,YAErDpmB,KAAKylB,GAAGwB,oBAAoBF,EAAO,EAAG/mB,KAAKylB,GAAGyB,OAAO,EAAO,EAAG,GAE/DlnB,KAAKylB,GAAG0B,wBAAwBJ,GAEhC/mB,KAAKylB,GAAGkB,WAAW3mB,KAAKylB,GAAGmB,aAAc,MAEzC5mB,KAAKylB,GAAG2B,SAAS,EAAG,EAAGpnB,KAAKylB,GAAGH,OAAOhX,MAAOtO,KAAKylB,GAAGH,OAAO/W,QAC5D,IAAI8Y,EAAkBrnB,KAAKylB,GAAG6B,mBAAmBtnB,KAAKomB,SAAU,mBAKhEpmB,KAAKylB,GAAG8B,WAAWF,EAHG,CAAC,EAAK,IAK5BrnB,KAAKylB,GAAG+B,WAAWxnB,KAAKylB,GAAGiC,aAAc,EAAG5b,EAASxJ,OAAS,GAgBlEsf,SAAS9V,EAAUE,EAAQmR,EAAOC,IAsBlCyE,KAAKA,EAAM/hB,EAAGC,EAAGmL,IAgBjBsX,MAAMX,EAAM/hB,EAAGC,EAAGihB,EAAU7D,IAe5B7F,KAAKsE,EAAUuB,EAAOC,EAAWlS,IAWjC8T,MAAM7B,GAKFnd,KAAKylB,GAAGkC,WAAW,EAAK,EAAK,EAAK,GAElC3nB,KAAKylB,GAAGmC,OAAO5nB,KAAKylB,GAAGoC,YAEvB7nB,KAAKylB,GAAGzG,MAAMhf,KAAKylB,GAAGqC,iBAAmB9nB,KAAKylB,GAAGsC,mBAIzDvC,EAAYO,SAAW,gYAkBvBP,EAAYU,SAAW,yGASvB,MAAMN,EACF1f,YAAYuf,GACRzlB,KAAKylB,GAAKA,EAEdoB,WAAWmB,GAEP,IAAIC,EAAUjoB,KAAKylB,GAAGc,eAOtB,OALAvmB,KAAKylB,GAAGkB,WAAW3mB,KAAKylB,GAAGmB,aAAcqB,GAEzCjoB,KAAKylB,GAAGoB,WAAW7mB,KAAKylB,GAAGmB,aAAcoB,EAAOhoB,KAAKylB,GAAGqB,aAExD9mB,KAAKylB,GAAGkB,WAAW3mB,KAAKylB,GAAGmB,aAAc,MAClCqB,EAGXnC,cAAcoC,EAAYC,GAEtB,IAAIC,EAASpoB,KAAKylB,GAAG4C,aAAaF,GAElCnoB,KAAKylB,GAAG6C,aAAaF,EAAQF,GAE7BloB,KAAKylB,GAAGK,cAAcsC,GAEtB,OADmBpoB,KAAKylB,GAAG8C,mBAAmBH,EAAQpoB,KAAKylB,GAAG+C,gBAMvDJ,GAJHzb,QAAQoK,KAAK,mBAAqB/W,KAAKylB,GAAGgD,iBAAiBL,IAC3DpoB,KAAKylB,GAAGiD,aAAaN,GACd,MAIf/B,YAAYsC,EAAYC,GAGpB,IAAIC,EAAU7oB,KAAKylB,GAAGqD,gBActB,OAZA9oB,KAAKylB,GAAGsD,aAAaF,EAASF,GAE9B3oB,KAAKylB,GAAGsD,aAAaF,EAASD,GAE9B5oB,KAAKylB,GAAGuD,YAAYH,GAEpB7oB,KAAKylB,GAAGwD,WAAWJ,GAEnB7oB,KAAKylB,GAAGyD,aAAaL,EAASF,GAC9B3oB,KAAKylB,GAAGyD,aAAaL,EAASD,GAC9B5oB,KAAKylB,GAAGiD,aAAaC,GACrB3oB,KAAKylB,GAAGiD,aAAaE,GACdC,GC/oBR,MAAMM,EAUTjjB,YAAY3E,EAAGC,EAAGC,GAIdzB,KAAKuI,UAAY,WACjBvI,KAAKwI,IAAM1C,EAAa5F,OACxBF,KAAKuB,EAAIA,EACTvB,KAAKwB,EAAIA,EACTxB,KAAKyB,EAAIA,EACTzB,KAAKopB,mBAcTrjB,iBAAiB4P,GACb,GAAIA,EAAIrT,OAAS,EACb,KAAM,oEAAoEqT,EAAIrT,UAClF,OAAO,IAAI6mB,EAASxT,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAe5C0T,UACI,OAAOhmB,KAAKC,IAAI6lB,EAAS5d,MAAMhM,WAAWS,KAAKuB,EAAEzB,EAAGE,KAAKuB,EAAExB,EAAGC,KAAKwB,EAAE1B,EAAGE,KAAKwB,EAAEzB,EAAGC,KAAKyB,EAAE3B,EAAGE,KAAKyB,EAAE1B,IAavGupB,cACI,OAAO,IAAIhhB,GAAQtI,KAAKuB,EAAEzB,EAAIE,KAAKwB,EAAE1B,EAAIE,KAAKyB,EAAE3B,GAAK,GAAIE,KAAKuB,EAAExB,EAAIC,KAAKwB,EAAEzB,EAAIC,KAAKyB,EAAE1B,GAAK,GAY/FwpB,gBAAgBjf,GACZ,IAAIkf,EAAWxpB,KAAKspB,cAIpB,OAHAtpB,KAAKuB,EAAE8I,MAAMC,EAAQkf,GACrBxpB,KAAKwB,EAAE6I,MAAMC,EAAQkf,GACrBxpB,KAAKyB,EAAE4I,MAAMC,EAAQkf,GACdxpB,KAkBXypB,kBAGI,OADAzpB,KAAKopB,mBACE,IAAIpP,EAAOha,KAAKuK,OAAOZ,QAAS3J,KAAKia,QAgBhDyP,WAAWC,GACP,IAAIpoB,EAAIvB,KAAKuB,EAAE1C,OAAO8qB,EAAIpoB,IAAMvB,KAAKuB,EAAE1C,OAAO8qB,EAAInoB,IAAMxB,KAAKuB,EAAE1C,OAAO8qB,EAAIloB,GACtED,EAAIxB,KAAKwB,EAAE3C,OAAO8qB,EAAIpoB,IAAMvB,KAAKwB,EAAE3C,OAAO8qB,EAAInoB,IAAMxB,KAAKwB,EAAE3C,OAAO8qB,EAAIloB,GACtEA,EAAIzB,KAAKyB,EAAE5C,OAAO8qB,EAAIpoB,IAAMvB,KAAKyB,EAAE5C,OAAO8qB,EAAInoB,IAAMxB,KAAKyB,EAAE5C,OAAO8qB,EAAIloB,GAC1E,OAAQF,GAAKC,GAAOD,GAAKE,GAAOD,GAAKC,EAczCmoB,eAAeC,EAAOC,GAClB,OAAI9pB,KAAKuB,EAAE1C,OAAOgrB,IAAU7pB,KAAKwB,EAAE3C,OAAOirB,IAAU9pB,KAAKuB,EAAE1C,OAAOirB,IAAU9pB,KAAKwB,EAAE3C,OAAOgrB,GAC/E7pB,KAAKyB,EACZzB,KAAKwB,EAAE3C,OAAOgrB,IAAU7pB,KAAKyB,EAAE5C,OAAOirB,IAAU9pB,KAAKwB,EAAE3C,OAAOirB,IAAU9pB,KAAKyB,EAAE5C,OAAOgrB,GAC/E7pB,KAAKuB,EAETvB,KAAKwB,EAehB4nB,mBAGI,MAAMW,EAAI/pB,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,EACtBkqB,EAAIhqB,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,EACtBkqB,EAAIjqB,KAAKyB,EAAE3B,EAAIE,KAAKuB,EAAEzB,EACtBoqB,EAAIlqB,KAAKyB,EAAE1B,EAAIC,KAAKuB,EAAExB,EACtBoqB,EAAIJ,GAAK/pB,KAAKuB,EAAEzB,EAAIE,KAAKwB,EAAE1B,GAAKkqB,GAAKhqB,KAAKuB,EAAExB,EAAIC,KAAKwB,EAAEzB,GACvDqqB,EAAIH,GAAKjqB,KAAKuB,EAAEzB,EAAIE,KAAKyB,EAAE3B,GAAKoqB,GAAKlqB,KAAKuB,EAAExB,EAAIC,KAAKyB,EAAE1B,GACvDsqB,EAAI,GAAON,GAAK/pB,KAAKyB,EAAE1B,EAAIC,KAAKwB,EAAEzB,GAAKiqB,GAAKhqB,KAAKyB,EAAE3B,EAAIE,KAAKwB,EAAE1B,IACpE,IAAIwqB,EAAIC,EACR,GAAIlnB,KAAKC,IAAI+mB,GAAKlB,EAAS1f,QAAS,CAEhC,MAAM+gB,EAASxqB,KAAKwqB,SACpBxqB,KAAKuK,OAAS,IAAIjC,GAAQkiB,EAAOvlB,IAAInF,EAAI0qB,EAAOxlB,IAAIlF,GAAK,GAAI0qB,EAAOvlB,IAAIlF,EAAIyqB,EAAOxlB,IAAIjF,GAAK,GAC5FuqB,EAAKtqB,KAAKuK,OAAOzK,EAAI0qB,EAAOvlB,IAAInF,EAChCyqB,EAAKvqB,KAAKuK,OAAOxK,EAAIyqB,EAAOvlB,IAAIlF,MAE/B,CACD,MAAMoE,GAAM+lB,EAAIC,EAAIH,EAAII,GAAKC,EACvBjmB,GAAM2lB,EAAIK,EAAIH,EAAIE,GAAKE,EAC7BrqB,KAAKuK,OAAS,IAAIjC,EAAOnE,EAAIC,GAC7BkmB,EAAKtqB,KAAKuK,OAAOzK,EAAIE,KAAKuB,EAAEzB,EAC5ByqB,EAAKvqB,KAAKuK,OAAOxK,EAAIC,KAAKuB,EAAExB,EAEhCC,KAAKyqB,eAAiBH,EAAKA,EAAKC,EAAKA,EACrCvqB,KAAKia,OAAS5W,KAAKyG,KAAK9J,KAAKyqB,gBAajCC,eAAera,GACX,MAAMia,EAAKtqB,KAAKuK,OAAOzK,EAAIuQ,EAAEvQ,EACvByqB,EAAKvqB,KAAKuK,OAAOxK,EAAIsQ,EAAEtQ,EAE7B,OADqBuqB,EAAKA,EAAKC,EAAKA,GACZvqB,KAAKyqB,eAWjCD,SACI,OAAO,IAAI1d,EAAO,IAAIxE,EAAO6gB,EAAS5d,MAAMof,KAAK3qB,KAAKuB,EAAEzB,EAAGE,KAAKwB,EAAE1B,EAAGE,KAAKyB,EAAE3B,GAAIqpB,EAAS5d,MAAMof,KAAK3qB,KAAKuB,EAAExB,EAAGC,KAAKwB,EAAEzB,EAAGC,KAAKyB,EAAE1B,IAAK,IAAIuI,EAAO6gB,EAAS5d,MAAMqf,KAAK5qB,KAAKuB,EAAEzB,EAAGE,KAAKwB,EAAE1B,EAAGE,KAAKyB,EAAE3B,GAAIqpB,EAAS5d,MAAMqf,KAAK5qB,KAAKuB,EAAExB,EAAGC,KAAKwB,EAAEzB,EAAGC,KAAKyB,EAAE1B,KAarPyO,YACI,OAAO,IAAIzC,EAAQ,CAAC/L,KAAKuB,EAAGvB,KAAKwB,EAAGxB,KAAKyB,IAW7CopB,cAEI,OAAQ7qB,KAAKwB,EAAEzB,EAAIC,KAAKuB,EAAExB,IAAMC,KAAKyB,EAAE3B,EAAIE,KAAKwB,EAAE1B,IAAME,KAAKyB,EAAE1B,EAAIC,KAAKwB,EAAEzB,IAAMC,KAAKwB,EAAE1B,EAAIE,KAAKuB,EAAEzB,GActGgrB,cAAcjqB,GACV,OAAOsoB,EAAS5d,MAAMwf,kBAAkBlqB,EAAEf,EAAGe,EAAEd,EAAGC,KAAKuB,EAAEzB,EAAGE,KAAKuB,EAAExB,EAAGC,KAAKwB,EAAE1B,EAAGE,KAAKwB,EAAEzB,EAAGC,KAAKyB,EAAE3B,EAAGE,KAAKyB,EAAE1B,GAQ/GirB,wBACI,MAAMC,EAAQ,IAAInR,EAAK9Z,KAAKuB,EAAGvB,KAAKwB,GAC9B0pB,EAAQ,IAAIpR,EAAK9Z,KAAKwB,EAAGxB,KAAKyB,GAC9B0pB,EAAQ,IAAIrR,EAAK9Z,KAAKyB,EAAGzB,KAAKuB,GAC9B6pB,EAAYC,EAAUC,WAAWtrB,KAAKwB,EAAGxB,KAAKuB,EAAGvB,KAAKyB,EAAG,GAAG,GAC5D8pB,EAAYF,EAAUC,WAAWtrB,KAAKyB,EAAGzB,KAAKwB,EAAGxB,KAAKuB,EAAG,GAAG,GAC5DuP,EAAesa,EAAUta,aAAaya,GAEtCC,EAAgBP,EAAM9a,gBAAgBW,GACtC2a,EAAgBP,EAAM/a,gBAAgBW,GACtC4a,EAAgBP,EAAMhb,gBAAgBW,GAC5C,OAAO,IAAIqY,EAASqC,EAAeC,EAAeC,GAWtDC,cACI,OAAO3rB,KAAKgrB,wBAAwBvB,kBAWxCmC,cAGI,OAFK5rB,KAAKuK,QAAWvK,KAAKia,QACtBja,KAAKopB,mBACFppB,KAAKuK,OAAOZ,QAWvBqB,WACI,MAAO,SAAWhL,KAAKuB,EAAEyJ,WAAa,SAAWhL,KAAKwB,EAAEwJ,WAAa,SAAWhL,KAAKyB,EAAEuJ,WAAa,IAaxGC,YAAYC,GACRA,EAAUA,GAAW,GACrB,IAAIC,EAAS,GACbA,EAAO7J,KAAK,SACR4J,EAAQ3C,WACR4C,EAAO7J,KAAK,WAAa4J,EAAQ3C,UAAY,KACjD4C,EAAO7J,KAAK,QACZ,IAAIwK,EAAW,CAAC9L,KAAKuB,EAAGvB,KAAKwB,EAAGxB,KAAKyB,GACrC,GAAIqK,EAASxJ,OAAS,EAAG,CACrB6I,EAAO7J,KAAK,MACZ6J,EAAO7J,KAAKwK,EAAS,GAAGhM,GACxBqL,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAKwK,EAAS,GAAG/L,GACxB,IAAK,IAAIF,EAAI,EAAGA,EAAIiM,EAASxJ,OAAQzC,IACjCsL,EAAO7J,KAAK,OACZ6J,EAAO7J,KAAKwK,EAASjM,GAAGC,GACxBqL,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAKwK,EAASjM,GAAGE,GAG5BoL,EAAO7J,KAAK,MAIhB,OADA6J,EAAO7J,KAAK,QACL6J,EAAOC,KAAK,KAU3B+d,EAAS1f,QAAU,KACnB0f,EAAS5d,MAAQ,CAEbqf,KAAI,CAACrpB,EAAGC,EAAGC,IACCF,GAAKC,GAAKD,GAAKE,EAAKF,EAAKC,GAAKD,GAAKC,GAAKC,EAAKD,EAAIC,EAE7DkpB,KAAI,CAACppB,EAAGC,EAAGC,IACCF,GAAKC,GAAKD,GAAKE,EAAKF,EAAKC,GAAKD,GAAKC,GAAKC,EAAKD,EAAIC,EAE7DlC,WAAU,CAACssB,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,IACzB,KAAQF,EAAMC,EAAMH,IAAQC,EAAME,GAAOJ,GAAOG,EAAME,GAAOH,EAAMG,GAO9EnB,kBAAkB1mB,EAAIC,EAAIunB,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAK/C,IAAIttB,EAAOuqB,EAAS5d,MAAMhM,WAAWssB,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC1DC,EAAI,GAAK,EAAIvtB,IAASktB,EAAMG,EAAMJ,EAAMK,GAAOA,EAAMJ,GAAOznB,GAAMwnB,EAAMI,GAAO3nB,GAC/EgJ,EAAI,GAAK,EAAI1O,IAASitB,EAAMG,EAAMF,EAAMC,GAAOD,EAAME,GAAO3nB,GAAM0nB,EAAMF,GAAOvnB,GACnF,OAAO6nB,EAAI,GAAK7e,EAAI,GAAM,EAAI6e,EAAI7e,EAAK,ICvaxC,MAAM+d,EAAY,CAYrBC,WAAWc,EAAIC,EAAIC,EAAItqB,GACnB,MAAMuqB,EAAW,IAAIpD,EAASiD,EAAIC,EAAIC,GAChCE,EAAS,IAAI1S,EAAKsS,EAAIC,GACtBI,EAAS,IAAI3S,EAAKsS,EAAIE,GAE5B,IAAII,EAAcF,EAAOxiB,MAAMyiB,GAG/B,MAAM9rB,EAAY4rB,EAAS1B,cAAgB,EAEvC6B,EAAc,IACdA,EAAc,EAAIrpB,KAAK6G,GAAKwiB,GAC3B/rB,IACD+rB,GAA8C,GAA/B,EAAIrpB,KAAK6G,GAAKwiB,IAEjC,MACMC,EADatpB,KAAK2B,IAAIwnB,EAAOlqB,SAAUmqB,EAAOnqB,UACnBkqB,EAAOlqB,SAExC,IADA,IAAI0Q,EAAS,GACJnT,EAAI,EAAGA,EAAImC,EAAGnC,IAEnBmT,EAAO1R,KAAK,IAAIwY,EAAKsS,EAAIC,EAAG1iB,QAAQa,OAAckiB,EAAc1qB,GAAnBnC,EAAwBusB,IAAK/hB,MAAMsiB,IAEpF,OAAO3Z,GAUX4Z,QAAO,CAAC9sB,EAAGkF,KAGCA,EAAOlF,EAAIkF,GAAQA,EAY/B6nB,WAAU,CAAC/sB,EAAGmF,EAAKD,IACRC,EAAMomB,EAAUuB,QAAQ9sB,EAAImF,EAAKD,EAAMC,ICpD/C,MAAM6nB,EAST5mB,YAAYqE,EAAQqV,GAChB5f,KAAKuK,OAASA,EACdvK,KAAK4f,KAAOA,GAOpBkN,EAAKvhB,MAAQ,CAeTwhB,QAAS,CAACC,EAAM9nB,IAAiB7B,KAAKuJ,IAAIogB,GAAQ3pB,KAAKuJ,IAAI1H,GAkB3D+nB,eAAgB,CAACC,EAAc7iB,KAC3B,IAAI8iB,EAAK,EAQT,OAPI9iB,GAAS,GACT8iB,EAAK9pB,KAAKC,IAAID,KAAK+pB,MAAM,EAAIN,EAAKvhB,MAAMwhB,QAAQG,EAAc7iB,KAC9D8iB,EAAK,EAAI9pB,KAAK0G,IAAImjB,EAAcC,IAGhCA,EAAK9pB,KAAKC,IAAID,KAAK+pB,MAAMN,EAAKvhB,MAAMwhB,QAAQ,EAAIG,EAAc,GAAK7iB,EAAQ,MAExE8iB,ICpDR,MAAME,EAUTnnB,YAAYgF,GACRlL,KAAKstB,cAAgB,GACrBttB,KAAKutB,eAAiB,GACtBvtB,KAAKwtB,YAAc,GACnBxtB,KAAKytB,UAAY,GACjBviB,EAAUA,GAAW,GACrBlL,KAAK0tB,QAAUxiB,EAAQwiB,QAAUxiB,EAAQwiB,QAAUC,WACnD3tB,KAAKstB,cAAgB,GACrBttB,KAAKutB,eAAiB,GACtBvtB,KAAKwtB,YAAc,GACnBxtB,KAAKytB,UAAY,GAIjBztB,KAAK4tB,aAAe1iB,EAAQ2iB,WAAY,EAExC7tB,KAAK8tB,mBASTC,UAAU5N,EAAOnY,GACb,IAAIgmB,GAAc,EAClB,IAAK,IAAInuB,KAAKmI,EAAW,CACrB,IAAIimB,EAAMjmB,EAAUnI,GAChBouB,EAAIC,SAAW/N,EAAM+N,UAEzBD,EAAIjnB,SAASmZ,GACb6N,GAAc,GAElB,OAAOA,EAeXG,cAAc3qB,EAAG4qB,IACTA,EAAQL,UAAUvqB,EAAG4qB,EAAQd,gBAAkBc,EAAQR,gBAEvDQ,EAAQX,UAAUjqB,EAAE0qB,SAAW,QAgBvCG,eAAe7qB,EAAG4qB,GACdA,EAAQL,UAAUvqB,EAAG4qB,EAAQb,gBAejCe,YAAY9qB,EAAG4qB,IACPA,EAAQL,UAAUvqB,EAAG4qB,EAAQZ,cAAgBY,EAAQR,sBAE9CQ,EAAQX,UAAUjqB,EAAE0qB,SAOnCnoB,gBAAgBI,GACZ,GAAkB,iBAAPA,EACP,OAAOA,EACX,GAAkB,iBAAPA,EACP,KAAM,iEAAmEA,EAC7E,GAAIknB,EAAWkB,UAAUpoB,GACrB,OAAOknB,EAAWkB,UAAUpoB,GAChC,KAAM,0CAA4CA,EAStD2nB,mBACI,IAAI/lB,EAAQ/H,KACZA,KAAK0tB,QAAQxN,iBAAiB,UAAWlgB,KAAKwuB,iBAAoBhrB,IAAQuE,EAAMomB,cAAc3qB,EAAGuE,KACjG/H,KAAK0tB,QAAQxN,iBAAiB,WAAYlgB,KAAKyuB,kBAAqBjrB,IAAQuE,EAAMsmB,eAAe7qB,EAAGuE,KACpG/H,KAAK0tB,QAAQxN,iBAAiB,QAASlgB,KAAK0uB,eAAkBlrB,IAAQuE,EAAMumB,YAAY9qB,EAAGuE,KAM/F4mB,mBACI3uB,KAAK0tB,QAAQkB,oBAAoB,UAAW5uB,KAAKwuB,kBACjDxuB,KAAK0tB,QAAQkB,oBAAoB,WAAY5uB,KAAKyuB,mBAClDzuB,KAAK0tB,QAAQkB,oBAAoB,QAAS5uB,KAAK0uB,gBAenDG,KAAK1oB,EAAKa,GAEN,OADAhH,KAAKstB,cAAchsB,KAAK,CAAE6E,IAAKA,EAAK+nB,QAASb,EAAWyB,SAAS3oB,GAAMa,SAAUA,IAC1EhH,KAeX+uB,MAAM5oB,EAAKa,GAEP,OADAhH,KAAKutB,eAAejsB,KAAK,CAAE6E,IAAKA,EAAK+nB,QAASb,EAAWyB,SAAS3oB,GAAMa,SAAUA,IAC3EhH,KAeXgvB,GAAG7oB,EAAKa,GAEJ,OADAhH,KAAKwtB,YAAYlsB,KAAK,CAAE6E,IAAKA,EAAK+nB,QAASb,EAAWyB,SAAS3oB,GAAMa,SAAUA,IACxEhH,KAQXivB,OAAO9oB,GACH,MAAkB,iBAAPA,IACAnG,KAAKytB,UAAUtnB,KAEfnG,KAAKytB,UAAUJ,EAAWyB,SAAS3oB,KAOtDknB,EAAWkB,UAAY,CACnB,MAAS,EACT,UAAa,EAEb,IAAO,EACP,MAAS,GACT,MAAS,GACT,MAAS,GACT,KAAQ,GACR,IAAO,GACP,MAAS,GAET,SAAY,GACZ,OAAU,GACV,MAAS,GACT,OAAU,GACV,WAAc,GACd,iBAAkB,GAClB,SAAY,GACZ,OAAU,GACV,SAAY,GACZ,IAAO,GACP,KAAQ,GACR,UAAa,GACb,QAAW,GACX,WAAc,GACd,UAAa,GACb,OAAU,GACV,MAAS,GACT,QAAW,GACX,YAAe,GACf,OAAU,GACV,OAAU,GACV,KAAQ,GACR,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,IAAK,GACL,sBAAuB,GACvB,OAAU,GACV,IAAK,GACL,mBAAoB,GACpB,EAAK,GACL,cAAe,GACf,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,GACL,QAAW,GACX,YAAe,GACf,iBAAoB,GACpB,eAAkB,GAClB,YAAe,GACf,aAAgB,GAChB,MAAS,GACT,QAAW,GACX,QAAW,GACX,QAAW,GACX,QAAW,GACX,QAAW,IACX,QAAW,IACX,QAAW,IACX,QAAW,IACX,QAAW,IACX,QAAW,IACX,SAAY,IACZ,IAAO,IACP,aAAgB,IAChB,SAAY,IACZ,aAAgB,IAChB,OAAU,IACV,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,QAAW,IACX,WAAc,IACd,IAAK,IACL,IAAK,IAEL,IAAK,IACL,EAAK,IACL,EAAK,IACL,aAAgB,IAChB,YAAe,IACf,QAAW,IACX,aAAgB,IAChB,IAAK,IACL,MAAO,IAEP,MAAS,IAGT,oBAAuB,IACvB,oBAAuB,IACvB,KAAQ,IACR,SAAY,IACZ,KAAQ,IACR,aAAc,IACd,MAAS,IACT,KAAQ,IACR,OAAU,IAGV,UAAa,IACb,EAAK,IACL,MAAS,IACT,MAAS,IACT,KAAQ,IACR,OAAU,IACV,aAAgB,IAChB,EAAK,IACL,eAAgB,IAEhB,EAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAEL,YAAe,IACf,UAAa,IACb,aAAgB,IAChB,EAAK,IACL,YAAe,IACf,EAAK,IACL,EAAK,IACL,IAAK,IAEL,MAAS,IAET,oBAAqB,IACrB,YAAe,IACf,SAAY,IACZ,aAAgB,IAChB,SAAY,IACZ,SAAY,IACZ,aAAc,IACd,aAAc,IACd,MAAS,IACT,eAAkB,IAClB,eAAkB,KC9Yf,MAAMW,UAAoBC,YAE1B,MAAMC,UAAoBC,YAQ1B,MAAMC,EA6DTppB,YAAYwnB,EAAS6B,GACjBvvB,KAAKwvB,kBAAerW,EACpBnZ,KAAKyvB,kBAAetW,EAGpBnZ,KAAK0vB,aAAe,EACpB1vB,KAAKgI,UAAY,GACjBhI,KAAK2vB,UAAY,GACjB3vB,KAAK4vB,SAAW,GAIhB5vB,KAAKuvB,KAAOA,EACZvvB,KAAK0tB,QAAUA,EACf1tB,KAAKwvB,aAAe,KACpBxvB,KAAKyvB,aAAe,KAEpBzvB,KAAK0vB,aAAe,EACpB1vB,KAAKgI,UAAY,GACjBhI,KAAK2vB,UAAY,GACjB3vB,KAAK4vB,SAAW,GAOhB,MAAM7nB,EAAQ/H,KACdA,KAAK4vB,SAAoB,UAAKpsB,IACtBuE,EAAMC,UAAU6nB,WAChB9nB,EAAMC,UAAU6nB,UAAU9nB,EAAM+nB,SAAStsB,EAAG,cAC5CuE,EAAM0nB,cAAgB1nB,EAAMC,UAAUpB,MACtCmB,EAAMC,UAAUpB,KAAKmB,EAAM+nB,SAAStsB,EAAG,SACvCuE,EAAMynB,eACNznB,EAAM0nB,aAAe1nB,EAAMgoB,OAAOvsB,KAE1CxD,KAAK4vB,SAAkB,QAAKpsB,IACpBuE,EAAMC,UAAUgoB,SAChBjoB,EAAMC,UAAUgoB,QAAQjoB,EAAM+nB,SAAStsB,EAAG,YAC9CuE,EAAM0nB,kBAAetW,EACrBpR,EAAMynB,kBAAerW,EACrBpR,EAAM2nB,aAAe,GAEzB1vB,KAAK4vB,SAAoB,UAAKpsB,IAC1BuE,EAAM0nB,aAAe1nB,EAAMgoB,OAAOvsB,GAClCuE,EAAMynB,aAAeznB,EAAMgoB,OAAOvsB,GAClCuE,EAAM2nB,YAAclsB,EAAEysB,OAClBloB,EAAMC,UAAUkoB,WAChBnoB,EAAMC,UAAUkoB,UAAUnoB,EAAM+nB,SAAStsB,EAAG,eAEpDxD,KAAK4vB,SAAgB,MAAKpsB,IAClBuE,EAAMC,UAAUrB,OAChBoB,EAAMC,UAAUrB,MAAMoB,EAAM+nB,SAAStsB,EAAG,WAEhDxD,KAAK4vB,SAAgB,MAAKpsB,IAClBuE,EAAMC,UAAUmoB,OAChBpoB,EAAMC,UAAUmoB,MAAMpoB,EAAM+nB,SAAStsB,EAAG,WAEhDxD,KAAK0tB,QAAQxN,iBAAiB,YAAalgB,KAAK4vB,SAAoB,WACpE5vB,KAAK0tB,QAAQxN,iBAAiB,UAAWlgB,KAAK4vB,SAAkB,SAChE5vB,KAAK0tB,QAAQxN,iBAAiB,YAAalgB,KAAK4vB,SAAoB,WACpE5vB,KAAK0tB,QAAQxN,iBAAiB,QAASlgB,KAAK4vB,SAAgB,OAC5D5vB,KAAK0tB,QAAQxN,iBAAiB,QAASlgB,KAAK4vB,SAAgB,OAYhEG,OAAOvsB,GACH,MAAO,CAAE1D,EAAG0D,EAAE4sB,QACVrwB,EAAGyD,EAAE6sB,SAebP,SAAStsB,EAAG8sB,GACR,MAAMC,EAAMvwB,KAAK+vB,OAAOvsB,GAClBgtB,EAAShtB,EAef,OAdAgtB,EAAOtoB,OAAS,CACZwlB,QAAS1tB,KAAK0tB,QACd6B,KAAMe,EACNG,cAAc,EACdC,IAAKH,EACLN,OAAQjwB,KAAK0vB,YACbiB,WAAgC,GAApB3wB,KAAK0vB,YACjBkB,aAAkC,GAApB5wB,KAAK0vB,YACnBmB,YAAiC,GAApB7wB,KAAK0vB,YAClBF,aAAcxvB,KAAKwvB,aACnBsB,YAAa9wB,KAAKyvB,aAClBsB,WAAkC,MAArB/wB,KAAKwvB,eAAyBxvB,KAAKwvB,aAAa1vB,GAAKywB,EAAIzwB,GAAKE,KAAKwvB,aAAazvB,GAAKwwB,EAAIxwB,GACtGixB,WAAkC,MAArBhxB,KAAKwvB,aAAuB,CAAE1vB,EAAGywB,EAAIzwB,EAAIE,KAAKyvB,aAAa3vB,EAAGC,EAAGwwB,EAAIxwB,EAAIC,KAAKyvB,aAAa1vB,GAAM,CAAED,EAAG,EAAGC,EAAG,IAEtHywB,EAaXS,UAAUX,GACFtwB,KAAK2vB,UAAUW,KAGnBtwB,KAAK2vB,UAAUW,IAAa,GAYhCY,YAAYZ,GACHtwB,KAAK2vB,UAAUW,WAGbtwB,KAAK2vB,UAAUW,GAc1B1pB,KAAKuqB,GAOD,OANInxB,KAAKgI,UAAUpB,MACf5G,KAAKoxB,sBAAsB,QAC/BpxB,KAAKgI,UAAUpB,KAAOuqB,EACtBnxB,KAAKixB,UAAU,aACfjxB,KAAKixB,UAAU,aACfjxB,KAAKixB,UAAU,WACRjxB,KAeXoM,KAAK+kB,GAKD,OAJInxB,KAAKgI,UAAU6nB,WACf7vB,KAAKoxB,sBAAsB,aAC/BpxB,KAAKixB,UAAU,aACfjxB,KAAKgI,UAAU6nB,UAAYsB,EACpBnxB,KAeXgvB,GAAGmC,GAKC,OAJInxB,KAAKgI,UAAUgoB,SACfhwB,KAAKoxB,sBAAsB,WAC/BpxB,KAAKixB,UAAU,WACfjxB,KAAKgI,UAAUgoB,QAAUmB,EAClBnxB,KAeX6uB,KAAKsC,GAKD,OAJInxB,KAAKgI,UAAUkoB,WACflwB,KAAKoxB,sBAAsB,aAC/BpxB,KAAKixB,UAAU,aACfjxB,KAAKgI,UAAUkoB,UAAYiB,EACpBnxB,KAeX2G,MAAMwqB,GAKF,OAJInxB,KAAKgI,UAAUrB,OACf3G,KAAKoxB,sBAAsB,SAC/BpxB,KAAKixB,UAAU,SACfjxB,KAAKgI,UAAUrB,MAAQwqB,EAChBnxB,KAeXmwB,MAAMgB,GAKF,OAJInxB,KAAKgI,UAAUmoB,OACfnwB,KAAKoxB,sBAAsB,SAC/BpxB,KAAKixB,UAAU,SACfjxB,KAAKgI,UAAUmoB,MAAQgB,EAChBnxB,KAaXoxB,sBAAsB7B,GAClB,KAAM,oCAAoCA,mEAc9C8B,UACIrxB,KAAKkxB,YAAY,aACjBlxB,KAAKkxB,YAAY,aACjBlxB,KAAKkxB,YAAY,UACjBlxB,KAAKkxB,YAAY,SACjBlxB,KAAKkxB,YAAY,SACjBlxB,KAAK0tB,QAAQkB,oBAAoB,YAAa5uB,KAAK4vB,SAAoB,WACvE5vB,KAAK0tB,QAAQkB,oBAAoB,UAAW5uB,KAAK4vB,SAAoB,WACrE5vB,KAAK0tB,QAAQkB,oBAAoB,YAAa5uB,KAAK4vB,SAAoB,WACvE5vB,KAAK0tB,QAAQkB,oBAAoB,QAAS5uB,KAAK4vB,SAAgB,OAC/D5vB,KAAK0tB,QAAQkB,oBAAoB,QAAS5uB,KAAK4vB,SAAgB,QCrXhE,MAAM0B,EAUTprB,YAAYwZ,EAAO6R,EAAWC,GAI1BxxB,KAAKuI,UAAY,UACjBvI,KAAKwI,IAAM1C,EAAa5F,OACxBF,KAAK0f,MAAQA,EACb1f,KAAKuxB,UAAYA,EACjBvxB,KAAKwxB,WAAaA,EAatBvmB,YAAYC,GAER,OADAyB,QAAQoK,KAAK,oEACN,ICpCR,MAAM0a,EASTvrB,YAAY2b,EAAMlL,EAAQzL,GAItBlL,KAAKuI,UAAY,SACjBvI,KAAKwI,IAAM1C,EAAa5F,OACxBF,KAAK6hB,KAAOA,EACZ7hB,KAAK2W,OAASA,MAAAA,EAAuCA,EAAS,IAAIrO,EAClEtI,KAAKmd,MAAQjS,EAAQiS,MACrBnd,KAAKqiB,WAAanX,EAAQmX,WAC1BriB,KAAKiiB,SAAW/W,EAAQ+W,SACxBjiB,KAAKsiB,UAAYpX,EAAQoX,UACzBtiB,KAAKuiB,WAAarX,EAAQqX,WAC1BviB,KAAKgiB,WAAa9W,EAAQ8W,WAC1BhiB,KAAKkiB,UAAYhX,EAAQgX,UACzBliB,KAAKghB,SAAW9V,EAAQ8V,SAY5B/V,YAAYC,GAER,OADAyB,QAAQoK,KAAK,4IACN,IC1Cf,MAAM2a,EAAUrhB,GACLhN,KAAKyG,KAAKuG,EAAEvQ,EAAIuQ,EAAEvQ,EAAIuQ,EAAEtQ,EAAIsQ,EAAEtQ,GA6CnC4xB,EAAiB,CAACniB,EAAIoiB,KACxB,IAAI5nB,EA3BS,EAACwF,EAAIoiB,KAClB,MAAMC,EAAKH,EAAOliB,GAAMkiB,EAAOE,GAC/B,GAAW,IAAPC,EACA,OAAO,EACX,IAAIttB,EAdI,EAACiL,EAAIoiB,IACNpiB,EAAG1P,EAAI8xB,EAAG9xB,EAAI0P,EAAGzP,EAAI6xB,EAAG7xB,EAavB2gB,CAAIlR,EAAIoiB,GAAMC,EAGtB,OAFIttB,EAAI,IACJA,EAAI,GACDlB,KAAKyuB,KAAKvtB,IAoBLwtB,CAASviB,EAAIoiB,GAIzB,MAfU,EAACpiB,EAAIoiB,IACRpiB,EAAG1P,EAAI8xB,EAAG7xB,EAAI6xB,EAAG9xB,EAAI0P,EAAGzP,EAW3BiyB,CAAMxiB,EAAIoiB,GAAM,IAChB5nB,IAAU,GAEC,IAARA,EAAc3G,KAAK6G,IAK9B,MAAM+nB,EACF/rB,YAAYgsB,GACRlyB,KAAK4vB,SAAW,GAChB5vB,KAAKkyB,GAAKA,EAGdjpB,IAAImlB,GACApuB,KAAK4vB,SAAStuB,KAAK8sB,GAGvB+D,IAAI/D,GACKA,IACDpuB,KAAK4vB,SAAW,IACpB,IAAK,IAAI/vB,EAAIG,KAAK4vB,SAASttB,OAAQzC,GAAK,EAAGA,IACnCG,KAAK4vB,SAAS/vB,KAAOuuB,GACrBpuB,KAAK4vB,SAASvnB,OAAOxI,EAAG,GAKpCuyB,YAAYC,GACR,IAAK,IAAIxyB,EAAI,EAAGwC,EAAMrC,KAAK4vB,SAASttB,OAAQzC,EAAIwC,EAAKxC,IAAK,CACtD,MAAMuuB,EAAUpuB,KAAK4vB,SAAS/vB,GACP,mBAAZuuB,GACPA,EAAQkE,MAAMtyB,KAAKkyB,GAAIK,aASvC,MAAMC,EAAW,CAACN,EAAI9D,KAClB,MAAMqE,EAAe,IAAIR,EAAaC,GAEtC,OADAO,EAAaxpB,IAAImlB,GACVqE,GAMJ,MAAMC,EACTxsB,YAAYgsB,EAAIS,GACZ3yB,KAAK0tB,QAAuB,iBAANwE,EAAiBnU,SAAS6U,cAAcV,GAAMA,EAGpElyB,KAAKQ,MAAQR,KAAKQ,MAAMqyB,KAAK7yB,MAC7BA,KAAKoM,KAAOpM,KAAKoM,KAAKymB,KAAK7yB,MAC3BA,KAAKS,IAAMT,KAAKS,IAAIoyB,KAAK7yB,MACzBA,KAAK8yB,OAAS9yB,KAAK8yB,OAAOD,KAAK7yB,MAC/BA,KAAK0tB,QAAQxN,iBAAiB,aAAclgB,KAAKQ,OAAO,GACxDR,KAAK0tB,QAAQxN,iBAAiB,YAAalgB,KAAKoM,MAAM,GACtDpM,KAAK0tB,QAAQxN,iBAAiB,WAAYlgB,KAAKS,KAAK,GACpDT,KAAK0tB,QAAQxN,iBAAiB,cAAelgB,KAAK8yB,QAAQ,GAC1D9yB,KAAK+yB,KAAO,CAAEjzB,EAAG,KAAMC,EAAG,MAC1BC,KAAKgzB,cAAgB,KACrBhzB,KAAKizB,KAAO,EACZjzB,KAAKkzB,aAAc,EACnB,MAAMC,EAAO,OACbnzB,KAAKwK,OAASgoB,EAASxyB,KAAK0tB,QAASiF,EAAOnoB,QAAU2oB,GACtDnzB,KAAKozB,WAAaZ,EAASxyB,KAAK0tB,QAASiF,EAAOS,YAAcD,GAC9DnzB,KAAKqzB,gBAAkBb,EAASxyB,KAAK0tB,QAASiF,EAAOU,iBAAmBF,GACxEnzB,KAAKszB,cAAgBd,EAASxyB,KAAK0tB,QAASiF,EAAOW,eAAiBH,GACpEnzB,KAAKuzB,MAAQf,EAASxyB,KAAK0tB,QAASiF,EAAOY,OAASJ,GACpDnzB,KAAKwzB,MAAQhB,EAASxyB,KAAK0tB,QAASiF,EAAOa,OAASL,GACpDnzB,KAAKyzB,IAAMjB,EAASxyB,KAAK0tB,QAASiF,EAAOc,KAAON,GAChDnzB,KAAK0zB,UAAYlB,EAASxyB,KAAK0tB,QAASiF,EAAOe,WAAaP,GAC5DnzB,KAAK2zB,QAAUnB,EAASxyB,KAAK0tB,QAASiF,EAAOgB,SAAWR,GACxDnzB,KAAK4zB,UAAYpB,EAASxyB,KAAK0tB,QAASiF,EAAOiB,WAAaT,GAC5DnzB,KAAK6zB,UAAYrB,EAASxyB,KAAK0tB,QAASiF,EAAOkB,WAAaV,GAC5DnzB,KAAK8zB,mBAAqBtB,EAASxyB,KAAK0tB,QAASiF,EAAOmB,oBAAsBX,GAC9EnzB,KAAK+zB,UAAYvB,EAASxyB,KAAK0tB,QAASiF,EAAOoB,WAAaZ,GAC5DnzB,KAAKg0B,SAAWxB,EAASxyB,KAAK0tB,QAASiF,EAAOqB,UAAYb,GAC1DnzB,KAAKi0B,YAAczB,EAASxyB,KAAK0tB,QAASiF,EAAOsB,aAAed,GAChEnzB,KAAKk0B,kBAAoBl0B,KAAKm0B,UAAUtB,KAAK7yB,MACzC2tB,YAAqD,mBAAhCA,WAAWzN,kBAChCyN,WAAWzN,iBAAiB,SAAUlgB,KAAKk0B,mBAE/Cl0B,KAAKo0B,MAAQ,KACbp0B,KAAKY,KAAO,KACZZ,KAAKq0B,IAAM,KACXr0B,KAAKs0B,WAAa,KAClBt0B,KAAKu0B,iBAAmB,KACxBv0B,KAAKw0B,eAAiB,KACtBx0B,KAAKy0B,aAAe,KACpBz0B,KAAK00B,GAAK10B,KAAK20B,GAAK30B,KAAK40B,GAAK50B,KAAK60B,GAAK,KACxC70B,KAAK80B,eAAiB,CAAEh1B,EAAG,KAAMC,EAAG,MAGxCS,MAAMu0B,GACF,IAAKA,EAAIC,QACL,OACJ,MAAMjtB,EAAQ/H,KACdA,KAAKq0B,IAAMY,KAAKZ,MAChBr0B,KAAK00B,GAAKK,EAAIC,QAAQ,GAAGE,MACzBl1B,KAAK40B,GAAKG,EAAIC,QAAQ,GAAGG,MACzBn1B,KAAKo0B,MAAQp0B,KAAKq0B,KAAOr0B,KAAKY,MAAQZ,KAAKq0B,KAC3Cr0B,KAAKozB,WAAWhB,SAAS2C,EAAK/0B,KAAK0tB,SACL,OAA1B1tB,KAAK80B,eAAeh1B,IACpBE,KAAKkzB,YAAelzB,KAAKo0B,MAAQ,GAAKp0B,KAAKo0B,OAAS,KAAO/wB,KAAKC,IAAItD,KAAK80B,eAAeh1B,EAAIE,KAAK00B,IAAM,IAAMrxB,KAAKC,IAAItD,KAAK80B,eAAe/0B,EAAIC,KAAK40B,IAAM,GACrJ50B,KAAKkzB,aACLkC,aAAap1B,KAAKu0B,mBAE1Bv0B,KAAK80B,eAAeh1B,EAAIE,KAAK00B,GAC7B10B,KAAK80B,eAAe/0B,EAAIC,KAAK40B,GAC7B50B,KAAKY,KAAOZ,KAAKq0B,IACjB,MAAMtB,EAAO/yB,KAAK+yB,KAElB,GADYgC,EAAIC,QAAQ1yB,OACd,EAAG,CACTtC,KAAKq1B,iBACLr1B,KAAKs1B,mBACL,MAAMjlB,EAAI,CAAEvQ,EAAGi1B,EAAIC,QAAQ,GAAGE,MAAQl1B,KAAK00B,GAAI30B,EAAGg1B,EAAIC,QAAQ,GAAGG,MAAQn1B,KAAK40B,IAC9E7B,EAAKjzB,EAAIuQ,EAAEvQ,EACXizB,EAAKhzB,EAAIsQ,EAAEtQ,EACXC,KAAKgzB,cAAgBtB,EAAOqB,GAC5B/yB,KAAKqzB,gBAAgBjB,SAAS2C,EAAK/0B,KAAK0tB,SAE5C1tB,KAAKu1B,aAAc,EACnBv1B,KAAKw0B,eAAiBgB,YAAW,KAC7BztB,EAAM4rB,QAAQvB,SAAS2C,EAAKhtB,EAAM2lB,SAClC3lB,EAAMwtB,aAAc,IACrB1C,KAAK9qB,GAAQ,KAGpBqE,KAAK+T,GACD,IAAKA,EAAM6U,QACP,OACJ,MAAMS,EAAUtV,EACV4S,EAAO/yB,KAAK+yB,KACZ1wB,EAAM8d,EAAM6U,QAAQ1yB,OACpBozB,EAAWvV,EAAM6U,QAAQ,GAAGE,MAC5BS,EAAWxV,EAAM6U,QAAQ,GAAGG,MAElC,GADAn1B,KAAKkzB,aAAc,EACf7wB,EAAM,EAAG,CACT,MAAMuzB,EAAYH,EAAQT,QAAQ,GAAGE,MAC/BW,EAAYJ,EAAQT,QAAQ,GAAGG,MAC/B9kB,EAAI,CAAEvQ,EAAG21B,EAAQT,QAAQ,GAAGE,MAAQQ,EAAU31B,EAAG01B,EAAQT,QAAQ,GAAGG,MAAQQ,GACnE,OAAX5C,EAAKjzB,IACDE,KAAKgzB,cAAgB,IACrByC,EAAQxC,KAAOvB,EAAOrhB,GAAKrQ,KAAKgzB,cAChChzB,KAAKuzB,MAAMnB,SAASqD,EAASz1B,KAAK0tB,UAEtC+H,EAAQzrB,MAAQ2nB,EAAethB,EAAG0iB,GAClC/yB,KAAKwK,OAAO4nB,SAASqD,EAASz1B,KAAK0tB,UAEvCqF,EAAKjzB,EAAIuQ,EAAEvQ,EACXizB,EAAKhzB,EAAIsQ,EAAEtQ,EACK,OAAZC,KAAK20B,IAA4B,OAAb30B,KAAK81B,KACzBL,EAAQM,QAAUL,EAAW11B,KAAK20B,GAAKiB,EAAY51B,KAAK81B,KAAO,EAC/DL,EAAQO,QAAUL,EAAW31B,KAAK60B,GAAKgB,EAAY71B,KAAKi2B,KAAO,IAG/DR,EAAQM,OAAS,EACjBN,EAAQO,OAAS,GAErBh2B,KAAK8zB,mBAAmB1B,SAASqD,EAASz1B,KAAK0tB,SAC/C1tB,KAAK81B,IAAMF,EACX51B,KAAKi2B,IAAMJ,MAEV,CACD,GAAgB,OAAZ71B,KAAK20B,GAAa,CAClBc,EAAQM,OAASL,EAAW11B,KAAK20B,GACjCc,EAAQO,OAASL,EAAW31B,KAAK60B,GAQjC,MAAMqB,EAAS7yB,KAAKC,IAAItD,KAAK00B,GAAK10B,KAAK20B,IACjCwB,EAAS9yB,KAAKC,IAAItD,KAAK40B,GAAK50B,KAAK60B,KACnCqB,EAAS,IAAMC,EAAS,MACxBn2B,KAAKu1B,aAAc,QAIvBE,EAAQM,OAAS,EACjBN,EAAQO,OAAS,EAErBh2B,KAAK6zB,UAAUzB,SAASqD,EAASz1B,KAAK0tB,SAE1C1tB,KAAK+zB,UAAU3B,SAASqD,EAASz1B,KAAK0tB,SACtC1tB,KAAKq1B,iBACLr1B,KAAK20B,GAAKe,EACV11B,KAAK60B,GAAKc,EACNtzB,EAAM,GACN8d,EAAMiW,iBAId31B,IAAI0f,GACA,IAAKA,EAAMkW,eACP,OACJ,MAAMZ,EAAUtV,EAChBngB,KAAKq1B,iBACL,MAAMiB,EAAOt2B,KACTy1B,EAAQT,QAAQ1yB,OAAS,IACzBtC,KAAKszB,cAAclB,SAASqD,EAASz1B,KAAK0tB,SAC1C1tB,KAAK81B,IAAM91B,KAAKi2B,IAAM,MAGrBj2B,KAAK20B,IAAMtxB,KAAKC,IAAItD,KAAK00B,GAAK10B,KAAK20B,IAAM,IACzC30B,KAAK60B,IAAMxxB,KAAKC,IAAItD,KAAK40B,GAAK50B,KAAK60B,IAAM,IAC1CY,EAAQc,UAAYv2B,KAAKw2B,gBAAgBx2B,KAAK00B,GAAI10B,KAAK20B,GAAI30B,KAAK40B,GAAI50B,KAAK60B,IACzE70B,KAAKy0B,aAAee,YAAW,WAC3Bc,EAAK9C,MAAMpB,SAASqD,EAASa,EAAK5I,WACnC,KAGH1tB,KAAKs0B,WAAakB,YAAW,WACpBc,EAAKf,aACNe,EAAK7C,IAAIrB,SAASqD,EAASa,EAAK5I,SAGhC4I,EAAKpD,cACLoD,EAAK5C,UAAUtB,SAASqD,EAASa,EAAK5I,SACtC4I,EAAKpD,aAAc,KAExB,GACEoD,EAAKpD,cACNoD,EAAK/B,iBAAmBiB,YAAW,WAC/Bc,EAAK1C,UAAUxB,SAASqD,EAASa,EAAK5I,WACvC,OAGX1tB,KAAKg0B,SAAS5B,SAASqD,EAASz1B,KAAK0tB,SACrC1tB,KAAK+yB,KAAKjzB,EAAI,EACdE,KAAK+yB,KAAKhzB,EAAI,EACdC,KAAKizB,KAAO,EACZjzB,KAAKgzB,cAAgB,KACrBhzB,KAAK00B,GAAK10B,KAAK20B,GAAK30B,KAAK40B,GAAK50B,KAAK60B,GAAK,KAG5CV,YACIn0B,KAAKu1B,aAAc,EACnBH,aAAap1B,KAAKu0B,kBAClBa,aAAap1B,KAAKs0B,YAClBc,aAAap1B,KAAKw0B,gBAClBY,aAAap1B,KAAKy0B,cAGtB3B,OAAOiC,GACH/0B,KAAKm0B,YACLn0B,KAAKi0B,YAAY7B,SAAS2C,EAAK/0B,KAAK0tB,SAGxC2H,iBACID,aAAap1B,KAAKw0B,gBAGtBc,mBACIF,aAAap1B,KAAKu0B,kBAGtBiC,gBAAgB9B,EAAIC,EAAIC,EAAIC,GACxB,OAAOxxB,KAAKC,IAAIoxB,EAAKC,IAAOtxB,KAAKC,IAAIsxB,EAAKC,GAAOH,EAAKC,EAAK,EAAI,OAAS,QAAYC,EAAKC,EAAK,EAAI,KAAO,OAG7G4B,GAAG1B,EAAK3G,GACJ,GAAIpuB,KAAK+0B,GAAM,CAEG/0B,KAAK+0B,GACb9rB,IAAImlB,IAIlBsI,IAAI3B,EAAK3G,GACL,GAAIpuB,KAAK+0B,GAAM,CAEG/0B,KAAK+0B,GACb5C,IAAI/D,IAIlBiD,UACQrxB,KAAKu0B,kBACLa,aAAap1B,KAAKu0B,kBAElBv0B,KAAKs0B,YACLc,aAAap1B,KAAKs0B,YAElBt0B,KAAKw0B,gBACLY,aAAap1B,KAAKw0B,gBAElBx0B,KAAKy0B,cACLW,aAAap1B,KAAKy0B,cAEtBz0B,KAAK0tB,QAAQkB,oBAAoB,aAAc5uB,KAAKQ,OACpDR,KAAK0tB,QAAQkB,oBAAoB,YAAa5uB,KAAKoM,MACnDpM,KAAK0tB,QAAQkB,oBAAoB,WAAY5uB,KAAKS,KAClDT,KAAK0tB,QAAQkB,oBAAoB,cAAe5uB,KAAK8yB,QACrD9yB,KAAKwK,OAAO2nB,MACZnyB,KAAKozB,WAAWjB,MAChBnyB,KAAKqzB,gBAAgBlB,MACrBnyB,KAAKszB,cAAcnB,MACnBnyB,KAAKuzB,MAAMpB,MACXnyB,KAAKwzB,MAAMrB,MACXnyB,KAAKyzB,IAAItB,MACTnyB,KAAK0zB,UAAUvB,MACfnyB,KAAK2zB,QAAQxB,MACbnyB,KAAK4zB,UAAUzB,MACfnyB,KAAK6zB,UAAU1B,MACfnyB,KAAK8zB,mBAAmB3B,MACxBnyB,KAAK+zB,UAAU5B,MACfnyB,KAAKg0B,SAAS7B,MACdnyB,KAAKi0B,YAAY9B,MACjBnyB,KAAK+yB,KAAO/yB,KAAKgzB,cAAgBhzB,KAAKizB,KAAOjzB,KAAKkzB,YAAclzB,KAAKo0B,MAAQp0B,KAAKY,KAAOZ,KAAKq0B,IAAMr0B,KAAKs0B,WAAat0B,KAAKu0B,iBAAmBv0B,KAAKw0B,eAAiBx0B,KAAKy0B,aAAez0B,KAAK00B,GAAK10B,KAAK20B,GAAK30B,KAAK40B,GAAK50B,KAAK60B,GAAK70B,KAAK80B,eAAiB90B,KAAKwK,OAASxK,KAAKozB,WAAapzB,KAAKqzB,gBAAkBrzB,KAAKszB,cAAgBtzB,KAAKuzB,MAAQvzB,KAAKwzB,MAAQxzB,KAAKyzB,IAAMzzB,KAAK0zB,UAAY1zB,KAAK2zB,QAAU3zB,KAAK4zB,UAAY5zB,KAAK6zB,UAAY7zB,KAAK+zB,UAAY/zB,KAAKg0B,SAAWh0B,KAAKi0B,YAAcj0B,KAAK8zB,mBAAqB,KACnfnG,YAAwD,mBAAnCA,WAAWiB,qBAChCjB,WAAWiB,oBAAoB,SAAU5uB,KAAKk0B,oBAM1D,MC1XA,ICwBO,MAAMyC,EAUTzwB,YAAYqE,EAAQqsB,EAAM5V,GAItBhhB,KAAKuI,UAAY,WACjBvI,KAAKwI,IAAM1C,EAAa5F,OACxBF,KAAKuK,OAASA,EACdvK,KAAK42B,KAAOA,EACZ52B,KAAKghB,SAAWA,GAAY,EAOhCrX,QACI,OAAO,IAAIgtB,EAAS32B,KAAKuK,OAAOZ,QAAS3J,KAAK42B,KAAKjtB,QAAS3J,KAAKghB,UAUrE6V,UACI,OAAOxzB,KAAKC,IAAItD,KAAK82B,iBAUzBA,gBAII,OAAO,IAAIxuB,EAAOtI,KAAK42B,MAAMpsB,QAAQxK,KAAKghB,SAAUhhB,KAAKuK,QAAQzK,EAAIE,KAAKuK,OAAOzK,EAUrFi3B,UACI,OAAO1zB,KAAKC,IAAItD,KAAKg3B,iBAUzBA,gBAII,OAAO,IAAI1uB,EAAOtI,KAAK42B,MAAMpsB,QAAQxK,KAAKghB,SAAUhhB,KAAKuK,QAAQxK,EAAIC,KAAKuK,OAAOxK,EAWrFsK,MAAMC,GAEF,OADAtK,KAAK42B,KAAKvsB,MAAMC,EAAQtK,KAAKuK,QACtBvK,KAWXwK,OAAOR,GAGH,OAFAhK,KAAK42B,KAAKpsB,OAAOR,EAAOhK,KAAKuK,QAC7BvK,KAAKghB,UAAYhX,EACVhK,KAWXyP,OAAOzF,GAGH,MAAMzI,EAAIvB,KAAK62B,UACTr1B,EAAIxB,KAAK+2B,UACf,OAAO,IAAIzuB,EAAOquB,EAASprB,MAAM4P,iBAAiBnb,KAAKuK,OAAOzK,EAAGE,KAAKuK,OAAOxK,EAAGwB,EAAGC,EAAGwI,IAAQQ,OAAOxK,KAAKghB,SAAUhhB,KAAKuK,QAe7H0sB,SAASjtB,EAAO1H,GACZ,MAAM2N,EAAQjQ,KAAKyP,OAAOzF,GACpBktB,EAAOl3B,KAAKm3B,UAEZC,EAAS,IAAItd,EAAK7J,EAAOinB,EAAK,IAAIltB,QAElCqtB,EAAcD,GADL,IAAItd,EAAK7J,EAAOinB,EAAK,IAAIltB,QACDotB,GAAU,EAC3CE,EAAYrnB,EAAMtG,QAAQN,KAAK,IAAIM,QAAQa,OAAO6sB,EAAapnB,GAC/DsnB,EAAYtnB,EACbtG,QACAN,KAAK,IACLM,QACAa,OAAOnH,KAAK6G,GAAKmtB,EAAapnB,GACnC,OAAIjQ,KAAKuK,OAAOX,SAAS0tB,GAAat3B,KAAKuK,OAAOX,SAAS2tB,GAChD,IAAIhnB,EAAON,EAAOsnB,GAGlB,IAAIhnB,EAAON,EAAOqnB,GAkBjChd,UAAUtQ,EAAO1H,GACb,MAAMk1B,EAASx3B,KAAKi3B,SAASjtB,EAAO1H,GAGpC,OADAk1B,EAAOh2B,EAAEgJ,OAAOnH,KAAK6G,GAAK,EAAGstB,EAAOj2B,GAC7Bi2B,EAUXC,YAKI,MAAMl2B,EAAIvB,KAAK62B,UACTr1B,EAAIxB,KAAK+2B,UACf,OAAO1zB,KAAK6G,IAAM,GAAK3I,EAAIC,GAAK6B,KAAKyG,MAAM,EAAIvI,EAAIC,IAAMD,EAAI,EAAIC,KAUrE21B,UAEI,MAAMO,EAAK13B,KAAK62B,UACVc,EAAK33B,KAAK+2B,UACVa,EAAQF,EAAKA,EAAKC,EAAKA,EAEvBE,EAAIx0B,KAAKyG,KAAKzG,KAAKC,IAAIs0B,IAE7B,OAAIA,EAAQ,EACD,CACH53B,KAAKuK,OAAOZ,QAAQL,KAAKuuB,GAAGrtB,OAAOxK,KAAKghB,SAAUhhB,KAAKuK,QACvDvK,KAAKuK,OAAOZ,QAAQL,MAAMuuB,GAAGrtB,OAAOxK,KAAKghB,SAAUhhB,KAAKuK,SAIrD,CACHvK,KAAKuK,OAAOZ,QAAQN,KAAKwuB,GAAGrtB,OAAOxK,KAAKghB,SAAUhhB,KAAKuK,QACvDvK,KAAKuK,OAAOZ,QAAQN,MAAMwuB,GAAGrtB,OAAOxK,KAAKghB,SAAUhhB,KAAKuK,SAUpEutB,uBAAuBC,GACnB,MAAMC,EAASrB,EAASprB,MAAM0sB,sBAAsBj4B,KAAK62B,UAAW72B,KAAK+2B,UAAWgB,GAC9E/kB,EAAS,GACf,IAAK,IAAInT,EAAI,EAAGA,EAAIm4B,EAAO11B,OAAQzC,IAC/BmT,EAAO1R,KAAKtB,KAAKyP,OAAOuoB,EAAOn4B,KAEnC,OAAOmT,EAUXklB,cAAcC,EAAqBzqB,GA4B/B,MAAM0qB,EAAuD,EAAxC/0B,KAAK2B,IAAI,EAAGmzB,GAAuB,GACxDzqB,OAAiC,IAAdA,EAA4B,QAAWA,EAC1D,MAAMmpB,EAAU72B,KAAK62B,UACfE,EAAU/2B,KAAK+2B,UACf7e,EAAS,GACT8f,EAASrB,EAASprB,MAAM0sB,sBAAsBpB,EAASE,EAASqB,GACtE,IAAIC,EAAWL,EAAO,GAClB9mB,EAAalR,KAAKyP,OAAO4oB,GAC7B,IAAK,IAAIx4B,EAAI,EAAGA,EAAIm4B,EAAO11B,OAAQzC,IAAK,CACpC,IAAIy4B,EAAYN,GAAQn4B,EAAI,GAAKm4B,EAAO11B,QACpC6O,EAAWnR,KAAKyP,OAAO6oB,GAC3B,GAAIj1B,KAAKC,IAAIyzB,GAAW,MAAU1zB,KAAKC,IAAIuzB,GAAW,KAAQ,CAE1D,IAAIxnB,EAAO6B,EAAW9G,WAAW+G,GAC7B+D,EAAQ,IAAIjE,EAAiBC,EAAWvH,QAASwH,EAASxH,QAASuH,EAAWvH,QAAQT,MAAe,KAATmG,EAAKvP,EAAoB,KAATuP,EAAKtP,GAAYoR,EAASxH,QAAQT,MAAgB,MAATmG,EAAKvP,EAAqB,MAATuP,EAAKtP,IAC/KmY,EAAO5W,KAAK4T,OAEX,CACD,IAAIqjB,EAAev4B,KAAKsa,UAAU+d,GAC9BG,EAAax4B,KAAKsa,UAAUge,GAE5BxnB,EAAeynB,EAAaznB,aAAa0nB,GAGzCC,EAAYvnB,EAAW9G,WAAW0G,GAClC4nB,EAAUvnB,EAAS/G,WAAW0G,GAC9BoE,EAAQ,IAAIjE,EAAiBC,EAAWvH,QAASwH,EAASxH,QAASuH,EAAWvH,QAAQV,IAAIwvB,EAAUpuB,MAAMqD,IAAayD,EAASxH,QAAQV,IAAIyvB,EAAQruB,MAAMqD,KAC9JwK,EAAO5W,KAAK4T,GAEhBhE,EAAaC,EACbknB,EAAWC,EAEf,OAAOpgB,EASXjN,YAAYC,GACRA,EAAUA,GAAW,GACrB,IAAIC,EAAS,GASb,OARAA,EAAO7J,KAAK,YACR4J,EAAQ3C,WACR4C,EAAO7J,KAAK,WAAa4J,EAAQ3C,UAAY,KACjD4C,EAAO7J,KAAK,QAAUtB,KAAKuK,OAAOzK,EAAI,KACtCqL,EAAO7J,KAAK,QAAUtB,KAAKuK,OAAOxK,EAAI,KACtCoL,EAAO7J,KAAK,QAAUtB,KAAK42B,KAAK92B,EAAI,KACpCqL,EAAO7J,KAAK,QAAUtB,KAAK42B,KAAK72B,EAAI,KACpCoL,EAAO7J,KAAK,OACL6J,EAAOC,KAAK,KAO3BurB,EAASprB,MAAQ,CAYb4P,iBAAkB,CAACC,EAASC,EAASwb,EAASE,EAAS/sB,KAGnD,IAAImiB,EAAI9oB,KAAKsH,IAAItH,KAAK6G,GAAK,EAAIF,GAC3BvI,EAAI4B,KAAKqH,IAAIrH,KAAK6G,GAAK,EAAIF,GAC/B,MAAO,CACHlK,EAAGsb,EAAWyb,EAAUE,EAAU5K,EAAK9oB,KAAKyG,KAAKzG,KAAK0G,IAAI8sB,EAAUp1B,EAAG,GAAK4B,KAAK0G,IAAIgtB,EAAU5K,EAAG,IAClGpsB,EAAGsb,EAAWwb,EAAUE,EAAUt1B,EAAK4B,KAAKyG,KAAKzG,KAAK0G,IAAI8sB,EAAUp1B,EAAG,GAAK4B,KAAK0G,IAAIgtB,EAAU5K,EAAG,MAW1GwM,WAAY,CAAC9B,EAASE,EAAS6B,KAE3B,IAAIC,EAASx1B,KAAKL,IAAI41B,GAClBE,EAAUD,EAASA,EAEvB,OADax1B,KAAK6G,GAAK,EAAI0uB,EAAMv1B,KAAK01B,MAAOlC,EAAUE,GAAW8B,GAAW9B,EAAUF,EAAUiC,KASrGb,sBAAuB,CAACpB,EAASE,EAASgB,KACtC,MAAMC,EAAS,GACf,IAAK,IAAIn4B,EAAI,EAAGA,EAAIk4B,EAAYl4B,IAAK,CACjC,IAAI+4B,EAAMv1B,KAAK6G,GAAK,EAAkB,EAAV7G,KAAK6G,GAAU6tB,EAAcl4B,EACzD,IAAIm5B,EAAQrC,EAASprB,MAAMotB,WAAW9B,EAASE,EAAS6B,GACxDZ,EAAOn4B,GAAKm5B,EAEhB,OAAOhB,ICpYR,MAAMiB,EAaT/yB,YAAY2a,EAAS9F,EAAYC,GAI7Bhb,KAAKuI,UAAY,iBACjBvI,KAAKwI,IAAM1C,EAAa5F,OACxBF,KAAK6gB,QAAUA,EACf7gB,KAAK+a,WAAasQ,EAAUwB,WAAW9R,EAAY,EAAa,EAAV1X,KAAK6G,IAC3DlK,KAAKgb,SAAWqQ,EAAUwB,WAAW7R,EAAU,EAAa,EAAV3X,KAAK6G,IAU3DguB,cAAcC,EAAqBzqB,GAI/B,MAAM0qB,EAAuD,EAAxC/0B,KAAK2B,IAAI,EAAGmzB,GAAuB,GACxDzqB,OAAiC,IAAdA,EAA4B,QAAWA,EAC1D,MAAMmpB,EAAU72B,KAAK6gB,QAAQgW,UACvBE,EAAU/2B,KAAK6gB,QAAQkW,UAC7B,IAAIhc,EAAake,EAAeC,mBAAmBC,eAAen5B,KAAK+a,YACnEC,EAAWie,EAAeC,mBAAmBC,eAAen5B,KAAKgb,UAEjEgd,EAASiB,EAAeC,mBAAmBjB,sBAAsBpB,EAASE,EAAShc,EAAYC,EAAUod,GAE7G,MAAMlgB,EAAS,GACf,IAAImgB,GAFJL,EAAS,CAACjd,GAAYU,OAAOuc,GAAQvc,OAAO,CAACT,KAEvB,GAClB9J,EAAalR,KAAK6gB,QAAQpR,OAAO4oB,GACrC,IAAK,IAAIx4B,EAAI,EAAGA,EAAI,EAAIm4B,EAAO11B,OAAQzC,IAAK,CACxC,IAAIy4B,EAAYN,GAAQn4B,EAAI,GAAKm4B,EAAO11B,QACpC6O,EAAWnR,KAAK6gB,QAAQpR,OAAO6oB,GAC/BC,EAAev4B,KAAK6gB,QAAQvG,UAAU+d,GACtCG,EAAax4B,KAAK6gB,QAAQvG,UAAUge,GAExC,GAAIj1B,KAAKC,IAAIyzB,GAAW,MAAU1zB,KAAKC,IAAIuzB,GAAW,KAAQ,CAC1D,IAAIxnB,EAAO6B,EAAW9G,WAAW+G,GAC7B+D,EAAQ,IAAIjE,EAAiBC,EAAWvH,QAASwH,EAASxH,QAASuH,EAAWvH,QAAQT,MAAe,KAATmG,EAAKvP,EAAoB,KAATuP,EAAKtP,GAAYoR,EAASxH,QAAQT,MAAgB,MAATmG,EAAKvP,EAAqB,MAATuP,EAAKtP,IAC/KmY,EAAO5W,KAAK4T,OAEX,CAED,IAAIpE,EAAeynB,EAAaznB,aAAa0nB,GAGzCC,EAAYvnB,EAAW9G,WAAW0G,GAClC4nB,EAAUvnB,EAAS/G,WAAW0G,GAC9BoE,EAAQ,IAAIjE,EAAiBC,EAAWvH,QAASwH,EAASxH,QAASuH,EAAWvH,QAAQV,IAAIwvB,EAAUpuB,MAAMqD,IAAayD,EAASxH,QAAQV,IAAIyvB,EAAQruB,MAAMqD,KAC9JwK,EAAO5W,KAAK4T,GAEhBhE,EAAaC,EACbknB,EAAWC,EAEf,OAAOpgB,GCdf,IAAI4J,EDiBJmX,EAAeC,mBAAqB,CAShChe,eAAgB,CAACpb,EAAGC,EAAG82B,EAASE,EAAShc,EAAYC,EAAUgG,EAAU9V,UAC9C,IAAZA,IACPA,EAAU,CAAEoQ,aAAa,SACL,IAAb0F,IACPA,EAAW,GAKfjG,EAAasQ,EAAUuB,QAAQ7R,EAAsB,EAAV1X,KAAK6G,IAChD8Q,EAAWqQ,EAAUuB,QAAQ5R,EAAoB,EAAV3X,KAAK6G,IAG5C,IAAIzJ,EAAM,IAAI6H,EAAOquB,EAASprB,MAAM4P,iBAAiBrb,EAAGC,EAAG82B,EAASE,EAAS/b,IACzExa,EAAQ,IAAI8H,EAAOquB,EAASprB,MAAM4P,iBAAiBrb,EAAGC,EAAG82B,EAASE,EAAShc,IAC/Eta,EAAI+J,OAAOwW,EAAU,CAAElhB,EAAGA,EAAGC,EAAGA,IAChCS,EAAMgK,OAAOwW,EAAU,CAAElhB,EAAGA,EAAGC,EAAGA,IAElC,IACI2b,EADArM,EAAO2L,EAAWD,EAGlBW,EADArM,EAAO,EACQhM,KAAKC,IAAI+L,GAAQhM,KAAK6G,GAAK,EAAI,EAG/B7G,KAAKC,IAAI+L,GAAQhM,KAAK6G,GAAK,EAAI,EAElD,MACM0R,EAAW,GACb1Q,EAAQoQ,aACRM,EAASta,KAAK,IAAKd,EAAMV,EAAGU,EAAMT,GAGtC,MAAMq5B,EAAM,IAAM/1B,KAAK6G,GAEvB,OADA0R,EAASta,KAAK,IAAKu1B,EAASE,EAAS/V,EAAWoY,EAAK1d,EAPnC,EAO4Djb,EAAIX,EAAGW,EAAIV,GAClF6b,GAsBXqc,sBAAuB,CAACpB,EAASE,EAAShc,EAAYC,EAAUqe,KAiB5D,IAhBA,IASIC,GARJA,GADIA,EAAgB3C,EAASprB,MAAM0sB,sBAAsBpB,EAASE,EAASsC,IAC7CE,KAAKvvB,GAAUivB,EAAeC,mBAAmBC,eAAenvB,MAQ5DwvB,QAPZxvB,GACd+Q,EAAaC,EACNhR,GAAS+Q,GAAc/Q,GAASgR,EAEhChR,GAAS+Q,GAAe/Q,GAASgR,GAAYhR,GAAS,IAMjEyvB,EAAaR,EAAeC,mBAAmBQ,wBAAwB3e,EAAYC,EAAUse,GAG7FtB,EAAS,GACJn4B,EAAI,EAAGA,EAAIy5B,EAAch3B,OAAQzC,IACtCm4B,EAAO12B,KAAKg4B,GAAeG,EAAa55B,GAAKy5B,EAAch3B,SAE/D,OAAO01B,GAEX0B,wBAAyB,CAAC3e,EAAYC,EAAUse,KAE5C,GAAIve,EAAaC,EAAU,CACvB,MAAMhZ,EAAIs3B,EAAch3B,OACxB,IAAK,IAAIzC,EAAI,EAAGA,EAAImC,EAAGnC,IAAK,CACxB,MAAM85B,EAAKtO,EAAUwB,WAAWyM,EAAcz5B,GAAI,EAAa,EAAVwD,KAAK6G,IAC1D,GAAIyvB,GAAM5e,GAAc4e,GAAM3e,EAC1B,OAAOnb,GAInB,OAAO,GAEXs5B,eAAiBnvB,GAAWA,EAAQ,EAAc,EAAV3G,KAAK6G,GAASF,EAAQA,EAkB9D4vB,2BAA2BlF,EAAIE,EAAIiF,EAAIC,EAAIlB,EAAKmB,EAAIC,EAAIrF,EAAIE,GAIxD,MAAMvxB,EAAMD,KAAKC,IACXqH,EAAMtH,KAAKsH,IACXD,EAAMrH,KAAKqH,IACXZ,EAAOzG,KAAKyG,KACZC,EAAO/H,GACFA,EAAIA,EAETi4B,EAAStvB,EAAIiuB,GACbsB,EAASxvB,EAAIkuB,GAEb94B,EAAKo6B,GAAUxF,EAAKC,GAAO,EAAKsF,GAAUrF,EAAKC,GAAO,EACtD90B,GAAMk6B,GAAUvF,EAAKC,GAAO,EAAKuF,GAAUtF,EAAKC,GAAO,EACvDxwB,EAAK0F,EAAIjK,GAAIwE,EAAKyF,EAAIhK,GAAIo6B,EAAMpwB,EAAI8vB,GAAKO,EAAMrwB,EAAI+vB,GAEnDO,EAAIh2B,EAAK81B,EAAM71B,EAAK81B,EACtBC,EAAI,GACJR,EAAK/vB,EAAKuwB,GAAK/2B,EAAIu2B,GACnBC,EAAKhwB,EAAKuwB,GAAK/2B,EAAIw2B,KAGnBD,EAAKv2B,EAAIu2B,GACTC,EAAKx2B,EAAIw2B,IAGb,MAAM96B,EAAO+6B,IAAOC,GAAM,EAAI,EACxBM,EAAIxwB,GAAMqwB,EAAMC,EAAMD,EAAM71B,EAAK81B,EAAM/1B,IAAO81B,EAAM71B,EAAK81B,EAAM/1B,IAAOrF,EACtEu7B,EAAOD,GAAKT,EAAK95B,GAAM+5B,EACvBU,EAAOF,IAAMR,EAAKh6B,GAAM+5B,EAIxBtvB,EAAS,IAAIjC,EAHR4xB,EAASK,EAAMN,EAASO,GAAO9F,EAAKC,GAAM,EAC1CsF,EAASM,EAAML,EAASM,GAAO5F,EAAKC,GAAM,GAG/C+B,EAAOrsB,EAAOZ,QAAQT,MAAM2wB,EAAIC,GAChCjZ,EAAU,IAAI8V,EAASpsB,EAAQqsB,EAAM,GAC3C/V,EAAQrW,OAAOouB,GACf,MAAM7d,EAAa,IAAIjB,EAAK+G,EAAQtW,OAAQ,IAAIjC,EAAOosB,EAAIE,IAAK5qB,QAC1DgR,EAAW,IAAIlB,EAAK+G,EAAQtW,OAAQ,IAAIjC,EAAOqsB,EAAIE,IAAK7qB,QAC9D,OAAO,IAAIivB,EAAepY,EAAS9F,EAAa6d,EAAK5d,EAAW4d,KChIjE,MAAM6B,EA6DTv0B,YAAYw0B,GAoBR,GAVA16B,KAAK+e,WAAa,EAElB9Y,EAAWO,MAAQ,CACfm0B,kBAAkB,EAClB5b,WAAY,EACZ1Y,YAAY,EACZC,YAAY,EACZF,WAAW,EACXG,SAAS,QAEe,IAAjBm0B,EAAOpV,OACd,KAAM,uBASV,MAAMuS,EAAI4C,EAAgBlvB,MAAMqvB,MAChC56B,KAAK06B,OAAS,CACVpV,OAAQoV,EAAOpV,OACfuV,SAAUhD,EAAEiD,IAAIJ,EAAQ,YAAY,GACpCK,YAAalD,EAAEmD,KAAKN,EAAQ,eAAe,GAC3C9uB,OAAQisB,EAAE3yB,IAAIw1B,EAAQ,SAAU,GAChC7uB,OAAQgsB,EAAE3yB,IAAIw1B,EAAQ,SAAU,GAChCtK,QAASyH,EAAE3yB,IAAIw1B,EAAQ,UAAW,GAClCrK,QAASwH,EAAE3yB,IAAIw1B,EAAQ,UAAW,GAClCO,WAAYpD,EAAEmD,KAAKN,EAAQ,cAAc,GACzCQ,aAAcrD,EAAE3yB,IAAIw1B,EAAQ,eAAgB,GAC5CS,aAActD,EAAE3yB,IAAIw1B,EAAQ,eAAgB,GAC5CU,mBAAoBvD,EAAE3yB,IAAIw1B,EAAQ,uBAAwB,GAC1DW,WAAYxD,EAAEmD,KAAKN,EAAQ,cAAc,GACzCY,iBAAkBzD,EAAEiD,IAAIJ,EAAQ,oBAAoB,GACpDa,qBAAsB1D,EAAE3yB,IAAIw1B,EAAQ,uBAAwB,IAC5Dc,qBAAsB3D,EAAE3yB,IAAIw1B,EAAQ,uBAAwB,IAC5De,gBAAiBf,EAAOe,iBAAmB,UAC3CC,eAAgB7D,EAAEmD,KAAKN,EAAQ,kBAAkB,GACjDiB,mBAAoB9D,EAAE3yB,IAAIw1B,EAAQ,qBAAsBD,EAAgBmB,sBACxEC,oBAAqBhE,EAAE3yB,IAAIw1B,EAAQ,sBAAuBD,EAAgBqB,uBAC1EC,kBAAmBlE,EAAE3yB,IAAIw1B,EAAQ,oBAAqB,GACtDsB,mBAAoBnE,EAAE3yB,IAAIw1B,EAAQ,qBAAsB,GACxDuB,UAAWpE,EAAE3yB,IAAIw1B,EAAQ,YAAa,GACtCwB,UAAWrE,EAAE3yB,IAAIw1B,EAAQ,YAAa,GACtCyB,gBAAiBtE,EAAEmD,KAAKN,EAAQ,mBAAmB,GACnD0B,SAAU,KACNr0B,EAAMs0B,MAAMD,SAASr0B,IAEzBu0B,YAAa,KACTv0B,EAAMw0B,gBAEVC,iBAAkB3E,EAAEmD,KAAKN,EAAQ,oBAAoB,GACrD+B,gBAAiB5E,EAAEmD,KAAKN,EAAQ,mBAAmB,GAEnDgC,SAAU7E,EAAE8E,KAAKjC,EAAQ,WAAY,MACrCkC,QAAS/E,EAAE8E,KAAKjC,EAAQ,UAAW,MACnCmC,SAAUhF,EAAE8E,KAAKjC,EAAQ,WAAY,MAErCoC,YAAajF,EAAEmD,KAAKN,EAAQ,eAAe,GAC3CqC,YAAalF,EAAEmD,KAAKN,EAAQ,eAAe,GAC3CsC,WAAYnF,EAAEmD,KAAKN,EAAQ,cAAc,GACzCuC,iBAAkBpF,EAAEmD,KAAKN,EAAQ,oBAAoB,GAErDwC,SAAUrF,EAAEmD,KAAKN,EAAQ,YAAY,IASzC16B,KAAKmc,WAAa,CACdghB,cAAc,EACdC,sBAAuBvF,EAAEmD,KAAKN,EAAQ,yBAAyB,GAC/D2C,uBAAwBxF,EAAEmD,KAAKN,EAAQ,0BAA0B,GACjE4C,gBAAiBzF,EAAEmD,KAAKN,EAAQ,mBAAmB,GACnD6C,iBAAkB1F,EAAEmD,KAAKN,EAAQ,oBAAoB,GACrD8C,SAAU3F,EAAEmD,KAAKN,EAAQ,YAAY,GACrC+C,OAAQ,CACJtgB,MAAO,UACPC,UAAW,EACXqD,WAAY,CACRtD,MAAO,wBACPC,UAAW,GAEfsgB,WAAY,CACRvgB,MAAO,UACPC,UAAW,EACXiH,MAAM,GAEVsZ,cAAe,CACXxgB,MAAO,UACPC,UAAW,EACXiH,MAAM,IAGd1C,QAAS,CACLxE,MAAO,UACPC,UAAW,GAEfmP,SAAU,CACNpP,MAAO,UACPC,UAAW,GAEfyD,QAAS,CACL1D,MAAO,UACPC,UAAW,GAEfwgB,cAAe,CACXzgB,MAAO,UACPC,UAAW,GAEfjD,OAAQ,CACJgD,MAAO,UACPC,UAAW,GAEfygB,aAAc,CACV1gB,MAAO,UACPC,UAAW,GAEf1W,OAAQ,CACJyW,MAAO,UACPC,UAAW,GAEf0gB,eAAgB,CACZ3gB,MAAO,UACPC,UAAW,GAEf9N,KAAM,CACF6N,MAAO,UACPC,UAAW,GAEf2gB,OAAQ,CACJ5gB,MAAO,UACPC,UAAW,GAEfsC,MAAO,CACHvC,MAAO,UACPC,UAAW,GAEfyE,KAAM,CACF1E,MAAO,sBACPC,UAAW,EACXiH,MAAM,EACN1N,QAAQ,IAMhB3W,KAAKkhB,KAAO,IAAI4L,EAAK,IAAIxkB,EAAO,EAAG,GAAI,IAAIA,EAAO,GAAI,KACtDtI,KAAKic,WAAa,CAAE3N,MAAOmsB,EAAgBmB,qBAAsBrtB,OAAQksB,EAAgBqB,uBACzF,MAAMkC,EAAwC,iBAAjBtD,EAAOpV,OAAqBvH,SAAS6U,cAAc8H,EAAOpV,QAAUoV,EAAOpV,OAExG,GAA4C,WAAxC0Y,EAAcC,QAAQC,cAQtB,GAPAl+B,KAAKslB,OAAS0Y,EACdh+B,KAAKm+B,aAAen+B,KAAKslB,OACrBtlB,KAAK06B,OAAOwC,eAAmC,IAAhB1X,IAC/B7Y,QAAQoK,KAAK,gIACbpK,QAAQoK,KAAK,8CACb/W,KAAK06B,OAAOwC,UAAW,GAEvBl9B,KAAK06B,OAAOwC,SAAU,CACtB,MAAM1Z,EAAMxjB,KAAKslB,OAAO8Y,WAAW,SACnCp+B,KAAKq+B,KAAO,IAAI7Y,EAAYhC,GAAK,GAGjCxjB,KAAKqkB,KAAOrkB,KAAKq+B,KAAK5f,cAAa,GACnC9R,QAAQoK,KAAK,sGAEZ,CACD,MAAMyM,EAAMxjB,KAAKslB,OAAO8Y,WAAW,MACnCp+B,KAAKq+B,KAAO,IAAI/a,EAAUE,GAAK,GAC/BxjB,KAAKqkB,KAAO,IAAIf,EAAUE,GAAK,OAGlC,IAA4C,QAAxCwa,EAAcC,QAAQC,cAwB3B,KAAM,kDAvBN,QAA4B,IAAjBpiB,EACP,KAAM,8IACV9b,KAAKslB,OAAS0Y,EACdh+B,KAAKq+B,KAAO,IAAIviB,EAAa9b,KAAKslB,OAAQ,IAAIhd,EAC9C,IAAIA,EACJtI,KAAKic,YAAY,EACjBjc,KAAKmc,YAAY,GAEjBnc,KAAKqkB,KAAOrkB,KAAKq+B,KAAK5f,cAAa,GAC/Bze,KAAKslB,OAAOgZ,eACZt+B,KAAKm+B,aAAepgB,SAASwgB,cAAc,OAC3Cv+B,KAAKm+B,aAAa/f,MAAMuB,SAAW,WACnC3f,KAAKm+B,aAAa/f,MAAMogB,KAAO,IAC/Bx+B,KAAKm+B,aAAa/f,MAAMqgB,IAAM,IAC9Bz+B,KAAKm+B,aAAa/f,MAAMsgB,OAAS,UACjC1+B,KAAKslB,OAAOgZ,cAAclgB,MAAMuB,SAAW,WAC3C3f,KAAKslB,OAAOgZ,cAAczhB,YAAY7c,KAAKm+B,eAG3Cn+B,KAAKm+B,aAAepgB,SAAS4gB,KAMrC3+B,KAAKq+B,KAAKh0B,MAAMzB,IAAI5I,KAAK06B,OAAO9uB,OAAQ5L,KAAK06B,OAAO7uB,QACpD7L,KAAKqkB,KAAKha,MAAMzB,IAAI5I,KAAK06B,OAAO9uB,OAAQ5L,KAAK06B,OAAO7uB,QACpD7L,KAAK8L,SAAW,GAChB9L,KAAK4+B,cAAgB,KACrB5+B,KAAK6+B,gBAAkB,GACvB7+B,KAAK8+B,UAAY,GACjB9+B,KAAK2M,QAAUA,QACf3M,KAAKq8B,MAAQ,CAETD,SAAU3B,EAAgBsE,WAE9B,IAAIh3B,EAAQ/H,KACZ2tB,WAAWzN,iBAAiB,UAAU,IAAMnY,EAAMi3B,iBAClDh/B,KAAKg/B,eACDtE,EAAO8B,kBACPx8B,KAAKu8B,eAETv8B,KAAKi/B,wBAELj/B,KAAKk/B,iBAELl/B,KAAKm/B,SAELn/B,KAAKslB,OAAO8Z,QAchBr5B,iBAAiBs5B,GAEb,MAAMtjB,EAAUgC,SAASC,gBAAgB,6BAA8B,OAEvE,IAAIshB,EAAY,IAAIxjB,EAAaC,EAASsjB,EAAGhB,KAAKriB,OAAQqjB,EAAGhB,KAAKh0B,MAAOg1B,EAAGpjB,YAAY,EACxFojB,EAAGljB,YACCojB,EAAYD,EAAU7gB,cAAa,GACvC6gB,EAAUxgB,eAAe,GACzBygB,EAAUzgB,eAAe,GACrBugB,EAAG3E,OAAOgC,UACV2C,EAAG3E,OAAOgC,WACd4C,EAAUtgB,MAAMqgB,EAAG3E,OAAOe,iBACtB4D,EAAG3E,OAAOkC,SACVyC,EAAG3E,OAAOkC,QAAQ0C,EAAWC,GACjCF,EAAGG,QAAQ,EAAGF,EAAWC,GACzBF,EAAGlC,aAAa,EAAGmC,GACfD,EAAG3E,OAAOmC,UACVwC,EAAG3E,OAAOmC,SAASyC,EAAWC,GAClCD,EAAUjgB,aAAa,GACvBkgB,EAAUlgB,aAAa,GAGvB,IACIogB,GADa,IAAIC,eACIC,kBAAkB5jB,GACvC6jB,EAAO,IAAIC,KAAK,CAACJ,GAAU,CAAEK,KAAM,4BAGvC,GAAmC,mBAAxBnS,WAAmB,OAC1B,KAAM,yGAEVoS,EADcpS,WAAmB,QACzBiS,EAAM,uBAYlBrD,eACIv8B,KAAK06B,OAAO8B,kBAAmB,EAC/B,MAAMwD,EAAarS,WAAWsS,kBAAoB,EAClDjgC,KAAK06B,OAAOuB,UAAYj8B,KAAK06B,OAAOwB,UAAY,EAAM8D,EACtDhgC,KAAK06B,OAAOqB,kBAAoB/7B,KAAK06B,OAAOsB,mBAAqBgE,EACjEhgC,KAAKg/B,eACLh/B,KAAKk/B,iBAQTgB,UAAU1V,GACN,MAAM2V,EAAe,IAAI73B,EAAOtI,KAAKic,WAAW3N,MAAQ,EAAKtO,KAAKic,WAAW1N,OAAS,GAChF6xB,EAAcpgC,KAAKic,WAAW3N,MAAQtO,KAAKic,WAAW1N,OACtD8xB,EAAQ7V,EAAOlc,MAAQkc,EAAOjc,OAE9BhE,EAAS,IAAIjC,EAAOkiB,EAAOxlB,IAAIlF,EAAI0qB,EAAOlc,MAAQ,EAAKkc,EAAOxlB,IAAIjF,EAAIyqB,EAAOjc,OAAS,GACvFxD,MACA7B,MAAMlJ,KAAKic,WAAW3N,MAAQ,EAAKtO,KAAKic,WAAW1N,OAAS,GAEjE,GADAvO,KAAKsgC,UAAU/1B,GACX61B,EAAcC,EAAO,CACrB,MAAME,EAAiBvgC,KAAKic,WAAW3N,MAAQkc,EAAOlc,MACtDtO,KAAKwgC,QAAQD,EAAgBA,EAAgBJ,OAE5C,CACD,MAAMI,EAAiBvgC,KAAKic,WAAW1N,OAASic,EAAOjc,OACvDvO,KAAKwgC,QAAQD,EAAgBA,EAAgBJ,GAEjDngC,KAAKm/B,SAWTsB,WAAWC,GACP1gC,KAAK2M,QAAU+zB,EAanBxB,iBACQl/B,KAAK06B,OAAOyB,gBACZ1B,EAAgBlvB,MAAMo1B,YAAY3gC,KAAKslB,OAAQtlB,KAAK06B,OAAOuB,UAAWj8B,KAAK06B,OAAOuB,WAGlFxB,EAAgBlvB,MAAMo1B,YAAY3gC,KAAKslB,OAAQtlB,KAAK06B,OAAOuB,UAAWj8B,KAAK06B,OAAOwB,WA2B1FjzB,IAAI23B,EAAUzB,GACV,GAAIvpB,MAAMC,QAAQ+qB,GAAW,CACzB,MAAMjrB,EAAMirB,EAEZ,IAAK,IAAI/gC,EAAI,EAAGA,EAAI8V,EAAIrT,OAAQzC,IAC5BG,KAAKiJ,IAAI0M,EAAI9V,IAAI,QAGpB,GAAI+gC,aAAoBt4B,EACzBtI,KAAK8+B,UAAUx9B,KAAKs/B,GACpB5gC,KAAK8L,SAASxK,KAAKs/B,QAElB,GAAIA,aAAoB9mB,EAEzB9Z,KAAK8+B,UAAUx9B,KAAKs/B,GACpB5gC,KAAK8L,SAASxK,KAAKs/B,EAASr/B,GAC5BvB,KAAK8L,SAASxK,KAAKs/B,EAASp/B,QAE3B,GAAIo/B,aAAoBrwB,EACzBvQ,KAAK8+B,UAAUx9B,KAAKs/B,GACpB5gC,KAAK8L,SAASxK,KAAKs/B,EAASr/B,GAC5BvB,KAAK8L,SAASxK,KAAKs/B,EAASp/B,QAE3B,GAAIo/B,aAAoBjK,EACzB32B,KAAK8L,SAASxK,KAAKs/B,EAASr2B,QAC5BvK,KAAK8L,SAASxK,KAAKs/B,EAAShK,MAC5B52B,KAAK8+B,UAAUx9B,KAAKs/B,GACpBA,EAASr2B,OAAOvC,UAAUZ,iBAAiB+Y,IACvCygB,EAAShK,KAAK3tB,IAAIkX,EAAMjY,OAAO8oB,oBAGlC,GAAI4P,aAAoB3H,EACzBj5B,KAAK8L,SAASxK,KAAKs/B,EAAS/f,QAAQtW,QACpCvK,KAAK8L,SAASxK,KAAKs/B,EAAS/f,QAAQ+V,MACpC52B,KAAK8+B,UAAUx9B,KAAKs/B,GACpBA,EAAS/f,QAAQtW,OAAOvC,UAAUZ,iBAAiB+Y,IAC/CygB,EAAS/f,QAAQ+V,KAAK3tB,IAAIkX,EAAMjY,OAAO8oB,oBAG1C,GAAI4P,aAAoB5mB,EACzBha,KAAK8L,SAASxK,KAAKs/B,EAASr2B,QAC5BvK,KAAK8+B,UAAUx9B,KAAKs/B,QAEnB,GAAIA,aAAoB9lB,EACzB9a,KAAK8L,SAASxK,KAAKs/B,EAASzmB,OAAO5P,QACnCvK,KAAK8+B,UAAUx9B,KAAKs/B,QAEnB,GAAIA,aAAoB70B,EAAS,CAClC/L,KAAK8+B,UAAUx9B,KAAKs/B,GAEpB,IAAS/gC,EAAI,EAAGA,EAAI+gC,EAAS90B,SAASxJ,OAAQzC,IAC1CG,KAAK8L,SAASxK,KAAKs/B,EAAS90B,SAASjM,SAExC,GAAI+gC,aAAoBzX,EACzBnpB,KAAK8+B,UAAUx9B,KAAKs/B,GACpB5gC,KAAK8L,SAASxK,KAAKs/B,EAASr/B,GAC5BvB,KAAK8L,SAASxK,KAAKs/B,EAASp/B,GAC5BxB,KAAK8L,SAASxK,KAAKs/B,EAASn/B,QAE3B,GAAIm/B,aAAoB1yB,EAAY,CACrClO,KAAK8+B,UAAUx9B,KAAKs/B,GACpB,MAAM/mB,EAAa+mB,EACnB,IAAS/gC,EAAI,EAAGA,EAAIga,EAAW5D,aAAa3T,OAAQzC,IAC3C+gC,EAAS5qB,gBAAuB,GAALnW,GAC5BG,KAAK8L,SAASxK,KAAKuY,EAAW5D,aAAapW,GAAGqR,YAClDlR,KAAK8L,SAASxK,KAAKuY,EAAW5D,aAAapW,GAAGsR,UAC9CnR,KAAK8L,SAASxK,KAAKuY,EAAW5D,aAAapW,GAAGuR,mBAC9CpR,KAAK8L,SAASxK,KAAKuY,EAAW5D,aAAapW,GAAGwR,iBAC9CwI,EAAW5D,aAAapW,GAAGuR,kBAAkBzI,KAAKtC,YAAa,EAC/DwT,EAAW5D,aAAapW,GAAGwR,gBAAgB1I,KAAKtC,YAAa,EAEjEo0B,EAAgBlvB,MAAMs1B,2BAA2BD,QAEhD,GAAIA,aAAoBtP,EACzBtxB,KAAK8L,SAASxK,KAAKs/B,EAASrP,WAC5BvxB,KAAK8L,SAASxK,KAAKs/B,EAASpP,YAC5BxxB,KAAK8+B,UAAUx9B,KAAKs/B,GAEpBA,EAASrP,UAAUvpB,UAAUZ,iBAAiB5D,IAC1Co9B,EAASpP,WAAWvoB,IAAIzF,EAAE0E,OAAO8oB,eAErC4P,EAASpP,WAAW7oB,KAAKtC,YAAa,MAErC,MAAIu6B,aAAoBnP,GAMzB,KAAM,oDAAsDmP,EAAW,IALvE5gC,KAAK8L,SAASxK,KAAKs/B,EAASjqB,QAC5B3W,KAAK8+B,UAAUx9B,KAAKs/B,GACpBA,EAASjqB,OAAOhO,KAAKtC,YAAa,GAMlC84B,QAA2B,IAAVA,IACjBn/B,KAAKm/B,SAyBb2B,OAAOF,EAAUzB,EAAQ4B,GACrB,GAAInrB,MAAMC,QAAQ+qB,GAAlB,CACI,IAAK,IAAI/gC,EAAI,EAAGA,EAAI+gC,EAASt+B,OAAQzC,IACjCG,KAAK8gC,OAAOF,EAAS/gC,IAAI,EAAOkhC,GAEhC5B,GACAn/B,KAAKm/B,aALb,CASIyB,aAAoBt4B,IACpBtI,KAAKghC,aAAaJ,GAAU,GACxBzB,GACAn/B,KAAKm/B,UAGb,IAASt/B,EAAI,EAAGA,EAAIG,KAAK8+B,UAAUx8B,OAAQzC,IACvC,GAAIG,KAAK8+B,UAAUj/B,KAAO+gC,EAAU,CAEhC,GADA5gC,KAAK8+B,UAAUz2B,OAAOxI,EAAG,GACrBkhC,EAEA,GAAIH,aAAoB9mB,EAEpB9Z,KAAKghC,aAAaJ,EAASr/B,GAAG,GAC9BvB,KAAKghC,aAAaJ,EAASp/B,GAAG,QAE7B,GAAIo/B,aAAoBrwB,EACzBvQ,KAAKghC,aAAaJ,EAASr/B,GAAG,GAC9BvB,KAAKghC,aAAaJ,EAASp/B,GAAG,QAE7B,GAAIo/B,aAAoBjK,EACzB32B,KAAKghC,aAAaJ,EAASr2B,QAAQ,GACnCvK,KAAKghC,aAAaJ,EAAShK,MAAM,QAEhC,GAAIgK,aAAoB3H,EACzBj5B,KAAKghC,aAAaJ,EAAS/f,QAAQtW,QACnCvK,KAAKghC,aAAaJ,EAAS/f,QAAQ+V,WAElC,GAAIgK,aAAoB5mB,EACzBha,KAAKghC,aAAaJ,EAASr2B,QAAQ,QAElC,GAAIq2B,aAAoB9lB,EACzB9a,KAAKghC,aAAaJ,EAASzmB,OAAO5P,QAAQ,QAEzC,GAAIq2B,aAAoB70B,EAEzB,IAASlM,EAAI,EAAGA,EAAI+gC,EAAS90B,SAASxJ,OAAQzC,IAC1CG,KAAKghC,aAAaJ,EAAS90B,SAASjM,IAAI,QAE3C,GAAI+gC,aAAoBzX,EACzBnpB,KAAKghC,aAAaJ,EAASr/B,GAAG,GAC9BvB,KAAKghC,aAAaJ,EAASp/B,GAAG,GAC9BxB,KAAKghC,aAAaJ,EAASn/B,GAAG,QAE7B,GAAIm/B,aAAoB1yB,EACzB,IAASrO,EAAI,EAAGA,EAAI+gC,EAAS3qB,aAAa3T,OAAQzC,IAC9CG,KAAKghC,aAAaJ,EAAS3qB,aAAapW,GAAGqR,YAAY,GACvDlR,KAAKghC,aAAaJ,EAAS3qB,aAAapW,GAAGuR,mBAAmB,GAC9DpR,KAAKghC,aAAaJ,EAAS3qB,aAAapW,GAAGwR,iBAAiB,GACxDxR,EAAI,GAAK+gC,EAAS3qB,aAAa3T,QAC/BtC,KAAKghC,aAAaJ,EAAS3qB,aAAapW,GAAGsR,UAAU,QAIxDyvB,aAAoBtP,GACzBtxB,KAAKghC,aAAaJ,EAASrP,WAAW,GACtCvxB,KAAKghC,aAAaJ,EAASpP,YAAY,IAElCoP,aAAoBnP,GACzBzxB,KAAKghC,aAAaJ,EAASjqB,QAAQ,GAGvCwoB,GACAn/B,KAAKm/B,WAerB6B,aAAan3B,EAAMs1B,GACf,IAAK,IAAIt/B,EAAI,EAAGA,EAAIG,KAAK8L,SAASxJ,OAAQzC,IACtC,GAAIG,KAAK8L,SAASjM,KAAOgK,EAIrB,OAHA7J,KAAK8L,SAASzD,OAAOxI,EAAG,QACpBs/B,GACAn/B,KAAKm/B,UAgBrB8B,UAAUC,GACNlhC,KAAK8+B,UAAY,GACZqC,QAAQD,KACTlhC,KAAK8L,SAAW,IAEpB9L,KAAKm/B,SAYTiC,cAAcC,EAAeC,GACzB,IAAIzgC,EAAIb,KAAKuhC,gBAAgBvhC,KAAKwhC,uBAAuBH,EAAcvhC,EAAGuhC,EAActhC,GAAIuhC,EAAiBj+B,KAAK4B,IAAIjF,KAAK06B,OAAOuB,UAAWj8B,KAAK06B,OAAOwB,YACzJ,GAAIr7B,GAAmB,UAAdA,EAAE4gC,SACP,OAAOzhC,KAAK8L,SAASjL,EAAE6gC,QAe/BlE,SAASa,QACe,IAATA,IACPA,EAAOr+B,KAAKq+B,MAEhB,MAAMsD,EACE7U,EAAKvhB,MAAM0hB,eAAejtB,KAAK06B,OAAOU,mBAAoBp7B,KAAKq+B,KAAKh0B,MAAMvK,GAAKE,KAAK06B,OAAOQ,aAC3Fl7B,KAAK06B,OAAOuB,UAFd0F,EAGE7U,EAAKvhB,MAAM0hB,eAAejtB,KAAK06B,OAAOU,mBAAoBp7B,KAAKq+B,KAAKh0B,MAAMtK,GAAKC,KAAK06B,OAAOS,aAC3Fn7B,KAAK06B,OAAOwB,UAEpB,IAAI0F,EAAQ,CAAEtzB,MAAOtO,KAAKkhB,KAAKtB,KAAK9f,EAAI6hC,EAAUpzB,OAAQvO,KAAKkhB,KAAKtB,KAAK7f,EAAI4hC,GACzEE,EAAc7hC,KAAKic,WAAW3N,MAAQ,EAAtCuzB,EAAiD7hC,KAAKic,WAAW1N,OAAS,EAC1EyN,EAAShc,KAAKq+B,KAAKriB,OAAOrS,QAAQoB,MAEtCiR,EAAOlc,EACDuD,KAAKyH,MAAMkR,EAAOlc,EAAI+hC,GAAYx+B,KAAKyH,MAAM82B,EAAMtzB,OAAUszB,EAAMtzB,MAAStO,KAAKq+B,KAAKh0B,MAAMvK,GACvFE,KAAKq+B,KAAKriB,OAAOlc,EAAI+hC,GAAY7hC,KAAKq+B,KAAKh0B,MAAMvK,EAAK8hC,EAAMtzB,MACvE0N,EAAOjc,EACDsD,KAAKyH,MAAMkR,EAAOjc,EAAI8hC,GAAax+B,KAAKyH,MAAM82B,EAAMrzB,QAAWqzB,EAAMrzB,OAAUvO,KAAKq+B,KAAKh0B,MAAMtK,GAC1FC,KAAKq+B,KAAKriB,OAAOjc,EAAI8hC,GAAa7hC,KAAKq+B,KAAKh0B,MAAMvK,EAAK8hC,EAAMrzB,OACpEvO,KAAKmc,WAAWqhB,WAChBa,EAAKxf,oBAAoB,MACrB7e,KAAK06B,OAAOO,YAEZoD,EAAKzf,aAAa,UAClByf,EAAK/c,OAAOtF,EAAQhc,KAAKic,WAAW3N,MAAQtO,KAAKq+B,KAAKh0B,MAAMvK,EAAGE,KAAKic,WAAW1N,OAASvO,KAAKq+B,KAAKh0B,MAAMtK,EAAG6hC,EAAMtzB,MAAOszB,EAAMrzB,OAAQ,2BAGtI8vB,EAAKzf,aAAa,QAClByf,EAAKnd,KAAKlF,EAAQhc,KAAKic,WAAW3N,MAAQtO,KAAKq+B,KAAKh0B,MAAMvK,EAAGE,KAAKic,WAAW1N,OAASvO,KAAKq+B,KAAKh0B,MAAMtK,EAAG6hC,EAAMtzB,MAAOszB,EAAMrzB,OAAQ,2BAgBhJ8sB,WAAWgD,GAEPA,EAAKzf,aAAa,UAClByf,EAAK3c,UAAU,CAAE5hB,EAAG,EAAGC,EAAG,GAAK,GAAI,WAKvC+hC,aAAarnB,EAAG0C,GACZ,OAAO1C,EAAE9R,KAAKrC,WAAatG,KAAKmc,WAAW2hB,eAAe3gB,MAAQ1C,EAAE9R,KAAKvC,UAAY+W,EAAQ,wBAgBjG4kB,cAAchjB,EAAYsf,EAAMha,GAC5B,IAAK,IAAIxkB,KAAKG,KAAK8+B,UAAW,CAC1B,IAAIzqB,EAAIrU,KAAK8+B,UAAUj/B,GACvBG,KAAKq+B,KAAKzf,aAAavK,EAAE7L,KACzBxI,KAAKqkB,KAAKzF,aAAavK,EAAE7L,KACzBxI,KAAKq+B,KAAKxf,oBAAoBxK,EAAE9L,WAChCvI,KAAKq+B,KAAKxf,oBAAoBxK,EAAE9L,WAChCvI,KAAKgiC,aAAa3tB,EAAG0K,EAAYsf,EAAMha,IAkB/C2d,aAAa3tB,EAAG0K,EAAYsf,EAAMha,GAC9B,GAAIhQ,aAAanG,EACb,IAAK,IAAIzM,KAAK4S,EAAE4B,aAAc,CAE1B,GADAooB,EAAKhe,YAAYhM,EAAE4B,aAAaxU,GAAGyP,WAAYmD,EAAE4B,aAAaxU,GAAG0P,SAAUkD,EAAE4B,aAAaxU,GAAG2P,kBAAmBiD,EAAE4B,aAAaxU,GAAG4P,gBAAiBrR,KAAKmc,WAAWshB,OAAOtgB,MAAOnd,KAAKmc,WAAWshB,OAAOrgB,WACpMpd,KAAKmc,WAAWkhB,wBAA0Br9B,KAAKmc,WAAWohB,iBAAkB,CAC5E,GAAIlpB,EAAE4B,aAAaxU,GAAGyP,WAAWvI,KAAKpC,QAAS,CAC3C,MAAM07B,EAAKjiC,KAAKmc,WAAWshB,OAAOC,WAAWrZ,KAAOA,EAAOga,EAC3D4D,EAAGrjB,aAAa,GAAGvK,EAAE7L,UACrBy5B,EAAGpjB,oBAAoB,GAAGxK,EAAE9L,0BACxB8L,EAAE4B,aAAaxU,GAAGyP,WAAWvI,KAAKgyB,iBAClCsH,EAAGzgB,aAAanN,EAAE4B,aAAaxU,GAAGyP,WAAY,EAAGlR,KAAK8hC,aAAaztB,EAAE4B,aAAaxU,GAAGyP,WAAYlR,KAAKmc,WAAWshB,OAAOC,WAAWvgB,QAGnI8kB,EAAG1gB,cAAclN,EAAE4B,aAAaxU,GAAGyP,WAAY,EAAGlR,KAAK8hC,aAAaztB,EAAE4B,aAAaxU,GAAGyP,WAAYlR,KAAKmc,WAAWshB,OAAOC,WAAWvgB,QAI5I,GADA9I,EAAE4B,aAAaxU,GAAGyP,WAAWvI,KAAKoW,WAAaA,EAC3C1K,EAAE4B,aAAaxU,GAAG0P,SAASxI,KAAKpC,QAAS,CACzC,MAAM07B,EAAKjiC,KAAKmc,WAAWshB,OAAOC,WAAWrZ,KAAOA,EAAOga,EAC3D4D,EAAGrjB,aAAa,GAAGvK,EAAE7L,UACrBy5B,EAAGpjB,oBAAoB,GAAGxK,EAAE9L,0BACxB8L,EAAE4B,aAAaxU,GAAG0P,SAASxI,KAAKgyB,iBAChCsH,EAAGzgB,aAAanN,EAAE4B,aAAaxU,GAAG0P,SAAU,EAAGnR,KAAK8hC,aAAaztB,EAAE4B,aAAaxU,GAAG0P,SAAUnR,KAAKmc,WAAWshB,OAAOC,WAAWvgB,QAG/H8kB,EAAG1gB,cAAclN,EAAE4B,aAAaxU,GAAG0P,SAAU,EAAGnR,KAAK8hC,aAAaztB,EAAE4B,aAAaxU,GAAG0P,SAAUnR,KAAKmc,WAAWshB,OAAOC,WAAWvgB,QAGxI,GAAI9I,EAAE4B,aAAaxU,GAAG2P,kBAAkBzI,KAAKpC,QAAS,CAClD,MAAM07B,EAAKjiC,KAAKmc,WAAWshB,OAAOE,cAActZ,KAAOA,EAAOga,EAC9D4D,EAAGrjB,aAAa,GAAGvK,EAAE7L,UACrBy5B,EAAGpjB,oBAAoB,GAAGxK,EAAE9L,kCAC5B05B,EAAGxgB,aAAapN,EAAE4B,aAAaxU,GAAG2P,kBAAmB,EAAGpR,KAAK8hC,aAAaztB,EAAE4B,aAAaxU,GAAG2P,kBAAmBpR,KAAKmc,WAAWshB,OAAOE,cAAcxgB,QAExJ,GAAI9I,EAAE4B,aAAaxU,GAAG4P,gBAAgB1I,KAAKpC,QAAS,CAChD,MAAM07B,EAAKjiC,KAAKmc,WAAWshB,OAAOE,cAActZ,KAAOA,EAAOga,EAC9D4D,EAAGrjB,aAAa,GAAGvK,EAAE7L,UACrBy5B,EAAGpjB,oBAAoB,GAAGxK,EAAE9L,gCAC5B05B,EAAGxgB,aAAapN,EAAE4B,aAAaxU,GAAG4P,gBAAiB,EAAGrR,KAAK8hC,aAAaztB,EAAE4B,aAAaxU,GAAG4P,gBAAiBrR,KAAKmc,WAAWshB,OAAOE,cAAcxgB,QAEpJ9I,EAAE4B,aAAaxU,GAAGyP,WAAWvI,KAAKoW,WAAaA,EAC/C1K,EAAE4B,aAAaxU,GAAG0P,SAASxI,KAAKoW,WAAaA,EAC7C1K,EAAE4B,aAAaxU,GAAG2P,kBAAkBzI,KAAKoW,WAAaA,EACtD1K,EAAE4B,aAAaxU,GAAG4P,gBAAgB1I,KAAKoW,WAAaA,OAGpD1K,EAAE4B,aAAaxU,GAAGyP,WAAWvI,KAAKoW,WAAaA,EAC/C1K,EAAE4B,aAAaxU,GAAG0P,SAASxI,KAAKoW,WAAaA,EAC7C1K,EAAE4B,aAAaxU,GAAG2P,kBAAkBzI,KAAKoW,WAAaA,EACtD1K,EAAE4B,aAAaxU,GAAG4P,gBAAgB1I,KAAKoW,WAAaA,EAEpD/e,KAAKmc,WAAWihB,uBAAyBp9B,KAAKmc,WAAWmhB,kBACzDe,EAAKzf,aAAa,GAAGvK,EAAE7L,UACvB61B,EAAKxf,oBAAoB,GAAGxK,EAAE9L,wBAC9B81B,EAAK/uB,KAAK+E,EAAE4B,aAAaxU,GAAGyP,WAAYmD,EAAE4B,aAAaxU,GAAG2P,kBAAmBpR,KAAKmc,WAAWshB,OAAOhd,WAAWtD,MAAOnd,KAAKmc,WAAWshB,OAAOhd,WAAWrD,WACxJihB,EAAKzf,aAAa,GAAGvK,EAAE7L,UACvB61B,EAAKxf,oBAAoB,GAAGxK,EAAE9L,sBAC9B81B,EAAK/uB,KAAK+E,EAAE4B,aAAaxU,GAAG0P,SAAUkD,EAAE4B,aAAaxU,GAAG4P,gBAAiBrR,KAAKmc,WAAWshB,OAAOhd,WAAWtD,MAAOnd,KAAKmc,WAAWshB,OAAOhd,WAAWrD,iBAI3J,GAAI/I,aAAatI,GAElB,GADAsyB,EAAK1c,QAAQtN,EAAGrU,KAAKmc,WAAWwF,QAAQxE,MAAOnd,KAAKmc,WAAWwF,QAAQvE,YAClEpd,KAAKmc,WAAWohB,iBACjB,IAAK,IAAI19B,KAAKwU,EAAEvI,SACZuI,EAAEvI,SAASjM,GAAG8I,KAAKoW,WAAaA,OAIvC,GAAI1K,aAAa8U,EAClBkV,EAAKzc,SAAS,CAACvN,EAAE9S,EAAG8S,EAAE7S,EAAG6S,EAAE5S,IAAI,EAAOzB,KAAKmc,WAAWoQ,SAASpP,MAAOnd,KAAKmc,WAAWoQ,SAASnP,WAC1Fpd,KAAKmc,WAAWohB,mBACjBlpB,EAAE9S,EAAEoH,KAAKoW,WAAa1K,EAAE7S,EAAEmH,KAAKoW,WAAa1K,EAAE5S,EAAEkH,KAAKoW,WAAaA,QAErE,GAAI1K,aAAasiB,EACd32B,KAAKmc,WAAWmhB,kBAChBe,EAAKzf,aAAa,GAAGvK,EAAE7L,UACvB61B,EAAKxf,oBAAoB,GAAGxK,EAAE9L,oBAE9B81B,EAAK/uB,KAAK+E,EAAE9J,OAAOZ,QAAQV,IAAI,EAAGoL,EAAE2iB,iBAAiBxsB,OAAO6J,EAAE2M,SAAU3M,EAAE9J,QAAS8J,EAAEuiB,KAAM,WAC3FyH,EAAKzf,aAAa,GAAGvK,EAAE7L,UACvB61B,EAAKxf,oBAAoB,GAAGxK,EAAE9L,oBAE9B81B,EAAK/uB,KAAK+E,EAAE9J,OAAOZ,QAAQV,IAAIoL,EAAEyiB,gBAAiB,GAAGtsB,OAAO6J,EAAE2M,SAAU3M,EAAE9J,QAAS8J,EAAEuiB,KAAM,YAE/FyH,EAAKzf,aAAavK,EAAE7L,KACpB61B,EAAKxf,oBAAoB,GAAGxK,EAAE9L,aAC9B81B,EAAKxd,QAAQxM,EAAE9J,OAEf8J,EAAEwiB,UAAWxiB,EAAE0iB,UAAW/2B,KAAKmc,WAAW0E,QAAQ1D,MAAOnd,KAAKmc,WAAW0E,QAAQzD,UAAW/I,EAAE2M,UACzFhhB,KAAKmc,WAAWohB,mBACjBlpB,EAAE9J,OAAO5B,KAAKoW,WAAaA,EAC3B1K,EAAEuiB,KAAKjuB,KAAKoW,WAAaA,QAG5B,GAAI1K,aAAa4kB,EAAgB,CAClCoF,EAAKzf,aAAavK,EAAE7L,KACpB61B,EAAKxf,oBAAoB,GAAGxK,EAAE9L,aAO9B,MAAMhI,EAAO04B,EAAeC,mBAAmBhe,eAAe7G,EAAEwM,QAAQtW,OAAOzK,EAAGuU,EAAEwM,QAAQtW,OAAOxK,EAAGsU,EAAEwM,QAAQgW,UAAWxiB,EAAEwM,QAAQkW,UAAW1iB,EAAE0G,WAAY1G,EAAE2G,SAAU3G,EAAEwM,QAAQG,SAAU,CAAE1F,aAAa,IAC7M+iB,EAAK/mB,KAAK/W,EAAMP,KAAKmc,WAAWyhB,cAAczgB,MAAOnd,KAAKmc,WAAWyhB,cAAcxgB,gBAE9E/I,aAAa2F,EAClBqkB,EAAKlkB,OAAO9F,EAAE9J,OAAQ8J,EAAE4F,OAAQja,KAAKmc,WAAWhC,OAAOgD,MAAOnd,KAAKmc,WAAWhC,OAAOiD,WAEhF/I,aAAayG,EAClBujB,EAAK1d,UAAUtM,EAAE8F,OAAO5P,OAAQ8J,EAAE8F,OAAOF,OAAQ5F,EAAE0G,WAAY1G,EAAE2G,SAAUhb,KAAKmc,WAAW0hB,aAAa1gB,MAAOnd,KAAKmc,WAAW0hB,aAAazgB,WAEvI/I,aAAa/L,GACdtI,KAAKmc,WAAWghB,cAAkB9oB,EAAE1L,KAAKtC,YAAegO,EAAE1L,KAAKvC,YAAciO,EAAE1L,KAAKpC,UAEpF83B,EAAK5c,aAAapN,EAAG,EAAGrU,KAAKmc,WAAWzV,OAAOyW,OAC/C9I,EAAE1L,KAAKoW,WAAaA,GAGnB1K,aAAayF,GAClBukB,EAAK/uB,KAAK+E,EAAE9S,EAAG8S,EAAE7S,EAAGxB,KAAKmc,WAAW7M,KAAK6N,MAAOnd,KAAKmc,WAAW7M,KAAK8N,WAChEpd,KAAKmc,WAAWohB,kBAAqBlpB,EAAE9S,EAAEoH,KAAKtC,aAC/CgO,EAAE9S,EAAEoH,KAAKoW,WAAaA,GACrB/e,KAAKmc,WAAWohB,kBAAqBlpB,EAAE7S,EAAEmH,KAAKtC,aAC/CgO,EAAE7S,EAAEmH,KAAKoW,WAAaA,IAErB1K,aAAa9D,GAClB8tB,EAAK5e,MAAMpL,EAAE9S,EAAG8S,EAAE7S,EAAGxB,KAAKmc,WAAW4hB,OAAO5gB,OACxCnd,KAAKmc,WAAWohB,kBAAoBlpB,EAAE7S,EAAEmH,KAAKtC,YAAcgO,EAAE7S,EAAEmH,KAAKpC,SACpE83B,EAAKzf,aAAa,GAAGvK,EAAE7L,UACvB61B,EAAKxf,oBAAoB,GAAGxK,EAAE9L,oBAC9B81B,EAAK5c,aAAapN,EAAE7S,EAAG,EAAG,YAG1B6S,EAAE7S,EAAEmH,KAAKoW,WAAaA,EAErB/e,KAAKmc,WAAWohB,kBAAqBlpB,EAAE9S,EAAEoH,KAAKtC,aAC/CgO,EAAE9S,EAAEoH,KAAKoW,WAAaA,GACrB/e,KAAKmc,WAAWohB,kBAAqBlpB,EAAE7S,EAAEmH,KAAKtC,aAC/CgO,EAAE7S,EAAEmH,KAAKoW,WAAaA,IAErB1K,aAAaid,GACdtxB,KAAKmc,WAAWmhB,kBAChBe,EAAKzf,aAAa,GAAGvK,EAAE7L,UACvB61B,EAAKxf,oBAAoB,GAAGxK,EAAE9L,kBAC9B81B,EAAK/uB,KAAK+E,EAAEkd,UAAWld,EAAEmd,WAAYxxB,KAAKmc,WAAWuD,MAAMvC,MAAOnd,KAAKmc,WAAWuD,MAAMtC,YAE5FiH,EAAKzF,aAAavK,EAAE7L,KACpB6b,EAAK3E,MAAMrL,EAAEqL,MAAOrL,EAAEkd,UAAWld,EAAEmd,WAAW7nB,QAAQJ,IAAI8K,EAAEkd,YACxDvxB,KAAKmc,WAAWohB,mBAChBc,EAAKzf,aAAa,GAAGvK,EAAE7L,UACvB61B,EAAKxf,oBAAoB,GAAGxK,EAAE9L,yBAC9B81B,EAAK5c,aAAapN,EAAEmd,WAAY,EAAGxxB,KAAKmc,WAAWuD,MAAMvC,OACzD9I,EAAEmd,WAAW7oB,KAAKoW,WAAaA,IAG9B1K,aAAaod,GAClBpN,EAAKzF,aAAavK,EAAE7L,KACpB6b,EAAKxC,KAAKxN,EAAEwN,KAAMxN,EAAEsC,OAAO7W,EAAGuU,EAAEsC,OAAO5W,EAAGsU,GACtCrU,KAAKmc,WAAW0F,KAAKlL,SACrB0nB,EAAKzf,aAAa,GAAGvK,EAAE7L,UACvB61B,EAAKxf,oBAAoB,GAAGxK,EAAE9L,qBAC7BvI,KAAKmc,WAAW0F,KAAKwC,KAAOA,EAAOga,GAAMpuB,MAAMoE,EAAEsC,OAAQ3W,KAAKmc,WAAW0F,KAAK1E,QAEnF9I,EAAEsC,OAAOhO,KAAKoW,WAAaA,GAG3BpS,QAAQu1B,MAAM,sCAElB7D,EAAKxf,oBAAoB,MACzBwf,EAAKzf,aAAa,MAClByF,EAAKxF,oBAAoB,MACzBwF,EAAKzF,aAAa,MAatBujB,kBAAkB9D,GAEY,MAAtBr+B,KAAK4+B,eAAyB5+B,KAAK4+B,cAAc9yB,SAASxJ,OAAS,IACnE+7B,EAAKzf,aAAa5e,KAAK4+B,cAAcp2B,KACrC61B,EAAK1c,QAAQ3hB,KAAK4+B,cAAe,WACjCP,EAAK3c,UAAU1hB,KAAK4+B,cAAc9yB,SAAS,GAAI,EAAG,YAgB1DqxB,aAAape,EAAYsf,GAErB,IAAK,IAAIx+B,KAAKG,KAAK8L,SACX9L,KAAKmc,WAAWghB,cAAgBn9B,KAAK8L,SAASjM,GAAG8I,KAAKoW,YAAcA,GAAc/e,KAAK8L,SAASjM,GAAG8I,KAAKpC,UACxG83B,EAAKzf,aAAa5e,KAAK8L,SAASjM,GAAG2I,KACnC61B,EAAK7c,aAAaxhB,KAAK8L,SAASjM,GAAI,EAAGG,KAAK8hC,aAAa9hC,KAAK8L,SAASjM,GAAI,mBAC3EG,KAAK8L,SAASjM,GAAG8I,KAAKoW,WAAaA,GAc/CogB,SACI,MAAMpgB,EAAa/e,KAAK+e,aAExB/e,KAAKq+B,KAAKvf,eAAeC,GACzB/e,KAAKqkB,KAAKvF,eAAeC,GACrB/e,KAAK06B,OAAOgC,UACZ18B,KAAK06B,OAAOgC,WAChB18B,KAAKgf,QACDhf,KAAK06B,OAAOkC,SACZ58B,KAAK06B,OAAOkC,QAAQ58B,KAAKq+B,KAAMr+B,KAAKqkB,MACxCrkB,KAAKw/B,QAAQzgB,EAAY/e,KAAKq+B,KAAMr+B,KAAKqkB,MACrCrkB,KAAK06B,OAAOmC,UACZ78B,KAAK06B,OAAOmC,SAAS78B,KAAKq+B,KAAMr+B,KAAKqkB,MACzCrkB,KAAKq+B,KAAKhf,aAAaN,GACvB/e,KAAKqkB,KAAKhF,aAAaN,GAU3BygB,QAAQzgB,EAAYsf,EAAMha,GACtBrkB,KAAKw9B,SAASa,GACVr+B,KAAK06B,OAAOW,YACZr7B,KAAKq7B,WAAWgD,GACpBr+B,KAAK+hC,cAAchjB,EAAYsf,EAAMha,GACrCrkB,KAAKm9B,aAAape,EAAYsf,GAC9Br+B,KAAKmiC,kBAAkB9D,GAGvBA,EAAKzf,kBAAazF,GAClBklB,EAAKxf,yBAAoB1F,GAa7B6F,QAEIhf,KAAKq+B,KAAKrf,MAAMhf,KAAK06B,OAAOe,iBAchC2G,eAAejD,GACX,IAAK,IAAIt/B,KAAKG,KAAK8L,SACf9L,KAAK8L,SAASjM,GAAG8I,KAAKrC,YAAa,EAGvC,OAFI64B,GACAn/B,KAAKm/B,SACFn/B,KAUXonB,WACI,OAAO,IAAIta,EAAO9M,KAAKwhC,uBAAuB,EAAG,GAAIxhC,KAAKwhC,uBAAuBxhC,KAAKic,WAAW3N,MAAQtO,KAAK06B,OAAOuB,UAAWj8B,KAAKic,WAAW1N,OAASvO,KAAK06B,OAAOwB,YAUzKE,WACIp8B,KAAKq8B,MAAMD,SAASp8B,MAOxBqiC,SAASC,EAAMC,GACX,OAAOC,WAAW7U,WAAW8U,iBAAiBH,EAAM,MAAMI,iBAAiBH,IAQ/EI,6BACI,MAAM56B,EAAQ/H,KACR4iC,EAAY76B,EAAMud,OAAO9G,WAC/BzW,EAAMud,OAAOlH,MAAMykB,QAAU,OAC7B,IAAIC,EAAU9iC,KAAKqiC,SAASO,EAAW,YAAc,EAAGG,EAAS/iC,KAAKqiC,SAASt6B,EAAMud,OAAQ,iBAAmB,EAAG0d,EAAKhjC,KAAKqiC,SAASO,EAAW,iBAAmBE,EAASG,EAAKjjC,KAAKqiC,SAASO,EAAW,kBAAoBE,EAASI,EAAKljC,KAAKqiC,SAASO,EAAW,gBAAkBE,EAASzD,EAAKr/B,KAAKqiC,SAASO,EAAW,mBAAqBE,EAASK,EAAKnjC,KAAKqiC,SAASt6B,EAAMud,OAAQ,sBAAwByd,EAAQK,EAAKpjC,KAAKqiC,SAASt6B,EAAMud,OAAQ,uBAAyByd,EAAQM,EAAKrjC,KAAKqiC,SAASt6B,EAAMud,OAAQ,qBAAuByd,EAAQO,EAAKtjC,KAAKqiC,SAASt6B,EAAMud,OAAQ,wBAA0Byd,EACvlBzyB,EAAIsyB,EAAUW,YACd9oB,EAAImoB,EAAUY,aAElB,OADAz7B,EAAMud,OAAOlH,MAAMykB,QAAU,QACtB,CAAEv0B,MAAOgC,EAAI0yB,EAAKC,EAAKE,EAAKC,EAAI70B,OAAQkM,EAAIyoB,EAAK7D,EAAKgE,EAAKC,GAYtEtE,eACI,MAAMj3B,EAAQ/H,KACRyjC,EAAW,CAACnzB,EAAGmK,KACjBnK,GAAKvI,EAAM2yB,OAAOqB,kBAClBthB,GAAK1S,EAAM2yB,OAAOsB,mBAClBj0B,EAAMkU,WAAW3N,MAAQgC,EACzBvI,EAAMkU,WAAW1N,OAASkM,EACtB1S,EAAMud,kBAAkBoe,mBACxB37B,EAAMud,OAAOhX,MAAQgC,EACrBvI,EAAMud,OAAO/W,OAASkM,GAEjB1S,EAAMud,kBAAkBqe,YAC7B3jC,KAAKslB,OAAO/G,aAAa,UAAW,OAAOjO,KAAKmK,KAChDza,KAAKslB,OAAO/G,aAAa,QAAS,GAAGjO,KACrCtQ,KAAKslB,OAAO/G,aAAa,SAAU,GAAG9D,KACtCza,KAAKq+B,KAAK3hB,QAAQ3U,EAAMkU,YACxBjc,KAAKm+B,aAAa/f,MAAM9P,MAAQ,GAAGgC,MACnCtQ,KAAKm+B,aAAa/f,MAAM7P,OAAS,GAAGkM,OAGpC9N,QAAQu1B,MAAM,0GAEdn6B,EAAM2yB,OAAOY,kBAGbvzB,EAAM67B,cAAa,IAG3B,GAAI77B,EAAM2yB,OAAOG,WAAa9yB,EAAM2yB,OAAOK,YAAa,CAEpD,IAAIzsB,EAAQqf,WAAWkW,YAAc9lB,SAAS+lB,gBAAgBP,aAAexlB,SAAS4gB,KAAK4E,YACvFh1B,EAASof,WAAWoW,aAAehmB,SAAS+lB,gBAAgBN,cAAgBzlB,SAAS4gB,KAAK6E,aAC9Fz7B,EAAMud,OAAOlH,MAAMuB,SAAW,WAC9B5X,EAAMud,OAAOlH,MAAM9P,MAAQvG,EAAM2yB,OAAOqB,kBAAoBztB,EAAQ,KACpEvG,EAAMud,OAAOlH,MAAM7P,OAASxG,EAAM2yB,OAAOqB,kBAAoBxtB,EAAS,KACtExG,EAAMud,OAAOlH,MAAMqgB,IAAM,MACzB12B,EAAMud,OAAOlH,MAAMogB,KAAO,MAC1BiF,EAASn1B,EAAOC,QAEf,GAAIxG,EAAM2yB,OAAOK,YAAa,CAE/BhzB,EAAMud,OAAOlH,MAAMuB,SAAW,WAC9B,MAAMqkB,EAAQhkC,KAAK2iC,6BACnB56B,EAAMud,OAAOlH,MAAM9P,MAAQvG,EAAM2yB,OAAOqB,kBAAoBiI,EAAM11B,MAAQ,KAC1EvG,EAAMud,OAAOlH,MAAM7P,OAASxG,EAAM2yB,OAAOsB,mBAAqBgI,EAAMz1B,OAAS,KAC7ExG,EAAMud,OAAOlH,MAAMqgB,IAAM,KACzB12B,EAAMud,OAAOlH,MAAMogB,KAAO,KAC1BiF,EAASO,EAAM11B,MAAO01B,EAAMz1B,aAG5BxG,EAAMud,OAAOlH,MAAM9P,MAAQ,KAC3BvG,EAAMud,OAAOlH,MAAM7P,OAAS,KAC5Bk1B,EAAS17B,EAAM2yB,OAAOiB,mBAAoB5zB,EAAM2yB,OAAOmB,qBAEvD9zB,EAAM2yB,OAAOgB,gBACb3zB,EAAMo3B,SAWd8E,wBAAwBtiB,GACpB,IAAK,IAAI9hB,KAAKG,KAAK8L,SACX9L,KAAK8L,SAASjM,GAAG8I,KAAKtC,YAAcsb,EAAQtV,aAAarM,KAAK8L,SAASjM,MACvEG,KAAK8L,SAASjM,GAAG8I,KAAKrC,YAAa,GAgB/Ci7B,gBAAgBtxB,EAAOi0B,GACnB,MAAMn8B,EAAQ/H,UACU,IAAbkkC,IACPA,EAAY,GAEhBA,GAAan8B,EAAMs2B,KAAKh0B,MAAMvK,EAG9B,IAAK,IAAI4hC,EAAS,EAAGA,EAAS35B,EAAM+D,SAASxJ,OAAQo/B,IAAU,CAC3D,IAAI73B,EAAO9B,EAAM+D,SAAS41B,GAC1B,IAAK73B,EAAKlB,KAAKvC,WAAayD,EAAKlB,KAAKtC,aAAewD,EAAKD,SAASqG,GAASi0B,EAExE,OAAO,IAAIzJ,EAAgB0J,UAAUt6B,EAAM4wB,EAAgB0J,UAAUC,QAAQC,UAAU3C,GAG/F,OAAO,KAWX4C,YAAY9gC,GAER,MAAMuE,EAAQ/H,KAGd,IAAIa,EAAIb,KAAKuhC,gBAAgBx5B,EAAMy5B,uBAAuBh+B,EAAE0E,OAAOwoB,IAAI5wB,EAAG0D,EAAE0E,OAAOwoB,IAAI3wB,GAAI06B,EAAgB8J,wBAA0BlhC,KAAK4B,IAAI8C,EAAM2yB,OAAOuB,UAAWl0B,EAAM2yB,OAAOwB,YACnL,GAAIr7B,EAEA,GADAkH,EAAM+D,SAASjL,EAAE6gC,QAAQ15B,UAAUN,eAAelE,GAC9CxD,KAAKwkC,YAAcxkC,KAAKwkC,WAAWvV,OAAO,SAAU,CACpD,GAAkB,SAAdpuB,EAAE4gC,SAAqB,CACvB,IAAI53B,EAAO9B,EAAM08B,MAAM5jC,EAAE6jC,QAAQzuB,aAAapV,EAAE8jC,QAAQ5wB,aAAalT,EAAE+jC,KACnE/6B,EAAKlB,KAAKtC,aACVwD,EAAKlB,KAAKrC,YAAcuD,EAAKlB,KAAKrC,iBAErC,GAAkB,UAAdzF,EAAE4gC,SAAsB,CAC7B,IAAI53B,EAAO9B,EAAM+D,SAASjL,EAAE6gC,QACxB73B,EAAKlB,KAAKtC,aACVwD,EAAKlB,KAAKrC,YAAcuD,EAAKlB,KAAKrC,YAE1CyB,EAAMo3B,cAEDn/B,KAAKwkC,WAAWvV,OAAO,OAC5BlnB,EAAM+D,SAASjL,EAAE6gC,QAAQ/4B,KAAKgyB,kBAAoB5yB,EAAM+D,SAASjL,EAAE6gC,QAAQ/4B,KAAKgyB,iBAChF5yB,EAAMo3B,eAGT,GAA2B,MAAvBp3B,EAAM62B,cAAuB,CAClC,MAAM/0B,EAAO9B,EAAMy5B,uBAAuBh+B,EAAE0E,OAAOwoB,IAAI5wB,EAAG0D,EAAE0E,OAAOwoB,IAAI3wB,GACvEgI,EAAM62B,cAAc9yB,SAASxK,KAAK,IAAIgH,EAAOuB,EAAK/J,EAAG+J,EAAK9J,IAC1DgI,EAAMo3B,UAcdqC,uBAAuB1hC,EAAGC,GACtB,MAAO,CACHD,GAAIA,EAAIE,KAAK06B,OAAOuB,UAAYj8B,KAAK06B,OAAOtK,SAAWpwB,KAAK06B,OAAO9uB,OACnE7L,GAAIA,EAAIC,KAAK06B,OAAOwB,UAAYl8B,KAAK06B,OAAOrK,SAAWrwB,KAAK06B,OAAO7uB,QAe3Eg5B,oBAAoB/kC,EAAGC,GACnB,MAAO,CAAED,EAAGA,EAAIE,KAAK06B,OAAOuB,UAAYj8B,KAAK06B,OAAOtK,QAASrwB,EAAGA,EAAIC,KAAK06B,OAAOwB,UAAYl8B,KAAK06B,OAAOrK,SAU5GyU,yBACI,OAAO9kC,KAAK6+B,gBAAgBv8B,OAYhCyiC,iBAAiBvhC,GACb,MAAMuE,EAAQ/H,KACd,GAAgB,GAAZwD,EAAEysB,OAAN,CAEA,IAAIpvB,EAAIkH,EAAMw5B,gBAAgBx5B,EAAMy5B,uBAAuBh+B,EAAE0E,OAAOwoB,IAAI5wB,EAAG0D,EAAE0E,OAAOwoB,IAAI3wB,GAAI06B,EAAgB8J,wBAA0BlhC,KAAK4B,IAAI8C,EAAM2yB,OAAOuB,UAAWl0B,EAAM2yB,OAAOwB,YACpL,GAAKr7B,EAAL,CAGA,GAAkB,UAAdA,EAAE4gC,UAAwB15B,EAAM+D,SAASjL,EAAE6gC,QAAQ/4B,KAAKrC,WAGxD,IAAK,IAAIzG,EAAI,EAAGA,EAAIkI,EAAM+D,SAASxJ,OAAQzC,IACnCkI,EAAM+D,SAASjM,GAAG8I,KAAKrC,aACvByB,EAAM82B,gBAAgBv9B,KAAK,IAAIm5B,EAAgB0J,UAAUp8B,EAAM+D,SAASjM,GAAI46B,EAAgB0J,UAAUC,QAAQC,UAAUxkC,IACxHkI,EAAM+D,SAASjM,GAAGmI,UAAUH,mBAAmBrE,QAItD,CAED,IAAKuE,EAAM+D,SAASjL,EAAE6gC,QAAQ/4B,KAAKvC,UAC/B,OACJ2B,EAAM82B,gBAAgBv9B,KAAKT,GACT,SAAdA,EAAE4gC,SACF15B,EAAM08B,MAAM5jC,EAAE6jC,QAAQzuB,aAAapV,EAAE8jC,QAAQ5wB,aAAalT,EAAE+jC,KAAK58B,UAAUH,mBAAmBrE,GAC3E,UAAd3C,EAAE4gC,UACP15B,EAAM+D,SAASjL,EAAE6gC,QAAQ15B,UAAUH,mBAAmBrE,GAE9DuE,EAAMo3B,WAaV6F,iBAAiBxhC,GACb,MAAMuE,EAAQ/H,KACRilC,EAAgB,CAAEnlC,EAAG0D,EAAE0E,OAAO8oB,WAAWlxB,EAAGC,EAAGyD,EAAE0E,OAAO8oB,WAAWjxB,GAUzE,GATAyD,EAAE0E,OAAO8oB,WAAWlxB,GAAKiI,EAAM2yB,OAAOuB,UACtCz4B,EAAE0E,OAAO8oB,WAAWjxB,GAAKgI,EAAM2yB,OAAOwB,UAQlCl8B,KAAKwkC,WAAWvV,OAAO,QAAUjvB,KAAKwkC,WAAWvV,OAAO,YACxDlnB,EAAMu4B,UAAUv4B,EAAMs2B,KAAKriB,OAAOrS,QAAQV,IAAIzF,EAAE0E,OAAO8oB,aACvDjpB,EAAMo3B,cAQN,IAAK,IAAIt/B,KAFT2D,EAAE0E,OAAO8oB,WAAWlxB,GAAKiI,EAAMs2B,KAAKh0B,MAAMvK,EAC1C0D,EAAE0E,OAAO8oB,WAAWjxB,GAAKgI,EAAMs2B,KAAKh0B,MAAMtK,EAC5BgI,EAAM82B,gBAAiB,CACjC,IAAIh+B,EAAIkH,EAAM82B,gBAAgBh/B,GAC9B,GAAkB,SAAdgB,EAAE4gC,SACF15B,EAAM08B,MAAM5jC,EAAE6jC,QAAQ3yB,eAAelR,EAAE8jC,OAAQ9jC,EAAE+jC,IAAK,IAAIt8B,EAAO9E,EAAE0E,OAAO8oB,WAAWlxB,EAAG0D,EAAE0E,OAAO8oB,WAAWjxB,IAC5GgI,EAAM08B,MAAM5jC,EAAE6jC,QAAQzuB,aAAapV,EAAE8jC,QAAQ5wB,aAAalT,EAAE+jC,KAAK58B,UAAUJ,cAAcpE,QAExF,GAAkB,UAAd3C,EAAE4gC,SAAsB,CAC7B,IAAK15B,EAAM+D,SAASjL,EAAE6gC,QAAQ/4B,KAAKvC,UAC/B,SACJ2B,EAAM+D,SAASjL,EAAE6gC,QAAQz4B,IAAIzF,EAAE0E,OAAO8oB,YACtCjpB,EAAM+D,SAASjL,EAAE6gC,QAAQ15B,UAAUJ,cAAcpE,IAK7DA,EAAE0E,OAAO8oB,WAAWlxB,EAAImlC,EAAcnlC,EACtC0D,EAAE0E,OAAO8oB,WAAWjxB,EAAIklC,EAAcllC,EACtCgI,EAAMo3B,SAYV+F,eAAe1hC,GACX,MAAMuE,EAAQ/H,KACd,GAAgB,GAAZwD,EAAEysB,OAAN,CAKA,IAAK,IAAIpwB,KAHJ2D,EAAE0E,OAAO6oB,YACVhpB,EAAMu8B,YAAY9gC,GAERuE,EAAM82B,gBAAiB,CACjC,IAAIh+B,EAAIkH,EAAM82B,gBAAgBh/B,GACZ,SAAdgB,EAAE4gC,SACF15B,EAAM08B,MAAM5jC,EAAE6jC,QAAQzuB,aAAapV,EAAE8jC,QAAQ5wB,aAAalT,EAAE+jC,KAAK58B,UAAUF,iBAAiBtE,GAEzE,UAAd3C,EAAE4gC,UACP15B,EAAM+D,SAASjL,EAAE6gC,QAAQ15B,UAAUF,iBAAiBtE,GAG5DuE,EAAM82B,gBAAkB,GACxB92B,EAAMo3B,UAYVgG,kBAAkB3hC,GACd,IAAI4hC,EAAW,KAEf,MAAMr9B,EAAQ/H,KACRqlC,EAAK7hC,EACP6hC,EAAGrP,OAAS,EACZjuB,EAAMy4B,QAAQz4B,EAAM2yB,OAAO9uB,OAASw5B,EAAUr9B,EAAM2yB,OAAO7uB,OAASu5B,EAAU,IAAI98B,EAAO9E,EAAE0E,OAAOwoB,IAAI5wB,EAAG0D,EAAE0E,OAAOwoB,IAAI3wB,IAEjHslC,EAAGrP,OAAS,GACjBjuB,EAAMy4B,QAAQz4B,EAAM2yB,OAAO9uB,OAASw5B,EAAUr9B,EAAM2yB,OAAO7uB,OAASu5B,EAAU,IAAI98B,EAAO9E,EAAE0E,OAAOwoB,IAAI5wB,EAAG0D,EAAE0E,OAAOwoB,IAAI3wB,IAE1HyD,EAAE4yB,iBACFruB,EAAMo3B,SASVyE,aAAazE,GACTn/B,KAAKq+B,KAAKriB,OAAOlc,EACbE,KAAKqkB,KAAKrI,OAAOlc,EACbE,KAAK06B,OAAOtK,QACRpwB,KAAKic,WAAW3N,OAAStO,KAAK06B,OAAOa,qBAAuB,KACxEv7B,KAAKq+B,KAAKriB,OAAOjc,EACbC,KAAKqkB,KAAKrI,OAAOjc,EACbC,KAAK06B,OAAOrK,QACRrwB,KAAKic,WAAW1N,QAAUvO,KAAK06B,OAAOc,qBAAuB,KACrE2D,GACAn/B,KAAKm/B,SAUbmB,UAAUgF,GACNtlC,KAAKq+B,KAAKriB,OAAOpT,IAAI08B,GACrBtlC,KAAKqkB,KAAKrI,OAAOpT,IAAI08B,GACrBtlC,KAAK06B,OAAOtK,QAAUkV,EAAUxlC,EAChCE,KAAK06B,OAAOrK,QAAUiV,EAAUvlC,EAWpCygC,QAAQ+E,EAAaC,EAAaC,GAC9B,IAAIC,EAAS1lC,KAAKwhC,uBAAuBiE,EAAe3lC,EAAG2lC,EAAe1lC,GAC1EC,KAAKq+B,KAAKh0B,MAAMvK,EAAIE,KAAKqkB,KAAKha,MAAMvK,EAAIE,KAAK06B,OAAO9uB,OAASvI,KAAK2B,IAAIugC,EAAa,KACnFvlC,KAAKq+B,KAAKh0B,MAAMtK,EAAIC,KAAKqkB,KAAKha,MAAMtK,EAAIC,KAAK06B,OAAO7uB,OAASxI,KAAK2B,IAAIwgC,EAAa,KACnF,IAAIG,EAAS3lC,KAAKwhC,uBAAuBiE,EAAe3lC,EAAG2lC,EAAe1lC,GACtE6lC,EAAa5lC,KAAKq+B,KAAKriB,OAAOlc,GAAK6lC,EAAO7lC,EAAI4lC,EAAO5lC,GAAKE,KAAKq+B,KAAKh0B,MAAMvK,EAC1E+lC,EAAa7lC,KAAKq+B,KAAKriB,OAAOjc,GAAK4lC,EAAO5lC,EAAI2lC,EAAO3lC,GAAKC,KAAKq+B,KAAKh0B,MAAMtK,EAC9EC,KAAKsgC,UAAU,CAAExgC,EAAG8lC,EAAY7lC,EAAG8lC,IAEvC5G,wBACI,IAAIl3B,EAAQ/H,KA0BZ,GAzBIA,KAAK06B,OAAOoC,YAEZ,IAAIxN,EAAatvB,KAAKm+B,aAAen+B,KAAKm+B,aAAen+B,KAAKslB,QACzDuJ,MAAMrrB,IACPuE,EAAMg9B,iBAAiBvhC,MAEtBoD,MAAMpD,IACPuE,EAAMi9B,iBAAiBxhC,MAEtBwrB,IAAIxrB,IACLuE,EAAMm9B,eAAe1hC,MAIzBuE,EAAM4E,QAAQC,IAAI,+BAElB5M,KAAK06B,OAAOuC,iBAEZ,IAAI3N,EAAatvB,KAAKm+B,aAAen+B,KAAKm+B,aAAen+B,KAAKslB,QAAQ6K,OAAO3sB,IACzEuE,EAAMo9B,kBAAkB3hC,MAI5BuE,EAAM4E,QAAQC,IAAI,qCAElB5M,KAAK06B,OAAOqC,YAAa,CAEzB,MAAMhN,EAAUW,IACZ,MAAMlG,EAASziB,EAAMud,OAAOwgB,wBAC5B,MAAO,CAAEhmC,EAAG4wB,EAAI5wB,EAAI0qB,EAAOgU,KAAMz+B,EAAG2wB,EAAI3wB,EAAIyqB,EAAOiU,MAGvD,GAAyC,mBAA9B9Q,WAAwB,aAA+D,mBAApCA,WAA8B,kBACxF,IACI,IAAIoY,EAAe,KACfC,EAAe,KACfC,EAAiB,KACjBC,EAAuB,KAC3B,MAAMC,EAAa,KACfJ,EAAe,KACfC,EAAe,KACfC,EAAiB,KACjBC,EAAuB,KACvBn+B,EAAM82B,gBAAkB,IAEtBuH,EAAU,CACZhT,WAAa2B,IACT,GAA0B,GAAtBA,EAAIC,QAAQ1yB,SACZyjC,EAAe,IAAIz9B,EAAOynB,EAAO,CAAEjwB,EAAGi1B,EAAIC,QAAQ,GAAGqR,QAAStmC,EAAGg1B,EAAIC,QAAQ,GAAGsR,WAChFN,EAAe,IAAI19B,EAAOynB,EAAO,CAAEjwB,EAAGi1B,EAAIC,QAAQ,GAAGqR,QAAStmC,EAAGg1B,EAAIC,QAAQ,GAAGsR,YAChFL,EAAiBl+B,EAAMw5B,gBAAgBx5B,EAAMy5B,uBAAuBuE,EAAajmC,EAAGimC,EAAahmC,GAAI06B,EAAgB8L,wBAA0BljC,KAAK4B,IAAI8C,EAAM2yB,OAAOuB,UAAWl0B,EAAM2yB,OAAOwB,cAC5I,UAA3B+J,EAAexE,UAAsB,CACvD,IAAI+E,EAAiBz+B,EAAM+D,SAASm6B,EAAevE,QAC/C+E,EAAY,CACZv+B,OAAQ,CACJuoB,cAAc,EACdO,WAAY,CAAElxB,EAAG,EAAGC,EAAG,GACvBgxB,YAAY,EACZvB,aAAcwW,EAAar8B,QAC3B8lB,aAAcuW,EAAar8B,QAC3BjD,OAAQ8/B,IAGhBz+B,EAAM82B,gBAAkB,CAACoH,GACzBO,EAAex+B,UAAUH,mBAAmB4+B,KAIxD1S,UAAYgB,IACR,GAA0B,GAAtBA,EAAIC,QAAQ1yB,QAAe2jC,EAAgB,CAC3ClR,EAAIqB,iBACJrB,EAAI2R,kBACJ,IAAInW,EAAMR,EAAO,CAAEjwB,EAAGi1B,EAAIC,QAAQ,GAAGqR,QAAStmC,EAAGg1B,EAAIC,QAAQ,GAAGsR,UAC5DK,EAAQ5+B,EAAMy5B,uBAAuBjR,EAAIzwB,EAAGywB,EAAIxwB,GAChDsP,EAAO,IAAI/G,EAAOP,EAAMy5B,uBAAuBuE,EAAajmC,EAAGimC,EAAahmC,IAAIqK,WAAWu8B,GAC/F,GAA+B,UAA3BV,EAAexE,SAAsB,CACrC,IAAK15B,EAAM+D,SAASm6B,EAAevE,QAAQ/4B,KAAKvC,UAC5C,OACJ2B,EAAM+D,SAASm6B,EAAevE,QAAQz4B,IAAIoG,GAC1C,IAAIm3B,EAAiBz+B,EAAM+D,SAASm6B,EAAevE,QAC/C+E,EAAY,CACZhW,cAAc,EACdvoB,OAAQ,CACJ8oB,WAAY3hB,EAAK1F,QACjBonB,YAAY,EACZvB,aAAcwW,EAAar8B,QAC3B8lB,aAAcuW,EAAar8B,QAAQV,IAAIoG,GACvC3I,OAAQ8/B,IAGhBA,EAAex+B,UAAUJ,cAAc6+B,GACvC1+B,EAAMo3B,SAEV4G,EAAe,IAAIz9B,EAAOioB,QAEC,GAAtBwE,EAAIC,QAAQ1yB,SAEjByyB,EAAIqB,iBACJrB,EAAI2R,kBACJ3+B,EAAMu4B,UAAUv4B,EAAMs2B,KAAKriB,OACtBrS,QACAT,MAAM6rB,EAAIgB,OAAQhB,EAAIiB,SAC3BjuB,EAAMo3B,WAGdnL,SAAWe,IAEP,GAAIkR,GAA6C,UAA3BA,EAAexE,SAAsB,CACvD,IAAI+E,EAAiBz+B,EAAM+D,SAASm6B,EAAevE,QAC/C+E,EAAY,CACZhW,cAAc,EACdvoB,OAAQ,CACJ8oB,WAAY,CAAElxB,EAAG,EAAGC,EAAG,GACvBgxB,YAAY,EACZvB,aAAcwW,EAAar8B,QAC3B8lB,aAAcuW,EAAar8B,QAC3BjD,OAAQ8/B,IAIZT,GAAgBC,GAAgBA,EAAap8B,SAASm8B,GAAgB,KAEtES,EAAex+B,UAAUN,eAAe++B,GAGxCD,EAAex+B,UAAUF,iBAAiB2+B,GAGlDN,KAEJlS,YAAcc,IACVoR,KAEJ9S,gBAAkB0B,IACdmR,EAAuBn+B,EAAMs2B,KAAKh0B,MAAMV,SAE5C2pB,cAAgByB,IACZmR,EAAuB,MAE3B3S,MAAQwB,IAEJ,MAAM6R,EAAU,IAAIt+B,EAAOysB,EAAIC,QAAQ6R,KAAK,GAAGR,QAAStR,EAAIC,QAAQ6R,KAAK,GAAGP,SACtEQ,EAAU,IAAIx+B,EAAOysB,EAAIC,QAAQ6R,KAAK,GAAGR,QAAStR,EAAIC,QAAQ6R,KAAK,GAAGP,SACtE/7B,EAAS,IAAIuP,EAAK8sB,EAASE,GAASr3B,OAAO,IACjD1H,EAAMy4B,QAAQ0F,EAAqBpmC,EAAIi1B,EAAI9B,KAAMiT,EAAqBnmC,EAAIg1B,EAAI9B,KAAM1oB,GACpFxC,EAAMo3B,WAGV4H,OAA0B,kBAC1BA,OAA0B,kBAAE/mC,KAAKm+B,aAAen+B,KAAKm+B,aAAen+B,KAAKslB,OAAQ8gB,GAEjF,IAAI,EAAYpmC,KAAKm+B,aAAen+B,KAAKm+B,aAAen+B,KAAKslB,OAAQ8gB,GAE7E,MAAO5iC,GACHmJ,QAAQu1B,MAAM,qCACdv1B,QAAQu1B,MAAM1+B,QAGbmqB,WAAmB,QAAoC,mBAAxBA,WAAmB,OACvDhhB,QAAQu1B,MAAM,+FAIdv1B,QAAQoK,KAAK,wFAIjBhP,EAAM4E,QAAQC,IAAI,+BAElB5M,KAAK06B,OAAOsC,WAEZh9B,KAAKwkC,WAAa,IAAInX,EAAW,CAAEQ,UAAU,IACxCgB,KAAK,UAAU,WAChB9mB,EAAMq6B,gBAAe,MAEpBvT,KAAK,SAAS,WACf9mB,EAAM62B,cAAgB,IAAI7yB,EAC1BhE,EAAMo3B,YAELnQ,GAAG,SAAS,WAEc,MAAvBjnB,EAAM62B,gBAEV72B,EAAMk8B,wBAAwBl8B,EAAM62B,eACpC72B,EAAM62B,cAAgB,KACtB72B,EAAMo3B,aAIVp3B,EAAM4E,QAAQC,IAAI,kCAY1Bo6B,UAAUC,GAGN,GAAItZ,WAAkB,OAA6C,mBAAjCA,WAAkB,MAAEqZ,UAClD,OAAOrZ,WAAkB,MAAEqZ,UAAUhnC,KAAMinC,GAE3C,KAAM,8GAIlBxM,EAAgBmB,qBAAuB,KAEvCnB,EAAgBqB,sBAAwB,IAExCrB,EAAgB8J,wBAA0B,EAE1C9J,EAAgB8L,wBAA0B,GAK1C9L,EAAgB0J,YAAariB,EAAK,MAC1B5b,YAAY2gC,EAAMpF,GACdzhC,KAAK6mC,KAAOA,EACZ7mC,KAAKyhC,SAAWA,EAEpByF,WACI,OAAOlnC,KAAKyhC,UAAYhH,EAAgB0J,UAAUC,OAEtDC,UAAU3C,GAEN,OADA1hC,KAAK0hC,OAASA,EACP1hC,QAGZokC,OAAS,SACZtiB,GAIJ2Y,EAAgBlvB,MAAQ,CASpB47B,gBAAiB,CAACna,EAAMoa,KACpB,IAAK,IAAInqB,KAAKmqB,EACV,GAAKA,EAAUC,eAAepqB,GAE9B,GAAI+P,EAAKqa,eAAepqB,GAAI,CACxB,IAAIqqB,SAAata,EAAK/P,GACtB,IACe,WAAPqqB,EACAta,EAAK/P,KAAOzH,KAAKC,MAAM2xB,EAAUnqB,IACrB,UAAPqqB,EACLta,EAAK/P,GAAgC,EAA3BzH,KAAKC,MAAM2xB,EAAUnqB,KACnB,YAAPqqB,GAA4BF,EAAUnqB,GAC3C+P,EAAK/P,GAAKmqB,EAAUnqB,IAI5B,MAAOzZ,GACHmJ,QAAQu1B,MAAM,gBAAiBjlB,EAAGmqB,EAAUnqB,GAAIzZ,SAIpDwpB,EAAK/P,GAAKmqB,EAAUnqB,GAG5B,OAAO+P,GAYX2T,YAAa,CAACjT,EAAS9hB,EAAQC,KAC3B6hB,EAAQtP,MAAM,oBAAsB,MAEhCsP,EAAQtP,MAAMmpB,UADJ,GAAV37B,GAA2B,GAAVC,EACS,KAEA,SAAWD,EAAS,IAAMC,EAAS,KAGrE+uB,MAAO,CAQHE,IAAK,CAAC3lB,EAAKhP,EAAKqhC,IACPryB,EAAIkyB,eAAelhC,QAED,IAAZgP,EAAIhP,GACJqhC,EACJryB,EAAIhP,GAHAqhC,EAaftiC,IAAK,CAACiQ,EAAKhP,EAAKqhC,KACZ,IAAKryB,EAAIkyB,eAAelhC,GACpB,OAAOqhC,EACX,GAAwB,iBAAbryB,EAAIhP,GACX,OAAOgP,EAAIhP,GAEX,IACI,OAA8B,EAAvBqP,KAAKC,MAAMN,EAAIhP,IAE1B,MAAO3C,GACH,OAAOgkC,IAYnBxM,KAAM,CAAC7lB,EAAKhP,EAAKqhC,KACb,IAAKryB,EAAIkyB,eAAelhC,GACpB,OAAOqhC,EACX,GAAuB,kBAAZryB,EAAIhP,GACX,OAAOgP,EAAIhP,GAEX,IACI,QAASqP,KAAKC,MAAMN,EAAIhP,IAE5B,MAAO3C,GACH,OAAOgkC,IAYnB7K,KAAM,CAACxnB,EAAKhP,EAAKqhC,IACRryB,EAAIkyB,eAAelhC,GAEA,mBAAbgP,EAAIhP,GACJqhC,EACJryB,EAAIhP,GAHAqhC,GAenB3G,2BAA6BhnB,IACzB,IAAK,IAAIha,EAAI,EAAGA,EAAIga,EAAW5D,aAAa3T,OAAQzC,IAEhDga,EAAW5D,aAAapW,GAAGqR,WAAWlJ,UAAUZ,iBAAgB,SAAU5D,GACtE,IAAImhC,EAAS9qB,EAAWzD,wBAAwB5S,EAAE0E,OAAOxB,QACzDmT,EAAW5D,aAAa0uB,GAAQzzB,WAAWhI,OAAO1F,EAAE0E,OAAO8oB,WAAWlxB,GAAI0D,EAAE0E,OAAO8oB,WAAWjxB,GAC9F8Z,EAAW9H,eAAwB,EAAT4yB,EAAY9qB,EAAWvI,YAAa9N,EAAE0E,OAAO8oB,YACvEnX,EAAW/H,sBAEf+H,EAAW5D,aAAapW,GAAGuR,kBAAkBpJ,UAAUZ,iBAAgB,SAAU5D,GAC7E,IAAImhC,EAAS9qB,EAAWvD,+BAA+B9S,EAAE0E,OAAOxB,QAC3DmT,EAAW5D,aAAa0uB,GAAQzzB,WAAWvI,KAAKgyB,mBAErD9gB,EAAW1B,8BAAuC,EAATwsB,GAAY,GACrD,GAEA9qB,EAAW/H,uBAEf+H,EAAW5D,aAAapW,GAAGwR,gBAAgBrJ,UAAUZ,iBAAgB,SAAU5D,GAC3E,IAAImhC,EAAS9qB,EAAWtD,6BAA6B/S,EAAE0E,OAAOxB,QACzDmT,EAAW5D,aAAa0uB,EAAS9qB,EAAW5D,aAAa3T,QAAQ6O,SAASxI,KAAKgyB,mBAEpF9gB,EAAW1D,4BAAqC,EAATwuB,GAAY,GACnD,GAEA9qB,EAAW/H,uBAEXjS,EAAI,GAAKga,EAAW5D,aAAa3T,QAGjCuX,EAAW5D,aAAa4D,EAAW5D,aAAa3T,OAAS,GAAG6O,SAASnJ,UAAUZ,iBAAgB,SAAU5D,GACrG,IAAKqW,EAAW7D,eAAgB,CAC5B,IAAI2uB,EAAS9qB,EAAWxD,sBAAsB7S,EAAE0E,OAAOxB,QACvDmT,EAAW9H,eAAwB,EAAT4yB,EAAY9qB,EAAWrI,kBAAmB,IAAIlJ,EAAO,CAAExI,EAAG0D,EAAE0E,OAAO8oB,WAAWlxB,EAAGC,EAAGyD,EAAE0E,OAAO8oB,WAAWjxB,KAEtI8Z,EAAW/H,wBCtgExB,MAAM21B,EAITvhC,cACIyG,QAAQoK,KAAK,wEAUjB2wB,MAAM5I,EAAW5zB,GACb,IAAIy8B,EAAK,KAELx8B,EAAS,GAmCb,IAAK,IAAItL,KAlCTsL,EAAO7J,KAAK,4CACZ6J,EAAO7J,KAAK,eAAiB4J,EAAQ+Q,WAAW3N,MAAQ,aAAepD,EAAQ+Q,WAAW1N,OAAS,KACnGpD,EAAO7J,KAAK,cACZ6J,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK4J,EAAQ+Q,WAAW3N,MAAMtD,YACrCG,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK4J,EAAQ+Q,WAAW1N,OAAOvD,YACtCG,EAAO7J,KAAK,KACZ6J,EAAO7J,KAAK,0CACZ6J,EAAO7J,KAAKsmC,cACZz8B,EAAO7J,KAAKsmC,eACZz8B,EAAO7J,KAAKsmC,mDACZz8B,EAAO7J,KAAKsmC,8EACZz8B,EAAO7J,KAAKsmC,yEACZz8B,EAAO7J,KAAKsmC,2EACZz8B,EAAO7J,KAAKsmC,0EACZz8B,EAAO7J,KAAKsmC,uEACZz8B,EAAO7J,KAAKsmC,yEACZz8B,EAAO7J,KAAKsmC,+EACZz8B,EAAO7J,KAAKsmC,gBACZz8B,EAAO7J,KAAKsmC,eACZz8B,EAAO7J,KAAKsmC,wBACR18B,EAAQ+nB,MAAQ/nB,EAAQ8Q,UACxB7Q,EAAO7J,KAAK,gBACR4J,EAAQ+nB,MACR9nB,EAAO7J,KAAK,SAAW4J,EAAQ+nB,KAAKnzB,EAAI,IAAMoL,EAAQ+nB,KAAKlzB,EAAI,KAC/DmL,EAAQ8Q,QACR7Q,EAAO7J,KAAK,cAAgB4J,EAAQ8Q,OAAOlc,EAAI,IAAMoL,EAAQ8Q,OAAOjc,EAAI,KAC5EoL,EAAO7J,KAAK,MAEhB6J,EAAO7J,KAAK,OACEw9B,EAAW,CACrB,IAAIzqB,EAAIyqB,EAAUj/B,GACU,mBAAjBwU,EAAEpJ,aACTE,EAAO7J,KAAKsmC,QACZz8B,EAAO7J,KAAK+S,EAAEpJ,YAAY,CAAE,UAAaoJ,EAAE9L,aAC3C4C,EAAO7J,KAAKqmC,IAGZh7B,QAAQoK,KAAK,uEAAyE1C,EAAE9L,WAKhG,OAFA4C,EAAO7J,KAAKsmC,YACZz8B,EAAO7J,KAAK,YACL6J,EAAOC,KAAK,O,gOClFpB,MAAMy8B,EAAM,YAAc,IAAK,GAAI,IAC7BC,EAAO,YAAc,IAAK,GAAI,KAC9BC,EAAS,YAAc,IAAK,GAAI,KAChCC,EAAa,YAAc,IAAK,GAAI,KACpCC,EAAS,YAAc,GAAI,GAAI,KAC/BC,EAAO,YAAc,GAAI,IAAK,KAC9BC,EAAY,YAAc,EAAG,IAAK,KAClCC,EAAO,YAAc,EAAG,IAAK,KAC7BC,EAAO,YAAc,EAAG,IAAK,KAC7BC,EAAQ,YAAc,GAAI,IAAK,IAC/BC,EAAa,YAAc,IAAK,IAAK,IAUrCC,EAAY,CACrBX,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAKSE,EAAoBC,IAC7B,MAAM11B,EAAS4C,MAAM8yB,EAAMpmC,QAC3B,IAAK,IAAIzC,EAAI,EAAGA,EAAI6oC,EAAMpmC,OAAQzC,IAC9BmT,EAAOnT,GAAK2oC,EAAUE,EAAM7oC,GAAK2oC,EAAUlmC,QAE/C,OAAO0Q,I,sDC3CX,MACa21B,GAAoB,E,OAAAF,kBADV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,K,mECKhD,MAAMG,EAAqB,CAC9B,YAAc,EAAG,GAAI,GACrB,YAAc,EAAG,GAAI,IACrB,YAAc,EAAG,GAAI,IACrB,YAAc,EAAG,GAAI,IACrB,YAAc,GAAI,IAAK,IACvB,YAAc,EAAG,GAAI,IACrB,YAAc,EAAG,GAAI,IACrB,YAAc,GAAI,GAAI,IACtB,YAAc,EAAG,GAAI,IACrB,YAAc,EAAG,IAAK,IACtB,YAAc,GAAI,IAAK,O,+BCEpB,MAAMC,EAUT3iC,cACIlG,KAAKuE,EAAIvE,KAAK8oC,EAAI9oC,KAAKwB,EAAI,EAC3BxB,KAAKya,EAAIza,KAAKmsB,EAAInsB,KAAKqO,EAAI,EAC3BrO,KAAKuB,EAAI,EAabwnC,SACI,MAAO,OAAS1lC,KAAKyH,MAAM,IAAM9K,KAAKuE,GAAK,IAAMlB,KAAKyH,MAAM,IAAM9K,KAAK8oC,GAAK,IAAMzlC,KAAKyH,MAAM,IAAM9K,KAAKwB,GAAK,IAYjHwnC,UACI,MAAO,QAAQ3lC,KAAKyH,MAAM,IAAM9K,KAAKuE,MAAMlB,KAAKyH,MAAM,IAAM9K,KAAK8oC,MAAMzlC,KAAKyH,MAAM,IAAM9K,KAAKwB,MAAMxB,KAAKuB,KAU5G0nC,MACI,OAAOjpC,KAAKuE,EAUhB2kC,QACI,OAAOlpC,KAAK8oC,EAUhBK,OACI,OAAOnpC,KAAKwB,EAEhB4nC,OAAO7kC,GAEH,OADAvE,KAAKuE,EAAIA,EACFvE,KAEXqpC,QAAQ7nC,GAGJ,OAFAxB,KAAKwB,EAAIA,EACTqnC,EAAMS,UAAUC,SAASvpC,MAClBA,KAEXwpC,SAASjoC,GAGL,OAFAvB,KAAKuB,EAAIA,EACTsnC,EAAMS,UAAUC,SAASvpC,MAClBA,KAEXypC,SAASX,GAGL,OAFA9oC,KAAK8oC,EAAIA,EACTD,EAAMS,UAAUC,SAASvpC,MAClBA,KAEX0pC,OAAOjvB,GAGH,OAFAza,KAAKya,EAAIA,EACTouB,EAAMS,UAAUK,SAAS3pC,MAClBA,KAEX4pC,cAAczd,GAGV,OAFAnsB,KAAKmsB,EAAIA,EACT0c,EAAMS,UAAUK,SAAS3pC,MAClBA,KAEX6pC,aAAax7B,GAGT,OAFArO,KAAKqO,EAAIA,EACTw6B,EAAMS,UAAUK,SAAS3pC,MAClBA,KAWX8pC,SACI,MAAO,OAASzmC,KAAKyH,MAAM,IAAM9K,KAAKya,GAAK,IAAMpX,KAAKyH,MAAM,IAAM9K,KAAKmsB,GAAK,KAAO9oB,KAAKyH,MAAM,IAAM9K,KAAKqO,GAAK,KAUlH07B,UACI,MAAQ,QACJ1mC,KAAKyH,MAAM,IAAM9K,KAAKya,GACtB,IACApX,KAAKyH,MAAM,IAAM9K,KAAKmsB,GACtB,KACA9oB,KAAKyH,MAAM,IAAM9K,KAAKqO,GACtB,KACAhL,KAAKyH,MAAM9K,KAAKuB,GAChB,IAURyoC,MACI,OAAOhqC,KAAKya,EAUhBwvB,aACI,OAAOjqC,KAAKmsB,EAUhB+d,YACI,OAAOlqC,KAAKqO,EAWhB87B,SACI,MAAQ,KACH,IAAMnqC,KAAKuE,EAAI,GAAK,IAAM,IAC3BlB,KAAKyH,MAAM,IAAM9K,KAAKuE,GAAGyG,SAAS,KACjC,IAAMhL,KAAK8oC,EAAI,GAAK,IAAM,IAC3BzlC,KAAKyH,MAAM,IAAM9K,KAAK8oC,GAAG99B,SAAS,KACjC,IAAMhL,KAAKwB,EAAI,GAAK,IAAM,IAC3B6B,KAAKyH,MAAM,IAAM9K,KAAKwB,GAAGwJ,SAAS,IAW1Co/B,QACI,OAAOpqC,KAAKuB,EAiBhB8oC,SAASh6B,GACL,GAAI,iBAAmBA,GAAKA,EAAE4U,QAAQ,MAAQ,GAA0Bvc,MAApB2H,EAAIi6B,SAASj6B,IAC7DrQ,KAAKmsB,IAAM,EAAInsB,KAAKmsB,IAAM9b,EAAI,SAE7B,IAAI,iBAAmBA,EAWxB,MAAM,IAAI4D,MAAM,kDARZjU,KAAKmsB,GAFL9b,IAAM,GAAOA,GAAK,GAEP,EAAIrQ,KAAKmsB,GAAK9b,GAId,EAAIrQ,KAAKmsB,IAAM9b,EAAI,KAWtC,OALIrQ,KAAKmsB,EAAI,EACTnsB,KAAKmsB,EAAI,EACJnsB,KAAKmsB,EAAI,IACdnsB,KAAKmsB,EAAI,GACb0c,EAAMS,UAAUK,SAAS3pC,MAClBA,KAEXuqC,WAAWl6B,GACP,GAAI,iBAAmBA,GAAKA,EAAE4U,QAAQ,MAAQ,GAA0Bvc,MAApB2H,EAAIi6B,SAASj6B,IAC7DrQ,KAAKmsB,GAAK9b,EAAI,QAEb,IAAI,iBAAmBA,EAWxB,MAAM,IAAI4D,MAAM,kDARZjU,KAAKmsB,GAFL9b,GAAK,GAAOA,GAAK,EAEPrQ,KAAKmsB,EAAI9b,EAITrQ,KAAKmsB,GAAK9b,EAAI,KAWhC,OALIrQ,KAAKmsB,EAAI,EACTnsB,KAAKmsB,EAAI,EACJnsB,KAAKmsB,EAAI,IACdnsB,KAAKmsB,EAAI,GACb0c,EAAMS,UAAUK,SAAS3pC,MAClBA,KAqBXwqC,QAAQn6B,GACJ,GAAI,iBAAmBA,GAAKA,EAAE4U,QAAQ,MAAQ,GAA0Bvc,MAApB2H,EAAIi6B,SAASj6B,IAC7DrQ,KAAKqO,IAAM,EAAIrO,KAAKqO,IAAMgC,EAAI,SAE7B,IAAI,iBAAmBA,EAWxB,MAAM,IAAI4D,MAAM,kDARZjU,KAAKqO,GAFLgC,GAAK,GAAOA,GAAK,GAEN,EAAIrQ,KAAKqO,GAAKgC,GAId,EAAIrQ,KAAKqO,IAAMgC,EAAI,KAWtC,OALIrQ,KAAKqO,EAAI,EACTrO,KAAKqO,EAAI,EACJrO,KAAKqO,EAAI,IACdrO,KAAKqO,EAAI,GACbw6B,EAAMS,UAAUK,SAAS3pC,MAClBA,KAEXyqC,OAAOp6B,GACH,GAAI,iBAAmBA,GAAKA,EAAE4U,QAAQ,MAAQ,GAA0Bvc,MAApB2H,EAAIi6B,SAASj6B,IAC7DrQ,KAAKqO,GAAKrO,KAAKqO,GAAKgC,EAAI,SAEvB,IAAI,iBAAmBA,EAWxB,MAAM,IAAI4D,MAAM,kDARZjU,KAAKqO,GAFLgC,GAAK,GAAOA,GAAK,EAEPrQ,KAAKqO,EAAIgC,EAITrQ,KAAKqO,GAAKgC,EAAI,KAWhC,OALIrQ,KAAKqO,EAAI,EACTrO,KAAKqO,EAAI,EACJrO,KAAKqO,EAAI,IACdrO,KAAKqO,EAAI,GACbw6B,EAAMS,UAAUK,SAAS3pC,MAClBA,KAEX0qC,OAAOr6B,GACH,GAAI,iBAAmBA,GAAKA,EAAE4U,QAAQ,MAAQ,GAA0Bvc,MAApB2H,EAAIi6B,SAASj6B,IAC7DrQ,KAAKuB,IAAM,EAAIvB,KAAKuB,IAAM8O,EAAI,SAE7B,IAAI,iBAAmBA,EAWxB,MAAM,IAAI4D,MAAM,kDARZjU,KAAKuB,GAFL8O,GAAK,GAAOA,GAAK,GAEN,EAAIrQ,KAAKuB,GAAK8O,GAId,EAAIrQ,KAAKuB,IAAM8O,EAAI,KAYtC,OANA1D,QAAQC,IAAI,YAAa5M,KAAKuB,GAC1BvB,KAAKuB,EAAI,EACTvB,KAAKuB,EAAI,EACJvB,KAAKuB,EAAI,IACdvB,KAAKuB,EAAI,GACbsnC,EAAMS,UAAUK,SAAS3pC,MAClBA,KAEX2qC,QAAQt6B,GACJ,GAAI,iBAAmBA,GAAKA,EAAE4U,QAAQ,MAAQ,GAA0Bvc,MAApB2H,EAAIi6B,SAASj6B,IAC7DrQ,KAAKuB,GAAK8O,EAAI,QAEb,IAAI,iBAAmBA,EAWxB,MAAM,IAAI4D,MAAM,kDARZjU,KAAKuB,GAFL8O,GAAK,GAAOA,GAAK,EAEPA,EAIAA,EAAI,IAWtB,OALIrQ,KAAKuB,EAAI,EACTvB,KAAKuB,EAAI,EACJvB,KAAKuB,EAAI,IACdvB,KAAKuB,EAAI,GACbsnC,EAAMS,UAAUK,SAAS3pC,MAClBA,KAEX4qC,KAAKv6B,GACD,GAAI,iBAAmBA,GAAKA,EAAE4U,QAAQ,MAAQ,GAA0Bvc,MAApB2H,EAAIi6B,SAASj6B,IAC7DrQ,KAAKya,GAAKpK,EAAI,QACb,IAAI,iBAAmBA,EAIxB,MAAM,IAAI4D,MAAM,kDAFhBjU,KAAKya,GAAKpK,EAAI,IAQlB,OALIrQ,KAAKya,EAAI,EACTza,KAAKya,EAAI,EACJza,KAAKya,EAAI,IACdza,KAAKya,EAAI,GACbouB,EAAMS,UAAUK,SAAS3pC,MAClBA,KAEX+F,kBAAkB8kC,GACd,MAAMppC,EAAI,IAAIonC,EACd,IAAIiC,EACJ,GAAIvY,UAAUjwB,OAAS,GAAKiwB,UAAUjwB,OAAS,EAC3C,MAAM,IAAI2R,MAAM,2BAYpB,OAXA62B,EAAYjC,EAAMkC,UAAUC,IAAIzY,UAAU,GAAIA,UAAU,GAAIA,UAAU,IACtE9wB,EAAE8C,EAAIumC,EAAU,GAChBrpC,EAAEqnC,EAAIgC,EAAU,GAChBrpC,EAAED,EAAIspC,EAAU,GAEZrpC,EAAEF,EADkB,GAApBgxB,UAAUjwB,OACJiwB,UAAU,GAGV,EAEVsW,EAAMS,UAAUC,SAAS9nC,GAClBA,EAEXsE,kBAAkB8kC,GACd,MAAMppC,EAAI,IAAIonC,EACd,IAAIiC,EACJ,GAAIvY,UAAUjwB,OAAS,GAAKiwB,UAAUjwB,OAAS,EAC3C,MAAM,IAAI2R,MAAM,2BAUpB,OATA62B,EAAYjC,EAAMkC,UAAUE,IAAI1Y,UAAU,GAAIA,UAAU,GAAIA,UAAU,IACtE9wB,EAAEgZ,EAAIqwB,EAAU,GAChBrpC,EAAE0qB,EAAI2e,EAAU,GAChBrpC,EAAE4M,EAAIy8B,EAAU,GAEZrpC,EAAEF,EADkB,GAApBgxB,UAAUjwB,OACJiwB,UAAU,GAEV,EACVsW,EAAMS,UAAUK,SAASloC,GAClBA,EAEXsE,eAAepG,GACX,IAAqBmrC,EAAjBrpC,EAAI,IAAIonC,EAMZ,GAHIlpC,GAASA,EAAMurC,WAAW,OAC1BvrC,EAAQA,EAAMwrC,OAAO,IACzBtC,EAAMuC,UAAUC,SAAS1rC,GACL,GAAhBA,EAAM2C,OACNwoC,EAAYjC,EAAMkC,UAAUC,IAAIV,SAAS3qC,EAAMwrC,OAAO,EAAG,GAAKxrC,EAAMwrC,OAAO,EAAG,GAAI,IAAKb,SAAS3qC,EAAMwrC,OAAO,EAAG,GAAKxrC,EAAMwrC,OAAO,EAAG,GAAI,IAAKb,SAAS3qC,EAAMwrC,OAAO,EAAG,GAAKxrC,EAAMwrC,OAAO,EAAG,GAAI,SAE/L,IAAoB,GAAhBxrC,EAAM2C,OAIX,MAAM,IAAI2R,MAAM,2BAHhB62B,EAAYjC,EAAMkC,UAAUC,IAAIV,SAAS3qC,EAAMwrC,OAAO,EAAG,GAAI,IAAKb,SAAS3qC,EAAMwrC,OAAO,EAAG,GAAI,IAAKb,SAAS3qC,EAAMwrC,OAAO,EAAG,GAAI,KASrI,OALA1pC,EAAE8C,EAAIumC,EAAU,GAChBrpC,EAAEqnC,EAAIgC,EAAU,GAChBrpC,EAAED,EAAIspC,EAAU,GAChBrpC,EAAEF,EAAI,EACNsnC,EAAMS,UAAUC,SAAS9nC,GAClBA,EAWXsE,aAAaulC,GACT,QAAkB,IAAPA,EACP,OAAO,KACX,GAA+C,IAA1CA,EAAMA,EAAIC,OAAOrN,eAAe57B,OACjC,OAAO,KACX,GAAIgpC,EAAIJ,WAAW,KACf,OAAOrC,EAAM2C,QAAQF,EAAIG,UAAU,EAAGH,EAAIhpC,SAC9C,GAAIgpC,EAAIJ,WAAW,OAAQ,CACvB,IAAIQ,EAAQJ,EAAIK,MAAM,qFACtB,IAAKD,EACD,KAAM,kCAAoCJ,EAI9C,OAAII,EAAMppC,QAAU,QAAwB,IAAZopC,EAAM,IAAiC,IAAZA,EAAM,GACtD7C,EAAM+C,QAAQF,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAGxC7C,EAAM+C,QAAQF,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAI93B,OAAO83B,EAAM,KAIpE,KAAM,kCAAoCJ,EAWlD3hC,QACI,OAAOk/B,EAAM+C,QAAQ5rC,KAAKuE,EAAGvE,KAAK8oC,EAAG9oC,KAAKwB,EAAGxB,KAAKuB,GAYtDsqC,YAAYpqC,EAAG6L,GAKX,OAJAtN,KAAKuE,IAAM9C,EAAE8C,EAAI9C,EAAE8C,GAAK+I,EACxBtN,KAAK8oC,IAAMrnC,EAAEqnC,EAAIrnC,EAAEqnC,GAAKx7B,EACxBtN,KAAKwB,IAAMC,EAAED,EAAIC,EAAED,GAAK8L,EACxBtN,KAAKuB,IAAME,EAAEF,EAAIE,EAAEF,GAAK+L,EACjBtN,MAGf6oC,EAAMkC,UAAY,CACdC,IAAK,YAAaH,GACd,IAAIiB,EAAI,GACR,GAAwB,GAApBvZ,UAAUjwB,OACV,MAAO,GAGX,IAAK,IAAIzC,EAAI,EAAGA,EAAI0yB,UAAUjwB,OAAQzC,IAAK,CACvC,IAAI4B,EAAI8wB,UAAU1yB,GAClB,GAAI,iBAAmB4B,GAAKA,EAAEwjB,QAAQ,MAAQ,EAAG,CAC7C,GAAyBvc,MAApBjH,EAAI6oC,SAAS7oC,IACd,MAAM,IAAIwS,MAAM,cACpB,GAAIxS,EAAI,GAAKA,EAAI,IACb,MAAM,IAAIwS,MAAM,cACpB63B,EAAEjsC,GAAK4B,EAAI,QAEV,CACD,GAAI,iBAAmBA,GAA0BiH,MAApBjH,EAAI6oC,SAAS7oC,IACtC,MAAM,IAAIwS,MAAM,cAEpB,GAAIxS,EAAI,EACJ,MAAM,IAAIwS,MAAM,cAGf,GAAIxS,GAAK,GAAKA,EAAI,EACnBqqC,EAAEjsC,GAAK4B,MAGN,MAAIA,GAAK,GAAKA,EAAI,KAMnB,MAAM,IAAIwS,MAAM,eAAiBxS,EAAI,KALrCqqC,EAAEjsC,GAAK4B,EAAI,MAQvB,OAAOqqC,GAEXb,IAAK,YAAaJ,GACd,GAAItY,UAAUjwB,OAAS,GAAKiwB,UAAUjwB,OAAS,EAC3C,MAAM,IAAI2R,MAAM,6BACpB,IAAIwG,EAAI8X,UAAU,GAAIpG,EAAIoG,UAAU,GAAIlkB,EAAIkkB,UAAU,GACtD,GAAI,iBAAmB9X,GAA4B/R,MAAtB+R,EAAI+nB,WAAW/nB,IACxC,MAAM,IAAIxG,MAAM,sBACpB,GAAIwG,EAAI,GAAKA,EAAI,IACb,MAAM,IAAIxG,MAAM,6BAGpB,KAFW,GAAKwG,GAAGwK,QAAQ,MAAQ,GAAKxK,EAAI,IAAgC,IAAzB,GAAKA,GAAGwK,QAAQ,QAC/DxK,GAAK,KACL,iBAAmB0R,GAAKA,EAAElH,QAAQ,MAAQ,EAAG,CAC7C,GAAyBvc,MAApByjB,EAAIme,SAASne,IACd,MAAM,IAAIlY,MAAM,6BACpB,GAAIkY,EAAI,GAAKA,EAAI,IACb,MAAM,IAAIlY,MAAM,6BACpBkY,GAAK,SAEJ,GAAIA,EAAI,GAAKA,EAAI,EAClB,MAAM,IAAIlY,MAAM,6BACpB,GAAI,iBAAmB5F,GAAKA,EAAE4W,QAAQ,MAAQ,EAAG,CAC7C,GAAyBvc,MAApB2F,EAAIi8B,SAASj8B,IACd,MAAM,IAAI4F,MAAM,4BACpB,GAAI5F,EAAI,GAAKA,EAAI,IACb,MAAM,IAAI4F,MAAM,4BACpB5F,GAAK,SAEJ,GAAIA,EAAI,GAAKA,EAAI,EAClB,MAAM,IAAI4F,MAAM,4BACpB,MAAO,CAACwG,EAAG0R,EAAG9d,KAGtBw6B,EAAMuC,UAAY,CAIdC,SAAW1rC,IACP,GAAoB,GAAhBA,EAAM2C,QAA+B,GAAhB3C,EAAM2C,OAC3B,MAAM,IAAI2R,MAAM,2BAA6BtU,EAAM2C,OAAS,KAAO3C,GACvEA,EAAQA,EAAMu+B,cAEd,IAAK,IAAIr+B,EAAI,EAAGA,EAAIF,EAAM2C,OAAQzC,IAAK,CACnC,IAAI4B,EAAI9B,EAAMosC,WAAWlsC,GACzB,KAAO4B,GAAK,IAAMA,GAAK,IAAQA,GAAK,IAAMA,GAAK,KAC3C,MAAM,IAAIwS,MAAM,iCAAiCtU,kBAAsBE,SAIvFgpC,EAAMS,UAAY,CAMdC,SAAWpsB,IACP,IAAI5Y,EAAI4Y,EAAM5Y,EACVukC,EAAI3rB,EAAM2rB,EACVtnC,EAAI2b,EAAM3b,EACVwD,EAAM3B,KAAK2B,IAAIT,EAAGukC,EAAGtnC,GACrByD,EAAM5B,KAAK4B,IAAIV,EAAGukC,EAAGtnC,GAEzB,GADA2b,EAAM9O,GAAKrJ,EAAMC,GAAO,EACpBD,GAAOC,EACPkY,EAAM1C,EAAI0C,EAAMgP,EAAI,MAEnB,CACD,IAAI9X,EAAIrP,EAAMC,EAEd,OADAkY,EAAMgP,EAAIhP,EAAM9O,EAAI,GAAMgG,GAAK,EAAIrP,EAAMC,GAAOoP,GAAKrP,EAAMC,GACnDD,GACJ,KAAKT,EACD4Y,EAAM1C,GAAKquB,EAAItnC,GAAK6S,GAAKy0B,EAAItnC,EAAI,EAAI,GACrC,MACJ,KAAKsnC,EACD3rB,EAAM1C,GAAKjZ,EAAI+C,GAAK8P,EAAI,EACxB,MACJ,KAAK7S,EACD2b,EAAM1C,GAAKlW,EAAIukC,GAAKz0B,EAAI,EAGhC8I,EAAM1C,GAAK,IASnBkvB,SAAWxsB,IACP,IAAI1C,EAAI0C,EAAM1C,EACV0R,EAAIhP,EAAMgP,EACV9d,EAAI8O,EAAM9O,EACd,GAAS,GAAL8d,EACAhP,EAAM5Y,EAAI4Y,EAAM2rB,EAAI3rB,EAAM3b,EAAI6M,MAE7B,CACD,IAAI9K,EAAI8K,EAAI,GAAMA,GAAK,EAAI8d,GAAK9d,EAAI8d,EAAI9d,EAAI8d,EACxCtrB,EAAI,EAAIwN,EAAI9K,EAChB4Z,EAAM5Y,EAAIskC,EAAMS,UAAU0C,QAAQnrC,EAAG0C,EAAGkX,EAAI,EAAI,GAChD0C,EAAM2rB,EAAID,EAAMS,UAAU0C,QAAQnrC,EAAG0C,EAAGkX,GACxC0C,EAAM3b,EAAIqnC,EAAMS,UAAU0C,QAAQnrC,EAAG0C,EAAGkX,EAAI,EAAI,KAGxDuxB,QAAS,CAACnrC,EAAG0C,EAAG+J,KACRA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDzM,EAAc,GAAT0C,EAAI1C,GAASyM,EACzBA,EAAI,GACG/J,EACP+J,EAAI,EAAI,EACDzM,GAAK0C,EAAI1C,IAAM,EAAI,EAAIyM,GAAK,EAChCzM,K,ilVClrBf,MAAMorC,EAAW,MACXC,EAAQ,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,MAAO,EAAGC,IAAK,GAClEC,EAAQ,CAAEH,OAAQ,EAAGE,IAAK,EAAGE,UAAW,EAAGC,aAAc,GACzDC,EAAe,EACfC,EAAe,EACfC,EAAgB,EAChBC,EAAoB,EACpBC,EAAiB,EACjBC,EAAe,EACfC,EAAmB,EACnBC,EAAe,EACfC,EAAY,EACZC,EAAW,EACXC,EAAa,EACbC,EAAc,EACdC,EAAgB,EAChBC,EAAa,EACbC,EAAiB,EACjBC,EAAmB,EACnBC,EAAsB,EACtBC,EAAmB,EACnBC,EAAiB,EACjBC,EAAc,IACdC,EAAmB,IACnBC,EAA0B,IAC1BC,EAAc,IACdC,EAAc,IACdC,EAAa,IACbC,EAAY,IACZC,EAAiB,IACjBC,EAAyB,IACzBC,EAAiB,IACjBC,EAAyB,IACzBC,EAAiB,IACjBC,EAAyB,IACzBC,EAAiB,IACjBC,EAAyB,IACzBC,EAAyB,IACzBC,EAAa,EACbC,EAAc,EACdC,EAAY,EACZC,EAAiB,EACjBC,EAAa,EACbC,EAAoB,EACpBC,EAAe,EACfC,EAAgB,EAChBC,EAAoB,EACpBC,EAAe,EACfC,EAAe,EACfC,EAAgB,EAChBC,EAAoB,EACpBC,GAAsB,EACtBC,GAAoB,EACpBC,GAAwB,EACxBC,GAAoB,EAEpBC,GAAY,IACZC,GAAwB,IACxBC,GAAwB,IACxBC,GAAmC,IACnCC,GAAmC,IACnCC,GAA0B,IAC1BC,GAA0B,IAC1BC,GAAiB,IACjBC,GAAsB,KACtBC,GAAyB,KACzBC,GAAgB,KAChBC,GAA6B,KAC7BC,GAA6B,KAC7BC,GAA4B,KAC5BC,GAA4B,KAC5BC,GAAe,KACfC,GAA4B,KAC5BC,GAA4B,KAC5BC,GAA2B,KAC3BC,GAA2B,KAC3BC,GAAmB,KACnBC,GAAW,KACXC,GAAY,KACZC,GAAoB,KACpBC,GAAU,KACVC,GAAkB,KAClBC,GAAY,KACZC,GAAgB,KAChBC,GAAwB,KACxBC,GAAwB,KACxBC,GAAuB,KACvBC,GAAqB,KACrBC,GAAc,KACdC,GAAY,KACZC,GAAa,KACbC,GAAkB,KAClBC,GAAuB,KACvBC,GAAaH,GACbI,GAAc,KACdC,GAAqB,KACrBC,GAAY,KACZC,GAAmB,KACnBC,GAAW,KACXC,GAAkB,KAClBC,GAAmB,KACnBC,GAAoB,KAEpBC,GAAuB,MACvBC,GAAwB,MACxBC,GAAwB,MACxBC,GAAwB,MACxBC,GAA0B,MAC1BC,GAA0B,MAC1BC,GAA2B,MAC3BC,GAA2B,MAC3BC,GAAkB,MAClBC,GAAkB,MAClBC,GAAuB,MACvBC,GAAuB,MACvBC,GAAuB,MACvBC,GAAuB,MACvBC,GAAuB,MACvBC,GAAuB,MACvBC,GAAuB,MACvBC,GAAuB,MACvBC,GAAuB,MACvBC,GAAwB,MACxBC,GAAwB,MACxBC,GAAwB,MACxBC,GAAyB,MACzBC,GAAyB,MACzBC,GAAyB,MACzBC,GAAmB,MACnBC,GAA+B,MAC/BC,GAA+B,MAC/BC,GAA+B,MAC/BC,GAA+B,MAC/BC,GAA+B,MAC/BC,GAA+B,MAC/BC,GAA+B,MAC/BC,GAA+B,MAC/BC,GAAgC,MAChCC,GAAgC,MAChCC,GAAgC,MAChCC,GAAiC,MACjCC,GAAiC,MACjCC,GAAiC,MACjCC,GAAW,KACXC,GAAa,KACbC,GAAe,KACfC,GAAsB,KACtBC,GAAoB,KACpBC,GAAoB,KACpBC,GAAsB,KACtBC,GAAkB,KAClBC,GAAmB,KACnBC,GAA2B,KAC3BC,GAA6B,KAC7BC,GAAoB,EACpBC,GAAwB,EACxBC,GAAsB,EACtBC,GAAiB,IACjBC,GAAe,KACfC,GAAgB,KAChBC,GAAe,KACfC,GAAiB,KACjBC,GAAgB,KAChBC,GAAiB,KACjBC,GAAe,KACfC,GAAoB,KACpBC,GAAmB,KACnBC,GAAwB,EACxBC,GAAuB,EAEvBC,GAAgB,EAChBC,GAAgB,KAChBC,GAAmB,KACnBC,GAAqB,KACrBC,GAAqB,KACrBC,GAAyB,MACzBC,GAAyB,MACzBC,GAAkB,KAElBC,GAAmB,IACnBC,GAAkB,IAClBC,GAAmB,IACnBC,GAAuB,IACvBC,GAAqB,IACrBC,GAAsB,IACtBC,GAA0B,IAC1BC,GAAoB,IAEpBC,GAAkB,MAClBC,GAAmB,MACnBC,GAAkB,MAClBC,GAAkB,MAClBC,GAAmB,MACnBC,GAAkB,MAClBC,GAAkB,MAClBC,GAAmB,MACnBC,GAAkB,MAElBC,GAAQ,MACRC,GAAQ,SAMd,SAASC,MAETn5C,OAAOo5C,OAAQD,GAAgBE,UAAW,CAEzC34B,iBAAkB,SAAW4f,EAAM94B,QAETmS,IAApBnZ,KAAK84C,aAA2B94C,KAAK84C,WAAa,IAEvD,MAAM9wC,EAAYhI,KAAK84C,gBAEI3/B,IAAtBnR,EAAW83B,KAEf93B,EAAW83B,GAAS,KAI4B,IAA5C93B,EAAW83B,GAAO7a,QAASje,IAE/BgB,EAAW83B,GAAOx+B,KAAM0F,IAM1B+xC,iBAAkB,SAAWjZ,EAAM94B,GAElC,QAAyBmS,IAApBnZ,KAAK84C,WAA2B,OAAO,EAE5C,MAAM9wC,EAAYhI,KAAK84C,WAEvB,YAA6B3/B,IAAtBnR,EAAW83B,KAAoE,IAA5C93B,EAAW83B,GAAO7a,QAASje,IAItE4nB,oBAAqB,SAAWkR,EAAM94B,GAErC,QAAyBmS,IAApBnZ,KAAK84C,WAA2B,OAErC,MACME,EADYh5C,KAAK84C,WACUhZ,GAEjC,QAAuB3mB,IAAlB6/B,EAA8B,CAElC,MAAM7sC,EAAQ6sC,EAAc/zB,QAASje,IAEpB,IAAZmF,GAEJ6sC,EAAc3wC,OAAQ8D,EAAO,KAQhC8sC,cAAe,SAAW94B,GAEzB,QAAyBhH,IAApBnZ,KAAK84C,WAA2B,OAErC,MACME,EADYh5C,KAAK84C,WACU34B,EAAM2f,MAEvC,QAAuB3mB,IAAlB6/B,EAA8B,CAElC74B,EAAM+4B,OAASl5C,KAGf,MAAMm5C,EAAQH,EAAcI,MAAO,GAEnC,IAAM,IAAIv5C,EAAI,EAAGwO,EAAI8qC,EAAM72C,OAAQzC,EAAIwO,EAAGxO,IAEzCs5C,EAAOt5C,GAAIw5C,KAAMr5C,KAAMmgB,OAU3B,MAAMm5B,GAAO,GAEb,IAAM,IAAIz5C,EAAI,EAAGA,EAAI,IAAKA,IAEzBy5C,GAAMz5C,IAAQA,EAAI,GAAK,IAAM,IAAO,EAAMmL,SAAU,IAIrD,IAAIuuC,GAAQ,QAEZ,MAAMC,GAAY,CAEjBC,QAASp2C,KAAK6G,GAAK,IACnBwvC,QAAS,IAAMr2C,KAAK6G,GAEpByvC,aAAc,WAIb,MAAMC,EAAqB,WAAhBv2C,KAAKiI,SAAwB,EAClCuuC,EAAqB,WAAhBx2C,KAAKiI,SAAwB,EAClCwuC,EAAqB,WAAhBz2C,KAAKiI,SAAwB,EAClCyuC,EAAqB,WAAhB12C,KAAKiI,SAAwB,EAOxC,OANaguC,GAAW,IAALM,GAAcN,GAAMM,GAAM,EAAI,KAASN,GAAMM,GAAM,GAAK,KAASN,GAAMM,GAAM,GAAK,KAAS,IAC7GN,GAAW,IAALO,GAAcP,GAAMO,GAAM,EAAI,KAAS,IAAMP,GAAMO,GAAM,GAAK,GAAO,IAASP,GAAMO,GAAM,GAAK,KAAS,IAC9GP,GAAW,GAALQ,EAAY,KAASR,GAAMQ,GAAM,EAAI,KAAS,IAAMR,GAAMQ,GAAM,GAAK,KAASR,GAAMQ,GAAM,GAAK,KACrGR,GAAW,IAALS,GAAcT,GAAMS,GAAM,EAAI,KAAST,GAAMS,GAAM,GAAK,KAAST,GAAMS,GAAM,GAAK,MAG7El8B,eAIbm8B,MAAO,SAAWr6C,EAAOsF,EAAKD,GAE7B,OAAO3B,KAAK2B,IAAKC,EAAK5B,KAAK4B,IAAKD,EAAKrF,KAOtCs6C,gBAAiB,SAAWj4C,EAAGY,GAE9B,OAAWZ,EAAIY,EAAMA,GAAMA,GAM5Bs3C,UAAW,SAAWp6C,EAAGq6C,EAAI/0C,EAAIg1C,EAAI/0C,GAEpC,OAAO+0C,GAAOt6C,EAAIq6C,IAAS90C,EAAK+0C,IAASh1C,EAAK+0C,IAM/CE,KAAM,SAAWv6C,EAAGC,EAAGuN,GAEtB,OAAS,EAAIA,GAAMxN,EAAIwN,EAAIvN,GAM5Bu6C,WAAY,SAAWx6C,EAAGmF,EAAKD,GAE9B,OAAKlF,GAAKmF,EAAa,EAClBnF,GAAKkF,EAAa,GAEvBlF,GAAMA,EAAImF,IAAUD,EAAMC,IAEfnF,GAAM,EAAI,EAAIA,IAI1By6C,aAAc,SAAWz6C,EAAGmF,EAAKD,GAEhC,OAAKlF,GAAKmF,EAAa,EAClBnF,GAAKkF,EAAa,GAEvBlF,GAAMA,EAAImF,IAAUD,EAAMC,IAEfnF,EAAIA,GAAMA,GAAU,EAAJA,EAAQ,IAAO,KAM3C06C,QAAS,SAAWC,EAAKC,GAExB,OAAOD,EAAMp3C,KAAK+pB,MAAO/pB,KAAKiI,UAAaovC,EAAOD,EAAM,KAMzDE,UAAW,SAAWF,EAAKC,GAE1B,OAAOD,EAAMp3C,KAAKiI,UAAaovC,EAAOD,IAMvCG,gBAAiB,SAAWC,GAE3B,OAAOA,GAAU,GAAMx3C,KAAKiI,WAM7BwvC,aAAc,SAAW3uB,GAQxB,YANWhT,IAANgT,IAAkBotB,GAAQptB,EAAI,YAInCotB,GAAgB,MAARA,GAAgB,YAEfA,GAAQ,GAAM,YAIxBwB,SAAU,SAAWC,GAEpB,OAAOA,EAAUxB,GAAUC,SAI5BwB,SAAU,SAAWC,GAEpB,OAAOA,EAAU1B,GAAUE,SAI5ByB,aAAc,SAAWx7C,GAExB,OAAqC,IAA5BA,EAAUA,EAAQ,IAAyB,IAAVA,GAI3Cy7C,eAAgB,SAAWz7C,GAE1B,OAAO0D,KAAK0G,IAAK,EAAG1G,KAAKge,KAAMhe,KAAKuJ,IAAKjN,GAAU0D,KAAKg4C,OAIzDC,gBAAiB,SAAW37C,GAE3B,OAAO0D,KAAK0G,IAAK,EAAG1G,KAAK+pB,MAAO/pB,KAAKuJ,IAAKjN,GAAU0D,KAAKg4C,OAI1DE,6BAA8B,SAAWh4C,EAAGhC,EAAGC,EAAGC,EAAGinC,GAQpD,MAAMh+B,EAAMrH,KAAKqH,IACXC,EAAMtH,KAAKsH,IAEX6wC,EAAK9wC,EAAKlJ,EAAI,GACdi6C,EAAK9wC,EAAKnJ,EAAI,GAEdk6C,EAAMhxC,GAAOnJ,EAAIE,GAAM,GACvBk6C,EAAMhxC,GAAOpJ,EAAIE,GAAM,GAEvBm6C,EAAOlxC,GAAOnJ,EAAIE,GAAM,GACxBo6C,EAAOlxC,GAAOpJ,EAAIE,GAAM,GAExBq6C,EAAOpxC,GAAOjJ,EAAIF,GAAM,GACxBw6C,EAAOpxC,GAAOlJ,EAAIF,GAAM,GAE9B,OAASmnC,GAER,IAAK,MACJnlC,EAAEqF,IAAK4yC,EAAKG,EAAKF,EAAKG,EAAMH,EAAKI,EAAML,EAAKE,GAC5C,MAED,IAAK,MACJn4C,EAAEqF,IAAK6yC,EAAKI,EAAML,EAAKG,EAAKF,EAAKG,EAAMJ,EAAKE,GAC5C,MAED,IAAK,MACJn4C,EAAEqF,IAAK6yC,EAAKG,EAAMH,EAAKI,EAAML,EAAKG,EAAKH,EAAKE,GAC5C,MAED,IAAK,MACJn4C,EAAEqF,IAAK4yC,EAAKG,EAAKF,EAAKM,EAAMN,EAAKK,EAAMN,EAAKE,GAC5C,MAED,IAAK,MACJn4C,EAAEqF,IAAK6yC,EAAKK,EAAMN,EAAKG,EAAKF,EAAKM,EAAMP,EAAKE,GAC5C,MAED,IAAK,MACJn4C,EAAEqF,IAAK6yC,EAAKM,EAAMN,EAAKK,EAAMN,EAAKG,EAAKH,EAAKE,GAC5C,MAED,QACC/uC,QAAQoK,KAAM,kFAAoF2xB,MAQtG,MAAMsT,GAEL91C,YAAapG,EAAI,EAAGC,EAAI,GAEvBP,OAAOC,eAAgBO,KAAM,YAAa,CAAEL,OAAO,IAEnDK,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAINuO,YAEH,OAAOtO,KAAKF,EAITwO,UAAO3O,GAEVK,KAAKF,EAAIH,EAIN4O,aAEH,OAAOvO,KAAKD,EAITwO,WAAQ5O,GAEXK,KAAKD,EAAIJ,EAIViJ,IAAK9I,EAAGC,GAKP,OAHAC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAEFC,KAIRi8C,UAAWpxC,GAKV,OAHA7K,KAAKF,EAAI+K,EACT7K,KAAKD,EAAI8K,EAEF7K,KAIR6I,KAAM/I,GAIL,OAFAE,KAAKF,EAAIA,EAEFE,KAIR8I,KAAM/I,GAIL,OAFAC,KAAKD,EAAIA,EAEFC,KAIRk8C,aAAc/vC,EAAOxM,GAEpB,OAASwM,GAER,KAAK,EAAGnM,KAAKF,EAAIH,EAAO,MACxB,KAAK,EAAGK,KAAKD,EAAIJ,EAAO,MACxB,QAAS,MAAM,IAAIsU,MAAO,0BAA4B9H,GAIvD,OAAOnM,KAIRm8C,aAAchwC,GAEb,OAASA,GAER,KAAK,EAAG,OAAOnM,KAAKF,EACpB,KAAK,EAAG,OAAOE,KAAKD,EACpB,QAAS,MAAM,IAAIkU,MAAO,0BAA4B9H,IAMxDxC,QAEC,OAAO,IAAI3J,KAAKkG,YAAalG,KAAKF,EAAGE,KAAKD,GAI3C+iB,KAAMzS,GAKL,OAHArQ,KAAKF,EAAIuQ,EAAEvQ,EACXE,KAAKD,EAAIsQ,EAAEtQ,EAEJC,KAIRiJ,IAAKoH,EAAGC,GAEP,YAAW6I,IAAN7I,GAEJ3D,QAAQoK,KAAM,yFACP/W,KAAKo8C,WAAY/rC,EAAGC,KAI5BtQ,KAAKF,GAAKuQ,EAAEvQ,EACZE,KAAKD,GAAKsQ,EAAEtQ,EAELC,MAIRq8C,UAAWlwB,GAKV,OAHAnsB,KAAKF,GAAKqsB,EACVnsB,KAAKD,GAAKosB,EAEHnsB,KAIRo8C,WAAY76C,EAAGC,GAKd,OAHAxB,KAAKF,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EACjBE,KAAKD,EAAIwB,EAAExB,EAAIyB,EAAEzB,EAEVC,KAIRs8C,gBAAiBjsC,EAAG8b,GAKnB,OAHAnsB,KAAKF,GAAKuQ,EAAEvQ,EAAIqsB,EAChBnsB,KAAKD,GAAKsQ,EAAEtQ,EAAIosB,EAETnsB,KAIRuJ,IAAK8G,EAAGC,GAEP,YAAW6I,IAAN7I,GAEJ3D,QAAQoK,KAAM,yFACP/W,KAAKu8C,WAAYlsC,EAAGC,KAI5BtQ,KAAKF,GAAKuQ,EAAEvQ,EACZE,KAAKD,GAAKsQ,EAAEtQ,EAELC,MAIRw8C,UAAWrwB,GAKV,OAHAnsB,KAAKF,GAAKqsB,EACVnsB,KAAKD,GAAKosB,EAEHnsB,KAIRu8C,WAAYh7C,EAAGC,GAKd,OAHAxB,KAAKF,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EACjBE,KAAKD,EAAIwB,EAAExB,EAAIyB,EAAEzB,EAEVC,KAIRy8C,SAAUpsC,GAKT,OAHArQ,KAAKF,GAAKuQ,EAAEvQ,EACZE,KAAKD,GAAKsQ,EAAEtQ,EAELC,KAIR4K,eAAgBC,GAKf,OAHA7K,KAAKF,GAAK+K,EACV7K,KAAKD,GAAK8K,EAEH7K,KAIR08C,OAAQrsC,GAKP,OAHArQ,KAAKF,GAAKuQ,EAAEvQ,EACZE,KAAKD,GAAKsQ,EAAEtQ,EAELC,KAIR28C,aAAc9xC,GAEb,OAAO7K,KAAK4K,eAAgB,EAAIC,GAIjC+xC,aAAch6C,GAEb,MAAM9C,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EACrByD,EAAIZ,EAAEi6C,SAKZ,OAHA78C,KAAKF,EAAI0D,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GACtCxD,KAAKD,EAAIyD,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GAE/BxD,KAIRiF,IAAKoL,GAKJ,OAHArQ,KAAKF,EAAIuD,KAAK4B,IAAKjF,KAAKF,EAAGuQ,EAAEvQ,GAC7BE,KAAKD,EAAIsD,KAAK4B,IAAKjF,KAAKD,EAAGsQ,EAAEtQ,GAEtBC,KAIRgF,IAAKqL,GAKJ,OAHArQ,KAAKF,EAAIuD,KAAK2B,IAAKhF,KAAKF,EAAGuQ,EAAEvQ,GAC7BE,KAAKD,EAAIsD,KAAK2B,IAAKhF,KAAKD,EAAGsQ,EAAEtQ,GAEtBC,KAIRg6C,MAAO/0C,EAAKD,GAOX,OAHAhF,KAAKF,EAAIuD,KAAK2B,IAAKC,EAAInF,EAAGuD,KAAK4B,IAAKD,EAAIlF,EAAGE,KAAKF,IAChDE,KAAKD,EAAIsD,KAAK2B,IAAKC,EAAIlF,EAAGsD,KAAK4B,IAAKD,EAAIjF,EAAGC,KAAKD,IAEzCC,KAIR88C,YAAaC,EAAQC,GAKpB,OAHAh9C,KAAKF,EAAIuD,KAAK2B,IAAK+3C,EAAQ15C,KAAK4B,IAAK+3C,EAAQh9C,KAAKF,IAClDE,KAAKD,EAAIsD,KAAK2B,IAAK+3C,EAAQ15C,KAAK4B,IAAK+3C,EAAQh9C,KAAKD,IAE3CC,KAIRi9C,YAAah4C,EAAKD,GAEjB,MAAM1C,EAAStC,KAAKsC,SAEpB,OAAOtC,KAAK28C,aAAcr6C,GAAU,GAAIsI,eAAgBvH,KAAK2B,IAAKC,EAAK5B,KAAK4B,IAAKD,EAAK1C,KAIvF8qB,QAKC,OAHAptB,KAAKF,EAAIuD,KAAK+pB,MAAOptB,KAAKF,GAC1BE,KAAKD,EAAIsD,KAAK+pB,MAAOptB,KAAKD,GAEnBC,KAIRqhB,OAKC,OAHArhB,KAAKF,EAAIuD,KAAKge,KAAMrhB,KAAKF,GACzBE,KAAKD,EAAIsD,KAAKge,KAAMrhB,KAAKD,GAElBC,KAIR8K,QAKC,OAHA9K,KAAKF,EAAIuD,KAAKyH,MAAO9K,KAAKF,GAC1BE,KAAKD,EAAIsD,KAAKyH,MAAO9K,KAAKD,GAEnBC,KAIRk9C,cAKC,OAHAl9C,KAAKF,EAAME,KAAKF,EAAI,EAAMuD,KAAKge,KAAMrhB,KAAKF,GAAMuD,KAAK+pB,MAAOptB,KAAKF,GACjEE,KAAKD,EAAMC,KAAKD,EAAI,EAAMsD,KAAKge,KAAMrhB,KAAKD,GAAMsD,KAAK+pB,MAAOptB,KAAKD,GAE1DC,KAIRm9C,SAKC,OAHAn9C,KAAKF,GAAME,KAAKF,EAChBE,KAAKD,GAAMC,KAAKD,EAETC,KAIR0gB,IAAKrQ,GAEJ,OAAOrQ,KAAKF,EAAIuQ,EAAEvQ,EAAIE,KAAKD,EAAIsQ,EAAEtQ,EAIlCiyB,MAAO3hB,GAEN,OAAOrQ,KAAKF,EAAIuQ,EAAEtQ,EAAIC,KAAKD,EAAIsQ,EAAEvQ,EAIlCs9C,WAEC,OAAOp9C,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAIxCuC,SAEC,OAAOe,KAAKyG,KAAM9J,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,GAInDs9C,kBAEC,OAAOh6C,KAAKC,IAAKtD,KAAKF,GAAMuD,KAAKC,IAAKtD,KAAKD,GAI5CmP,YAEC,OAAOlP,KAAK28C,aAAc38C,KAAKsC,UAAY,GAI5C0H,QAMC,OAFc3G,KAAK8G,OAASnK,KAAKD,GAAKC,KAAKF,GAAMuD,KAAK6G,GAMvDozC,WAAYjtC,GAEX,OAAOhN,KAAKyG,KAAM9J,KAAKu9C,kBAAmBltC,IAI3CktC,kBAAmBltC,GAElB,MAAMia,EAAKtqB,KAAKF,EAAIuQ,EAAEvQ,EAAGyqB,EAAKvqB,KAAKD,EAAIsQ,EAAEtQ,EACzC,OAAOuqB,EAAKA,EAAKC,EAAKA,EAIvBizB,oBAAqBntC,GAEpB,OAAOhN,KAAKC,IAAKtD,KAAKF,EAAIuQ,EAAEvQ,GAAMuD,KAAKC,IAAKtD,KAAKD,EAAIsQ,EAAEtQ,GAIxDiP,UAAW1M,GAEV,OAAOtC,KAAKkP,YAAYtE,eAAgBtI,GAIzC+3C,KAAMhqC,EAAG+5B,GAKR,OAHApqC,KAAKF,IAAOuQ,EAAEvQ,EAAIE,KAAKF,GAAMsqC,EAC7BpqC,KAAKD,IAAOsQ,EAAEtQ,EAAIC,KAAKD,GAAMqqC,EAEtBpqC,KAIRy9C,YAAajuC,EAAIoiB,EAAIwY,GAKpB,OAHApqC,KAAKF,EAAI0P,EAAG1P,GAAM8xB,EAAG9xB,EAAI0P,EAAG1P,GAAMsqC,EAClCpqC,KAAKD,EAAIyP,EAAGzP,GAAM6xB,EAAG7xB,EAAIyP,EAAGzP,GAAMqqC,EAE3BpqC,KAIRnB,OAAQwR,GAEP,OAAWA,EAAEvQ,IAAME,KAAKF,GAASuQ,EAAEtQ,IAAMC,KAAKD,EAI/CoO,UAAWgrC,EAAOn9B,EAAS,GAK1B,OAHAhc,KAAKF,EAAIq5C,EAAOn9B,GAChBhc,KAAKD,EAAIo5C,EAAOn9B,EAAS,GAElBhc,KAIR09C,QAASvE,EAAQ,GAAIn9B,EAAS,GAK7B,OAHAm9B,EAAOn9B,GAAWhc,KAAKF,EACvBq5C,EAAOn9B,EAAS,GAAMhc,KAAKD,EAEpBo5C,EAIRwE,oBAAqBC,EAAWzxC,EAAO6P,GAWtC,YATgB7C,IAAX6C,GAEJrP,QAAQoK,KAAM,uEAIf/W,KAAKF,EAAI89C,EAAUC,KAAM1xC,GACzBnM,KAAKD,EAAI69C,EAAUE,KAAM3xC,GAElBnM,KAIR+9C,aAAcxzC,EAAQP,GAErB,MAAMvI,EAAI4B,KAAKqH,IAAKV,GAASmiB,EAAI9oB,KAAKsH,IAAKX,GAErClK,EAAIE,KAAKF,EAAIyK,EAAOzK,EACpBC,EAAIC,KAAKD,EAAIwK,EAAOxK,EAK1B,OAHAC,KAAKF,EAAIA,EAAI2B,EAAI1B,EAAIosB,EAAI5hB,EAAOzK,EAChCE,KAAKD,EAAID,EAAIqsB,EAAIpsB,EAAI0B,EAAI8I,EAAOxK,EAEzBC,KAIRsL,SAKC,OAHAtL,KAAKF,EAAIuD,KAAKiI,SACdtL,KAAKD,EAAIsD,KAAKiI,SAEPtL,MAMT,MAAMg+C,GAEL93C,cAEC1G,OAAOC,eAAgBO,KAAM,YAAa,CAAEL,OAAO,IAEnDK,KAAK68C,SAAW,CAEf,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAIFtqB,UAAUjwB,OAAS,GAEvBqK,QAAQu1B,MAAO,iFAMjBt5B,IAAKq1C,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAE5C,MAAMC,EAAK1+C,KAAK68C,SAMhB,OAJA6B,EAAI,GAAMT,EAAKS,EAAI,GAAMN,EAAKM,EAAI,GAAMH,EACxCG,EAAI,GAAMR,EAAKQ,EAAI,GAAML,EAAKK,EAAI,GAAMF,EACxCE,EAAI,GAAMP,EAAKO,EAAI,GAAMJ,EAAKI,EAAI,GAAMD,EAEjCz+C,KAIR2+C,WAUC,OARA3+C,KAAK4I,IAEJ,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAIA5I,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,aAAciI,UAAWnO,KAAK68C,UAI/C/5B,KAAMlgB,GAEL,MAAM87C,EAAK1+C,KAAK68C,SACV+B,EAAKh8C,EAAEi6C,SAMb,OAJA6B,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GACpDF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GACpDF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAE7C5+C,KAIR6+C,aAAcC,EAAOC,EAAOC,GAM3B,OAJAF,EAAMG,qBAAsBj/C,KAAM,GAClC++C,EAAME,qBAAsBj/C,KAAM,GAClCg/C,EAAMC,qBAAsBj/C,KAAM,GAE3BA,KAIRk/C,eAAgBt8C,GAEf,MAAMg8C,EAAKh8C,EAAEi6C,SAUb,OARA78C,KAAK4I,IAEJg2C,EAAI,GAAKA,EAAI,GAAKA,EAAI,GACtBA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GACtBA,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAIhB5+C,KAIRy8C,SAAU75C,GAET,OAAO5C,KAAKm/C,iBAAkBn/C,KAAM4C,GAIrCw8C,YAAax8C,GAEZ,OAAO5C,KAAKm/C,iBAAkBv8C,EAAG5C,MAIlCm/C,iBAAkB59C,EAAGC,GAEpB,MAAM69C,EAAK99C,EAAEs7C,SACPyC,EAAK99C,EAAEq7C,SACP6B,EAAK1+C,KAAK68C,SAEV0C,EAAMF,EAAI,GAAKG,EAAMH,EAAI,GAAKI,EAAMJ,EAAI,GACxCK,EAAML,EAAI,GAAKM,EAAMN,EAAI,GAAKO,EAAMP,EAAI,GACxCQ,EAAMR,EAAI,GAAKS,EAAMT,EAAI,GAAKU,EAAMV,EAAI,GAExCW,EAAMV,EAAI,GAAKW,EAAMX,EAAI,GAAKY,EAAMZ,EAAI,GACxCa,EAAMb,EAAI,GAAKc,EAAMd,EAAI,GAAKe,EAAMf,EAAI,GACxCgB,EAAMhB,EAAI,GAAKiB,EAAMjB,EAAI,GAAKkB,EAAMlB,EAAI,GAc9C,OAZAZ,EAAI,GAAMa,EAAMS,EAAMR,EAAMW,EAAMV,EAAMa,EACxC5B,EAAI,GAAMa,EAAMU,EAAMT,EAAMY,EAAMX,EAAMc,EACxC7B,EAAI,GAAMa,EAAMW,EAAMV,EAAMa,EAAMZ,EAAMe,EAExC9B,EAAI,GAAMgB,EAAMM,EAAML,EAAMQ,EAAMP,EAAMU,EACxC5B,EAAI,GAAMgB,EAAMO,EAAMN,EAAMS,EAAMR,EAAMW,EACxC7B,EAAI,GAAMgB,EAAMQ,EAAMP,EAAMU,EAAMT,EAAMY,EAExC9B,EAAI,GAAMmB,EAAMG,EAAMF,EAAMK,EAAMJ,EAAMO,EACxC5B,EAAI,GAAMmB,EAAMI,EAAMH,EAAMM,EAAML,EAAMQ,EACxC7B,EAAI,GAAMmB,EAAMK,EAAMJ,EAAMO,EAAMN,EAAMS,EAEjCxgD,KAIR4K,eAAgBuhB,GAEf,MAAMuyB,EAAK1+C,KAAK68C,SAMhB,OAJA6B,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EACvCuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EACvCuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EAEhCnsB,KAIR6qB,cAEC,MAAM6zB,EAAK1+C,KAAK68C,SAEVt7C,EAAIm9C,EAAI,GAAKl9C,EAAIk9C,EAAI,GAAKj9C,EAAIi9C,EAAI,GACvCrqC,EAAIqqC,EAAI,GAAKl7C,EAAIk7C,EAAI,GAAK7mB,EAAI6mB,EAAI,GAClC5V,EAAI4V,EAAI,GAAKjkC,EAAIikC,EAAI,GAAK7+C,EAAI6+C,EAAI,GAEnC,OAAOn9C,EAAIiC,EAAI3D,EAAI0B,EAAIs2B,EAAIpd,EAAIjZ,EAAI6S,EAAIxU,EAAI2B,EAAIq2B,EAAIiR,EAAIrnC,EAAI4S,EAAIoG,EAAIhZ,EAAI+B,EAAIslC,EAI5E2X,SAEC,MAAM/B,EAAK1+C,KAAK68C,SAEfoB,EAAMS,EAAI,GAAKN,EAAMM,EAAI,GAAKH,EAAMG,EAAI,GACxCR,EAAMQ,EAAI,GAAKL,EAAMK,EAAI,GAAKF,EAAME,EAAI,GACxCP,EAAMO,EAAI,GAAKJ,EAAMI,EAAI,GAAKD,EAAMC,EAAI,GAExCgC,EAAMjC,EAAMJ,EAAMG,EAAMF,EACxBqC,EAAMnC,EAAML,EAAMM,EAAMP,EACxB0C,EAAMtC,EAAMJ,EAAMG,EAAMF,EAExB0C,EAAM5C,EAAMyC,EAAMtC,EAAMuC,EAAMpC,EAAMqC,EAErC,GAAa,IAARC,EAAY,OAAO7gD,KAAK4I,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE1D,MAAMk4C,EAAS,EAAID,EAcnB,OAZAnC,EAAI,GAAMgC,EAAMI,EAChBpC,EAAI,IAAQH,EAAMD,EAAMG,EAAML,GAAQ0C,EACtCpC,EAAI,IAAQF,EAAMJ,EAAMG,EAAMF,GAAQyC,EAEtCpC,EAAI,GAAMiC,EAAMG,EAChBpC,EAAI,IAAQD,EAAMR,EAAMM,EAAMJ,GAAQ2C,EACtCpC,EAAI,IAAQH,EAAML,EAAMM,EAAMP,GAAQ6C,EAEtCpC,EAAI,GAAMkC,EAAME,EAChBpC,EAAI,IAAQN,EAAMD,EAAMG,EAAML,GAAQ6C,EACtCpC,EAAI,IAAQL,EAAMJ,EAAMG,EAAMF,GAAQ4C,EAE/B9gD,KAIR+gD,YAEC,IAAIlwC,EACJ,MAAMjO,EAAI5C,KAAK68C,SAMf,OAJAhsC,EAAMjO,EAAG,GAAKA,EAAG,GAAMA,EAAG,GAAKA,EAAG,GAAMiO,EACxCA,EAAMjO,EAAG,GAAKA,EAAG,GAAMA,EAAG,GAAKA,EAAG,GAAMiO,EACxCA,EAAMjO,EAAG,GAAKA,EAAG,GAAMA,EAAG,GAAKA,EAAG,GAAMiO,EAEjC7Q,KAIRghD,gBAAiBC,GAEhB,OAAOjhD,KAAKk/C,eAAgB+B,GAAUn+B,KAAM9iB,MAAOygD,SAASM,YAI7DG,mBAAoB38C,GAEnB,MAAM3B,EAAI5C,KAAK68C,SAYf,OAVAt4C,EAAG,GAAM3B,EAAG,GACZ2B,EAAG,GAAM3B,EAAG,GACZ2B,EAAG,GAAM3B,EAAG,GACZ2B,EAAG,GAAM3B,EAAG,GACZ2B,EAAG,GAAM3B,EAAG,GACZ2B,EAAG,GAAM3B,EAAG,GACZ2B,EAAG,GAAM3B,EAAG,GACZ2B,EAAG,GAAM3B,EAAG,GACZ2B,EAAG,GAAM3B,EAAG,GAEL5C,KAIRmhD,eAAgBC,EAAIC,EAAIC,EAAIC,EAAIvgC,EAAU7c,EAAIC,GAE7C,MAAM3C,EAAI4B,KAAKqH,IAAKsW,GACdmL,EAAI9oB,KAAKsH,IAAKqW,GAQpB,OANAhhB,KAAK4I,IACJ04C,EAAK7/C,EAAG6/C,EAAKn1B,GAAKm1B,GAAO7/C,EAAI0C,EAAKgoB,EAAI/nB,GAAOD,EAAKi9C,GAChDG,EAAKp1B,EAAGo1B,EAAK9/C,GAAK8/C,IAASp1B,EAAIhoB,EAAK1C,EAAI2C,GAAOA,EAAKi9C,EACtD,EAAG,EAAG,GAGArhD,KAIRqK,MAAOi3C,EAAIC,GAEV,MAAM7C,EAAK1+C,KAAK68C,SAKhB,OAHA6B,EAAI,IAAO4C,EAAI5C,EAAI,IAAO4C,EAAI5C,EAAI,IAAO4C,EACzC5C,EAAI,IAAO6C,EAAI7C,EAAI,IAAO6C,EAAI7C,EAAI,IAAO6C,EAElCvhD,KAIRwK,OAAQwuB,GAEP,MAAMv3B,EAAI4B,KAAKqH,IAAKsuB,GACd7M,EAAI9oB,KAAKsH,IAAKquB,GAEd0lB,EAAK1+C,KAAK68C,SAEV0C,EAAMb,EAAI,GAAKc,EAAMd,EAAI,GAAKe,EAAMf,EAAI,GACxCgB,EAAMhB,EAAI,GAAKiB,EAAMjB,EAAI,GAAKkB,EAAMlB,EAAI,GAU9C,OARAA,EAAI,GAAMj9C,EAAI89C,EAAMpzB,EAAIuzB,EACxBhB,EAAI,GAAMj9C,EAAI+9C,EAAMrzB,EAAIwzB,EACxBjB,EAAI,GAAMj9C,EAAIg+C,EAAMtzB,EAAIyzB,EAExBlB,EAAI,IAAQvyB,EAAIozB,EAAM99C,EAAIi+C,EAC1BhB,EAAI,IAAQvyB,EAAIqzB,EAAM/9C,EAAIk+C,EAC1BjB,EAAI,IAAQvyB,EAAIszB,EAAMh+C,EAAIm+C,EAEnB5/C,KAIRuS,UAAW6uC,EAAIC,GAEd,MAAM3C,EAAK1+C,KAAK68C,SAKhB,OAHA6B,EAAI,IAAO0C,EAAK1C,EAAI,GAAKA,EAAI,IAAO0C,EAAK1C,EAAI,GAAKA,EAAI,IAAO0C,EAAK1C,EAAI,GACtEA,EAAI,IAAO2C,EAAK3C,EAAI,GAAKA,EAAI,IAAO2C,EAAK3C,EAAI,GAAKA,EAAI,IAAO2C,EAAK3C,EAAI,GAE/D1+C,KAIRnB,OAAQ2iD,GAEP,MAAM9C,EAAK1+C,KAAK68C,SACV+B,EAAK4C,EAAO3E,SAElB,IAAM,IAAIh9C,EAAI,EAAGA,EAAI,EAAGA,IAEvB,GAAK6+C,EAAI7+C,KAAQ++C,EAAI/+C,GAAM,OAAO,EAInC,OAAO,EAIRsO,UAAWgrC,EAAOn9B,EAAS,GAE1B,IAAM,IAAInc,EAAI,EAAGA,EAAI,EAAGA,IAEvBG,KAAK68C,SAAUh9C,GAAMs5C,EAAOt5C,EAAImc,GAIjC,OAAOhc,KAIR09C,QAASvE,EAAQ,GAAIn9B,EAAS,GAE7B,MAAM0iC,EAAK1+C,KAAK68C,SAchB,OAZA1D,EAAOn9B,GAAW0iC,EAAI,GACtBvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAE1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAE1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAEnBvF,GAMT,IAAIsI,GAEJ,MAAMC,GAAa,CAElBC,WAAY,SAAWjiC,GAEtB,GAAK,UAAUkiC,KAAMliC,EAAMU,KAE1B,OAAOV,EAAMU,IAId,GAAiC,oBAArBsjB,kBAEX,OAAOhkB,EAAMU,IAId,IAAIkF,EAEJ,GAAK5F,aAAiBgkB,kBAErBpe,EAAS5F,MAEH,MAEWvG,IAAZsoC,KAAwBA,GAAU1jC,SAASC,gBAAiB,+BAAgC,WAEjGyjC,GAAQnzC,MAAQoR,EAAMpR,MACtBmzC,GAAQlzC,OAASmR,EAAMnR,OAEvB,MAAMgV,EAAUk+B,GAAQrjB,WAAY,MAE/B1e,aAAiBmiC,UAErBt+B,EAAQu+B,aAAcpiC,EAAO,EAAG,GAIhC6D,EAAQW,UAAWxE,EAAO,EAAG,EAAGA,EAAMpR,MAAOoR,EAAMnR,QAIpD+W,EAASm8B,GAIV,OAAKn8B,EAAOhX,MAAQ,MAAQgX,EAAO/W,OAAS,KAEpC+W,EAAOy8B,UAAW,aAAc,IAIhCz8B,EAAOy8B,UAAW,eAQ5B,IAAIC,GAAY,EAEhB,SAASC,GAASviC,EAAQuiC,GAAQC,cAAeC,EAAUF,GAAQG,gBAAiBC,EAAQ7R,GAAqB8R,EAAQ9R,GAAqB+R,EAAYxR,GAAcyR,EAAYtR,GAA0BuR,EAASvQ,GAAYpS,EAAOsR,GAAkBsR,EAAa,EAAGC,EAAWvM,IAEtR52C,OAAOC,eAAgBO,KAAM,KAAM,CAAEL,MAAOqiD,OAE5ChiD,KAAK4iD,KAAOpJ,GAAUG,eAEtB35C,KAAKuvB,KAAO,GAEZvvB,KAAK0f,MAAQA,EACb1f,KAAK6iD,QAAU,GAEf7iD,KAAKmiD,QAAUA,EAEfniD,KAAKqiD,MAAQA,EACbriD,KAAKsiD,MAAQA,EAEbtiD,KAAKuiD,UAAYA,EACjBviD,KAAKwiD,UAAYA,EAEjBxiD,KAAK0iD,WAAaA,EAElB1iD,KAAKyiD,OAASA,EACdziD,KAAK8iD,eAAiB,KACtB9iD,KAAK8/B,KAAOA,EAEZ9/B,KAAKgc,OAAS,IAAIggC,GAAS,EAAG,GAC9Bh8C,KAAK+iD,OAAS,IAAI/G,GAAS,EAAG,GAC9Bh8C,KAAKuK,OAAS,IAAIyxC,GAAS,EAAG,GAC9Bh8C,KAAKghB,SAAW,EAEhBhhB,KAAKgjD,kBAAmB,EACxBhjD,KAAKwhD,OAAS,IAAIxD,GAElBh+C,KAAKijD,iBAAkB,EACvBjjD,KAAKkjD,kBAAmB,EACxBljD,KAAKmjD,OAAQ,EACbnjD,KAAKojD,gBAAkB,EAMvBpjD,KAAK2iD,SAAWA,EAEhB3iD,KAAKqjD,QAAU,EACfrjD,KAAKsjD,SAAW,KAkRjB,SAASC,GAAgB7jC,GAExB,MAAmC,oBAArB8jC,kBAAoC9jC,aAAiB8jC,kBACnC,oBAAtB9f,mBAAqChkB,aAAiBgkB,mBACtC,oBAAhB+f,aAA+B/jC,aAAiB+jC,YAIlD/B,GAAWC,WAAYjiC,GAIzBA,EAAMnf,KAIH,CACNA,KAAMqV,MAAMijC,UAAUO,MAAMC,KAAM35B,EAAMnf,MACxC+N,MAAOoR,EAAMpR,MACbC,OAAQmR,EAAMnR,OACduxB,KAAMpgB,EAAMnf,KAAK2F,YAAYqpB,OAK9B5iB,QAAQoK,KAAM,+CACP,IAxSVkrC,GAAQC,mBAAgB/oC,EACxB8oC,GAAQG,gBAAkBpS,GAE1BiS,GAAQpJ,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ/K,GAAgBE,WAAa,CAE9E3yC,YAAa+7C,GAEb0B,WAAW,EAEXC,aAAc,WAEb5jD,KAAKwhD,OAAOL,eAAgBnhD,KAAKgc,OAAOlc,EAAGE,KAAKgc,OAAOjc,EAAGC,KAAK+iD,OAAOjjD,EAAGE,KAAK+iD,OAAOhjD,EAAGC,KAAKghB,SAAUhhB,KAAKuK,OAAOzK,EAAGE,KAAKuK,OAAOxK,IAInI4J,MAAO,WAEN,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,OAIrC8iB,KAAM,SAAW+gC,GAmChB,OAjCA7jD,KAAKuvB,KAAOs0B,EAAOt0B,KAEnBvvB,KAAK0f,MAAQmkC,EAAOnkC,MACpB1f,KAAK6iD,QAAUgB,EAAOhB,QAAQzJ,MAAO,GAErCp5C,KAAKmiD,QAAU0B,EAAO1B,QAEtBniD,KAAKqiD,MAAQwB,EAAOxB,MACpBriD,KAAKsiD,MAAQuB,EAAOvB,MAEpBtiD,KAAKuiD,UAAYsB,EAAOtB,UACxBviD,KAAKwiD,UAAYqB,EAAOrB,UAExBxiD,KAAK0iD,WAAamB,EAAOnB,WAEzB1iD,KAAKyiD,OAASoB,EAAOpB,OACrBziD,KAAK8iD,eAAiBe,EAAOf,eAC7B9iD,KAAK8/B,KAAO+jB,EAAO/jB,KAEnB9/B,KAAKgc,OAAO8G,KAAM+gC,EAAO7nC,QACzBhc,KAAK+iD,OAAOjgC,KAAM+gC,EAAOd,QACzB/iD,KAAKuK,OAAOuY,KAAM+gC,EAAOt5C,QACzBvK,KAAKghB,SAAW6iC,EAAO7iC,SAEvBhhB,KAAKgjD,iBAAmBa,EAAOb,iBAC/BhjD,KAAKwhD,OAAO1+B,KAAM+gC,EAAOrC,QAEzBxhD,KAAKijD,gBAAkBY,EAAOZ,gBAC9BjjD,KAAKkjD,iBAAmBW,EAAOX,iBAC/BljD,KAAKmjD,MAAQU,EAAOV,MACpBnjD,KAAKojD,gBAAkBS,EAAOT,gBAC9BpjD,KAAK2iD,SAAWkB,EAAOlB,SAEhB3iD,MAIRqV,OAAQ,SAAWyuC,GAElB,MAAMC,OAA0B5qC,IAAT2qC,GAAsC,iBAATA,EAEpD,IAAOC,QAA+C5qC,IAA/B2qC,EAAKE,SAAUhkD,KAAK4iD,MAE1C,OAAOkB,EAAKE,SAAUhkD,KAAK4iD,MAI5B,MAAMqB,EAAS,CAEdC,SAAU,CACTb,QAAS,IACTvjB,KAAM,UACNqkB,UAAW,kBAGZvB,KAAM5iD,KAAK4iD,KACXrzB,KAAMvvB,KAAKuvB,KAEX4yB,QAASniD,KAAKmiD,QAEdY,OAAQ,CAAE/iD,KAAK+iD,OAAOjjD,EAAGE,KAAK+iD,OAAOhjD,GACrCic,OAAQ,CAAEhc,KAAKgc,OAAOlc,EAAGE,KAAKgc,OAAOjc,GACrCwK,OAAQ,CAAEvK,KAAKuK,OAAOzK,EAAGE,KAAKuK,OAAOxK,GACrCihB,SAAUhhB,KAAKghB,SAEfojC,KAAM,CAAEpkD,KAAKqiD,MAAOriD,KAAKsiD,OAEzBG,OAAQziD,KAAKyiD,OACb3iB,KAAM9/B,KAAK8/B,KACX6iB,SAAU3iD,KAAK2iD,SAEfH,UAAWxiD,KAAKwiD,UAChBD,UAAWviD,KAAKuiD,UAChBG,WAAY1iD,KAAK0iD,WAEjBS,MAAOnjD,KAAKmjD,MAEZD,iBAAkBljD,KAAKkjD,iBACvBE,gBAAiBpjD,KAAKojD,iBAIvB,QAAoBjqC,IAAfnZ,KAAK0f,MAAsB,CAI/B,MAAMA,EAAQ1f,KAAK0f,MAQnB,QANoBvG,IAAfuG,EAAMkjC,OAEVljC,EAAMkjC,KAAOpJ,GAAUG,iBAIjBoK,QAA8C5qC,IAA9B2qC,EAAKO,OAAQ3kC,EAAMkjC,MAAuB,CAEhE,IAAI0B,EAEJ,GAAK1uC,MAAMC,QAAS6J,GAAU,CAI7B4kC,EAAM,GAEN,IAAM,IAAIzkD,EAAI,EAAGwO,EAAIqR,EAAMpd,OAAQzC,EAAIwO,EAAGxO,IAIpC6f,EAAO7f,GAAI0kD,cAEfD,EAAIhjD,KAAMiiD,GAAgB7jC,EAAO7f,GAAI6f,QAIrC4kC,EAAIhjD,KAAMiiD,GAAgB7jC,EAAO7f,UAUnCykD,EAAMf,GAAgB7jC,GAIvBokC,EAAKO,OAAQ3kC,EAAMkjC,MAAS,CAC3BA,KAAMljC,EAAMkjC,KACZ0B,IAAKA,GAKPL,EAAOvkC,MAAQA,EAAMkjC,KAUtB,OANOmB,IAEND,EAAKE,SAAUhkD,KAAK4iD,MAASqB,GAIvBA,GAIRO,QAAS,WAERxkD,KAAKi5C,cAAe,CAAEnZ,KAAM,aAI7B2kB,YAAa,SAAWC,GAEvB,GAAK1kD,KAAKmiD,UAAYnS,GAAY,OAAO0U,EAIzC,GAFAA,EAAG9H,aAAc58C,KAAKwhD,QAEjBkD,EAAG5kD,EAAI,GAAK4kD,EAAG5kD,EAAI,EAEvB,OAASE,KAAKqiD,OAEb,KAAK9R,GAEJmU,EAAG5kD,EAAI4kD,EAAG5kD,EAAIuD,KAAK+pB,MAAOs3B,EAAG5kD,GAC7B,MAED,KAAK0wC,GAEJkU,EAAG5kD,EAAI4kD,EAAG5kD,EAAI,EAAI,EAAI,EACtB,MAED,KAAK2wC,GAEwC,IAAvCptC,KAAKC,IAAKD,KAAK+pB,MAAOs3B,EAAG5kD,GAAM,GAEnC4kD,EAAG5kD,EAAIuD,KAAKge,KAAMqjC,EAAG5kD,GAAM4kD,EAAG5kD,EAI9B4kD,EAAG5kD,EAAI4kD,EAAG5kD,EAAIuD,KAAK+pB,MAAOs3B,EAAG5kD,GAUjC,GAAK4kD,EAAG3kD,EAAI,GAAK2kD,EAAG3kD,EAAI,EAEvB,OAASC,KAAKsiD,OAEb,KAAK/R,GAEJmU,EAAG3kD,EAAI2kD,EAAG3kD,EAAIsD,KAAK+pB,MAAOs3B,EAAG3kD,GAC7B,MAED,KAAKywC,GAEJkU,EAAG3kD,EAAI2kD,EAAG3kD,EAAI,EAAI,EAAI,EACtB,MAED,KAAK0wC,GAEwC,IAAvCptC,KAAKC,IAAKD,KAAK+pB,MAAOs3B,EAAG3kD,GAAM,GAEnC2kD,EAAG3kD,EAAIsD,KAAKge,KAAMqjC,EAAG3kD,GAAM2kD,EAAG3kD,EAI9B2kD,EAAG3kD,EAAI2kD,EAAG3kD,EAAIsD,KAAK+pB,MAAOs3B,EAAG3kD,GAgBjC,OANKC,KAAKmjD,QAETuB,EAAG3kD,EAAI,EAAI2kD,EAAG3kD,GAIR2kD,KAMTllD,OAAOC,eAAgBwiD,GAAQpJ,UAAW,cAAe,CAExDjwC,IAAK,SAAWjJ,IAEA,IAAVA,GAAiBK,KAAKqjD,aAwC7B,MAAMsB,GAELz+C,YAAapG,EAAI,EAAGC,EAAI,EAAGI,EAAI,EAAGmQ,EAAI,GAErC9Q,OAAOC,eAAgBO,KAAM,YAAa,CAAEL,OAAO,IAEnDK,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKG,EAAIA,EACTH,KAAKsQ,EAAIA,EAINhC,YAEH,OAAOtO,KAAKG,EAITmO,UAAO3O,GAEVK,KAAKG,EAAIR,EAIN4O,aAEH,OAAOvO,KAAKsQ,EAIT/B,WAAQ5O,GAEXK,KAAKsQ,EAAI3Q,EAIViJ,IAAK9I,EAAGC,EAAGI,EAAGmQ,GAOb,OALAtQ,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKG,EAAIA,EACTH,KAAKsQ,EAAIA,EAEFtQ,KAIRi8C,UAAWpxC,GAOV,OALA7K,KAAKF,EAAI+K,EACT7K,KAAKD,EAAI8K,EACT7K,KAAKG,EAAI0K,EACT7K,KAAKsQ,EAAIzF,EAEF7K,KAIR6I,KAAM/I,GAIL,OAFAE,KAAKF,EAAIA,EAEFE,KAIR8I,KAAM/I,GAIL,OAFAC,KAAKD,EAAIA,EAEFC,KAIR4kD,KAAMzkD,GAIL,OAFAH,KAAKG,EAAIA,EAEFH,KAIR6kD,KAAMv0C,GAIL,OAFAtQ,KAAKsQ,EAAIA,EAEFtQ,KAIRk8C,aAAc/vC,EAAOxM,GAEpB,OAASwM,GAER,KAAK,EAAGnM,KAAKF,EAAIH,EAAO,MACxB,KAAK,EAAGK,KAAKD,EAAIJ,EAAO,MACxB,KAAK,EAAGK,KAAKG,EAAIR,EAAO,MACxB,KAAK,EAAGK,KAAKsQ,EAAI3Q,EAAO,MACxB,QAAS,MAAM,IAAIsU,MAAO,0BAA4B9H,GAIvD,OAAOnM,KAIRm8C,aAAchwC,GAEb,OAASA,GAER,KAAK,EAAG,OAAOnM,KAAKF,EACpB,KAAK,EAAG,OAAOE,KAAKD,EACpB,KAAK,EAAG,OAAOC,KAAKG,EACpB,KAAK,EAAG,OAAOH,KAAKsQ,EACpB,QAAS,MAAM,IAAI2D,MAAO,0BAA4B9H,IAMxDxC,QAEC,OAAO,IAAI3J,KAAKkG,YAAalG,KAAKF,EAAGE,KAAKD,EAAGC,KAAKG,EAAGH,KAAKsQ,GAI3DwS,KAAMzS,GAOL,OALArQ,KAAKF,EAAIuQ,EAAEvQ,EACXE,KAAKD,EAAIsQ,EAAEtQ,EACXC,KAAKG,EAAIkQ,EAAElQ,EACXH,KAAKsQ,OAAc6I,IAAR9I,EAAEC,EAAoBD,EAAEC,EAAI,EAEhCtQ,KAIRiJ,IAAKoH,EAAGC,GAEP,YAAW6I,IAAN7I,GAEJ3D,QAAQoK,KAAM,yFACP/W,KAAKo8C,WAAY/rC,EAAGC,KAI5BtQ,KAAKF,GAAKuQ,EAAEvQ,EACZE,KAAKD,GAAKsQ,EAAEtQ,EACZC,KAAKG,GAAKkQ,EAAElQ,EACZH,KAAKsQ,GAAKD,EAAEC,EAELtQ,MAIRq8C,UAAWlwB,GAOV,OALAnsB,KAAKF,GAAKqsB,EACVnsB,KAAKD,GAAKosB,EACVnsB,KAAKG,GAAKgsB,EACVnsB,KAAKsQ,GAAK6b,EAEHnsB,KAIRo8C,WAAY76C,EAAGC,GAOd,OALAxB,KAAKF,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EACjBE,KAAKD,EAAIwB,EAAExB,EAAIyB,EAAEzB,EACjBC,KAAKG,EAAIoB,EAAEpB,EAAIqB,EAAErB,EACjBH,KAAKsQ,EAAI/O,EAAE+O,EAAI9O,EAAE8O,EAEVtQ,KAIRs8C,gBAAiBjsC,EAAG8b,GAOnB,OALAnsB,KAAKF,GAAKuQ,EAAEvQ,EAAIqsB,EAChBnsB,KAAKD,GAAKsQ,EAAEtQ,EAAIosB,EAChBnsB,KAAKG,GAAKkQ,EAAElQ,EAAIgsB,EAChBnsB,KAAKsQ,GAAKD,EAAEC,EAAI6b,EAETnsB,KAIRuJ,IAAK8G,EAAGC,GAEP,YAAW6I,IAAN7I,GAEJ3D,QAAQoK,KAAM,yFACP/W,KAAKu8C,WAAYlsC,EAAGC,KAI5BtQ,KAAKF,GAAKuQ,EAAEvQ,EACZE,KAAKD,GAAKsQ,EAAEtQ,EACZC,KAAKG,GAAKkQ,EAAElQ,EACZH,KAAKsQ,GAAKD,EAAEC,EAELtQ,MAIRw8C,UAAWrwB,GAOV,OALAnsB,KAAKF,GAAKqsB,EACVnsB,KAAKD,GAAKosB,EACVnsB,KAAKG,GAAKgsB,EACVnsB,KAAKsQ,GAAK6b,EAEHnsB,KAIRu8C,WAAYh7C,EAAGC,GAOd,OALAxB,KAAKF,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EACjBE,KAAKD,EAAIwB,EAAExB,EAAIyB,EAAEzB,EACjBC,KAAKG,EAAIoB,EAAEpB,EAAIqB,EAAErB,EACjBH,KAAKsQ,EAAI/O,EAAE+O,EAAI9O,EAAE8O,EAEVtQ,KAIR4K,eAAgBC,GAOf,OALA7K,KAAKF,GAAK+K,EACV7K,KAAKD,GAAK8K,EACV7K,KAAKG,GAAK0K,EACV7K,KAAKsQ,GAAKzF,EAEH7K,KAIR8kD,aAAcliD,GAEb,MAAM9C,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EAAGI,EAAIH,KAAKG,EAAGmQ,EAAItQ,KAAKsQ,EAC7C9M,EAAIZ,EAAEi6C,SAOZ,OALA78C,KAAKF,EAAI0D,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GAAMrD,EAAIqD,EAAG,IAAO8M,EAC1DtQ,KAAKD,EAAIyD,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GAAMrD,EAAIqD,EAAG,IAAO8M,EAC1DtQ,KAAKG,EAAIqD,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,IAAOrD,EAAIqD,EAAG,IAAO8M,EAC3DtQ,KAAKsQ,EAAI9M,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,IAAOrD,EAAIqD,EAAG,IAAO8M,EAEpDtQ,KAIR28C,aAAc9xC,GAEb,OAAO7K,KAAK4K,eAAgB,EAAIC,GAIjCk6C,2BAA4BxhD,GAM3BvD,KAAKsQ,EAAI,EAAIjN,KAAKyuB,KAAMvuB,EAAE+M,GAE1B,MAAM6b,EAAI9oB,KAAKyG,KAAM,EAAIvG,EAAE+M,EAAI/M,EAAE+M,GAgBjC,OAdK6b,EAAI,MAERnsB,KAAKF,EAAI,EACTE,KAAKD,EAAI,EACTC,KAAKG,EAAI,IAITH,KAAKF,EAAIyD,EAAEzD,EAAIqsB,EACfnsB,KAAKD,EAAIwD,EAAExD,EAAIosB,EACfnsB,KAAKG,EAAIoD,EAAEpD,EAAIgsB,GAITnsB,KAIRglD,+BAAgCpiD,GAM/B,IAAIoH,EAAOlK,EAAGC,EAAGI,EACjB,MAAM8kD,EAAU,IACfC,EAAW,GAEXxG,EAAK97C,EAAEi6C,SAEPsI,EAAMzG,EAAI,GAAK0G,EAAM1G,EAAI,GAAK2G,EAAM3G,EAAI,GACxC4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GACxC+G,EAAM/G,EAAI,GAAKgH,EAAMhH,EAAI,GAAKiH,EAAMjH,EAAI,IAEzC,GAAOr7C,KAAKC,IAAK8hD,EAAME,GAAQL,GACxB5hD,KAAKC,IAAK+hD,EAAMI,GAAQR,GACxB5hD,KAAKC,IAAKkiD,EAAME,GAAQT,EAAY,CAM1C,GAAO5hD,KAAKC,IAAK8hD,EAAME,GAAQJ,GACxB7hD,KAAKC,IAAK+hD,EAAMI,GAAQP,GACxB7hD,KAAKC,IAAKkiD,EAAME,GAAQR,GACxB7hD,KAAKC,IAAK6hD,EAAMI,EAAMI,EAAM,GAAMT,EAMxC,OAFAllD,KAAK4I,IAAK,EAAG,EAAG,EAAG,GAEZ5I,KAMRgK,EAAQ3G,KAAK6G,GAEb,MAAM07C,GAAOT,EAAM,GAAM,EACnBU,GAAON,EAAM,GAAM,EACnBO,GAAOH,EAAM,GAAM,EACnBI,GAAOX,EAAME,GAAQ,EACrBU,GAAOX,EAAMI,GAAQ,EACrBQ,GAAOT,EAAME,GAAQ,EA4D3B,OA1DOE,EAAKC,GAAUD,EAAKE,EAIrBF,EAAKX,GAETnlD,EAAI,EACJC,EAAI,WACJI,EAAI,aAIJL,EAAIuD,KAAKyG,KAAM87C,GACf7lD,EAAIgmD,EAAKjmD,EACTK,EAAI6lD,EAAKlmD,GAIC+lD,EAAKC,EAIXD,EAAKZ,GAETnlD,EAAI,WACJC,EAAI,EACJI,EAAI,aAIJJ,EAAIsD,KAAKyG,KAAM+7C,GACf/lD,EAAIimD,EAAKhmD,EACTI,EAAI8lD,EAAKlmD,GAQL+lD,EAAKb,GAETnlD,EAAI,WACJC,EAAI,WACJI,EAAI,IAIJA,EAAIkD,KAAKyG,KAAMg8C,GACfhmD,EAAIkmD,EAAK7lD,EACTJ,EAAIkmD,EAAK9lD,GAMXH,KAAK4I,IAAK9I,EAAGC,EAAGI,EAAG6J,GAEZhK,KAMR,IAAImsB,EAAI9oB,KAAKyG,MAAQ47C,EAAMF,IAAUE,EAAMF,IACxCH,EAAMI,IAAUJ,EAAMI,IACtBH,EAAMF,IAAUE,EAAMF,IAYzB,OAVK/hD,KAAKC,IAAK6oB,GAAM,OAAQA,EAAI,GAKjCnsB,KAAKF,GAAM4lD,EAAMF,GAAQr5B,EACzBnsB,KAAKD,GAAMslD,EAAMI,GAAQt5B,EACzBnsB,KAAKG,GAAMmlD,EAAMF,GAAQj5B,EACzBnsB,KAAKsQ,EAAIjN,KAAKyuB,MAAQqzB,EAAMI,EAAMI,EAAM,GAAM,GAEvC3lD,KAIRiF,IAAKoL,GAOJ,OALArQ,KAAKF,EAAIuD,KAAK4B,IAAKjF,KAAKF,EAAGuQ,EAAEvQ,GAC7BE,KAAKD,EAAIsD,KAAK4B,IAAKjF,KAAKD,EAAGsQ,EAAEtQ,GAC7BC,KAAKG,EAAIkD,KAAK4B,IAAKjF,KAAKG,EAAGkQ,EAAElQ,GAC7BH,KAAKsQ,EAAIjN,KAAK4B,IAAKjF,KAAKsQ,EAAGD,EAAEC,GAEtBtQ,KAIRgF,IAAKqL,GAOJ,OALArQ,KAAKF,EAAIuD,KAAK2B,IAAKhF,KAAKF,EAAGuQ,EAAEvQ,GAC7BE,KAAKD,EAAIsD,KAAK2B,IAAKhF,KAAKD,EAAGsQ,EAAEtQ,GAC7BC,KAAKG,EAAIkD,KAAK2B,IAAKhF,KAAKG,EAAGkQ,EAAElQ,GAC7BH,KAAKsQ,EAAIjN,KAAK2B,IAAKhF,KAAKsQ,EAAGD,EAAEC,GAEtBtQ,KAIRg6C,MAAO/0C,EAAKD,GASX,OALAhF,KAAKF,EAAIuD,KAAK2B,IAAKC,EAAInF,EAAGuD,KAAK4B,IAAKD,EAAIlF,EAAGE,KAAKF,IAChDE,KAAKD,EAAIsD,KAAK2B,IAAKC,EAAIlF,EAAGsD,KAAK4B,IAAKD,EAAIjF,EAAGC,KAAKD,IAChDC,KAAKG,EAAIkD,KAAK2B,IAAKC,EAAI9E,EAAGkD,KAAK4B,IAAKD,EAAI7E,EAAGH,KAAKG,IAChDH,KAAKsQ,EAAIjN,KAAK2B,IAAKC,EAAIqL,EAAGjN,KAAK4B,IAAKD,EAAIsL,EAAGtQ,KAAKsQ,IAEzCtQ,KAIR88C,YAAaC,EAAQC,GAOpB,OALAh9C,KAAKF,EAAIuD,KAAK2B,IAAK+3C,EAAQ15C,KAAK4B,IAAK+3C,EAAQh9C,KAAKF,IAClDE,KAAKD,EAAIsD,KAAK2B,IAAK+3C,EAAQ15C,KAAK4B,IAAK+3C,EAAQh9C,KAAKD,IAClDC,KAAKG,EAAIkD,KAAK2B,IAAK+3C,EAAQ15C,KAAK4B,IAAK+3C,EAAQh9C,KAAKG,IAClDH,KAAKsQ,EAAIjN,KAAK2B,IAAK+3C,EAAQ15C,KAAK4B,IAAK+3C,EAAQh9C,KAAKsQ,IAE3CtQ,KAIRi9C,YAAah4C,EAAKD,GAEjB,MAAM1C,EAAStC,KAAKsC,SAEpB,OAAOtC,KAAK28C,aAAcr6C,GAAU,GAAIsI,eAAgBvH,KAAK2B,IAAKC,EAAK5B,KAAK4B,IAAKD,EAAK1C,KAIvF8qB,QAOC,OALAptB,KAAKF,EAAIuD,KAAK+pB,MAAOptB,KAAKF,GAC1BE,KAAKD,EAAIsD,KAAK+pB,MAAOptB,KAAKD,GAC1BC,KAAKG,EAAIkD,KAAK+pB,MAAOptB,KAAKG,GAC1BH,KAAKsQ,EAAIjN,KAAK+pB,MAAOptB,KAAKsQ,GAEnBtQ,KAIRqhB,OAOC,OALArhB,KAAKF,EAAIuD,KAAKge,KAAMrhB,KAAKF,GACzBE,KAAKD,EAAIsD,KAAKge,KAAMrhB,KAAKD,GACzBC,KAAKG,EAAIkD,KAAKge,KAAMrhB,KAAKG,GACzBH,KAAKsQ,EAAIjN,KAAKge,KAAMrhB,KAAKsQ,GAElBtQ,KAIR8K,QAOC,OALA9K,KAAKF,EAAIuD,KAAKyH,MAAO9K,KAAKF,GAC1BE,KAAKD,EAAIsD,KAAKyH,MAAO9K,KAAKD,GAC1BC,KAAKG,EAAIkD,KAAKyH,MAAO9K,KAAKG,GAC1BH,KAAKsQ,EAAIjN,KAAKyH,MAAO9K,KAAKsQ,GAEnBtQ,KAIRk9C,cAOC,OALAl9C,KAAKF,EAAME,KAAKF,EAAI,EAAMuD,KAAKge,KAAMrhB,KAAKF,GAAMuD,KAAK+pB,MAAOptB,KAAKF,GACjEE,KAAKD,EAAMC,KAAKD,EAAI,EAAMsD,KAAKge,KAAMrhB,KAAKD,GAAMsD,KAAK+pB,MAAOptB,KAAKD,GACjEC,KAAKG,EAAMH,KAAKG,EAAI,EAAMkD,KAAKge,KAAMrhB,KAAKG,GAAMkD,KAAK+pB,MAAOptB,KAAKG,GACjEH,KAAKsQ,EAAMtQ,KAAKsQ,EAAI,EAAMjN,KAAKge,KAAMrhB,KAAKsQ,GAAMjN,KAAK+pB,MAAOptB,KAAKsQ,GAE1DtQ,KAIRm9C,SAOC,OALAn9C,KAAKF,GAAME,KAAKF,EAChBE,KAAKD,GAAMC,KAAKD,EAChBC,KAAKG,GAAMH,KAAKG,EAChBH,KAAKsQ,GAAMtQ,KAAKsQ,EAETtQ,KAIR0gB,IAAKrQ,GAEJ,OAAOrQ,KAAKF,EAAIuQ,EAAEvQ,EAAIE,KAAKD,EAAIsQ,EAAEtQ,EAAIC,KAAKG,EAAIkQ,EAAElQ,EAAIH,KAAKsQ,EAAID,EAAEC,EAIhE8sC,WAEC,OAAOp9C,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAAIC,KAAKG,EAAIH,KAAKG,EAAIH,KAAKsQ,EAAItQ,KAAKsQ,EAI5EhO,SAEC,OAAOe,KAAKyG,KAAM9J,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAAIC,KAAKG,EAAIH,KAAKG,EAAIH,KAAKsQ,EAAItQ,KAAKsQ,GAIvF+sC,kBAEC,OAAOh6C,KAAKC,IAAKtD,KAAKF,GAAMuD,KAAKC,IAAKtD,KAAKD,GAAMsD,KAAKC,IAAKtD,KAAKG,GAAMkD,KAAKC,IAAKtD,KAAKsQ,GAItFpB,YAEC,OAAOlP,KAAK28C,aAAc38C,KAAKsC,UAAY,GAI5C0M,UAAW1M,GAEV,OAAOtC,KAAKkP,YAAYtE,eAAgBtI,GAIzC+3C,KAAMhqC,EAAG+5B,GAOR,OALApqC,KAAKF,IAAOuQ,EAAEvQ,EAAIE,KAAKF,GAAMsqC,EAC7BpqC,KAAKD,IAAOsQ,EAAEtQ,EAAIC,KAAKD,GAAMqqC,EAC7BpqC,KAAKG,IAAOkQ,EAAElQ,EAAIH,KAAKG,GAAMiqC,EAC7BpqC,KAAKsQ,IAAOD,EAAEC,EAAItQ,KAAKsQ,GAAM85B,EAEtBpqC,KAIRy9C,YAAajuC,EAAIoiB,EAAIwY,GAOpB,OALApqC,KAAKF,EAAI0P,EAAG1P,GAAM8xB,EAAG9xB,EAAI0P,EAAG1P,GAAMsqC,EAClCpqC,KAAKD,EAAIyP,EAAGzP,GAAM6xB,EAAG7xB,EAAIyP,EAAGzP,GAAMqqC,EAClCpqC,KAAKG,EAAIqP,EAAGrP,GAAMyxB,EAAGzxB,EAAIqP,EAAGrP,GAAMiqC,EAClCpqC,KAAKsQ,EAAId,EAAGc,GAAMshB,EAAGthB,EAAId,EAAGc,GAAM85B,EAE3BpqC,KAIRnB,OAAQwR,GAEP,OAAWA,EAAEvQ,IAAME,KAAKF,GAASuQ,EAAEtQ,IAAMC,KAAKD,GAASsQ,EAAElQ,IAAMH,KAAKG,GAASkQ,EAAEC,IAAMtQ,KAAKsQ,EAI3FnC,UAAWgrC,EAAOn9B,EAAS,GAO1B,OALAhc,KAAKF,EAAIq5C,EAAOn9B,GAChBhc,KAAKD,EAAIo5C,EAAOn9B,EAAS,GACzBhc,KAAKG,EAAIg5C,EAAOn9B,EAAS,GACzBhc,KAAKsQ,EAAI6oC,EAAOn9B,EAAS,GAElBhc,KAIR09C,QAASvE,EAAQ,GAAIn9B,EAAS,GAO7B,OALAm9B,EAAOn9B,GAAWhc,KAAKF,EACvBq5C,EAAOn9B,EAAS,GAAMhc,KAAKD,EAC3Bo5C,EAAOn9B,EAAS,GAAMhc,KAAKG,EAC3Bg5C,EAAOn9B,EAAS,GAAMhc,KAAKsQ,EAEpB6oC,EAIRwE,oBAAqBC,EAAWzxC,EAAO6P,GAatC,YAXgB7C,IAAX6C,GAEJrP,QAAQoK,KAAM,uEAIf/W,KAAKF,EAAI89C,EAAUC,KAAM1xC,GACzBnM,KAAKD,EAAI69C,EAAUE,KAAM3xC,GACzBnM,KAAKG,EAAIy9C,EAAUsI,KAAM/5C,GACzBnM,KAAKsQ,EAAIstC,EAAUuI,KAAMh6C,GAElBnM,KAIRsL,SAOC,OALAtL,KAAKF,EAAIuD,KAAKiI,SACdtL,KAAKD,EAAIsD,KAAKiI,SACdtL,KAAKG,EAAIkD,KAAKiI,SACdtL,KAAKsQ,EAAIjN,KAAKiI,SAEPtL,MAWT,SAASomD,GAAmB93C,EAAOC,EAAQrD,GAE1ClL,KAAKsO,MAAQA,EACbtO,KAAKuO,OAASA,EAEdvO,KAAKqmD,QAAU,IAAI1B,GAAS,EAAG,EAAGr2C,EAAOC,GACzCvO,KAAKsmD,aAAc,EAEnBtmD,KAAKonB,SAAW,IAAIu9B,GAAS,EAAG,EAAGr2C,EAAOC,GAE1CrD,EAAUA,GAAW,GAErBlL,KAAKumD,QAAU,IAAItE,QAAS9oC,EAAWjO,EAAQi3C,QAASj3C,EAAQm3C,MAAOn3C,EAAQo3C,MAAOp3C,EAAQq3C,UAAWr3C,EAAQs3C,UAAWt3C,EAAQu3C,OAAQv3C,EAAQ40B,KAAM50B,EAAQw3C,WAAYx3C,EAAQy3C,UAEtL3iD,KAAKumD,QAAQ7mC,MAAQ,GACrB1f,KAAKumD,QAAQ7mC,MAAMpR,MAAQA,EAC3BtO,KAAKumD,QAAQ7mC,MAAMnR,OAASA,EAE5BvO,KAAKumD,QAAQtD,qBAA8C9pC,IAA5BjO,EAAQ+3C,iBAAgC/3C,EAAQ+3C,gBAC/EjjD,KAAKumD,QAAQ/D,eAAkCrpC,IAAtBjO,EAAQs3C,UAA0Bt3C,EAAQs3C,UAAYzR,GAE/E/wC,KAAKwmD,iBAAsCrtC,IAAxBjO,EAAQs7C,aAA4Bt7C,EAAQs7C,YAC/DxmD,KAAKymD,mBAA0CttC,IAA1BjO,EAAQu7C,eAA8Bv7C,EAAQu7C,cACnEzmD,KAAK0mD,kBAAwCvtC,IAAzBjO,EAAQw7C,aAA6Bx7C,EAAQw7C,aAAe,KA4DjF,SAASC,GAA8Br4C,EAAOC,EAAQrD,GAErDk7C,GAAkB/M,KAAMr5C,KAAMsO,EAAOC,EAAQrD,GAE7ClL,KAAK4mD,QAAU,EA5DhBR,GAAkBvN,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ/K,GAAgBE,WAAa,CAExF3yC,YAAakgD,GAEbS,qBAAqB,EAErBnqC,QAAS,SAAWpO,EAAOC,GAErBvO,KAAKsO,QAAUA,GAAStO,KAAKuO,SAAWA,IAE5CvO,KAAKsO,MAAQA,EACbtO,KAAKuO,OAASA,EAEdvO,KAAKumD,QAAQ7mC,MAAMpR,MAAQA,EAC3BtO,KAAKumD,QAAQ7mC,MAAMnR,OAASA,EAE5BvO,KAAKwkD,WAINxkD,KAAKonB,SAASxe,IAAK,EAAG,EAAG0F,EAAOC,GAChCvO,KAAKqmD,QAAQz9C,IAAK,EAAG,EAAG0F,EAAOC,IAIhC5E,MAAO,WAEN,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,OAIrC8iB,KAAM,SAAW+gC,GAahB,OAXA7jD,KAAKsO,MAAQu1C,EAAOv1C,MACpBtO,KAAKuO,OAASs1C,EAAOt1C,OAErBvO,KAAKonB,SAAStE,KAAM+gC,EAAOz8B,UAE3BpnB,KAAKumD,QAAU1C,EAAO0C,QAAQ58C,QAE9B3J,KAAKwmD,YAAc3C,EAAO2C,YAC1BxmD,KAAKymD,cAAgB5C,EAAO4C,cAC5BzmD,KAAK0mD,aAAe7C,EAAO6C,aAEpB1mD,MAIRwkD,QAAS,WAERxkD,KAAKi5C,cAAe,CAAEnZ,KAAM,eAc9B6mB,GAA6B9N,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ0C,GAAkBvN,WAAa,CAErG3yC,YAAaygD,GAEbG,gCAAgC,EAEhChkC,KAAM,SAAW+gC,GAMhB,OAJAuC,GAAkBvN,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAE7C7jD,KAAK4mD,QAAU/C,EAAO+C,QAEf5mD,QAMT,MAAM+mD,GAEL7gD,YAAapG,EAAI,EAAGC,EAAI,EAAGI,EAAI,EAAGmQ,EAAI,GAErC9Q,OAAOC,eAAgBO,KAAM,eAAgB,CAAEL,OAAO,IAEtDK,KAAKuf,GAAKzf,EACVE,KAAKwf,GAAKzf,EACVC,KAAKgnD,GAAK7mD,EACVH,KAAKinD,GAAK32C,EAIXvK,aAAcmhD,EAAIC,EAAIC,EAAI95C,GAEzB,OAAO85C,EAAGtkC,KAAMokC,GAAKG,MAAOF,EAAI75C,GAIjCvH,iBAAkBuhD,EAAKC,EAAWC,EAAMC,EAAYC,EAAMC,EAAYr6C,GAIrE,IAAIs6C,EAAKJ,EAAMC,EAAa,GAC3BI,EAAKL,EAAMC,EAAa,GACxBK,EAAKN,EAAMC,EAAa,GACxBM,EAAKP,EAAMC,EAAa,GAEzB,MAAM/yB,EAAKgzB,EAAMC,EAAa,GAC7B/yB,EAAK8yB,EAAMC,EAAa,GACxBK,EAAKN,EAAMC,EAAa,GACxBM,EAAKP,EAAMC,EAAa,GAEzB,GAAKI,IAAOE,GAAML,IAAOlzB,GAAMmzB,IAAOjzB,GAAMkzB,IAAOE,EAAK,CAEvD,IAAI77B,EAAI,EAAI7e,EACZ,MAAM5C,EAAMk9C,EAAKlzB,EAAKmzB,EAAKjzB,EAAKkzB,EAAKE,EAAKD,EAAKE,EAC9CC,EAAQx9C,GAAO,EAAI,GAAM,EACzBy9C,EAAS,EAAIz9C,EAAMA,EAGpB,GAAKy9C,EAASv0C,OAAOnK,QAAU,CAE9B,MAAMkB,EAAMtH,KAAKyG,KAAMq+C,GACtB9lD,EAAMgB,KAAK8G,MAAOQ,EAAKD,EAAMw9C,GAE9B/7B,EAAI9oB,KAAKsH,IAAKwhB,EAAI9pB,GAAQsI,EAC1B2C,EAAIjK,KAAKsH,IAAK2C,EAAIjL,GAAQsI,EAI3B,MAAMy9C,EAAO96C,EAAI46C,EAQjB,GANAN,EAAKA,EAAKz7B,EAAIuI,EAAK0zB,EACnBP,EAAKA,EAAK17B,EAAIyI,EAAKwzB,EACnBN,EAAKA,EAAK37B,EAAI67B,EAAKI,EACnBL,EAAKA,EAAK57B,EAAI87B,EAAKG,EAGdj8B,IAAM,EAAI7e,EAAI,CAElB,MAAMuqB,EAAI,EAAIx0B,KAAKyG,KAAM89C,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GAE5DH,GAAM/vB,EACNgwB,GAAMhwB,EACNiwB,GAAMjwB,EACNkwB,GAAMlwB,GAMRyvB,EAAKC,GAAcK,EACnBN,EAAKC,EAAY,GAAMM,EACvBP,EAAKC,EAAY,GAAMO,EACvBR,EAAKC,EAAY,GAAMQ,EAIxBhiD,+BAAgCuhD,EAAKC,EAAWC,EAAMC,EAAYC,EAAMC,GAEvE,MAAMC,EAAKJ,EAAMC,GACXI,EAAKL,EAAMC,EAAa,GACxBK,EAAKN,EAAMC,EAAa,GACxBM,EAAKP,EAAMC,EAAa,GAExB/yB,EAAKgzB,EAAMC,GACX/yB,EAAK8yB,EAAMC,EAAa,GACxBK,EAAKN,EAAMC,EAAa,GACxBM,EAAKP,EAAMC,EAAa,GAO9B,OALAL,EAAKC,GAAcK,EAAKK,EAAKF,EAAKrzB,EAAKmzB,EAAKG,EAAKF,EAAKlzB,EACtD0yB,EAAKC,EAAY,GAAMM,EAAKI,EAAKF,EAAKnzB,EAAKkzB,EAAKpzB,EAAKkzB,EAAKI,EAC1DV,EAAKC,EAAY,GAAMO,EAAKG,EAAKF,EAAKC,EAAKJ,EAAKhzB,EAAKizB,EAAKnzB,EAC1D4yB,EAAKC,EAAY,GAAMQ,EAAKE,EAAKL,EAAKlzB,EAAKmzB,EAAKjzB,EAAKkzB,EAAKE,EAEnDV,EAIJxnD,QAEH,OAAOE,KAAKuf,GAITzf,MAAGH,GAENK,KAAKuf,GAAK5f,EACVK,KAAKqoD,oBAIFtoD,QAEH,OAAOC,KAAKwf,GAITzf,MAAGJ,GAENK,KAAKwf,GAAK7f,EACVK,KAAKqoD,oBAIFloD,QAEH,OAAOH,KAAKgnD,GAIT7mD,MAAGR,GAENK,KAAKgnD,GAAKrnD,EACVK,KAAKqoD,oBAIF/3C,QAEH,OAAOtQ,KAAKinD,GAIT32C,MAAG3Q,GAENK,KAAKinD,GAAKtnD,EACVK,KAAKqoD,oBAINz/C,IAAK9I,EAAGC,EAAGI,EAAGmQ,GASb,OAPAtQ,KAAKuf,GAAKzf,EACVE,KAAKwf,GAAKzf,EACVC,KAAKgnD,GAAK7mD,EACVH,KAAKinD,GAAK32C,EAEVtQ,KAAKqoD,oBAEEroD,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,YAAalG,KAAKuf,GAAIvf,KAAKwf,GAAIxf,KAAKgnD,GAAIhnD,KAAKinD,IAI9DnkC,KAAMwlC,GASL,OAPAtoD,KAAKuf,GAAK+oC,EAAWxoD,EACrBE,KAAKwf,GAAK8oC,EAAWvoD,EACrBC,KAAKgnD,GAAKsB,EAAWnoD,EACrBH,KAAKinD,GAAKqB,EAAWh4C,EAErBtQ,KAAKqoD,oBAEEroD,KAIRuoD,aAAcC,EAAOC,GAEpB,IAASD,IAASA,EAAME,QAEvB,MAAM,IAAIz0C,MAAO,oGAIlB,MAAMnU,EAAI0oD,EAAMjpC,GAAIxf,EAAIyoD,EAAMhpC,GAAIrf,EAAIqoD,EAAMxB,GAAIte,EAAQ8f,EAAMG,OAMxDj+C,EAAMrH,KAAKqH,IACXC,EAAMtH,KAAKsH,IAEXi+C,EAAKl+C,EAAK5K,EAAI,GACd07C,EAAK9wC,EAAK3K,EAAI,GACd8oD,EAAKn+C,EAAKvK,EAAI,GAEd2oD,EAAKn+C,EAAK7K,EAAI,GACd27C,EAAK9wC,EAAK5K,EAAI,GACdgpD,EAAKp+C,EAAKxK,EAAI,GAEpB,OAASuoC,GAER,IAAK,MACJ1oC,KAAKuf,GAAKupC,EAAKtN,EAAKqN,EAAKD,EAAKnN,EAAKsN,EACnC/oD,KAAKwf,GAAKopC,EAAKnN,EAAKoN,EAAKC,EAAKtN,EAAKuN,EACnC/oD,KAAKgnD,GAAK4B,EAAKpN,EAAKuN,EAAKD,EAAKrN,EAAKoN,EACnC7oD,KAAKinD,GAAK2B,EAAKpN,EAAKqN,EAAKC,EAAKrN,EAAKsN,EACnC,MAED,IAAK,MACJ/oD,KAAKuf,GAAKupC,EAAKtN,EAAKqN,EAAKD,EAAKnN,EAAKsN,EACnC/oD,KAAKwf,GAAKopC,EAAKnN,EAAKoN,EAAKC,EAAKtN,EAAKuN,EACnC/oD,KAAKgnD,GAAK4B,EAAKpN,EAAKuN,EAAKD,EAAKrN,EAAKoN,EACnC7oD,KAAKinD,GAAK2B,EAAKpN,EAAKqN,EAAKC,EAAKrN,EAAKsN,EACnC,MAED,IAAK,MACJ/oD,KAAKuf,GAAKupC,EAAKtN,EAAKqN,EAAKD,EAAKnN,EAAKsN,EACnC/oD,KAAKwf,GAAKopC,EAAKnN,EAAKoN,EAAKC,EAAKtN,EAAKuN,EACnC/oD,KAAKgnD,GAAK4B,EAAKpN,EAAKuN,EAAKD,EAAKrN,EAAKoN,EACnC7oD,KAAKinD,GAAK2B,EAAKpN,EAAKqN,EAAKC,EAAKrN,EAAKsN,EACnC,MAED,IAAK,MACJ/oD,KAAKuf,GAAKupC,EAAKtN,EAAKqN,EAAKD,EAAKnN,EAAKsN,EACnC/oD,KAAKwf,GAAKopC,EAAKnN,EAAKoN,EAAKC,EAAKtN,EAAKuN,EACnC/oD,KAAKgnD,GAAK4B,EAAKpN,EAAKuN,EAAKD,EAAKrN,EAAKoN,EACnC7oD,KAAKinD,GAAK2B,EAAKpN,EAAKqN,EAAKC,EAAKrN,EAAKsN,EACnC,MAED,IAAK,MACJ/oD,KAAKuf,GAAKupC,EAAKtN,EAAKqN,EAAKD,EAAKnN,EAAKsN,EACnC/oD,KAAKwf,GAAKopC,EAAKnN,EAAKoN,EAAKC,EAAKtN,EAAKuN,EACnC/oD,KAAKgnD,GAAK4B,EAAKpN,EAAKuN,EAAKD,EAAKrN,EAAKoN,EACnC7oD,KAAKinD,GAAK2B,EAAKpN,EAAKqN,EAAKC,EAAKrN,EAAKsN,EACnC,MAED,IAAK,MACJ/oD,KAAKuf,GAAKupC,EAAKtN,EAAKqN,EAAKD,EAAKnN,EAAKsN,EACnC/oD,KAAKwf,GAAKopC,EAAKnN,EAAKoN,EAAKC,EAAKtN,EAAKuN,EACnC/oD,KAAKgnD,GAAK4B,EAAKpN,EAAKuN,EAAKD,EAAKrN,EAAKoN,EACnC7oD,KAAKinD,GAAK2B,EAAKpN,EAAKqN,EAAKC,EAAKrN,EAAKsN,EACnC,MAED,QACCp8C,QAAQoK,KAAM,mEAAqE2xB,GAMrF,OAFgB,IAAX+f,GAAmBzoD,KAAKqoD,oBAEtBroD,KAIRgpD,iBAAkBpyB,EAAM5sB,GAMvB,MAAMi/C,EAAYj/C,EAAQ,EAAGmiB,EAAI9oB,KAAKsH,IAAKs+C,GAS3C,OAPAjpD,KAAKuf,GAAKqX,EAAK92B,EAAIqsB,EACnBnsB,KAAKwf,GAAKoX,EAAK72B,EAAIosB,EACnBnsB,KAAKgnD,GAAKpwB,EAAKz2B,EAAIgsB,EACnBnsB,KAAKinD,GAAK5jD,KAAKqH,IAAKu+C,GAEpBjpD,KAAKqoD,oBAEEroD,KAIRkpD,sBAAuBtmD,GAMtB,MAAM87C,EAAK97C,EAAEi6C,SAEZsI,EAAMzG,EAAI,GAAK0G,EAAM1G,EAAI,GAAK2G,EAAM3G,EAAI,GACxC4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GACxC+G,EAAM/G,EAAI,GAAKgH,EAAMhH,EAAI,GAAKiH,EAAMjH,EAAI,IAExCyK,EAAQhE,EAAMI,EAAMI,EAErB,GAAKwD,EAAQ,EAAI,CAEhB,MAAMh9B,EAAI,GAAM9oB,KAAKyG,KAAMq/C,EAAQ,GAEnCnpD,KAAKinD,GAAK,IAAO96B,EACjBnsB,KAAKuf,IAAOmmC,EAAMF,GAAQr5B,EAC1BnsB,KAAKwf,IAAO6lC,EAAMI,GAAQt5B,EAC1BnsB,KAAKgnD,IAAO1B,EAAMF,GAAQj5B,OAEpB,GAAKg5B,EAAMI,GAAOJ,EAAMQ,EAAM,CAEpC,MAAMx5B,EAAI,EAAM9oB,KAAKyG,KAAM,EAAMq7C,EAAMI,EAAMI,GAE7C3lD,KAAKinD,IAAOvB,EAAMF,GAAQr5B,EAC1BnsB,KAAKuf,GAAK,IAAO4M,EACjBnsB,KAAKwf,IAAO4lC,EAAME,GAAQn5B,EAC1BnsB,KAAKgnD,IAAO3B,EAAMI,GAAQt5B,OAEpB,GAAKo5B,EAAMI,EAAM,CAEvB,MAAMx5B,EAAI,EAAM9oB,KAAKyG,KAAM,EAAMy7C,EAAMJ,EAAMQ,GAE7C3lD,KAAKinD,IAAO5B,EAAMI,GAAQt5B,EAC1BnsB,KAAKuf,IAAO6lC,EAAME,GAAQn5B,EAC1BnsB,KAAKwf,GAAK,IAAO2M,EACjBnsB,KAAKgnD,IAAOxB,EAAME,GAAQv5B,MAEpB,CAEN,MAAMA,EAAI,EAAM9oB,KAAKyG,KAAM,EAAM67C,EAAMR,EAAMI,GAE7CvlD,KAAKinD,IAAO3B,EAAMF,GAAQj5B,EAC1BnsB,KAAKuf,IAAO8lC,EAAMI,GAAQt5B,EAC1BnsB,KAAKwf,IAAOgmC,EAAME,GAAQv5B,EAC1BnsB,KAAKgnD,GAAK,IAAO76B,EAMlB,OAFAnsB,KAAKqoD,oBAEEroD,KAIRopD,mBAAoBC,EAAOC,GAM1B,IAAI/kD,EAAI8kD,EAAM3oC,IAAK4oC,GAAQ,EAiC3B,OA/BK/kD,EAJO,MAMXA,EAAI,EAEClB,KAAKC,IAAK+lD,EAAMvpD,GAAMuD,KAAKC,IAAK+lD,EAAMlpD,IAE1CH,KAAKuf,IAAO8pC,EAAMtpD,EAClBC,KAAKwf,GAAK6pC,EAAMvpD,EAChBE,KAAKgnD,GAAK,EACVhnD,KAAKinD,GAAK1iD,IAIVvE,KAAKuf,GAAK,EACVvf,KAAKwf,IAAO6pC,EAAMlpD,EAClBH,KAAKgnD,GAAKqC,EAAMtpD,EAChBC,KAAKinD,GAAK1iD,KAQXvE,KAAKuf,GAAK8pC,EAAMtpD,EAAIupD,EAAInpD,EAAIkpD,EAAMlpD,EAAImpD,EAAIvpD,EAC1CC,KAAKwf,GAAK6pC,EAAMlpD,EAAImpD,EAAIxpD,EAAIupD,EAAMvpD,EAAIwpD,EAAInpD,EAC1CH,KAAKgnD,GAAKqC,EAAMvpD,EAAIwpD,EAAIvpD,EAAIspD,EAAMtpD,EAAIupD,EAAIxpD,EAC1CE,KAAKinD,GAAK1iD,GAIJvE,KAAKkP,YAIbq6C,QAAShmD,GAER,OAAO,EAAIF,KAAKyuB,KAAMzuB,KAAKC,IAAKk2C,GAAUQ,MAAOh6C,KAAK0gB,IAAKnd,IAAO,EAAG,KAItEimD,cAAejmD,EAAGkmD,GAEjB,MAAMz/C,EAAQhK,KAAKupD,QAAShmD,GAE5B,GAAe,IAAVyG,EAAc,OAAOhK,KAE1B,MAAMsN,EAAIjK,KAAK4B,IAAK,EAAGwkD,EAAOz/C,GAI9B,OAFAhK,KAAKqnD,MAAO9jD,EAAG+J,GAERtN,KAIR2+C,WAEC,OAAO3+C,KAAK4I,IAAK,EAAG,EAAG,EAAG,GAI3B63C,SAIC,OAAOzgD,KAAK0pD,YAIbA,YAQC,OANA1pD,KAAKuf,KAAQ,EACbvf,KAAKwf,KAAQ,EACbxf,KAAKgnD,KAAQ,EAEbhnD,KAAKqoD,oBAEEroD,KAIR0gB,IAAKrQ,GAEJ,OAAOrQ,KAAKuf,GAAKlP,EAAEkP,GAAKvf,KAAKwf,GAAKnP,EAAEmP,GAAKxf,KAAKgnD,GAAK32C,EAAE22C,GAAKhnD,KAAKinD,GAAK52C,EAAE42C,GAIvE7J,WAEC,OAAOp9C,KAAKuf,GAAKvf,KAAKuf,GAAKvf,KAAKwf,GAAKxf,KAAKwf,GAAKxf,KAAKgnD,GAAKhnD,KAAKgnD,GAAKhnD,KAAKinD,GAAKjnD,KAAKinD,GAInF3kD,SAEC,OAAOe,KAAKyG,KAAM9J,KAAKuf,GAAKvf,KAAKuf,GAAKvf,KAAKwf,GAAKxf,KAAKwf,GAAKxf,KAAKgnD,GAAKhnD,KAAKgnD,GAAKhnD,KAAKinD,GAAKjnD,KAAKinD,IAI9F/3C,YAEC,IAAIb,EAAIrO,KAAKsC,SAsBb,OApBW,IAAN+L,GAEJrO,KAAKuf,GAAK,EACVvf,KAAKwf,GAAK,EACVxf,KAAKgnD,GAAK,EACVhnD,KAAKinD,GAAK,IAIV54C,EAAI,EAAIA,EAERrO,KAAKuf,GAAKvf,KAAKuf,GAAKlR,EACpBrO,KAAKwf,GAAKxf,KAAKwf,GAAKnR,EACpBrO,KAAKgnD,GAAKhnD,KAAKgnD,GAAK34C,EACpBrO,KAAKinD,GAAKjnD,KAAKinD,GAAK54C,GAIrBrO,KAAKqoD,oBAEEroD,KAIRy8C,SAAUl5C,EAAG1C,GAEZ,YAAWsY,IAANtY,GAEJ8L,QAAQoK,KAAM,0GACP/W,KAAK2pD,oBAAqBpmD,EAAG1C,IAI9Bb,KAAK2pD,oBAAqB3pD,KAAMuD,GAIxC67C,YAAa77C,GAEZ,OAAOvD,KAAK2pD,oBAAqBpmD,EAAGvD,MAIrC2pD,oBAAqBpoD,EAAGC,GAIvB,MAAMooD,EAAMroD,EAAEge,GAAIsqC,EAAMtoD,EAAEie,GAAIsqC,EAAMvoD,EAAEylD,GAAI+C,EAAMxoD,EAAE0lD,GAC5C+C,EAAMxoD,EAAE+d,GAAI0qC,EAAMzoD,EAAEge,GAAI0qC,EAAM1oD,EAAEwlD,GAAImD,EAAM3oD,EAAEylD,GASlD,OAPAjnD,KAAKuf,GAAKqqC,EAAMO,EAAMJ,EAAMC,EAAMH,EAAMK,EAAMJ,EAAMG,EACpDjqD,KAAKwf,GAAKqqC,EAAMM,EAAMJ,EAAME,EAAMH,EAAME,EAAMJ,EAAMM,EACpDlqD,KAAKgnD,GAAK8C,EAAMK,EAAMJ,EAAMG,EAAMN,EAAMK,EAAMJ,EAAMG,EACpDhqD,KAAKinD,GAAK8C,EAAMI,EAAMP,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,EAEpDlqD,KAAKqoD,oBAEEroD,KAIRqnD,MAAOF,EAAI75C,GAEV,GAAW,IAANA,EAAU,OAAOtN,KACtB,GAAW,IAANsN,EAAU,OAAOtN,KAAK8iB,KAAMqkC,GAEjC,MAAMrnD,EAAIE,KAAKuf,GAAIxf,EAAIC,KAAKwf,GAAIrf,EAAIH,KAAKgnD,GAAI12C,EAAItQ,KAAKinD,GAItD,IAAImD,EAAe95C,EAAI62C,EAAGF,GAAKnnD,EAAIqnD,EAAG5nC,GAAKxf,EAAIonD,EAAG3nC,GAAKrf,EAAIgnD,EAAGH,GAiB9D,GAfKoD,EAAe,GAEnBpqD,KAAKinD,IAAOE,EAAGF,GACfjnD,KAAKuf,IAAO4nC,EAAG5nC,GACfvf,KAAKwf,IAAO2nC,EAAG3nC,GACfxf,KAAKgnD,IAAOG,EAAGH,GAEfoD,GAAiBA,GAIjBpqD,KAAK8iB,KAAMqkC,GAIPiD,GAAgB,EAOpB,OALApqD,KAAKinD,GAAK32C,EACVtQ,KAAKuf,GAAKzf,EACVE,KAAKwf,GAAKzf,EACVC,KAAKgnD,GAAK7mD,EAEHH,KAIR,MAAMqqD,EAAkB,EAAMD,EAAeA,EAE7C,GAAKC,GAAmBz2C,OAAOnK,QAAU,CAExC,MAAM0iB,EAAI,EAAI7e,EASd,OARAtN,KAAKinD,GAAK96B,EAAI7b,EAAIhD,EAAItN,KAAKinD,GAC3BjnD,KAAKuf,GAAK4M,EAAIrsB,EAAIwN,EAAItN,KAAKuf,GAC3Bvf,KAAKwf,GAAK2M,EAAIpsB,EAAIuN,EAAItN,KAAKwf,GAC3Bxf,KAAKgnD,GAAK76B,EAAIhsB,EAAImN,EAAItN,KAAKgnD,GAE3BhnD,KAAKkP,YACLlP,KAAKqoD,oBAEEroD,KAIR,MAAMsqD,EAAejnD,KAAKyG,KAAMugD,GAC1BE,EAAYlnD,KAAK8G,MAAOmgD,EAAcF,GACtCI,EAASnnD,KAAKsH,KAAO,EAAI2C,GAAMi9C,GAAcD,EAClDG,EAASpnD,KAAKsH,IAAK2C,EAAIi9C,GAAcD,EAStC,OAPAtqD,KAAKinD,GAAO32C,EAAIk6C,EAASxqD,KAAKinD,GAAKwD,EACnCzqD,KAAKuf,GAAOzf,EAAI0qD,EAASxqD,KAAKuf,GAAKkrC,EACnCzqD,KAAKwf,GAAOzf,EAAIyqD,EAASxqD,KAAKwf,GAAKirC,EACnCzqD,KAAKgnD,GAAO7mD,EAAIqqD,EAASxqD,KAAKgnD,GAAKyD,EAEnCzqD,KAAKqoD,oBAEEroD,KAIRnB,OAAQypD,GAEP,OAASA,EAAW/oC,KAAOvf,KAAKuf,IAAU+oC,EAAW9oC,KAAOxf,KAAKwf,IAAU8oC,EAAWtB,KAAOhnD,KAAKgnD,IAAUsB,EAAWrB,KAAOjnD,KAAKinD,GAIpI94C,UAAWgrC,EAAOn9B,EAAS,GAS1B,OAPAhc,KAAKuf,GAAK45B,EAAOn9B,GACjBhc,KAAKwf,GAAK25B,EAAOn9B,EAAS,GAC1Bhc,KAAKgnD,GAAK7N,EAAOn9B,EAAS,GAC1Bhc,KAAKinD,GAAK9N,EAAOn9B,EAAS,GAE1Bhc,KAAKqoD,oBAEEroD,KAIR09C,QAASvE,EAAQ,GAAIn9B,EAAS,GAO7B,OALAm9B,EAAOn9B,GAAWhc,KAAKuf,GACvB45B,EAAOn9B,EAAS,GAAMhc,KAAKwf,GAC3B25B,EAAOn9B,EAAS,GAAMhc,KAAKgnD,GAC3B7N,EAAOn9B,EAAS,GAAMhc,KAAKinD,GAEpB9N,EAIRwE,oBAAqBC,EAAWzxC,GAO/B,OALAnM,KAAKuf,GAAKq+B,EAAUC,KAAM1xC,GAC1BnM,KAAKwf,GAAKo+B,EAAUE,KAAM3xC,GAC1BnM,KAAKgnD,GAAKpJ,EAAUsI,KAAM/5C,GAC1BnM,KAAKinD,GAAKrJ,EAAUuI,KAAMh6C,GAEnBnM,KAIR0qD,UAAWv5B,GAIV,OAFAnxB,KAAKqoD,kBAAoBl3B,EAElBnxB,KAIRqoD,sBAID,MAAMsC,GAELzkD,YAAapG,EAAI,EAAGC,EAAI,EAAGI,EAAI,GAE9BX,OAAOC,eAAgBO,KAAM,YAAa,CAAEL,OAAO,IAEnDK,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKG,EAAIA,EAIVyI,IAAK9I,EAAGC,EAAGI,GAQV,YANWgZ,IAANhZ,IAAkBA,EAAIH,KAAKG,GAEhCH,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKG,EAAIA,EAEFH,KAIRi8C,UAAWpxC,GAMV,OAJA7K,KAAKF,EAAI+K,EACT7K,KAAKD,EAAI8K,EACT7K,KAAKG,EAAI0K,EAEF7K,KAIR6I,KAAM/I,GAIL,OAFAE,KAAKF,EAAIA,EAEFE,KAIR8I,KAAM/I,GAIL,OAFAC,KAAKD,EAAIA,EAEFC,KAIR4kD,KAAMzkD,GAIL,OAFAH,KAAKG,EAAIA,EAEFH,KAIRk8C,aAAc/vC,EAAOxM,GAEpB,OAASwM,GAER,KAAK,EAAGnM,KAAKF,EAAIH,EAAO,MACxB,KAAK,EAAGK,KAAKD,EAAIJ,EAAO,MACxB,KAAK,EAAGK,KAAKG,EAAIR,EAAO,MACxB,QAAS,MAAM,IAAIsU,MAAO,0BAA4B9H,GAIvD,OAAOnM,KAIRm8C,aAAchwC,GAEb,OAASA,GAER,KAAK,EAAG,OAAOnM,KAAKF,EACpB,KAAK,EAAG,OAAOE,KAAKD,EACpB,KAAK,EAAG,OAAOC,KAAKG,EACpB,QAAS,MAAM,IAAI8T,MAAO,0BAA4B9H,IAMxDxC,QAEC,OAAO,IAAI3J,KAAKkG,YAAalG,KAAKF,EAAGE,KAAKD,EAAGC,KAAKG,GAInD2iB,KAAMzS,GAML,OAJArQ,KAAKF,EAAIuQ,EAAEvQ,EACXE,KAAKD,EAAIsQ,EAAEtQ,EACXC,KAAKG,EAAIkQ,EAAElQ,EAEJH,KAIRiJ,IAAKoH,EAAGC,GAEP,YAAW6I,IAAN7I,GAEJ3D,QAAQoK,KAAM,yFACP/W,KAAKo8C,WAAY/rC,EAAGC,KAI5BtQ,KAAKF,GAAKuQ,EAAEvQ,EACZE,KAAKD,GAAKsQ,EAAEtQ,EACZC,KAAKG,GAAKkQ,EAAElQ,EAELH,MAIRq8C,UAAWlwB,GAMV,OAJAnsB,KAAKF,GAAKqsB,EACVnsB,KAAKD,GAAKosB,EACVnsB,KAAKG,GAAKgsB,EAEHnsB,KAIRo8C,WAAY76C,EAAGC,GAMd,OAJAxB,KAAKF,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EACjBE,KAAKD,EAAIwB,EAAExB,EAAIyB,EAAEzB,EACjBC,KAAKG,EAAIoB,EAAEpB,EAAIqB,EAAErB,EAEVH,KAIRs8C,gBAAiBjsC,EAAG8b,GAMnB,OAJAnsB,KAAKF,GAAKuQ,EAAEvQ,EAAIqsB,EAChBnsB,KAAKD,GAAKsQ,EAAEtQ,EAAIosB,EAChBnsB,KAAKG,GAAKkQ,EAAElQ,EAAIgsB,EAETnsB,KAIRuJ,IAAK8G,EAAGC,GAEP,YAAW6I,IAAN7I,GAEJ3D,QAAQoK,KAAM,yFACP/W,KAAKu8C,WAAYlsC,EAAGC,KAI5BtQ,KAAKF,GAAKuQ,EAAEvQ,EACZE,KAAKD,GAAKsQ,EAAEtQ,EACZC,KAAKG,GAAKkQ,EAAElQ,EAELH,MAIRw8C,UAAWrwB,GAMV,OAJAnsB,KAAKF,GAAKqsB,EACVnsB,KAAKD,GAAKosB,EACVnsB,KAAKG,GAAKgsB,EAEHnsB,KAIRu8C,WAAYh7C,EAAGC,GAMd,OAJAxB,KAAKF,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EACjBE,KAAKD,EAAIwB,EAAExB,EAAIyB,EAAEzB,EACjBC,KAAKG,EAAIoB,EAAEpB,EAAIqB,EAAErB,EAEVH,KAIRy8C,SAAUpsC,EAAGC,GAEZ,YAAW6I,IAAN7I,GAEJ3D,QAAQoK,KAAM,mGACP/W,KAAK4qD,gBAAiBv6C,EAAGC,KAIjCtQ,KAAKF,GAAKuQ,EAAEvQ,EACZE,KAAKD,GAAKsQ,EAAEtQ,EACZC,KAAKG,GAAKkQ,EAAElQ,EAELH,MAIR4K,eAAgBC,GAMf,OAJA7K,KAAKF,GAAK+K,EACV7K,KAAKD,GAAK8K,EACV7K,KAAKG,GAAK0K,EAEH7K,KAIR4qD,gBAAiBrpD,EAAGC,GAMnB,OAJAxB,KAAKF,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EACjBE,KAAKD,EAAIwB,EAAExB,EAAIyB,EAAEzB,EACjBC,KAAKG,EAAIoB,EAAEpB,EAAIqB,EAAErB,EAEVH,KAIR6qD,WAAYrC,GAQX,OANSA,GAASA,EAAME,SAEvB/7C,QAAQu1B,MAAO,+FAITliC,KAAK8qD,gBAAiBC,GAAYxC,aAAcC,IAIxDwC,eAAgBp0B,EAAM5sB,GAErB,OAAOhK,KAAK8qD,gBAAiBC,GAAY/B,iBAAkBpyB,EAAM5sB,IAIlE4yC,aAAch6C,GAEb,MAAM9C,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EAAGI,EAAIH,KAAKG,EACjCqD,EAAIZ,EAAEi6C,SAMZ,OAJA78C,KAAKF,EAAI0D,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GAAMrD,EAC5CH,KAAKD,EAAIyD,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GAAMrD,EAC5CH,KAAKG,EAAIqD,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GAAMrD,EAErCH,KAIRirD,kBAAmBroD,GAElB,OAAO5C,KAAK48C,aAAch6C,GAAIsM,YAI/B41C,aAAcliD,GAEb,MAAM9C,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EAAGI,EAAIH,KAAKG,EACjCqD,EAAIZ,EAAEi6C,SAENvsC,EAAI,GAAM9M,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,IAAOrD,EAAIqD,EAAG,KAM3D,OAJAxD,KAAKF,GAAM0D,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GAAMrD,EAAIqD,EAAG,KAAS8M,EAC9DtQ,KAAKD,GAAMyD,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GAAMrD,EAAIqD,EAAG,KAAS8M,EAC9DtQ,KAAKG,GAAMqD,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,IAAOrD,EAAIqD,EAAG,KAAS8M,EAExDtQ,KAIR8qD,gBAAiBvnD,GAEhB,MAAMzD,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EAAGI,EAAIH,KAAKG,EACjC4C,EAAKQ,EAAEzD,EAAGorD,EAAK3nD,EAAExD,EAAGorD,EAAK5nD,EAAEpD,EAAGirD,EAAK7nD,EAAE+M,EAIrC+6C,EAAKD,EAAKtrD,EAAIorD,EAAK/qD,EAAIgrD,EAAKprD,EAC5BurD,EAAKF,EAAKrrD,EAAIorD,EAAKrrD,EAAIiD,EAAK5C,EAC5BorD,EAAKH,EAAKjrD,EAAI4C,EAAKhD,EAAImrD,EAAKprD,EAC5B0rD,GAAOzoD,EAAKjD,EAAIorD,EAAKnrD,EAAIorD,EAAKhrD,EAQpC,OAJAH,KAAKF,EAAIurD,EAAKD,EAAKI,GAAOzoD,EAAKuoD,GAAOH,EAAKI,GAAOL,EAClDlrD,KAAKD,EAAIurD,EAAKF,EAAKI,GAAON,EAAKK,GAAOxoD,EAAKsoD,GAAOF,EAClDnrD,KAAKG,EAAIorD,EAAKH,EAAKI,GAAOL,EAAKE,GAAOH,EAAKI,GAAOvoD,EAE3C/C,KAIRyrD,QAASC,GAER,OAAO1rD,KAAK8kD,aAAc4G,EAAOC,oBAAqB7G,aAAc4G,EAAOE,kBAI5EC,UAAWH,GAEV,OAAO1rD,KAAK8kD,aAAc4G,EAAOI,yBAA0BhH,aAAc4G,EAAOK,aAIjFC,mBAAoBppD,GAKnB,MAAM9C,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EAAGI,EAAIH,KAAKG,EACjCqD,EAAIZ,EAAEi6C,SAMZ,OAJA78C,KAAKF,EAAI0D,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GAAMrD,EAC5CH,KAAKD,EAAIyD,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,GAAMrD,EAC5CH,KAAKG,EAAIqD,EAAG,GAAM1D,EAAI0D,EAAG,GAAMzD,EAAIyD,EAAG,IAAOrD,EAEtCH,KAAKkP,YAIbwtC,OAAQrsC,GAMP,OAJArQ,KAAKF,GAAKuQ,EAAEvQ,EACZE,KAAKD,GAAKsQ,EAAEtQ,EACZC,KAAKG,GAAKkQ,EAAElQ,EAELH,KAIR28C,aAAc9xC,GAEb,OAAO7K,KAAK4K,eAAgB,EAAIC,GAIjC5F,IAAKoL,GAMJ,OAJArQ,KAAKF,EAAIuD,KAAK4B,IAAKjF,KAAKF,EAAGuQ,EAAEvQ,GAC7BE,KAAKD,EAAIsD,KAAK4B,IAAKjF,KAAKD,EAAGsQ,EAAEtQ,GAC7BC,KAAKG,EAAIkD,KAAK4B,IAAKjF,KAAKG,EAAGkQ,EAAElQ,GAEtBH,KAIRgF,IAAKqL,GAMJ,OAJArQ,KAAKF,EAAIuD,KAAK2B,IAAKhF,KAAKF,EAAGuQ,EAAEvQ,GAC7BE,KAAKD,EAAIsD,KAAK2B,IAAKhF,KAAKD,EAAGsQ,EAAEtQ,GAC7BC,KAAKG,EAAIkD,KAAK2B,IAAKhF,KAAKG,EAAGkQ,EAAElQ,GAEtBH,KAIRg6C,MAAO/0C,EAAKD,GAQX,OAJAhF,KAAKF,EAAIuD,KAAK2B,IAAKC,EAAInF,EAAGuD,KAAK4B,IAAKD,EAAIlF,EAAGE,KAAKF,IAChDE,KAAKD,EAAIsD,KAAK2B,IAAKC,EAAIlF,EAAGsD,KAAK4B,IAAKD,EAAIjF,EAAGC,KAAKD,IAChDC,KAAKG,EAAIkD,KAAK2B,IAAKC,EAAI9E,EAAGkD,KAAK4B,IAAKD,EAAI7E,EAAGH,KAAKG,IAEzCH,KAIR88C,YAAaC,EAAQC,GAMpB,OAJAh9C,KAAKF,EAAIuD,KAAK2B,IAAK+3C,EAAQ15C,KAAK4B,IAAK+3C,EAAQh9C,KAAKF,IAClDE,KAAKD,EAAIsD,KAAK2B,IAAK+3C,EAAQ15C,KAAK4B,IAAK+3C,EAAQh9C,KAAKD,IAClDC,KAAKG,EAAIkD,KAAK2B,IAAK+3C,EAAQ15C,KAAK4B,IAAK+3C,EAAQh9C,KAAKG,IAE3CH,KAIRi9C,YAAah4C,EAAKD,GAEjB,MAAM1C,EAAStC,KAAKsC,SAEpB,OAAOtC,KAAK28C,aAAcr6C,GAAU,GAAIsI,eAAgBvH,KAAK2B,IAAKC,EAAK5B,KAAK4B,IAAKD,EAAK1C,KAIvF8qB,QAMC,OAJAptB,KAAKF,EAAIuD,KAAK+pB,MAAOptB,KAAKF,GAC1BE,KAAKD,EAAIsD,KAAK+pB,MAAOptB,KAAKD,GAC1BC,KAAKG,EAAIkD,KAAK+pB,MAAOptB,KAAKG,GAEnBH,KAIRqhB,OAMC,OAJArhB,KAAKF,EAAIuD,KAAKge,KAAMrhB,KAAKF,GACzBE,KAAKD,EAAIsD,KAAKge,KAAMrhB,KAAKD,GACzBC,KAAKG,EAAIkD,KAAKge,KAAMrhB,KAAKG,GAElBH,KAIR8K,QAMC,OAJA9K,KAAKF,EAAIuD,KAAKyH,MAAO9K,KAAKF,GAC1BE,KAAKD,EAAIsD,KAAKyH,MAAO9K,KAAKD,GAC1BC,KAAKG,EAAIkD,KAAKyH,MAAO9K,KAAKG,GAEnBH,KAIRk9C,cAMC,OAJAl9C,KAAKF,EAAME,KAAKF,EAAI,EAAMuD,KAAKge,KAAMrhB,KAAKF,GAAMuD,KAAK+pB,MAAOptB,KAAKF,GACjEE,KAAKD,EAAMC,KAAKD,EAAI,EAAMsD,KAAKge,KAAMrhB,KAAKD,GAAMsD,KAAK+pB,MAAOptB,KAAKD,GACjEC,KAAKG,EAAMH,KAAKG,EAAI,EAAMkD,KAAKge,KAAMrhB,KAAKG,GAAMkD,KAAK+pB,MAAOptB,KAAKG,GAE1DH,KAIRm9C,SAMC,OAJAn9C,KAAKF,GAAME,KAAKF,EAChBE,KAAKD,GAAMC,KAAKD,EAChBC,KAAKG,GAAMH,KAAKG,EAETH,KAIR0gB,IAAKrQ,GAEJ,OAAOrQ,KAAKF,EAAIuQ,EAAEvQ,EAAIE,KAAKD,EAAIsQ,EAAEtQ,EAAIC,KAAKG,EAAIkQ,EAAElQ,EAMjDi9C,WAEC,OAAOp9C,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAAIC,KAAKG,EAAIH,KAAKG,EAI1DmC,SAEC,OAAOe,KAAKyG,KAAM9J,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAAIC,KAAKG,EAAIH,KAAKG,GAIrEk9C,kBAEC,OAAOh6C,KAAKC,IAAKtD,KAAKF,GAAMuD,KAAKC,IAAKtD,KAAKD,GAAMsD,KAAKC,IAAKtD,KAAKG,GAIjE+O,YAEC,OAAOlP,KAAK28C,aAAc38C,KAAKsC,UAAY,GAI5C0M,UAAW1M,GAEV,OAAOtC,KAAKkP,YAAYtE,eAAgBtI,GAIzC+3C,KAAMhqC,EAAG+5B,GAMR,OAJApqC,KAAKF,IAAOuQ,EAAEvQ,EAAIE,KAAKF,GAAMsqC,EAC7BpqC,KAAKD,IAAOsQ,EAAEtQ,EAAIC,KAAKD,GAAMqqC,EAC7BpqC,KAAKG,IAAOkQ,EAAElQ,EAAIH,KAAKG,GAAMiqC,EAEtBpqC,KAIRy9C,YAAajuC,EAAIoiB,EAAIwY,GAMpB,OAJApqC,KAAKF,EAAI0P,EAAG1P,GAAM8xB,EAAG9xB,EAAI0P,EAAG1P,GAAMsqC,EAClCpqC,KAAKD,EAAIyP,EAAGzP,GAAM6xB,EAAG7xB,EAAIyP,EAAGzP,GAAMqqC,EAClCpqC,KAAKG,EAAIqP,EAAGrP,GAAMyxB,EAAGzxB,EAAIqP,EAAGrP,GAAMiqC,EAE3BpqC,KAIRgyB,MAAO3hB,EAAGC,GAET,YAAW6I,IAAN7I,GAEJ3D,QAAQoK,KAAM,6FACP/W,KAAKisD,aAAc57C,EAAGC,IAIvBtQ,KAAKisD,aAAcjsD,KAAMqQ,GAIjC47C,aAAc1qD,EAAGC,GAEhB,MAAMuC,EAAKxC,EAAEzB,EAAGkE,EAAKzC,EAAExB,EAAGmsD,EAAK3qD,EAAEpB,EAC3B8D,EAAKzC,EAAE1B,EAAGoE,EAAK1C,EAAEzB,EAAGosD,EAAK3qD,EAAErB,EAMjC,OAJAH,KAAKF,EAAIkE,EAAKmoD,EAAKD,EAAKhoD,EACxBlE,KAAKD,EAAImsD,EAAKjoD,EAAKF,EAAKooD,EACxBnsD,KAAKG,EAAI4D,EAAKG,EAAKF,EAAKC,EAEjBjE,KAIRosD,gBAAiB/7C,GAEhB,MAAMX,EAAcW,EAAE+sC,WAEtB,GAAqB,IAAhB1tC,EAAoB,OAAO1P,KAAK4I,IAAK,EAAG,EAAG,GAEhD,MAAMiC,EAASwF,EAAEqQ,IAAK1gB,MAAS0P,EAE/B,OAAO1P,KAAK8iB,KAAMzS,GAAIzF,eAAgBC,GAIvCwhD,eAAgBC,GAIf,OAFAC,GAAQzpC,KAAM9iB,MAAOosD,gBAAiBE,GAE/BtsD,KAAKuJ,IAAKgjD,IAIlBC,QAASh1B,GAKR,OAAOx3B,KAAKuJ,IAAKgjD,GAAQzpC,KAAM0U,GAAS5sB,eAAgB,EAAI5K,KAAK0gB,IAAK8W,KAIvE+xB,QAASl5C,GAER,MAAMX,EAAcrM,KAAKyG,KAAM9J,KAAKo9C,WAAa/sC,EAAE+sC,YAEnD,GAAqB,IAAhB1tC,EAAoB,OAAOrM,KAAK6G,GAAK,EAE1C,MAAM8uB,EAAQh5B,KAAK0gB,IAAKrQ,GAAMX,EAI9B,OAAOrM,KAAKyuB,KAAM0nB,GAAUQ,MAAOhhB,GAAS,EAAG,IAIhDskB,WAAYjtC,GAEX,OAAOhN,KAAKyG,KAAM9J,KAAKu9C,kBAAmBltC,IAI3CktC,kBAAmBltC,GAElB,MAAMia,EAAKtqB,KAAKF,EAAIuQ,EAAEvQ,EAAGyqB,EAAKvqB,KAAKD,EAAIsQ,EAAEtQ,EAAG0sD,EAAKzsD,KAAKG,EAAIkQ,EAAElQ,EAE5D,OAAOmqB,EAAKA,EAAKC,EAAKA,EAAKkiC,EAAKA,EAIjCjP,oBAAqBntC,GAEpB,OAAOhN,KAAKC,IAAKtD,KAAKF,EAAIuQ,EAAEvQ,GAAMuD,KAAKC,IAAKtD,KAAKD,EAAIsQ,EAAEtQ,GAAMsD,KAAKC,IAAKtD,KAAKG,EAAIkQ,EAAElQ,GAInFusD,iBAAkBvgC,GAEjB,OAAOnsB,KAAK2sD,uBAAwBxgC,EAAElS,OAAQkS,EAAEyM,IAAKzM,EAAE6M,OAIxD2zB,uBAAwB1yC,EAAQ2e,EAAKI,GAEpC,MAAM4zB,EAAevpD,KAAKsH,IAAKiuB,GAAQ3e,EAMvC,OAJAja,KAAKF,EAAI8sD,EAAevpD,KAAKsH,IAAKquB,GAClCh5B,KAAKD,EAAIsD,KAAKqH,IAAKkuB,GAAQ3e,EAC3Bja,KAAKG,EAAIysD,EAAevpD,KAAKqH,IAAKsuB,GAE3Bh5B,KAIR6sD,mBAAoBprD,GAEnB,OAAOzB,KAAK8sD,yBAA0BrrD,EAAEwY,OAAQxY,EAAEu3B,MAAOv3B,EAAE1B,GAI5D+sD,yBAA0B7yC,EAAQ+e,EAAOj5B,GAMxC,OAJAC,KAAKF,EAAIma,EAAS5W,KAAKsH,IAAKquB,GAC5Bh5B,KAAKD,EAAIA,EACTC,KAAKG,EAAI8Z,EAAS5W,KAAKqH,IAAKsuB,GAErBh5B,KAIR+sD,sBAAuBnqD,GAEtB,MAAMY,EAAIZ,EAAEi6C,SAMZ,OAJA78C,KAAKF,EAAI0D,EAAG,IACZxD,KAAKD,EAAIyD,EAAG,IACZxD,KAAKG,EAAIqD,EAAG,IAELxD,KAIRgtD,mBAAoBpqD,GAEnB,MAAM0+C,EAAKthD,KAAKitD,oBAAqBrqD,EAAG,GAAIN,SACtCi/C,EAAKvhD,KAAKitD,oBAAqBrqD,EAAG,GAAIN,SACtC4qD,EAAKltD,KAAKitD,oBAAqBrqD,EAAG,GAAIN,SAM5C,OAJAtC,KAAKF,EAAIwhD,EACTthD,KAAKD,EAAIwhD,EACTvhD,KAAKG,EAAI+sD,EAEFltD,KAIRitD,oBAAqBrqD,EAAGuJ,GAEvB,OAAOnM,KAAKmO,UAAWvL,EAAEi6C,SAAkB,EAAR1wC,GAIpC8yC,qBAAsBr8C,EAAGuJ,GAExB,OAAOnM,KAAKmO,UAAWvL,EAAEi6C,SAAkB,EAAR1wC,GAIpCtN,OAAQwR,GAEP,OAAWA,EAAEvQ,IAAME,KAAKF,GAASuQ,EAAEtQ,IAAMC,KAAKD,GAASsQ,EAAElQ,IAAMH,KAAKG,EAIrEgO,UAAWgrC,EAAOn9B,EAAS,GAM1B,OAJAhc,KAAKF,EAAIq5C,EAAOn9B,GAChBhc,KAAKD,EAAIo5C,EAAOn9B,EAAS,GACzBhc,KAAKG,EAAIg5C,EAAOn9B,EAAS,GAElBhc,KAIR09C,QAASvE,EAAQ,GAAIn9B,EAAS,GAM7B,OAJAm9B,EAAOn9B,GAAWhc,KAAKF,EACvBq5C,EAAOn9B,EAAS,GAAMhc,KAAKD,EAC3Bo5C,EAAOn9B,EAAS,GAAMhc,KAAKG,EAEpBg5C,EAIRwE,oBAAqBC,EAAWzxC,EAAO6P,GAYtC,YAVgB7C,IAAX6C,GAEJrP,QAAQoK,KAAM,uEAIf/W,KAAKF,EAAI89C,EAAUC,KAAM1xC,GACzBnM,KAAKD,EAAI69C,EAAUE,KAAM3xC,GACzBnM,KAAKG,EAAIy9C,EAAUsI,KAAM/5C,GAElBnM,KAIRsL,SAMC,OAJAtL,KAAKF,EAAIuD,KAAKiI,SACdtL,KAAKD,EAAIsD,KAAKiI,SACdtL,KAAKG,EAAIkD,KAAKiI,SAEPtL,MAMT,MAAMusD,GAAwB,IAAI5B,GAC5BI,GAA4B,IAAIhE,GAEtC,MAAMoG,GAELjnD,YAAajB,EAAKD,GAEjBxF,OAAOC,eAAgBO,KAAM,SAAU,CAAEL,OAAO,IAEhDK,KAAKiF,SAAgBkU,IAARlU,EAAsBA,EAAM,IAAI0lD,GAAWvnD,EAAAA,EAAYA,EAAAA,EAAYA,EAAAA,GAChFpD,KAAKgF,SAAgBmU,IAARnU,EAAsBA,EAAM,IAAI2lD,IAAWvnD,EAAAA,GAAYA,EAAAA,GAAYA,EAAAA,GAIjFwF,IAAK3D,EAAKD,GAKT,OAHAhF,KAAKiF,IAAI6d,KAAM7d,GACfjF,KAAKgF,IAAI8d,KAAM9d,GAERhF,KAIRotD,aAAcjU,GAEb,IAAIl4C,EAASmC,EAAAA,EACTlC,EAASkC,EAAAA,EACTtB,EAASsB,EAAAA,EAETsC,GAAStC,EAAAA,EACTuC,GAASvC,EAAAA,EACTrB,GAASqB,EAAAA,EAEb,IAAM,IAAIvD,EAAI,EAAGwO,EAAI8qC,EAAM72C,OAAQzC,EAAIwO,EAAGxO,GAAK,EAAI,CAElD,MAAMC,EAAIq5C,EAAOt5C,GACXE,EAAIo5C,EAAOt5C,EAAI,GACfM,EAAIg5C,EAAOt5C,EAAI,GAEhBC,EAAImB,IAAOA,EAAOnB,GAClBC,EAAImB,IAAOA,EAAOnB,GAClBI,EAAI2B,IAAOA,EAAO3B,GAElBL,EAAI4F,IAAOA,EAAO5F,GAClBC,EAAI4F,IAAOA,EAAO5F,GAClBI,EAAI4B,IAAOA,EAAO5B,GAOxB,OAHAH,KAAKiF,IAAI2D,IAAK3H,EAAMC,EAAMY,GAC1B9B,KAAKgF,IAAI4D,IAAKlD,EAAMC,EAAM5D,GAEnB/B,KAIRqtD,uBAAwBzP,GAEvB,IAAI38C,EAASmC,EAAAA,EACTlC,EAASkC,EAAAA,EACTtB,EAASsB,EAAAA,EAETsC,GAAStC,EAAAA,EACTuC,GAASvC,EAAAA,EACTrB,GAASqB,EAAAA,EAEb,IAAM,IAAIvD,EAAI,EAAGwO,EAAIuvC,EAAU0P,MAAOztD,EAAIwO,EAAGxO,IAAO,CAEnD,MAAMC,EAAI89C,EAAUC,KAAMh+C,GACpBE,EAAI69C,EAAUE,KAAMj+C,GACpBM,EAAIy9C,EAAUsI,KAAMrmD,GAErBC,EAAImB,IAAOA,EAAOnB,GAClBC,EAAImB,IAAOA,EAAOnB,GAClBI,EAAI2B,IAAOA,EAAO3B,GAElBL,EAAI4F,IAAOA,EAAO5F,GAClBC,EAAI4F,IAAOA,EAAO5F,GAClBI,EAAI4B,IAAOA,EAAO5B,GAOxB,OAHAH,KAAKiF,IAAI2D,IAAK3H,EAAMC,EAAMY,GAC1B9B,KAAKgF,IAAI4D,IAAKlD,EAAMC,EAAM5D,GAEnB/B,KAIRutD,cAAeC,GAEdxtD,KAAKytD,YAEL,IAAM,IAAI5tD,EAAI,EAAG6tD,EAAKF,EAAOlrD,OAAQzC,EAAI6tD,EAAI7tD,IAE5CG,KAAK2tD,cAAeH,EAAQ3tD,IAI7B,OAAOG,KAIR4tD,qBAAsBrjD,EAAQqV,GAE7B,MAAMiuC,EAAWC,GAAUhrC,KAAMlD,GAAOhV,eAAgB,IAKxD,OAHA5K,KAAKiF,IAAI6d,KAAMvY,GAAShB,IAAKskD,GAC7B7tD,KAAKgF,IAAI8d,KAAMvY,GAAStB,IAAK4kD,GAEtB7tD,KAIR+tD,cAAeC,GAId,OAFAhuD,KAAKytD,YAEEztD,KAAKiuD,eAAgBD,GAI7BrkD,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAMorC,GAKL,OAHAluD,KAAKiF,IAAI6d,KAAMorC,EAAIjpD,KACnBjF,KAAKgF,IAAI8d,KAAMorC,EAAIlpD,KAEZhF,KAIRytD,YAKC,OAHAztD,KAAKiF,IAAInF,EAAIE,KAAKiF,IAAIlF,EAAIC,KAAKiF,IAAI9E,EAAMiD,EAAAA,EACzCpD,KAAKgF,IAAIlF,EAAIE,KAAKgF,IAAIjF,EAAIC,KAAKgF,IAAI7E,GAAMiD,EAAAA,EAElCpD,KAIRmuD,UAIC,OAASnuD,KAAKgF,IAAIlF,EAAIE,KAAKiF,IAAInF,GAASE,KAAKgF,IAAIjF,EAAIC,KAAKiF,IAAIlF,GAASC,KAAKgF,IAAI7E,EAAIH,KAAKiF,IAAI9E,EAI9FsO,UAAWyqC,GASV,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,mDACdmiC,EAAS,IAAIyR,IAIP3qD,KAAKmuD,UAAYjV,EAAOtwC,IAAK,EAAG,EAAG,GAAMswC,EAAOkD,WAAYp8C,KAAKiF,IAAKjF,KAAKgF,KAAM4F,eAAgB,IAIzGwjD,QAASlV,GASR,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,iDACdmiC,EAAS,IAAIyR,IAIP3qD,KAAKmuD,UAAYjV,EAAOtwC,IAAK,EAAG,EAAG,GAAMswC,EAAOqD,WAAYv8C,KAAKgF,IAAKhF,KAAKiF,KAInF0oD,cAAe19C,GAKd,OAHAjQ,KAAKiF,IAAIA,IAAKgL,GACdjQ,KAAKgF,IAAIA,IAAKiL,GAEPjQ,KAIRquD,eAAgBtwB,GAKf,OAHA/9B,KAAKiF,IAAIsE,IAAKw0B,GACd/9B,KAAKgF,IAAIiE,IAAK80B,GAEP/9B,KAIRsuD,eAAgBzjD,GAKf,OAHA7K,KAAKiF,IAAIo3C,WAAaxxC,GACtB7K,KAAKgF,IAAIq3C,UAAWxxC,GAEb7K,KAIRiuD,eAAgBD,GAKfA,EAAOO,mBAAmB,GAAO,GAEjC,MAAMC,EAAWR,EAAOQ,cAENr1C,IAAbq1C,IAE0B,OAAzBA,EAASC,aAEbD,EAASE,qBAIVC,GAAK7rC,KAAM0rC,EAASC,aACpBE,GAAK7J,aAAckJ,EAAOjC,aAE1B/rD,KAAK4uD,MAAOD,KAIb,MAAME,EAAWb,EAAOa,SAExB,IAAM,IAAIhvD,EAAI,EAAGwO,EAAIwgD,EAASvsD,OAAQzC,EAAIwO,EAAGxO,IAE5CG,KAAKiuD,eAAgBY,EAAUhvD,IAIhC,OAAOG,KAIR8qB,cAAe7a,GAEd,QAAOA,EAAMnQ,EAAIE,KAAKiF,IAAInF,GAAKmQ,EAAMnQ,EAAIE,KAAKgF,IAAIlF,GACjDmQ,EAAMlQ,EAAIC,KAAKiF,IAAIlF,GAAKkQ,EAAMlQ,EAAIC,KAAKgF,IAAIjF,GAC3CkQ,EAAM9P,EAAIH,KAAKiF,IAAI9E,GAAK8P,EAAM9P,EAAIH,KAAKgF,IAAI7E,GAI7C2uD,YAAaZ,GAEZ,OAAOluD,KAAKiF,IAAInF,GAAKouD,EAAIjpD,IAAInF,GAAKouD,EAAIlpD,IAAIlF,GAAKE,KAAKgF,IAAIlF,GACvDE,KAAKiF,IAAIlF,GAAKmuD,EAAIjpD,IAAIlF,GAAKmuD,EAAIlpD,IAAIjF,GAAKC,KAAKgF,IAAIjF,GACjDC,KAAKiF,IAAI9E,GAAK+tD,EAAIjpD,IAAI9E,GAAK+tD,EAAIlpD,IAAI7E,GAAKH,KAAKgF,IAAI7E,EAInD4uD,aAAc9+C,EAAOipC,GAYpB,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,sDACdmiC,EAAS,IAAIyR,IAIPzR,EAAOtwC,KACXqH,EAAMnQ,EAAIE,KAAKiF,IAAInF,IAAQE,KAAKgF,IAAIlF,EAAIE,KAAKiF,IAAInF,IACjDmQ,EAAMlQ,EAAIC,KAAKiF,IAAIlF,IAAQC,KAAKgF,IAAIjF,EAAIC,KAAKiF,IAAIlF,IACjDkQ,EAAM9P,EAAIH,KAAKiF,IAAI9E,IAAQH,KAAKgF,IAAI7E,EAAIH,KAAKiF,IAAI9E,IAKrD6uD,cAAed,GAGd,QAAOA,EAAIlpD,IAAIlF,EAAIE,KAAKiF,IAAInF,GAAKouD,EAAIjpD,IAAInF,EAAIE,KAAKgF,IAAIlF,GACrDouD,EAAIlpD,IAAIjF,EAAIC,KAAKiF,IAAIlF,GAAKmuD,EAAIjpD,IAAIlF,EAAIC,KAAKgF,IAAIjF,GAC/CmuD,EAAIlpD,IAAI7E,EAAIH,KAAKiF,IAAI9E,GAAK+tD,EAAIjpD,IAAI9E,EAAIH,KAAKgF,IAAI7E,GAIjD8uD,iBAAkBC,GAMjB,OAHAlvD,KAAKmvD,WAAYD,EAAO3kD,OAAQujD,IAGzBA,GAAUvQ,kBAAmB2R,EAAO3kD,SAAc2kD,EAAOj1C,OAASi1C,EAAOj1C,OAIjFm1C,gBAAiBC,GAKhB,IAAIpqD,EAAKD,EAsCT,OApCKqqD,EAAM73B,OAAO13B,EAAI,GAErBmF,EAAMoqD,EAAM73B,OAAO13B,EAAIE,KAAKiF,IAAInF,EAChCkF,EAAMqqD,EAAM73B,OAAO13B,EAAIE,KAAKgF,IAAIlF,IAIhCmF,EAAMoqD,EAAM73B,OAAO13B,EAAIE,KAAKgF,IAAIlF,EAChCkF,EAAMqqD,EAAM73B,OAAO13B,EAAIE,KAAKiF,IAAInF,GAI5BuvD,EAAM73B,OAAOz3B,EAAI,GAErBkF,GAAOoqD,EAAM73B,OAAOz3B,EAAIC,KAAKiF,IAAIlF,EACjCiF,GAAOqqD,EAAM73B,OAAOz3B,EAAIC,KAAKgF,IAAIjF,IAIjCkF,GAAOoqD,EAAM73B,OAAOz3B,EAAIC,KAAKgF,IAAIjF,EACjCiF,GAAOqqD,EAAM73B,OAAOz3B,EAAIC,KAAKiF,IAAIlF,GAI7BsvD,EAAM73B,OAAOr3B,EAAI,GAErB8E,GAAOoqD,EAAM73B,OAAOr3B,EAAIH,KAAKiF,IAAI9E,EACjC6E,GAAOqqD,EAAM73B,OAAOr3B,EAAIH,KAAKgF,IAAI7E,IAIjC8E,GAAOoqD,EAAM73B,OAAOr3B,EAAIH,KAAKgF,IAAI7E,EACjC6E,GAAOqqD,EAAM73B,OAAOr3B,EAAIH,KAAKiF,IAAI9E,GAIzB8E,IAASoqD,EAAMC,UAAYtqD,IAASqqD,EAAMC,SAIpDC,mBAAoBhjC,GAEnB,GAAKvsB,KAAKmuD,UAET,OAAO,EAKRnuD,KAAKyO,UAAW+gD,IAChBC,GAASlT,WAAYv8C,KAAKgF,IAAKwqD,IAG/BE,GAAInT,WAAYhwB,EAAShrB,EAAGiuD,IAC5BG,GAAIpT,WAAYhwB,EAAS/qB,EAAGguD,IAC5BI,GAAIrT,WAAYhwB,EAAS9qB,EAAG+tD,IAG5BK,GAAItT,WAAYoT,GAAKD,IACrBI,GAAIvT,WAAYqT,GAAKD,IACrBI,GAAIxT,WAAYmT,GAAKE,IAKrB,IAAII,EAAO,CACV,GAAKH,GAAI1vD,EAAG0vD,GAAI9vD,EAAG,GAAK+vD,GAAI3vD,EAAG2vD,GAAI/vD,EAAG,GAAKgwD,GAAI5vD,EAAG4vD,GAAIhwD,EACtD8vD,GAAI1vD,EAAG,GAAK0vD,GAAI/vD,EAAGgwD,GAAI3vD,EAAG,GAAK2vD,GAAIhwD,EAAGiwD,GAAI5vD,EAAG,GAAK4vD,GAAIjwD,GACpD+vD,GAAI9vD,EAAG8vD,GAAI/vD,EAAG,GAAKgwD,GAAI/vD,EAAG+vD,GAAIhwD,EAAG,GAAKiwD,GAAIhwD,EAAGgwD,GAAIjwD,EAAG,GAEvD,QAAOmwD,GAAYD,EAAMN,GAAKC,GAAKC,GAAKH,MAOxCO,EAAO,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC1BC,GAAYD,EAAMN,GAAKC,GAAKC,GAAKH,MAQxCS,GAAgBjE,aAAc4D,GAAKC,IACnCE,EAAO,CAAEE,GAAgBpwD,EAAGowD,GAAgBnwD,EAAGmwD,GAAgB/vD,GAExD8vD,GAAYD,EAAMN,GAAKC,GAAKC,GAAKH,MAIzCN,WAAYl/C,EAAOipC,GASlB,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,oDACdmiC,EAAS,IAAIyR,IAIPzR,EAAOp2B,KAAM7S,GAAQ+pC,MAAOh6C,KAAKiF,IAAKjF,KAAKgF,KAInDmrD,gBAAiBlgD,GAIhB,OAFqB69C,GAAUhrC,KAAM7S,GAAQ+pC,MAAOh6C,KAAKiF,IAAKjF,KAAKgF,KAE/CuE,IAAK0G,GAAQ3N,SAIlC8tD,kBAAmBlX,GAalB,YAXgB//B,IAAX+/B,GAEJvsC,QAAQu1B,MAAO,2DAKhBliC,KAAKyO,UAAWyqC,EAAO3uC,QAEvB2uC,EAAOj/B,OAA8C,GAArCja,KAAKouD,QAASN,IAAYxrD,SAEnC42C,EAIRmX,UAAWnC,GAQV,OANAluD,KAAKiF,IAAID,IAAKkpD,EAAIjpD,KAClBjF,KAAKgF,IAAIC,IAAKipD,EAAIlpD,KAGbhF,KAAKmuD,WAAYnuD,KAAKytD,YAEpBztD,KAIR4uD,MAAOV,GAKN,OAHAluD,KAAKiF,IAAIA,IAAKipD,EAAIjpD,KAClBjF,KAAKgF,IAAIA,IAAKkpD,EAAIlpD,KAEXhF,KAIR8kD,aAActD,GAGb,OAAKxhD,KAAKmuD,YAGVmC,GAAS,GAAI1nD,IAAK5I,KAAKiF,IAAInF,EAAGE,KAAKiF,IAAIlF,EAAGC,KAAKiF,IAAI9E,GAAI2kD,aAActD,GACrE8O,GAAS,GAAI1nD,IAAK5I,KAAKiF,IAAInF,EAAGE,KAAKiF,IAAIlF,EAAGC,KAAKgF,IAAI7E,GAAI2kD,aAActD,GACrE8O,GAAS,GAAI1nD,IAAK5I,KAAKiF,IAAInF,EAAGE,KAAKgF,IAAIjF,EAAGC,KAAKiF,IAAI9E,GAAI2kD,aAActD,GACrE8O,GAAS,GAAI1nD,IAAK5I,KAAKiF,IAAInF,EAAGE,KAAKgF,IAAIjF,EAAGC,KAAKgF,IAAI7E,GAAI2kD,aAActD,GACrE8O,GAAS,GAAI1nD,IAAK5I,KAAKgF,IAAIlF,EAAGE,KAAKiF,IAAIlF,EAAGC,KAAKiF,IAAI9E,GAAI2kD,aAActD,GACrE8O,GAAS,GAAI1nD,IAAK5I,KAAKgF,IAAIlF,EAAGE,KAAKiF,IAAIlF,EAAGC,KAAKgF,IAAI7E,GAAI2kD,aAActD,GACrE8O,GAAS,GAAI1nD,IAAK5I,KAAKgF,IAAIlF,EAAGE,KAAKgF,IAAIjF,EAAGC,KAAKiF,IAAI9E,GAAI2kD,aAActD,GACrE8O,GAAS,GAAI1nD,IAAK5I,KAAKgF,IAAIlF,EAAGE,KAAKgF,IAAIjF,EAAGC,KAAKgF,IAAI7E,GAAI2kD,aAActD,GAErExhD,KAAKutD,cAAe+C,KAZStwD,KAkB9BuS,UAAWyJ,GAKV,OAHAhc,KAAKiF,IAAIgE,IAAK+S,GACdhc,KAAKgF,IAAIiE,IAAK+S,GAEPhc,KAIRnB,OAAQqvD,GAEP,OAAOA,EAAIjpD,IAAIpG,OAAQmB,KAAKiF,MAASipD,EAAIlpD,IAAInG,OAAQmB,KAAKgF,MAM5D,SAASirD,GAAYD,EAAMzgD,EAAIC,EAAIoiB,EAAI2+B,GAEtC,IAAM,IAAI1wD,EAAI,EAAG4F,EAAIuqD,EAAK1tD,OAAS,EAAGzC,GAAK4F,EAAG5F,GAAK,EAAI,CAEtD2wD,GAAUriD,UAAW6hD,EAAMnwD,GAE3B,MAAM0E,EAAIgsD,EAAQzwD,EAAIuD,KAAKC,IAAKktD,GAAU1wD,GAAMywD,EAAQxwD,EAAIsD,KAAKC,IAAKktD,GAAUzwD,GAAMwwD,EAAQpwD,EAAIkD,KAAKC,IAAKktD,GAAUrwD,GAEhHqa,EAAKjL,EAAGmR,IAAK8vC,IACbhsD,EAAKgL,EAAGkR,IAAK8vC,IACb/rD,EAAKmtB,EAAGlR,IAAK8vC,IAEnB,GAAKntD,KAAK2B,KAAO3B,KAAK2B,IAAKwV,EAAIhW,EAAIC,GAAMpB,KAAK4B,IAAKuV,EAAIhW,EAAIC,IAASF,EAInE,OAAO,EAMT,OAAO,EAIR,MAAM+rD,GAAU,CACD,IAAI3F,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,IAGbmD,GAA0B,IAAInD,GAE9BgE,GAAqB,IAAIxB,GAIzBuC,GAAoB,IAAI/E,GACxBgF,GAAoB,IAAIhF,GACxBiF,GAAoB,IAAIjF,GAIxBkF,GAAoB,IAAIlF,GACxBmF,GAAoB,IAAInF,GACxBoF,GAAoB,IAAIpF,GAExB6E,GAAwB,IAAI7E,GAC5B8E,GAAyB,IAAI9E,GAC7BuF,GAAgC,IAAIvF,GACpC6F,GAA0B,IAAI7F,GAE9B8F,GAAuB,IAAItD,GAEjC,MAAMuD,GAELxqD,YAAaqE,EAAQ0P,GAEpBja,KAAKuK,YAAsB4O,IAAX5O,EAAyBA,EAAS,IAAIogD,GACtD3qD,KAAKia,YAAsBd,IAAXc,EAAyBA,GAAW,EAIrDrR,IAAK2B,EAAQ0P,GAKZ,OAHAja,KAAKuK,OAAOuY,KAAMvY,GAClBvK,KAAKia,OAASA,EAEPja,KAIRutD,cAAeC,EAAQmD,GAEtB,MAAMpmD,EAASvK,KAAKuK,YAEI4O,IAAnBw3C,EAEJpmD,EAAOuY,KAAM6tC,GAIbF,GAAOlD,cAAeC,GAAS/+C,UAAWlE,GAI3C,IAAIqmD,EAAc,EAElB,IAAM,IAAI/wD,EAAI,EAAG6tD,EAAKF,EAAOlrD,OAAQzC,EAAI6tD,EAAI7tD,IAE5C+wD,EAAcvtD,KAAK2B,IAAK4rD,EAAarmD,EAAOgzC,kBAAmBiQ,EAAQ3tD,KAMxE,OAFAG,KAAKia,OAAS5W,KAAKyG,KAAM8mD,GAElB5wD,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAMosC,GAKL,OAHAlvD,KAAKuK,OAAOuY,KAAMosC,EAAO3kD,QACzBvK,KAAKia,OAASi1C,EAAOj1C,OAEdja,KAIRmuD,UAEC,OAASnuD,KAAKia,OAAS,EAIxBwzC,YAKC,OAHAztD,KAAKuK,OAAO3B,IAAK,EAAG,EAAG,GACvB5I,KAAKia,QAAW,EAETja,KAIR8qB,cAAe7a,GAEd,OAASA,EAAMstC,kBAAmBv9C,KAAKuK,SAAcvK,KAAKia,OAASja,KAAKia,OAIzEk2C,gBAAiBlgD,GAEhB,OAASA,EAAMqtC,WAAYt9C,KAAKuK,QAAWvK,KAAKia,OAIjDg1C,iBAAkBC,GAEjB,MAAM2B,EAAY7wD,KAAKia,OAASi1C,EAAOj1C,OAEvC,OAAOi1C,EAAO3kD,OAAOgzC,kBAAmBv9C,KAAKuK,SAAcsmD,EAAYA,EAIxE7B,cAAed,GAEd,OAAOA,EAAIe,iBAAkBjvD,MAI9BovD,gBAAiBC,GAEhB,OAAOhsD,KAAKC,IAAK+rD,EAAMc,gBAAiBnwD,KAAKuK,UAAcvK,KAAKia,OAIjEk1C,WAAYl/C,EAAOipC,GAElB,MAAM4X,EAAgB9wD,KAAKuK,OAAOgzC,kBAAmBttC,GAkBrD,YAhBgBkJ,IAAX+/B,IAEJvsC,QAAQoK,KAAM,sDACdmiC,EAAS,IAAIyR,IAIdzR,EAAOp2B,KAAM7S,GAER6gD,EAAkB9wD,KAAKia,OAASja,KAAKia,SAEzCi/B,EAAO3vC,IAAKvJ,KAAKuK,QAAS2E,YAC1BgqC,EAAOtuC,eAAgB5K,KAAKia,QAAShR,IAAKjJ,KAAKuK,SAIzC2uC,EAIR6X,eAAgB7X,GASf,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,0DACdmiC,EAAS,IAAIiU,IAITntD,KAAKmuD,WAGTjV,EAAOuU,YACAvU,IAIRA,EAAOtwC,IAAK5I,KAAKuK,OAAQvK,KAAKuK,QAC9B2uC,EAAOoV,eAAgBtuD,KAAKia,QAErBi/B,GAIR4L,aAActD,GAKb,OAHAxhD,KAAKuK,OAAOu6C,aAActD,GAC1BxhD,KAAKia,OAASja,KAAKia,OAASunC,EAAOwP,oBAE5BhxD,KAIRuS,UAAWyJ,GAIV,OAFAhc,KAAKuK,OAAOtB,IAAK+S,GAEVhc,KAIRnB,OAAQqwD,GAEP,OAAOA,EAAO3kD,OAAO1L,OAAQmB,KAAKuK,SAAc2kD,EAAOj1C,SAAWja,KAAKia,QAMzE,MAAMg3C,GAA0B,IAAItG,GAC9BuG,GAA2B,IAAIvG,GAC/BwG,GAAwB,IAAIxG,GAC5ByG,GAAsB,IAAIzG,GAE1B0G,GAAuB,IAAI1G,GAC3B2G,GAAuB,IAAI3G,GAC3B4G,GAAwB,IAAI5G,GAElC,MAAM6G,GAELtrD,YAAa+D,EAAQssB,GAEpBv2B,KAAKiK,YAAsBkP,IAAXlP,EAAyBA,EAAS,IAAI0gD,GACtD3qD,KAAKu2B,eAA4Bpd,IAAdod,EAA4BA,EAAY,IAAIo0B,GAAS,EAAG,GAAK,GAIjF/hD,IAAKqB,EAAQssB,GAKZ,OAHAv2B,KAAKiK,OAAO6Y,KAAM7Y,GAClBjK,KAAKu2B,UAAUzT,KAAMyT,GAEdv2B,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAM2uC,GAKL,OAHAzxD,KAAKiK,OAAO6Y,KAAM2uC,EAAIxnD,QACtBjK,KAAKu2B,UAAUzT,KAAM2uC,EAAIl7B,WAElBv2B,KAIR0xD,GAAIpkD,EAAG4rC,GASN,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,2CACdmiC,EAAS,IAAIyR,IAIPzR,EAAOp2B,KAAM9iB,KAAKu2B,WAAY3rB,eAAgB0C,GAAIrE,IAAKjJ,KAAKiK,QAIpE0nD,OAAQthD,GAIP,OAFArQ,KAAKu2B,UAAUzT,KAAMzS,GAAI9G,IAAKvJ,KAAKiK,QAASiF,YAErClP,KAIR4xD,OAAQtkD,GAIP,OAFAtN,KAAKiK,OAAO6Y,KAAM9iB,KAAK0xD,GAAIpkD,EAAG2jD,KAEvBjxD,KAIR6xD,oBAAqB5hD,EAAOipC,QAEX//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,4DACdmiC,EAAS,IAAIyR,IAIdzR,EAAOqD,WAAYtsC,EAAOjQ,KAAKiK,QAE/B,MAAM6nD,EAAoB5Y,EAAOx4B,IAAK1gB,KAAKu2B,WAE3C,OAAKu7B,EAAoB,EAEjB5Y,EAAOp2B,KAAM9iB,KAAKiK,QAInBivC,EAAOp2B,KAAM9iB,KAAKu2B,WAAY3rB,eAAgBknD,GAAoB7oD,IAAKjJ,KAAKiK,QAIpFkmD,gBAAiBlgD,GAEhB,OAAO5M,KAAKyG,KAAM9J,KAAK+xD,kBAAmB9hD,IAI3C8hD,kBAAmB9hD,GAElB,MAAM6hD,EAAoBb,GAAU1U,WAAYtsC,EAAOjQ,KAAKiK,QAASyW,IAAK1gB,KAAKu2B,WAI/E,OAAKu7B,EAAoB,EAEjB9xD,KAAKiK,OAAOszC,kBAAmBttC,IAIvCghD,GAAUnuC,KAAM9iB,KAAKu2B,WAAY3rB,eAAgBknD,GAAoB7oD,IAAKjJ,KAAKiK,QAExEgnD,GAAU1T,kBAAmBttC,IAIrC+hD,oBAAqBziD,EAAIC,EAAIyiD,EAAoBC,GAShDhB,GAAWpuC,KAAMvT,GAAKtG,IAAKuG,GAAK5E,eAAgB,IAChDumD,GAAQruC,KAAMtT,GAAKjG,IAAKgG,GAAKL,YAC7BkiD,GAAMtuC,KAAM9iB,KAAKiK,QAASV,IAAK2nD,IAE/B,MAAMiB,EAAkC,GAAtB5iD,EAAG+tC,WAAY9tC,GAC3B4iD,GAAQpyD,KAAKu2B,UAAU7V,IAAKywC,IAC5BrjD,EAAKsjD,GAAM1wC,IAAK1gB,KAAKu2B,WACrB6jB,GAAOgX,GAAM1wC,IAAKywC,IAClB1vD,EAAI2vD,GAAMhU,WACVyD,EAAMx9C,KAAKC,IAAK,EAAI8uD,EAAMA,GAChC,IAAIC,EAAIvJ,EAAIwJ,EAASC,EAErB,GAAK1R,EAAM,EAQV,GAJAwR,EAAKD,EAAMhY,EAAKtsC,EAChBg7C,EAAKsJ,EAAMtkD,EAAKssC,EAChBmY,EAASJ,EAAYtR,EAEhBwR,GAAM,EAEV,GAAKvJ,IAAQyJ,EAEZ,GAAKzJ,GAAMyJ,EAAS,CAKnB,MAAMC,EAAS,EAAI3R,EACnBwR,GAAMG,EACN1J,GAAM0J,EACNF,EAAUD,GAAOA,EAAKD,EAAMtJ,EAAK,EAAIh7C,GAAOg7C,GAAOsJ,EAAMC,EAAKvJ,EAAK,EAAI1O,GAAO34C,OAM9EqnD,EAAKqJ,EACLE,EAAKhvD,KAAK2B,IAAK,IAAOotD,EAAMtJ,EAAKh7C,IACjCwkD,GAAYD,EAAKA,EAAKvJ,GAAOA,EAAK,EAAI1O,GAAO34C,OAQ9CqnD,GAAOqJ,EACPE,EAAKhvD,KAAK2B,IAAK,IAAOotD,EAAMtJ,EAAKh7C,IACjCwkD,GAAYD,EAAKA,EAAKvJ,GAAOA,EAAK,EAAI1O,GAAO34C,OAMzCqnD,IAAQyJ,GAIZF,EAAKhvD,KAAK2B,IAAK,KAASotD,EAAMD,EAAYrkD,IAC1Cg7C,EAAOuJ,EAAK,GAAQF,EAAY9uD,KAAK4B,IAAK5B,KAAK2B,KAAOmtD,GAAa/X,GAAM+X,GACzEG,GAAYD,EAAKA,EAAKvJ,GAAOA,EAAK,EAAI1O,GAAO34C,GAElCqnD,GAAMyJ,GAIjBF,EAAK,EACLvJ,EAAKzlD,KAAK4B,IAAK5B,KAAK2B,KAAOmtD,GAAa/X,GAAM+X,GAC9CG,EAAUxJ,GAAOA,EAAK,EAAI1O,GAAO34C,IAMjC4wD,EAAKhvD,KAAK2B,IAAK,IAAOotD,EAAMD,EAAYrkD,IACxCg7C,EAAOuJ,EAAK,EAAMF,EAAY9uD,KAAK4B,IAAK5B,KAAK2B,KAAOmtD,GAAa/X,GAAM+X,GACvEG,GAAYD,EAAKA,EAAKvJ,GAAOA,EAAK,EAAI1O,GAAO34C,QAU/CqnD,EAAOsJ,EAAM,GAAQD,EAAYA,EACjCE,EAAKhvD,KAAK2B,IAAK,IAAOotD,EAAMtJ,EAAKh7C,IACjCwkD,GAAYD,EAAKA,EAAKvJ,GAAOA,EAAK,EAAI1O,GAAO34C,EAgB9C,OAZKwwD,GAEJA,EAAmBnvC,KAAM9iB,KAAKu2B,WAAY3rB,eAAgBynD,GAAKppD,IAAKjJ,KAAKiK,QAIrEioD,GAEJA,EAAuBpvC,KAAMquC,IAAUvmD,eAAgBk+C,GAAK7/C,IAAKioD,IAI3DoB,EAIRG,gBAAiBvD,EAAQhW,GAExB+X,GAAU1U,WAAY2S,EAAO3kD,OAAQvK,KAAKiK,QAC1C,MAAMyoD,EAAMzB,GAAUvwC,IAAK1gB,KAAKu2B,WAC1BujB,EAAKmX,GAAUvwC,IAAKuwC,IAAcyB,EAAMA,EACxCC,EAAUzD,EAAOj1C,OAASi1C,EAAOj1C,OAEvC,GAAK6/B,EAAK6Y,EAAU,OAAO,KAE3B,MAAMC,EAAMvvD,KAAKyG,KAAM6oD,EAAU7Y,GAG3B+Y,EAAKH,EAAME,EAGXE,EAAKJ,EAAME,EAGjB,OAAKC,EAAK,GAAKC,EAAK,EAAW,KAK1BD,EAAK,EAAW7yD,KAAK0xD,GAAIoB,EAAI5Z,GAG3Bl5C,KAAK0xD,GAAImB,EAAI3Z,GAIrB+V,iBAAkBC,GAEjB,OAAOlvD,KAAK+xD,kBAAmB7C,EAAO3kD,SAAc2kD,EAAOj1C,OAASi1C,EAAOj1C,OAI5E84C,gBAAiB1D,GAEhB,MAAM3/C,EAAc2/C,EAAM73B,OAAO9W,IAAK1gB,KAAKu2B,WAE3C,GAAqB,IAAhB7mB,EAGJ,OAA8C,IAAzC2/C,EAAMc,gBAAiBnwD,KAAKiK,QAEzB,EAMD,KAIR,MAAMqD,IAAQtN,KAAKiK,OAAOyW,IAAK2uC,EAAM73B,QAAW63B,EAAMC,UAAa5/C,EAInE,OAAOpC,GAAK,EAAIA,EAAI,KAIrB0lD,eAAgB3D,EAAOnW,GAEtB,MAAM5rC,EAAItN,KAAK+yD,gBAAiB1D,GAEhC,OAAW,OAAN/hD,EAEG,KAIDtN,KAAK0xD,GAAIpkD,EAAG4rC,GAIpBkW,gBAAiBC,GAIhB,MAAM4D,EAAc5D,EAAMc,gBAAiBnwD,KAAKiK,QAEhD,GAAqB,IAAhBgpD,EAEJ,OAAO,EAMR,OAFoB5D,EAAM73B,OAAO9W,IAAK1gB,KAAKu2B,WAExB08B,EAAc,EAYlCC,aAAchF,EAAKhV,GAElB,IAAIia,EAAMC,EAAMC,EAAOC,EAAOC,EAAOC,EAErC,MAAMC,EAAU,EAAIzzD,KAAKu2B,UAAUz2B,EAClC4zD,EAAU,EAAI1zD,KAAKu2B,UAAUx2B,EAC7B4zD,EAAU,EAAI3zD,KAAKu2B,UAAUp2B,EAExB8J,EAASjK,KAAKiK,OA0BpB,OAxBKwpD,GAAW,GAEfN,GAASjF,EAAIjpD,IAAInF,EAAImK,EAAOnK,GAAM2zD,EAClCL,GAASlF,EAAIlpD,IAAIlF,EAAImK,EAAOnK,GAAM2zD,IAIlCN,GAASjF,EAAIlpD,IAAIlF,EAAImK,EAAOnK,GAAM2zD,EAClCL,GAASlF,EAAIjpD,IAAInF,EAAImK,EAAOnK,GAAM2zD,GAI9BC,GAAW,GAEfL,GAAUnF,EAAIjpD,IAAIlF,EAAIkK,EAAOlK,GAAM2zD,EACnCJ,GAAUpF,EAAIlpD,IAAIjF,EAAIkK,EAAOlK,GAAM2zD,IAInCL,GAAUnF,EAAIlpD,IAAIjF,EAAIkK,EAAOlK,GAAM2zD,EACnCJ,GAAUpF,EAAIjpD,IAAIlF,EAAIkK,EAAOlK,GAAM2zD,GAI7BP,EAAOG,GAAaD,EAAQD,EAAgB,OAK9CC,EAAQF,GAAQA,GAASA,KAAOA,EAAOE,IAEvCC,EAAQF,GAAQA,GAASA,KAAOA,EAAOE,GAEvCK,GAAW,GAEfJ,GAAUrF,EAAIjpD,IAAI9E,EAAI8J,EAAO9J,GAAMwzD,EACnCH,GAAUtF,EAAIlpD,IAAI7E,EAAI8J,EAAO9J,GAAMwzD,IAInCJ,GAAUrF,EAAIlpD,IAAI7E,EAAI8J,EAAO9J,GAAMwzD,EACnCH,GAAUtF,EAAIjpD,IAAI9E,EAAI8J,EAAO9J,GAAMwzD,GAI7BR,EAAOK,GAAaD,EAAQH,EAAgB,OAE9CG,EAAQJ,GAAQA,GAASA,KAAOA,EAAOI,IAEvCC,EAAQJ,GAAQA,GAASA,KAAOA,EAAOI,GAIvCJ,EAAO,EAAW,KAEhBpzD,KAAK0xD,GAAIyB,GAAQ,EAAIA,EAAOC,EAAMla,KAI1C8V,cAAed,GAEd,OAA+C,OAAxCluD,KAAKkzD,aAAchF,EAAK+C,IAIhC2C,kBAAmBryD,EAAGC,EAAGC,EAAGoyD,EAAiB3a,GAM5CmY,GAAO9U,WAAY/6C,EAAGD,GACtB+vD,GAAO/U,WAAY96C,EAAGF,GACtBgwD,GAAQtF,aAAcoF,GAAQC,IAO9B,IACItyD,EADA80D,EAAM9zD,KAAKu2B,UAAU7V,IAAK6wC,IAG9B,GAAKuC,EAAM,EAAI,CAEd,GAAKD,EAAkB,OAAO,KAC9B70D,EAAO,MAED,MAAK80D,EAAM,GAOjB,OAAO,KALP90D,GAAS,EACT80D,GAAQA,EAQT1C,GAAM7U,WAAYv8C,KAAKiK,OAAQ1I,GAC/B,MAAMwyD,EAAS/0D,EAAOgB,KAAKu2B,UAAU7V,IAAK4wC,GAAOrF,aAAcmF,GAAOE,KAGtE,GAAKyC,EAAS,EAEb,OAAO,KAIR,MAAMC,EAASh1D,EAAOgB,KAAKu2B,UAAU7V,IAAK2wC,GAAOr/B,MAAOo/B,KAGxD,GAAK4C,EAAS,EAEb,OAAO,KAKR,GAAKD,EAASC,EAASF,EAEtB,OAAO,KAKR,MAAMG,GAAQj1D,EAAOoyD,GAAM1wC,IAAK6wC,IAGhC,OAAK0C,EAAM,EAEH,KAKDj0D,KAAK0xD,GAAIuC,EAAMH,EAAK5a,GAI5B4L,aAAc7D,GAKb,OAHAjhD,KAAKiK,OAAO66C,aAAc7D,GAC1BjhD,KAAKu2B,UAAUy1B,mBAAoB/K,GAE5BjhD,KAIRnB,OAAQ4yD,GAEP,OAAOA,EAAIxnD,OAAOpL,OAAQmB,KAAKiK,SAAYwnD,EAAIl7B,UAAU13B,OAAQmB,KAAKu2B,YAMxE,MAAM29B,GAELhuD,cAEC1G,OAAOC,eAAgBO,KAAM,YAAa,CAAEL,OAAO,IAEnDK,KAAK68C,SAAW,CAEf,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAILtqB,UAAUjwB,OAAS,GAEvBqK,QAAQu1B,MAAO,iFAMjBt5B,IAAKq1C,EAAKC,EAAKC,EAAKgW,EAAK/V,EAAKC,EAAKC,EAAK8V,EAAK7V,EAAKC,EAAKC,EAAK4V,EAAKC,EAAKC,EAAKC,EAAKC,GAE/E,MAAM/V,EAAK1+C,KAAK68C,SAOhB,OALA6B,EAAI,GAAMT,EAAKS,EAAI,GAAMR,EAAKQ,EAAI,GAAMP,EAAKO,EAAI,IAAOyV,EACxDzV,EAAI,GAAMN,EAAKM,EAAI,GAAML,EAAKK,EAAI,GAAMJ,EAAKI,EAAI,IAAO0V,EACxD1V,EAAI,GAAMH,EAAKG,EAAI,GAAMF,EAAKE,EAAI,IAAOD,EAAKC,EAAI,IAAO2V,EACzD3V,EAAI,GAAM4V,EAAK5V,EAAI,GAAM6V,EAAK7V,EAAI,IAAO8V,EAAK9V,EAAI,IAAO+V,EAElDz0D,KAIR2+C,WAWC,OATA3+C,KAAK4I,IAEJ,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAIH5I,KAIR2J,QAEC,OAAO,IAAIuqD,IAAU/lD,UAAWnO,KAAK68C,UAItC/5B,KAAMlgB,GAEL,MAAM87C,EAAK1+C,KAAK68C,SACV+B,EAAKh8C,EAAEi6C,SAOb,OALA6B,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GACvEF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GACvEF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,IAAOE,EAAI,IAAMF,EAAI,IAAOE,EAAI,IAC1EF,EAAI,IAAOE,EAAI,IAAMF,EAAI,IAAOE,EAAI,IAAMF,EAAI,IAAOE,EAAI,IAAMF,EAAI,IAAOE,EAAI,IAEvE5+C,KAIR00D,aAAc9xD,GAEb,MAAM87C,EAAK1+C,KAAK68C,SAAU+B,EAAKh8C,EAAEi6C,SAMjC,OAJA6B,EAAI,IAAOE,EAAI,IACfF,EAAI,IAAOE,EAAI,IACfF,EAAI,IAAOE,EAAI,IAER5+C,KAIR6+C,aAAcC,EAAOC,EAAOC,GAM3B,OAJAF,EAAMmO,oBAAqBjtD,KAAM,GACjC++C,EAAMkO,oBAAqBjtD,KAAM,GACjCg/C,EAAMiO,oBAAqBjtD,KAAM,GAE1BA,KAIR20D,UAAW7V,EAAOC,EAAOC,GASxB,OAPAh/C,KAAK4I,IACJk2C,EAAMh/C,EAAGi/C,EAAMj/C,EAAGk/C,EAAMl/C,EAAG,EAC3Bg/C,EAAM/+C,EAAGg/C,EAAMh/C,EAAGi/C,EAAMj/C,EAAG,EAC3B++C,EAAM3+C,EAAG4+C,EAAM5+C,EAAG6+C,EAAM7+C,EAAG,EAC3B,EAAG,EAAG,EAAG,GAGHH,KAIR40D,gBAAiBhyD,GAIhB,MAAM87C,EAAK1+C,KAAK68C,SACV+B,EAAKh8C,EAAEi6C,SAEPjxC,EAAS,EAAIipD,GAAM5H,oBAAqBrqD,EAAG,GAAIN,SAC/CuJ,EAAS,EAAIgpD,GAAM5H,oBAAqBrqD,EAAG,GAAIN,SAC/CwyD,EAAS,EAAID,GAAM5H,oBAAqBrqD,EAAG,GAAIN,SAsBrD,OApBAo8C,EAAI,GAAME,EAAI,GAAMhzC,EACpB8yC,EAAI,GAAME,EAAI,GAAMhzC,EACpB8yC,EAAI,GAAME,EAAI,GAAMhzC,EACpB8yC,EAAI,GAAM,EAEVA,EAAI,GAAME,EAAI,GAAM/yC,EACpB6yC,EAAI,GAAME,EAAI,GAAM/yC,EACpB6yC,EAAI,GAAME,EAAI,GAAM/yC,EACpB6yC,EAAI,GAAM,EAEVA,EAAI,GAAME,EAAI,GAAMkW,EACpBpW,EAAI,GAAME,EAAI,GAAMkW,EACpBpW,EAAI,IAAOE,EAAI,IAAOkW,EACtBpW,EAAI,IAAO,EAEXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EAEJ1+C,KAIR+0D,sBAAuBvM,GAEbA,GAASA,EAAME,SAEvB/7C,QAAQu1B,MAAO,yGAIhB,MAAMwc,EAAK1+C,KAAK68C,SAEV/8C,EAAI0oD,EAAM1oD,EAAGC,EAAIyoD,EAAMzoD,EAAGI,EAAIqoD,EAAMroD,EACpCoB,EAAI8B,KAAKqH,IAAK5K,GAAK0B,EAAI6B,KAAKsH,IAAK7K,GACjC2B,EAAI4B,KAAKqH,IAAK3K,GAAKsU,EAAIhR,KAAKsH,IAAK5K,GACjCyD,EAAIH,KAAKqH,IAAKvK,GAAK03B,EAAIx0B,KAAKsH,IAAKxK,GAEvC,GAAqB,QAAhBqoD,EAAM9f,MAAkB,CAE5B,MAAM2W,EAAK99C,EAAIiC,EAAGwxD,EAAKzzD,EAAIs2B,EAAGynB,EAAK99C,EAAIgC,EAAGyxD,EAAKzzD,EAAIq2B,EAEnD6mB,EAAI,GAAMj9C,EAAI+B,EACdk7C,EAAI,IAAQj9C,EAAIo2B,EAChB6mB,EAAI,GAAMrqC,EAEVqqC,EAAI,GAAMsW,EAAK1V,EAAKjrC,EACpBqqC,EAAI,GAAMW,EAAK4V,EAAK5gD,EACpBqqC,EAAI,IAAQl9C,EAAIC,EAEhBi9C,EAAI,GAAMuW,EAAK5V,EAAKhrC,EACpBqqC,EAAI,GAAMY,EAAK0V,EAAK3gD,EACpBqqC,EAAI,IAAOn9C,EAAIE,OAET,GAAqB,QAAhB+mD,EAAM9f,MAAkB,CAEnC,MAAMwsB,EAAKzzD,EAAI+B,EAAG2xD,EAAK1zD,EAAIo2B,EAAGu9B,EAAK/gD,EAAI7Q,EAAGy+B,EAAK5tB,EAAIwjB,EAEnD6mB,EAAI,GAAMwW,EAAKjzB,EAAKzgC,EACpBk9C,EAAI,GAAM0W,EAAK5zD,EAAI2zD,EACnBzW,EAAI,GAAMn9C,EAAI8S,EAEdqqC,EAAI,GAAMn9C,EAAIs2B,EACd6mB,EAAI,GAAMn9C,EAAIiC,EACdk7C,EAAI,IAAQl9C,EAEZk9C,EAAI,GAAMyW,EAAK3zD,EAAI4zD,EACnB1W,EAAI,GAAMzc,EAAKizB,EAAK1zD,EACpBk9C,EAAI,IAAOn9C,EAAIE,OAET,GAAqB,QAAhB+mD,EAAM9f,MAAkB,CAEnC,MAAMwsB,EAAKzzD,EAAI+B,EAAG2xD,EAAK1zD,EAAIo2B,EAAGu9B,EAAK/gD,EAAI7Q,EAAGy+B,EAAK5tB,EAAIwjB,EAEnD6mB,EAAI,GAAMwW,EAAKjzB,EAAKzgC,EACpBk9C,EAAI,IAAQn9C,EAAIs2B,EAChB6mB,EAAI,GAAM0W,EAAKD,EAAK3zD,EAEpBk9C,EAAI,GAAMyW,EAAKC,EAAK5zD,EACpBk9C,EAAI,GAAMn9C,EAAIiC,EACdk7C,EAAI,GAAMzc,EAAKizB,EAAK1zD,EAEpBk9C,EAAI,IAAQn9C,EAAI8S,EAChBqqC,EAAI,GAAMl9C,EACVk9C,EAAI,IAAOn9C,EAAIE,OAET,GAAqB,QAAhB+mD,EAAM9f,MAAkB,CAEnC,MAAM2W,EAAK99C,EAAIiC,EAAGwxD,EAAKzzD,EAAIs2B,EAAGynB,EAAK99C,EAAIgC,EAAGyxD,EAAKzzD,EAAIq2B,EAEnD6mB,EAAI,GAAMj9C,EAAI+B,EACdk7C,EAAI,GAAMY,EAAKjrC,EAAI2gD,EACnBtW,EAAI,GAAMW,EAAKhrC,EAAI4gD,EAEnBvW,EAAI,GAAMj9C,EAAIo2B,EACd6mB,EAAI,GAAMuW,EAAK5gD,EAAIgrC,EACnBX,EAAI,GAAMsW,EAAK3gD,EAAIirC,EAEnBZ,EAAI,IAAQrqC,EACZqqC,EAAI,GAAMl9C,EAAIC,EACdi9C,EAAI,IAAOn9C,EAAIE,OAET,GAAqB,QAAhB+mD,EAAM9f,MAAkB,CAEnC,MAAM2sB,EAAK9zD,EAAIE,EAAG6zD,EAAK/zD,EAAI8S,EAAGkhD,EAAK/zD,EAAIC,EAAG+zD,EAAKh0D,EAAI6S,EAEnDqqC,EAAI,GAAMj9C,EAAI+B,EACdk7C,EAAI,GAAM8W,EAAKH,EAAKx9B,EACpB6mB,EAAI,GAAM6W,EAAK19B,EAAIy9B,EAEnB5W,EAAI,GAAM7mB,EACV6mB,EAAI,GAAMn9C,EAAIiC,EACdk7C,EAAI,IAAQl9C,EAAIgC,EAEhBk7C,EAAI,IAAQrqC,EAAI7Q,EAChBk7C,EAAI,GAAM4W,EAAKz9B,EAAI09B,EACnB7W,EAAI,IAAO2W,EAAKG,EAAK39B,OAEf,GAAqB,QAAhB2wB,EAAM9f,MAAkB,CAEnC,MAAM2sB,EAAK9zD,EAAIE,EAAG6zD,EAAK/zD,EAAI8S,EAAGkhD,EAAK/zD,EAAIC,EAAG+zD,EAAKh0D,EAAI6S,EAEnDqqC,EAAI,GAAMj9C,EAAI+B,EACdk7C,EAAI,IAAQ7mB,EACZ6mB,EAAI,GAAMrqC,EAAI7Q,EAEdk7C,EAAI,GAAM2W,EAAKx9B,EAAI29B,EACnB9W,EAAI,GAAMn9C,EAAIiC,EACdk7C,EAAI,GAAM4W,EAAKz9B,EAAI09B,EAEnB7W,EAAI,GAAM6W,EAAK19B,EAAIy9B,EACnB5W,EAAI,GAAMl9C,EAAIgC,EACdk7C,EAAI,IAAO8W,EAAK39B,EAAIw9B,EAerB,OAVA3W,EAAI,GAAM,EACVA,EAAI,GAAM,EACVA,EAAI,IAAO,EAGXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EAEJ1+C,KAIRy1D,2BAA4BlyD,GAE3B,OAAOvD,KAAK01D,QAASC,GAAOpyD,EAAGqyD,IAIhCjE,OAAQkE,EAAK3c,EAAQlqB,GAEpB,MAAM0vB,EAAK1+C,KAAK68C,SAyChB,OAvCAmK,GAAGzK,WAAYsZ,EAAK3c,GAEG,IAAlB8N,GAAG5J,aAIP4J,GAAG7mD,EAAI,GAIR6mD,GAAG93C,YACHqQ,GAAG0sC,aAAcj9B,EAAIg4B,IAEE,IAAlBznC,GAAG69B,aAImB,IAArB/5C,KAAKC,IAAK0rB,EAAG7uB,GAEjB6mD,GAAGlnD,GAAK,KAIRknD,GAAG7mD,GAAK,KAIT6mD,GAAG93C,YACHqQ,GAAG0sC,aAAcj9B,EAAIg4B,KAItBznC,GAAGrQ,YACHsQ,GAAGysC,aAAcjF,GAAIznC,IAErBm/B,EAAI,GAAMn/B,GAAGzf,EAAG4+C,EAAI,GAAMl/B,GAAG1f,EAAG4+C,EAAI,GAAMsI,GAAGlnD,EAC7C4+C,EAAI,GAAMn/B,GAAGxf,EAAG2+C,EAAI,GAAMl/B,GAAGzf,EAAG2+C,EAAI,GAAMsI,GAAGjnD,EAC7C2+C,EAAI,GAAMn/B,GAAGpf,EAAGu+C,EAAI,GAAMl/B,GAAGrf,EAAGu+C,EAAI,IAAOsI,GAAG7mD,EAEvCH,KAIRy8C,SAAU75C,EAAGZ,GAEZ,YAAWmX,IAANnX,GAEJ2K,QAAQoK,KAAM,oGACP/W,KAAKm/C,iBAAkBv8C,EAAGZ,IAI3BhC,KAAKm/C,iBAAkBn/C,KAAM4C,GAIrCw8C,YAAax8C,GAEZ,OAAO5C,KAAKm/C,iBAAkBv8C,EAAG5C,MAIlCm/C,iBAAkB59C,EAAGC,GAEpB,MAAM69C,EAAK99C,EAAEs7C,SACPyC,EAAK99C,EAAEq7C,SACP6B,EAAK1+C,KAAK68C,SAEV0C,EAAMF,EAAI,GAAKG,EAAMH,EAAI,GAAKI,EAAMJ,EAAI,GAAKyW,EAAMzW,EAAI,IACvDK,EAAML,EAAI,GAAKM,EAAMN,EAAI,GAAKO,EAAMP,EAAI,GAAK0W,EAAM1W,EAAI,IACvDQ,EAAMR,EAAI,GAAKS,EAAMT,EAAI,GAAKU,EAAMV,EAAI,IAAM2W,EAAM3W,EAAI,IACxD4W,EAAM5W,EAAI,GAAK6W,EAAM7W,EAAI,GAAK8W,EAAM9W,EAAI,IAAM+W,EAAM/W,EAAI,IAExDW,EAAMV,EAAI,GAAKW,EAAMX,EAAI,GAAKY,EAAMZ,EAAI,GAAK+W,EAAM/W,EAAI,IACvDa,EAAMb,EAAI,GAAKc,EAAMd,EAAI,GAAKe,EAAMf,EAAI,GAAKgX,EAAMhX,EAAI,IACvDgB,EAAMhB,EAAI,GAAKiB,EAAMjB,EAAI,GAAKkB,EAAMlB,EAAI,IAAMiX,EAAMjX,EAAI,IACxDkX,EAAMlX,EAAI,GAAKmX,EAAMnX,EAAI,GAAKoX,EAAMpX,EAAI,IAAMqX,EAAMrX,EAAI,IAsB9D,OApBAZ,EAAI,GAAMa,EAAMS,EAAMR,EAAMW,EAAMV,EAAMa,EAAMwV,EAAMU,EACpD9X,EAAI,GAAMa,EAAMU,EAAMT,EAAMY,EAAMX,EAAMc,EAAMuV,EAAMW,EACpD/X,EAAI,GAAMa,EAAMW,EAAMV,EAAMa,EAAMZ,EAAMe,EAAMsV,EAAMY,EACpDhY,EAAI,IAAOa,EAAM8W,EAAM7W,EAAM8W,EAAM7W,EAAM8W,EAAMT,EAAMa,EAErDjY,EAAI,GAAMgB,EAAMM,EAAML,EAAMQ,EAAMP,EAAMU,EAAMyV,EAAMS,EACpD9X,EAAI,GAAMgB,EAAMO,EAAMN,EAAMS,EAAMR,EAAMW,EAAMwV,EAAMU,EACpD/X,EAAI,GAAMgB,EAAMQ,EAAMP,EAAMU,EAAMT,EAAMY,EAAMuV,EAAMW,EACpDhY,EAAI,IAAOgB,EAAM2W,EAAM1W,EAAM2W,EAAM1W,EAAM2W,EAAMR,EAAMY,EAErDjY,EAAI,GAAMmB,EAAMG,EAAMF,EAAMK,EAAMJ,EAAMO,EAAM0V,EAAMQ,EACpD9X,EAAI,GAAMmB,EAAMI,EAAMH,EAAMM,EAAML,EAAMQ,EAAMyV,EAAMS,EACpD/X,EAAI,IAAOmB,EAAMK,EAAMJ,EAAMO,EAAMN,EAAMS,EAAMwV,EAAMU,EACrDhY,EAAI,IAAOmB,EAAMwW,EAAMvW,EAAMwW,EAAMvW,EAAMwW,EAAMP,EAAMW,EAErDjY,EAAI,GAAMuX,EAAMjW,EAAMkW,EAAM/V,EAAMgW,EAAM7V,EAAM8V,EAAMI,EACpD9X,EAAI,GAAMuX,EAAMhW,EAAMiW,EAAM9V,EAAM+V,EAAM5V,EAAM6V,EAAMK,EACpD/X,EAAI,IAAOuX,EAAM/V,EAAMgW,EAAM7V,EAAM8V,EAAM3V,EAAM4V,EAAMM,EACrDhY,EAAI,IAAOuX,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,EAAMH,EAAMO,EAE9C32D,KAIR4K,eAAgBuhB,GAEf,MAAMuyB,EAAK1+C,KAAK68C,SAOhB,OALA6B,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,KAAQvyB,EACtDuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,KAAQvyB,EACtDuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,KAAQvyB,EAAGuyB,EAAI,KAAQvyB,EACvDuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,IAAOvyB,EAAGuyB,EAAI,KAAQvyB,EAAGuyB,EAAI,KAAQvyB,EAEhDnsB,KAIR6qB,cAEC,MAAM6zB,EAAK1+C,KAAK68C,SAEVoB,EAAMS,EAAI,GAAKR,EAAMQ,EAAI,GAAKP,EAAMO,EAAI,GAAKyV,EAAMzV,EAAI,IACvDN,EAAMM,EAAI,GAAKL,EAAMK,EAAI,GAAKJ,EAAMI,EAAI,GAAK0V,EAAM1V,EAAI,IACvDH,EAAMG,EAAI,GAAKF,EAAME,EAAI,GAAKD,EAAMC,EAAI,IAAM2V,EAAM3V,EAAI,IAM9D,OALYA,EAAI,KAOZyV,EAAM7V,EAAME,EACXL,EAAMiW,EAAM5V,EACZ2V,EAAM9V,EAAMI,EACZP,EAAMkW,EAAM3V,EACZN,EAAME,EAAMgW,EACZnW,EAAMI,EAAM+V,GAZU3V,EAAI,KAe3BT,EAAMK,EAAM+V,EACXpW,EAAMmW,EAAM3V,EACZ0V,EAAM/V,EAAMK,EACZN,EAAMC,EAAMiW,EACZlW,EAAMiW,EAAM7V,EACZ4V,EAAM7V,EAAMC,GApByBG,EAAI,MAuB1CT,EAAMmW,EAAM5V,EACXP,EAAMI,EAAMgW,EACZF,EAAM/V,EAAMI,EACZN,EAAME,EAAMiW,EACZF,EAAM9V,EAAME,EACZL,EAAMkW,EAAM7V,GA5ByCG,EAAI,MA+B1DP,EAAME,EAAME,EACXN,EAAMK,EAAME,EACZP,EAAMI,EAAMI,EACZN,EAAMC,EAAMI,EACZN,EAAME,EAAMK,EACZP,EAAMI,EAAMC,GAOlBwC,YAEC,MAAMrC,EAAK1+C,KAAK68C,SAChB,IAAIhsC,EAUJ,OARAA,EAAM6tC,EAAI,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAM7tC,EAC5CA,EAAM6tC,EAAI,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAM7tC,EAC5CA,EAAM6tC,EAAI,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAM7tC,EAE5CA,EAAM6tC,EAAI,GAAKA,EAAI,GAAMA,EAAI,IAAMA,EAAI,IAAO7tC,EAC9CA,EAAM6tC,EAAI,GAAKA,EAAI,GAAMA,EAAI,IAAMA,EAAI,IAAO7tC,EAC9CA,EAAM6tC,EAAI,IAAMA,EAAI,IAAOA,EAAI,IAAMA,EAAI,IAAO7tC,EAEzC7Q,KAIR42D,YAAa92D,EAAGC,EAAGI,GAElB,MAAMu+C,EAAK1+C,KAAK68C,SAgBhB,OAdK/8C,EAAE+2D,WAENnY,EAAI,IAAO5+C,EAAEA,EACb4+C,EAAI,IAAO5+C,EAAEC,EACb2+C,EAAI,IAAO5+C,EAAEK,IAIbu+C,EAAI,IAAO5+C,EACX4+C,EAAI,IAAO3+C,EACX2+C,EAAI,IAAOv+C,GAILH,KAIRygD,SAGC,MAAM/B,EAAK1+C,KAAK68C,SAEfoB,EAAMS,EAAI,GAAKN,EAAMM,EAAI,GAAKH,EAAMG,EAAI,GAAK4V,EAAM5V,EAAI,GACvDR,EAAMQ,EAAI,GAAKL,EAAMK,EAAI,GAAKF,EAAME,EAAI,GAAK6V,EAAM7V,EAAI,GACvDP,EAAMO,EAAI,GAAKJ,EAAMI,EAAI,GAAKD,EAAMC,EAAI,IAAM8V,EAAM9V,EAAI,IACxDyV,EAAMzV,EAAI,IAAM0V,EAAM1V,EAAI,IAAM2V,EAAM3V,EAAI,IAAM+V,EAAM/V,EAAI,IAE1DgC,EAAMpC,EAAM+V,EAAME,EAAMH,EAAM3V,EAAM8V,EAAMH,EAAM5V,EAAMgW,EAAMnW,EAAMgW,EAAMG,EAAMlW,EAAME,EAAMiW,EAAMpW,EAAMI,EAAMgW,EAC5G9T,EAAMwT,EAAM1V,EAAM8V,EAAMpW,EAAMkW,EAAME,EAAMJ,EAAM3V,EAAMgW,EAAMtW,EAAMmW,EAAMG,EAAMrW,EAAMK,EAAMiW,EAAMvW,EAAMO,EAAMgW,EAC5G7T,EAAMzC,EAAMiW,EAAMG,EAAMJ,EAAM7V,EAAMiW,EAAMJ,EAAM9V,EAAMmW,EAAMtW,EAAMkW,EAAMI,EAAMrW,EAAME,EAAMoW,EAAMvW,EAAMI,EAAMmW,EAC5GqC,EAAM3C,EAAM7V,EAAME,EAAML,EAAMiW,EAAM5V,EAAM2V,EAAM9V,EAAMI,EAAMP,EAAMkW,EAAM3V,EAAMN,EAAME,EAAMgW,EAAMnW,EAAMI,EAAM+V,EAEvGxT,EAAM5C,EAAMyC,EAAMtC,EAAMuC,EAAMpC,EAAMqC,EAAM0T,EAAMwC,EAEtD,GAAa,IAARjW,EAAY,OAAO7gD,KAAK4I,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE/E,MAAMk4C,EAAS,EAAID,EAsBnB,OApBAnC,EAAI,GAAMgC,EAAMI,EAChBpC,EAAI,IAAQ0V,EAAM3V,EAAM6V,EAAMhW,EAAM+V,EAAMC,EAAMF,EAAM7V,EAAMiW,EAAMpW,EAAMiW,EAAMG,EAAMlW,EAAMC,EAAMkW,EAAMrW,EAAMK,EAAMgW,GAAQ3T,EAC1HpC,EAAI,IAAQL,EAAMgW,EAAMC,EAAMF,EAAM5V,EAAM8V,EAAMF,EAAM7V,EAAMgW,EAAMnW,EAAMiW,EAAME,EAAMlW,EAAME,EAAMkW,EAAMrW,EAAMI,EAAMiW,GAAQ3T,EAC1HpC,EAAI,IAAQJ,EAAME,EAAM8V,EAAMjW,EAAMI,EAAM6V,EAAMhW,EAAMC,EAAMgW,EAAMnW,EAAMK,EAAM8V,EAAMlW,EAAME,EAAMiW,EAAMpW,EAAMI,EAAMgW,GAAQ1T,EAE1HpC,EAAI,GAAMiC,EAAMG,EAChBpC,EAAI,IAAQP,EAAMkW,EAAMC,EAAMH,EAAM1V,EAAM6V,EAAMH,EAAM5V,EAAMiW,EAAMvW,EAAMoW,EAAMG,EAAMrW,EAAMI,EAAMkW,EAAMxW,EAAMQ,EAAMgW,GAAQ3T,EAC1HpC,EAAI,IAAQyV,EAAM3V,EAAM8V,EAAMpW,EAAMmW,EAAMC,EAAMH,EAAM5V,EAAMgW,EAAMtW,EAAMoW,EAAME,EAAMrW,EAAMK,EAAMkW,EAAMxW,EAAMO,EAAMiW,GAAQ3T,EAC1HpC,EAAI,IAAQR,EAAMO,EAAM6V,EAAMnW,EAAMK,EAAM8V,EAAMnW,EAAMI,EAAMgW,EAAMtW,EAAMQ,EAAM8V,EAAMrW,EAAMK,EAAMiW,EAAMvW,EAAMO,EAAMgW,GAAQ1T,EAE1HpC,EAAI,GAAMkC,EAAME,EAChBpC,EAAI,IAAQyV,EAAM7V,EAAMgW,EAAMnW,EAAMiW,EAAME,EAAMH,EAAM/V,EAAMoW,EAAMvW,EAAMmW,EAAMI,EAAMrW,EAAMC,EAAMqW,EAAMxW,EAAMK,EAAMmW,GAAQ3T,EAC1HpC,EAAI,KAASR,EAAMkW,EAAME,EAAMH,EAAM9V,EAAMiW,EAAMH,EAAM/V,EAAMmW,EAAMtW,EAAMmW,EAAMG,EAAMrW,EAAME,EAAMqW,EAAMxW,EAAMI,EAAMoW,GAAQ3T,EAC3HpC,EAAI,KAASP,EAAME,EAAMiW,EAAMpW,EAAMI,EAAMgW,EAAMnW,EAAMC,EAAMmW,EAAMtW,EAAMK,EAAMiW,EAAMrW,EAAME,EAAMoW,EAAMvW,EAAMI,EAAMmW,GAAQ1T,EAE3HpC,EAAI,IAAOoY,EAAMhW,EACjBpC,EAAI,KAASP,EAAMiW,EAAM7V,EAAM4V,EAAM7V,EAAMC,EAAM4V,EAAM/V,EAAMK,EAAMR,EAAMmW,EAAM3V,EAAMN,EAAMC,EAAMiW,EAAMpW,EAAMK,EAAM+V,GAAQvT,EAC3HpC,EAAI,KAASyV,EAAM9V,EAAME,EAAML,EAAMkW,EAAM7V,EAAM4V,EAAM/V,EAAMI,EAAMP,EAAMmW,EAAM5V,EAAMN,EAAME,EAAMiW,EAAMpW,EAAMI,EAAMgW,GAAQvT,EAC3HpC,EAAI,KAASR,EAAMI,EAAMC,EAAMJ,EAAME,EAAME,EAAMJ,EAAMC,EAAMI,EAAMP,EAAMK,EAAME,EAAMN,EAAME,EAAMK,EAAMR,EAAMI,EAAMI,GAAQqC,EAEpH9gD,KAIRqK,MAAOgG,GAEN,MAAMquC,EAAK1+C,KAAK68C,SACV/8C,EAAIuQ,EAAEvQ,EAAGC,EAAIsQ,EAAEtQ,EAAGI,EAAIkQ,EAAElQ,EAO9B,OALAu+C,EAAI,IAAO5+C,EAAG4+C,EAAI,IAAO3+C,EAAG2+C,EAAI,IAAOv+C,EACvCu+C,EAAI,IAAO5+C,EAAG4+C,EAAI,IAAO3+C,EAAG2+C,EAAI,IAAOv+C,EACvCu+C,EAAI,IAAO5+C,EAAG4+C,EAAI,IAAO3+C,EAAG2+C,EAAI,KAAQv+C,EACxCu+C,EAAI,IAAO5+C,EAAG4+C,EAAI,IAAO3+C,EAAG2+C,EAAI,KAAQv+C,EAEjCH,KAIRgxD,oBAEC,MAAMtS,EAAK1+C,KAAK68C,SAEVka,EAAWrY,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GACjEsY,EAAWtY,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GACjEuY,EAAWvY,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,IAAOA,EAAI,IAExE,OAAOr7C,KAAKyG,KAAMzG,KAAK2B,IAAK+xD,EAAUC,EAAUC,IAIjDC,gBAAiBp3D,EAAGC,EAAGI,GAWtB,OATAH,KAAK4I,IAEJ,EAAG,EAAG,EAAG9I,EACT,EAAG,EAAG,EAAGC,EACT,EAAG,EAAG,EAAGI,EACT,EAAG,EAAG,EAAG,GAIHH,KAIRm3D,cAAen+B,GAEd,MAAMv3B,EAAI4B,KAAKqH,IAAKsuB,GAAS7M,EAAI9oB,KAAKsH,IAAKquB,GAW3C,OATAh5B,KAAK4I,IAEJ,EAAG,EAAG,EAAG,EACT,EAAGnH,GAAK0qB,EAAG,EACX,EAAGA,EAAG1qB,EAAG,EACT,EAAG,EAAG,EAAG,GAIHzB,KAIRo3D,cAAep+B,GAEd,MAAMv3B,EAAI4B,KAAKqH,IAAKsuB,GAAS7M,EAAI9oB,KAAKsH,IAAKquB,GAW3C,OATAh5B,KAAK4I,IAEHnH,EAAG,EAAG0qB,EAAG,EACT,EAAG,EAAG,EAAG,GACRA,EAAG,EAAG1qB,EAAG,EACV,EAAG,EAAG,EAAG,GAIJzB,KAIRq3D,cAAer+B,GAEd,MAAMv3B,EAAI4B,KAAKqH,IAAKsuB,GAAS7M,EAAI9oB,KAAKsH,IAAKquB,GAW3C,OATAh5B,KAAK4I,IAEJnH,GAAK0qB,EAAG,EAAG,EACXA,EAAG1qB,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAIHzB,KAIRs3D,iBAAkB1gC,EAAM5sB,GAIvB,MAAMvI,EAAI4B,KAAKqH,IAAKV,GACdmiB,EAAI9oB,KAAKsH,IAAKX,GACdsD,EAAI,EAAI7L,EACR3B,EAAI82B,EAAK92B,EAAGC,EAAI62B,EAAK72B,EAAGI,EAAIy2B,EAAKz2B,EACjCihD,EAAK9zC,EAAIxN,EAAGuhD,EAAK/zC,EAAIvN,EAW3B,OATAC,KAAK4I,IAEJw4C,EAAKthD,EAAI2B,EAAG2/C,EAAKrhD,EAAIosB,EAAIhsB,EAAGihD,EAAKjhD,EAAIgsB,EAAIpsB,EAAG,EAC5CqhD,EAAKrhD,EAAIosB,EAAIhsB,EAAGkhD,EAAKthD,EAAI0B,EAAG4/C,EAAKlhD,EAAIgsB,EAAIrsB,EAAG,EAC5CshD,EAAKjhD,EAAIgsB,EAAIpsB,EAAGshD,EAAKlhD,EAAIgsB,EAAIrsB,EAAGwN,EAAInN,EAAIA,EAAIsB,EAAG,EAC/C,EAAG,EAAG,EAAG,GAIHzB,KAIRu3D,UAAWz3D,EAAGC,EAAGI,GAWhB,OATAH,KAAK4I,IAEJ9I,EAAG,EAAG,EAAG,EACT,EAAGC,EAAG,EAAG,EACT,EAAG,EAAGI,EAAG,EACT,EAAG,EAAG,EAAG,GAIHH,KAIRw3D,UAAW13D,EAAGC,EAAGI,GAWhB,OATAH,KAAK4I,IAEJ,EAAG7I,EAAGI,EAAG,EACTL,EAAG,EAAGK,EAAG,EACTL,EAAGC,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAIHC,KAIR01D,QAAS/1C,EAAU2oC,EAAYj+C,GAE9B,MAAMq0C,EAAK1+C,KAAK68C,SAEV/8C,EAAIwoD,EAAW/oC,GAAIxf,EAAIuoD,EAAW9oC,GAAIrf,EAAImoD,EAAWtB,GAAI12C,EAAIg4C,EAAWrB,GACxEtyB,EAAK70B,EAAIA,EAAG+0B,EAAK90B,EAAIA,EAAG03D,EAAKt3D,EAAIA,EACjCylD,EAAK9lD,EAAI60B,EAAIoxB,EAAKjmD,EAAI+0B,EAAImxB,EAAKlmD,EAAI23D,EACnC5R,EAAK9lD,EAAI80B,EAAIoxB,EAAKlmD,EAAI03D,EAAI3R,EAAK3lD,EAAIs3D,EACnCC,EAAKpnD,EAAIqkB,EAAIgjC,EAAKrnD,EAAIukB,EAAI+iC,EAAKtnD,EAAImnD,EAEnCnW,EAAKj3C,EAAMvK,EAAGyhD,EAAKl3C,EAAMtK,EAAGmtD,EAAK7iD,EAAMlK,EAsB7C,OApBAu+C,EAAI,IAAQ,GAAMmH,EAAKC,IAASxE,EAChC5C,EAAI,IAAQqH,EAAK6R,GAAOtW,EACxB5C,EAAI,IAAQsH,EAAK2R,GAAOrW,EACxB5C,EAAI,GAAM,EAEVA,EAAI,IAAQqH,EAAK6R,GAAOrW,EACxB7C,EAAI,IAAQ,GAAMkH,EAAKE,IAASvE,EAChC7C,EAAI,IAAQuH,EAAKyR,GAAOnW,EACxB7C,EAAI,GAAM,EAEVA,EAAI,IAAQsH,EAAK2R,GAAOzK,EACxBxO,EAAI,IAAQuH,EAAKyR,GAAOxK,EACxBxO,EAAI,KAAS,GAAMkH,EAAKC,IAASqH,EACjCxO,EAAI,IAAO,EAEXA,EAAI,IAAO/+B,EAAS7f,EACpB4+C,EAAI,IAAO/+B,EAAS5f,EACpB2+C,EAAI,IAAO/+B,EAASxf,EACpBu+C,EAAI,IAAO,EAEJ1+C,KAIR63D,UAAWl4C,EAAU2oC,EAAYj+C,GAEhC,MAAMq0C,EAAK1+C,KAAK68C,SAEhB,IAAIyE,EAAKuT,GAAMjsD,IAAK81C,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMp8C,SAChD,MAAMi/C,EAAKsT,GAAMjsD,IAAK81C,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMp8C,SAC5C4qD,EAAK2H,GAAMjsD,IAAK81C,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAAOp8C,SAGvCtC,KAAK6qB,cACN,IAAIy2B,GAAOA,GAEtB3hC,EAAS7f,EAAI4+C,EAAI,IACjB/+B,EAAS5f,EAAI2+C,EAAI,IACjB/+B,EAASxf,EAAIu+C,EAAI,IAGjBoZ,GAAIh1C,KAAM9iB,MAEV,MAAM+3D,EAAQ,EAAIzW,EACZ0W,EAAQ,EAAIzW,EACZ0W,EAAQ,EAAI/K,EAoBlB,OAlBA4K,GAAIjb,SAAU,IAAOkb,EACrBD,GAAIjb,SAAU,IAAOkb,EACrBD,GAAIjb,SAAU,IAAOkb,EAErBD,GAAIjb,SAAU,IAAOmb,EACrBF,GAAIjb,SAAU,IAAOmb,EACrBF,GAAIjb,SAAU,IAAOmb,EAErBF,GAAIjb,SAAU,IAAOob,EACrBH,GAAIjb,SAAU,IAAOob,EACrBH,GAAIjb,SAAU,KAAQob,EAEtB3P,EAAWY,sBAAuB4O,IAElCztD,EAAMvK,EAAIwhD,EACVj3C,EAAMtK,EAAIwhD,EACVl3C,EAAMlK,EAAI+sD,EAEHltD,KAIRk4D,gBAAiB15B,EAAM25B,EAAO15B,EAAK25B,EAAQC,EAAMC,QAEnCn/C,IAARm/C,GAEJ3rD,QAAQoK,KAAM,wGAIf,MAAM2nC,EAAK1+C,KAAK68C,SACV/8C,EAAI,EAAIu4D,GAASF,EAAQ35B,GACzBz+B,EAAI,EAAIs4D,GAAS55B,EAAM25B,GAEvB72D,GAAM42D,EAAQ35B,IAAW25B,EAAQ35B,GACjCh9B,GAAMi9B,EAAM25B,IAAa35B,EAAM25B,GAC/B32D,IAAQ62D,EAAMD,IAAWC,EAAMD,GAC/BhkD,GAAM,EAAIikD,EAAMD,GAASC,EAAMD,GAOrC,OALA3Z,EAAI,GAAM5+C,EAAG4+C,EAAI,GAAM,EAAGA,EAAI,GAAMn9C,EAAGm9C,EAAI,IAAO,EAClDA,EAAI,GAAM,EAAGA,EAAI,GAAM3+C,EAAG2+C,EAAI,GAAMl9C,EAAGk9C,EAAI,IAAO,EAClDA,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,IAAOj9C,EAAGi9C,EAAI,IAAOrqC,EACnDqqC,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,KAAS,EAAGA,EAAI,IAAO,EAE9C1+C,KAIRu4D,iBAAkB/5B,EAAM25B,EAAO15B,EAAK25B,EAAQC,EAAMC,GAEjD,MAAM5Z,EAAK1+C,KAAK68C,SACVvsC,EAAI,GAAQ6nD,EAAQ35B,GACpB/jB,EAAI,GAAQgkB,EAAM25B,GAClBv3D,EAAI,GAAQy3D,EAAMD,GAElBv4D,GAAMq4D,EAAQ35B,GAASluB,EACvBvQ,GAAM0+B,EAAM25B,GAAW39C,EACvBta,GAAMm4D,EAAMD,GAASx3D,EAO3B,OALA69C,EAAI,GAAM,EAAIpuC,EAAGouC,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,KAAS5+C,EACxD4+C,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAIjkC,EAAGikC,EAAI,GAAM,EAAGA,EAAI,KAAS3+C,EACxD2+C,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,KAAS,EAAI79C,EAAG69C,EAAI,KAASv+C,EAC3Du+C,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,IAAO,EAAGA,EAAI,IAAO,EAE5C1+C,KAIRnB,OAAQ2iD,GAEP,MAAM9C,EAAK1+C,KAAK68C,SACV+B,EAAK4C,EAAO3E,SAElB,IAAM,IAAIh9C,EAAI,EAAGA,EAAI,GAAIA,IAExB,GAAK6+C,EAAI7+C,KAAQ++C,EAAI/+C,GAAM,OAAO,EAInC,OAAO,EAIRsO,UAAWgrC,EAAOn9B,EAAS,GAE1B,IAAM,IAAInc,EAAI,EAAGA,EAAI,GAAIA,IAExBG,KAAK68C,SAAUh9C,GAAMs5C,EAAOt5C,EAAImc,GAIjC,OAAOhc,KAIR09C,QAASvE,EAAQ,GAAIn9B,EAAS,GAE7B,MAAM0iC,EAAK1+C,KAAK68C,SAsBhB,OApBA1D,EAAOn9B,GAAW0iC,EAAI,GACtBvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAE1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAE1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,GAAM0iC,EAAI,GAC1BvF,EAAOn9B,EAAS,IAAO0iC,EAAI,IAC3BvF,EAAOn9B,EAAS,IAAO0iC,EAAI,IAE3BvF,EAAOn9B,EAAS,IAAO0iC,EAAI,IAC3BvF,EAAOn9B,EAAS,IAAO0iC,EAAI,IAC3BvF,EAAOn9B,EAAS,IAAO0iC,EAAI,IAC3BvF,EAAOn9B,EAAS,IAAO0iC,EAAI,IAEpBvF,GAMT,MAAM0b,GAAsB,IAAIlK,GAC1BmN,GAAoB,IAAI5D,GACxByB,GAAsB,IAAIhL,GAAS,EAAG,EAAG,GACzCiL,GAAqB,IAAIjL,GAAS,EAAG,EAAG,GACxCprC,GAAmB,IAAIorC,GACvBnrC,GAAmB,IAAImrC,GACvB3D,GAAmB,IAAI2D,GAE7B,MAAM6N,GAELtyD,YAAapG,EAAI,EAAGC,EAAI,EAAGI,EAAI,EAAGuoC,EAAQ8vB,GAAMC,cAE/Cj5D,OAAOC,eAAgBO,KAAM,UAAW,CAAEL,OAAO,IAEjDK,KAAKuf,GAAKzf,EACVE,KAAKwf,GAAKzf,EACVC,KAAKgnD,GAAK7mD,EACVH,KAAK2oD,OAASjgB,EAIX5oC,QAEH,OAAOE,KAAKuf,GAITzf,MAAGH,GAENK,KAAKuf,GAAK5f,EACVK,KAAKqoD,oBAIFtoD,QAEH,OAAOC,KAAKwf,GAITzf,MAAGJ,GAENK,KAAKwf,GAAK7f,EACVK,KAAKqoD,oBAIFloD,QAEH,OAAOH,KAAKgnD,GAIT7mD,MAAGR,GAENK,KAAKgnD,GAAKrnD,EACVK,KAAKqoD,oBAIF3f,YAEH,OAAO1oC,KAAK2oD,OAITjgB,UAAO/oC,GAEVK,KAAK2oD,OAAShpD,EACdK,KAAKqoD,oBAINz/C,IAAK9I,EAAGC,EAAGI,EAAGuoC,GASb,OAPA1oC,KAAKuf,GAAKzf,EACVE,KAAKwf,GAAKzf,EACVC,KAAKgnD,GAAK7mD,EACVH,KAAK2oD,OAASjgB,GAAS1oC,KAAK2oD,OAE5B3oD,KAAKqoD,oBAEEroD,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,YAAalG,KAAKuf,GAAIvf,KAAKwf,GAAIxf,KAAKgnD,GAAIhnD,KAAK2oD,QAI9D7lC,KAAM0lC,GASL,OAPAxoD,KAAKuf,GAAKipC,EAAMjpC,GAChBvf,KAAKwf,GAAKgpC,EAAMhpC,GAChBxf,KAAKgnD,GAAKwB,EAAMxB,GAChBhnD,KAAK2oD,OAASH,EAAMG,OAEpB3oD,KAAKqoD,oBAEEroD,KAIRkpD,sBAAuBtmD,EAAG8lC,EAAO+f,GAEhC,MAAMzO,EAAQR,GAAUQ,MAIlB0E,EAAK97C,EAAEi6C,SACPsI,EAAMzG,EAAI,GAAK0G,EAAM1G,EAAI,GAAK2G,EAAM3G,EAAI,GACxC4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GACxC+G,EAAM/G,EAAI,GAAKgH,EAAMhH,EAAI,GAAKiH,EAAMjH,EAAI,IAI9C,OAFAhW,EAAQA,GAAS1oC,KAAK2oD,QAIrB,IAAK,MAEJ3oD,KAAKwf,GAAKnc,KAAKq1D,KAAM1e,EAAOqL,GAAO,EAAG,IAEjChiD,KAAKC,IAAK+hD,GAAQ,UAEtBrlD,KAAKuf,GAAKlc,KAAK8G,OAASq7C,EAAKG,GAC7B3lD,KAAKgnD,GAAK3jD,KAAK8G,OAASi7C,EAAKD,KAI7BnlD,KAAKuf,GAAKlc,KAAK8G,MAAOu7C,EAAKH,GAC3BvlD,KAAKgnD,GAAK,GAIX,MAED,IAAK,MAEJhnD,KAAKuf,GAAKlc,KAAKq1D,MAAQ1e,EAAOwL,GAAO,EAAG,IAEnCniD,KAAKC,IAAKkiD,GAAQ,UAEtBxlD,KAAKwf,GAAKnc,KAAK8G,MAAOk7C,EAAKM,GAC3B3lD,KAAKgnD,GAAK3jD,KAAK8G,MAAOm7C,EAAKC,KAI3BvlD,KAAKwf,GAAKnc,KAAK8G,OAASs7C,EAAKN,GAC7BnlD,KAAKgnD,GAAK,GAIX,MAED,IAAK,MAEJhnD,KAAKuf,GAAKlc,KAAKq1D,KAAM1e,EAAO0L,GAAO,EAAG,IAEjCriD,KAAKC,IAAKoiD,GAAQ,UAEtB1lD,KAAKwf,GAAKnc,KAAK8G,OAASs7C,EAAKE,GAC7B3lD,KAAKgnD,GAAK3jD,KAAK8G,OAASi7C,EAAKG,KAI7BvlD,KAAKwf,GAAK,EACVxf,KAAKgnD,GAAK3jD,KAAK8G,MAAOm7C,EAAKH,IAI5B,MAED,IAAK,MAEJnlD,KAAKwf,GAAKnc,KAAKq1D,MAAQ1e,EAAOyL,GAAO,EAAG,IAEnCpiD,KAAKC,IAAKmiD,GAAQ,UAEtBzlD,KAAKuf,GAAKlc,KAAK8G,MAAOu7C,EAAKC,GAC3B3lD,KAAKgnD,GAAK3jD,KAAK8G,MAAOm7C,EAAKH,KAI3BnlD,KAAKuf,GAAK,EACVvf,KAAKgnD,GAAK3jD,KAAK8G,OAASi7C,EAAKG,IAI9B,MAED,IAAK,MAEJvlD,KAAKgnD,GAAK3jD,KAAKq1D,KAAM1e,EAAOsL,GAAO,EAAG,IAEjCjiD,KAAKC,IAAKgiD,GAAQ,UAEtBtlD,KAAKuf,GAAKlc,KAAK8G,OAASq7C,EAAKD,GAC7BvlD,KAAKwf,GAAKnc,KAAK8G,OAASs7C,EAAKN,KAI7BnlD,KAAKuf,GAAK,EACVvf,KAAKwf,GAAKnc,KAAK8G,MAAOk7C,EAAKM,IAI5B,MAED,IAAK,MAEJ3lD,KAAKgnD,GAAK3jD,KAAKq1D,MAAQ1e,EAAOoL,GAAO,EAAG,IAEnC/hD,KAAKC,IAAK8hD,GAAQ,UAEtBplD,KAAKuf,GAAKlc,KAAK8G,MAAOu7C,EAAKH,GAC3BvlD,KAAKwf,GAAKnc,KAAK8G,MAAOk7C,EAAKF,KAI3BnlD,KAAKuf,GAAKlc,KAAK8G,OAASq7C,EAAKG,GAC7B3lD,KAAKwf,GAAK,GAIX,MAED,QAEC7S,QAAQoK,KAAM,uEAAyE2xB,GAQzF,OAJA1oC,KAAK2oD,OAASjgB,GAEE,IAAX+f,GAAmBzoD,KAAKqoD,oBAEtBroD,KAIR24D,kBAAmBp1D,EAAGmlC,EAAO+f,GAI5B,OAFAmQ,GAAQnD,2BAA4BlyD,GAE7BvD,KAAKkpD,sBAAuB0P,GAASlwB,EAAO+f,GAIpDoQ,eAAgBxoD,EAAGq4B,GAElB,OAAO1oC,KAAK4I,IAAKyH,EAAEvQ,EAAGuQ,EAAEtQ,EAAGsQ,EAAElQ,EAAGuoC,GAAS1oC,KAAK2oD,QAI/CmQ,QAASC,GAMR,OAFAC,GAAczQ,aAAcvoD,MAErBA,KAAK24D,kBAAmBK,GAAeD,GAI/Cl6D,OAAQ2pD,GAEP,OAASA,EAAMjpC,KAAOvf,KAAKuf,IAAUipC,EAAMhpC,KAAOxf,KAAKwf,IAAUgpC,EAAMxB,KAAOhnD,KAAKgnD,IAAUwB,EAAMG,SAAW3oD,KAAK2oD,OAIpHx6C,UAAWgrC,GASV,OAPAn5C,KAAKuf,GAAK45B,EAAO,GACjBn5C,KAAKwf,GAAK25B,EAAO,GACjBn5C,KAAKgnD,GAAK7N,EAAO,QACGhgC,IAAfggC,EAAO,KAAoBn5C,KAAK2oD,OAASxP,EAAO,IAErDn5C,KAAKqoD,oBAEEroD,KAIR09C,QAASvE,EAAQ,GAAIn9B,EAAS,GAO7B,OALAm9B,EAAOn9B,GAAWhc,KAAKuf,GACvB45B,EAAOn9B,EAAS,GAAMhc,KAAKwf,GAC3B25B,EAAOn9B,EAAS,GAAMhc,KAAKgnD,GAC3B7N,EAAOn9B,EAAS,GAAMhc,KAAK2oD,OAEpBxP,EAIR8f,UAAWC,GAEV,OAAKA,EAEGA,EAAetwD,IAAK5I,KAAKuf,GAAIvf,KAAKwf,GAAIxf,KAAKgnD,IAI3C,IAAI2D,GAAS3qD,KAAKuf,GAAIvf,KAAKwf,GAAIxf,KAAKgnD,IAM7C0D,UAAWv5B,GAIV,OAFAnxB,KAAKqoD,kBAAoBl3B,EAElBnxB,KAIRqoD,sBAIDmQ,GAAMC,aAAe,MACrBD,GAAMW,eAAiB,CAAE,MAAO,MAAO,MAAO,MAAO,MAAO,OAE5D,MAAMP,GAAwB,IAAI1E,GAC5B8E,GAA8B,IAAIjS,GAExC,MAAMqS,GAELlzD,cAEClG,KAAKq5D,KAAO,EAIbzwD,IAAK0wD,GAEJt5D,KAAKq5D,KAAO,GAAKC,EAAU,EAI5B1xC,OAAQ0xC,GAEPt5D,KAAKq5D,MAAQ,GAAKC,EAAU,EAI7BC,YAECv5D,KAAKq5D,MAAO,EAIbG,OAAQF,GAEPt5D,KAAKq5D,MAAQ,GAAKC,EAAU,EAI7BG,QAASH,GAERt5D,KAAKq5D,QAAY,GAAKC,EAAU,GAIjCI,aAEC15D,KAAKq5D,KAAO,EAIbzX,KAAM+X,GAEL,OAAuC,IAA9B35D,KAAKq5D,KAAOM,EAAON,OAM9B,IAAIO,GAAc,EAElB,MAAMC,GAAQ,IAAIlP,GACZmP,GAAM,IAAI/S,GACVgT,GAAQ,IAAI7F,GACZ8F,GAAU,IAAIrP,GAEdsP,GAAY,IAAItP,GAChBuP,GAAS,IAAIvP,GACbwP,GAAgB,IAAIpT,GAEpBqT,GAAS,IAAIzP,GAAS,EAAG,EAAG,GAC5B0P,GAAS,IAAI1P,GAAS,EAAG,EAAG,GAC5B2P,GAAS,IAAI3P,GAAS,EAAG,EAAG,GAE5B4P,GAAc,CAAEz6B,KAAM,SACtB06B,GAAgB,CAAE16B,KAAM,WAE9B,SAAS26B,KAERj7D,OAAOC,eAAgBO,KAAM,KAAM,CAAEL,MAAOi6D,OAE5C55D,KAAK4iD,KAAOpJ,GAAUG,eAEtB35C,KAAKuvB,KAAO,GACZvvB,KAAK8/B,KAAO,WAEZ9/B,KAAK06D,OAAS,KACd16D,KAAK6uD,SAAW,GAEhB7uD,KAAKgvB,GAAKyrC,GAASE,UAAUhxD,QAE7B,MAAMgW,EAAW,IAAIgrC,GACf3pC,EAAW,IAAIw3C,GACflQ,EAAa,IAAIvB,GACjB18C,EAAQ,IAAIsgD,GAAS,EAAG,EAAG,GAcjC3pC,EAAS0pC,WAZT,WAECpC,EAAWC,aAAcvnC,GAAU,MAWpCsnC,EAAWoC,WAPX,WAEC1pC,EAAS23C,kBAAmBrQ,OAAYnvC,GAAW,MAOpD3Z,OAAOo7D,iBAAkB56D,KAAM,CAC9B2f,SAAU,CACTk7C,cAAc,EACdC,YAAY,EACZn7D,MAAOggB,GAERqB,SAAU,CACT65C,cAAc,EACdC,YAAY,EACZn7D,MAAOqhB,GAERsnC,WAAY,CACXuS,cAAc,EACdC,YAAY,EACZn7D,MAAO2oD,GAERj+C,MAAO,CACNwwD,cAAc,EACdC,YAAY,EACZn7D,MAAO0K,GAER0wD,gBAAiB,CAChBp7D,MAAO,IAAIu0D,IAEZ8G,aAAc,CACbr7D,MAAO,IAAIq+C,MAIbh+C,KAAKwhD,OAAS,IAAI0S,GAClBl0D,KAAK+rD,YAAc,IAAImI,GAEvBl0D,KAAKgjD,iBAAmByX,GAASQ,wBACjCj7D,KAAKk7D,wBAAyB,EAE9Bl7D,KAAK25D,OAAS,IAAIP,GAClBp5D,KAAKuG,SAAU,EAEfvG,KAAKm7D,YAAa,EAClBn7D,KAAKo7D,eAAgB,EAErBp7D,KAAKq7D,eAAgB,EACrBr7D,KAAKs7D,YAAc,EAEnBt7D,KAAKu7D,WAAa,GAElBv7D,KAAKw7D,SAAW,GAIjBf,GAASE,UAAY,IAAIhQ,GAAS,EAAG,EAAG,GACxC8P,GAASQ,yBAA0B,EAEnCR,GAAS5hB,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ/K,GAAgBE,WAAa,CAE/E3yC,YAAau0D,GAEbgB,YAAY,EAEZC,eAAgB,aAChBC,cAAe,aAEf7W,aAAc,SAAWtD,GAEnBxhD,KAAKgjD,kBAAmBhjD,KAAK4jD,eAElC5jD,KAAKwhD,OAAOpC,YAAaoC,GAEzBxhD,KAAKwhD,OAAOqW,UAAW73D,KAAK2f,SAAU3f,KAAKsoD,WAAYtoD,KAAKqK,QAI7DygD,gBAAiB,SAAWvnD,GAI3B,OAFAvD,KAAKsoD,WAAWlJ,YAAa77C,GAEtBvD,MAIR47D,yBAA0B,SAAWhlC,EAAM5sB,GAI1ChK,KAAKsoD,WAAWU,iBAAkBpyB,EAAM5sB,IAIzC6xD,qBAAsB,SAAWrT,GAEhCxoD,KAAKsoD,WAAWC,aAAcC,GAAO,IAItCsT,sBAAuB,SAAWl5D,GAIjC5C,KAAKsoD,WAAWY,sBAAuBtmD,IAIxCm5D,0BAA2B,SAAWx4D,GAIrCvD,KAAKsoD,WAAWxlC,KAAMvf,IAIvBy4D,aAAc,SAAWplC,EAAM5sB,GAS9B,OAJA8vD,GAAI9Q,iBAAkBpyB,EAAM5sB,GAE5BhK,KAAKsoD,WAAW7L,SAAUqd,IAEnB95D,MAIRi8D,kBAAmB,SAAWrlC,EAAM5sB,GAUnC,OAJA8vD,GAAI9Q,iBAAkBpyB,EAAM5sB,GAE5BhK,KAAKsoD,WAAWlJ,YAAa0a,IAEtB95D,MAIRk8D,QAAS,SAAWlyD,GAEnB,OAAOhK,KAAKg8D,aAAc5B,GAAQpwD,IAInCmyD,QAAS,SAAWnyD,GAEnB,OAAOhK,KAAKg8D,aAAc3B,GAAQrwD,IAInCoyD,QAAS,SAAWpyD,GAEnB,OAAOhK,KAAKg8D,aAAc1B,GAAQtwD,IAInCqyD,gBAAiB,SAAWzlC,EAAMhtB,GASjC,OAJAiwD,GAAM/2C,KAAM8T,GAAOk0B,gBAAiB9qD,KAAKsoD,YAEzCtoD,KAAK2f,SAAS1W,IAAK4wD,GAAMjvD,eAAgBhB,IAElC5J,MAIRs8D,WAAY,SAAW1yD,GAEtB,OAAO5J,KAAKq8D,gBAAiBjC,GAAQxwD,IAItC2yD,WAAY,SAAW3yD,GAEtB,OAAO5J,KAAKq8D,gBAAiBhC,GAAQzwD,IAItC4yD,WAAY,SAAW5yD,GAEtB,OAAO5J,KAAKq8D,gBAAiB/B,GAAQ1wD,IAItC6yD,aAAc,SAAW1+B,GAExB,OAAOA,EAAO+mB,aAAc9kD,KAAK+rD,cAIlC2Q,aAAc,SAAW3+B,GAExB,OAAOA,EAAO+mB,aAAciV,GAAMj3C,KAAM9iB,KAAK+rD,aAActL,WAI5DkR,OAAQ,SAAW7xD,EAAGC,EAAGI,GAInBL,EAAE+2D,UAENmD,GAAQl3C,KAAMhjB,GAIdk6D,GAAQpxD,IAAK9I,EAAGC,EAAGI,GAIpB,MAAMu6D,EAAS16D,KAAK06D,OAEpB16D,KAAKuuD,mBAAmB,GAAM,GAE9B0L,GAAUlN,sBAAuB/sD,KAAK+rD,aAEjC/rD,KAAK28D,UAAY38D,KAAK48D,QAE1B7C,GAAMpI,OAAQsI,GAAWD,GAASh6D,KAAKgvB,IAIvC+qC,GAAMpI,OAAQqI,GAASC,GAAWj6D,KAAKgvB,IAIxChvB,KAAKsoD,WAAWY,sBAAuB6Q,IAElCW,IAEJX,GAAMnF,gBAAiB8F,EAAO3O,aAC9B+N,GAAI5Q,sBAAuB6Q,IAC3B/5D,KAAKsoD,WAAWlJ,YAAa0a,GAAIrZ,YAMnCx3C,IAAK,SAAW+kD,GAEf,GAAKz7B,UAAUjwB,OAAS,EAAI,CAE3B,IAAM,IAAIzC,EAAI,EAAGA,EAAI0yB,UAAUjwB,OAAQzC,IAEtCG,KAAKiJ,IAAKspB,UAAW1yB,IAItB,OAAOG,KAIR,OAAKguD,IAAWhuD,MAEf2M,QAAQu1B,MAAO,kEAAoE8rB,GAC5EhuD,OAIHguD,GAAUA,EAAOyN,YAEE,OAAlBzN,EAAO0M,QAEX1M,EAAO0M,OAAO55B,OAAQktB,GAIvBA,EAAO0M,OAAS16D,KAChBA,KAAK6uD,SAASvtD,KAAM0sD,GAEpBA,EAAO/U,cAAeshB,KAItB5tD,QAAQu1B,MAAO,gEAAiE8rB,GAI1EhuD,OAIR8gC,OAAQ,SAAWktB,GAElB,GAAKz7B,UAAUjwB,OAAS,EAAI,CAE3B,IAAM,IAAIzC,EAAI,EAAGA,EAAI0yB,UAAUjwB,OAAQzC,IAEtCG,KAAK8gC,OAAQvO,UAAW1yB,IAIzB,OAAOG,KAIR,MAAMmM,EAAQnM,KAAK6uD,SAAS5pC,QAAS+oC,GAWrC,OATiB,IAAZ7hD,IAEJ6hD,EAAO0M,OAAS,KAChB16D,KAAK6uD,SAASxmD,OAAQ8D,EAAO,GAE7B6hD,EAAO/U,cAAeuhB,KAIhBx6D,MAIRgf,MAAO,WAEN,IAAM,IAAInf,EAAI,EAAGA,EAAIG,KAAK6uD,SAASvsD,OAAQzC,IAAO,CAEjD,MAAMmuD,EAAShuD,KAAK6uD,SAAUhvD,GAE9BmuD,EAAO0M,OAAS,KAEhB1M,EAAO/U,cAAeuhB,IAMvB,OAFAx6D,KAAK6uD,SAASvsD,OAAS,EAEhBtC,MAKR68D,OAAQ,SAAW7O,GAsBlB,OAlBAhuD,KAAKuuD,mBAAmB,GAAM,GAE9BwL,GAAMj3C,KAAM9iB,KAAK+rD,aAActL,SAER,OAAlBuN,EAAO0M,SAEX1M,EAAO0M,OAAOnM,mBAAmB,GAAM,GAEvCwL,GAAMtd,SAAUuR,EAAO0M,OAAO3O,cAI/BiC,EAAOlJ,aAAciV,IAErB/L,EAAOO,mBAAmB,GAAO,GAEjCvuD,KAAKiJ,IAAK+kD,GAEHhuD,MAIR88D,cAAe,SAAW9oD,GAEzB,OAAOhU,KAAK+8D,oBAAqB,KAAM/oD,IAIxCgpD,gBAAiB,SAAWztC,GAE3B,OAAOvvB,KAAK+8D,oBAAqB,OAAQxtC,IAI1CwtC,oBAAqB,SAAWxtC,EAAM5vB,GAErC,GAAKK,KAAMuvB,KAAW5vB,EAAQ,OAAOK,KAErC,IAAM,IAAIH,EAAI,EAAGwO,EAAIrO,KAAK6uD,SAASvsD,OAAQzC,EAAIwO,EAAGxO,IAAO,CAExD,MACMmuD,EADQhuD,KAAK6uD,SAAUhvD,GACRk9D,oBAAqBxtC,EAAM5vB,GAEhD,QAAgBwZ,IAAX60C,EAEJ,OAAOA,IAUViP,iBAAkB,SAAW/jB,GAW5B,YATgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,8DACdmiC,EAAS,IAAIyR,IAId3qD,KAAKuuD,mBAAmB,GAAM,GAEvBrV,EAAO6T,sBAAuB/sD,KAAK+rD,cAI3CmR,mBAAoB,SAAWhkB,GAa9B,YAXgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,gEACdmiC,EAAS,IAAI6N,IAId/mD,KAAKuuD,mBAAmB,GAAM,GAE9BvuD,KAAK+rD,YAAY8L,UAAWoC,GAAW/gB,EAAQghB,IAExChhB,GAIRikB,cAAe,SAAWjkB,GAazB,YAXgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,2DACdmiC,EAAS,IAAIyR,IAId3qD,KAAKuuD,mBAAmB,GAAM,GAE9BvuD,KAAK+rD,YAAY8L,UAAWoC,GAAWE,GAAejhB,GAE/CA,GAIRkkB,kBAAmB,SAAWlkB,QAEb//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,+DACdmiC,EAAS,IAAIyR,IAId3qD,KAAKuuD,mBAAmB,GAAM,GAE9B,MAAM/qD,EAAIxD,KAAK+rD,YAAYlP,SAE3B,OAAO3D,EAAOtwC,IAAKpF,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAO0L,aAI9CmuD,QAAS,aAETC,SAAU,SAAWnsC,GAEpBA,EAAUnxB,MAEV,MAAM6uD,EAAW7uD,KAAK6uD,SAEtB,IAAM,IAAIhvD,EAAI,EAAGwO,EAAIwgD,EAASvsD,OAAQzC,EAAIwO,EAAGxO,IAE5CgvD,EAAUhvD,GAAIy9D,SAAUnsC,IAM1BosC,gBAAiB,SAAWpsC,GAE3B,IAAsB,IAAjBnxB,KAAKuG,QAAoB,OAE9B4qB,EAAUnxB,MAEV,MAAM6uD,EAAW7uD,KAAK6uD,SAEtB,IAAM,IAAIhvD,EAAI,EAAGwO,EAAIwgD,EAASvsD,OAAQzC,EAAIwO,EAAGxO,IAE5CgvD,EAAUhvD,GAAI09D,gBAAiBpsC,IAMjCqsC,kBAAmB,SAAWrsC,GAE7B,MAAMupC,EAAS16D,KAAK06D,OAEJ,OAAXA,IAEJvpC,EAAUupC,GAEVA,EAAO8C,kBAAmBrsC,KAM5ByyB,aAAc,WAEb5jD,KAAKwhD,OAAOkU,QAAS11D,KAAK2f,SAAU3f,KAAKsoD,WAAYtoD,KAAKqK,OAE1DrK,KAAKk7D,wBAAyB,GAI/BuC,kBAAmB,SAAWC,GAExB19D,KAAKgjD,kBAAmBhjD,KAAK4jD,gBAE7B5jD,KAAKk7D,wBAA0BwC,KAEd,OAAhB19D,KAAK06D,OAET16D,KAAK+rD,YAAYjpC,KAAM9iB,KAAKwhD,QAI5BxhD,KAAK+rD,YAAY5M,iBAAkBn/C,KAAK06D,OAAO3O,YAAa/rD,KAAKwhD,QAIlExhD,KAAKk7D,wBAAyB,EAE9BwC,GAAQ,GAMT,MAAM7O,EAAW7uD,KAAK6uD,SAEtB,IAAM,IAAIhvD,EAAI,EAAGwO,EAAIwgD,EAASvsD,OAAQzC,EAAIwO,EAAGxO,IAE5CgvD,EAAUhvD,GAAI49D,kBAAmBC,IAMnCnP,kBAAmB,SAAWoP,EAAeC,GAE5C,MAAMlD,EAAS16D,KAAK06D,OAsBpB,IApBuB,IAAlBiD,GAAqC,OAAXjD,GAE9BA,EAAOnM,mBAAmB,GAAM,GAI5BvuD,KAAKgjD,kBAAmBhjD,KAAK4jD,eAEb,OAAhB5jD,KAAK06D,OAET16D,KAAK+rD,YAAYjpC,KAAM9iB,KAAKwhD,QAI5BxhD,KAAK+rD,YAAY5M,iBAAkBn/C,KAAK06D,OAAO3O,YAAa/rD,KAAKwhD,SAM1C,IAAnBoc,EAA0B,CAE9B,MAAM/O,EAAW7uD,KAAK6uD,SAEtB,IAAM,IAAIhvD,EAAI,EAAGwO,EAAIwgD,EAASvsD,OAAQzC,EAAIwO,EAAGxO,IAE5CgvD,EAAUhvD,GAAI0uD,mBAAmB,GAAO,KAQ3Cl5C,OAAQ,SAAWyuC,GAGlB,MAAMC,OAA0B5qC,IAAT2qC,GAAsC,iBAATA,EAE9CG,EAAS,GAKVF,IAGJD,EAAO,CACN+Z,WAAY,GACZC,UAAW,GACX9Z,SAAU,GACVK,OAAQ,GACR0Z,OAAQ,GACRC,UAAW,GACXzC,WAAY,IAGbtX,EAAOC,SAAW,CACjBb,QAAS,IACTvjB,KAAM,SACNqkB,UAAW,oBAOb,MAAM6J,EAAS,GA8Bf,SAASiQ,EAAWC,EAASxwC,GAQ5B,YANiCvU,IAA5B+kD,EAASxwC,EAAQk1B,QAErBsb,EAASxwC,EAAQk1B,MAASl1B,EAAQrY,OAAQyuC,IAIpCp2B,EAAQk1B,KAIhB,GAxCAoL,EAAOpL,KAAO5iD,KAAK4iD,KACnBoL,EAAOluB,KAAO9/B,KAAK8/B,KAEA,KAAd9/B,KAAKuvB,OAAcy+B,EAAOz+B,KAAOvvB,KAAKuvB,OAClB,IAApBvvB,KAAKm7D,aAAsBnN,EAAOmN,YAAa,IACxB,IAAvBn7D,KAAKo7D,gBAAyBpN,EAAOoN,eAAgB,IACpC,IAAjBp7D,KAAKuG,UAAoBynD,EAAOznD,SAAU,IACnB,IAAvBvG,KAAKq7D,gBAA0BrN,EAAOqN,eAAgB,GACjC,IAArBr7D,KAAKs7D,cAAoBtN,EAAOsN,YAAct7D,KAAKs7D,aACf,OAApC9lD,KAAK2oD,UAAWn+D,KAAKw7D,YAAsBxN,EAAOwN,SAAWx7D,KAAKw7D,UAEvExN,EAAO2L,OAAS35D,KAAK25D,OAAON,KAC5BrL,EAAOxM,OAASxhD,KAAKwhD,OAAO9D,WAEG,IAA1B19C,KAAKgjD,mBAA6BgL,EAAOhL,kBAAmB,GAI5DhjD,KAAKo+D,kBAETpQ,EAAOluB,KAAO,gBACdkuB,EAAOV,MAAQttD,KAAKstD,MACpBU,EAAOqQ,eAAiBr+D,KAAKq+D,eAAehpD,UAkBxCrV,KAAKs+D,QAAUt+D,KAAKu+D,QAAUv+D,KAAKw+D,SAAW,CAElDxQ,EAAOQ,SAAWyP,EAAWna,EAAK+Z,WAAY79D,KAAKwuD,UAEnD,MAAMiQ,EAAaz+D,KAAKwuD,SAASiQ,WAEjC,QAAoBtlD,IAAfslD,QAAkDtlD,IAAtBslD,EAAWV,OAAuB,CAElE,MAAMA,EAASU,EAAWV,OAE1B,GAAKnoD,MAAMC,QAASkoD,GAEnB,IAAM,IAAIl+D,EAAI,EAAGwO,EAAI0vD,EAAOz7D,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAM6+D,EAAQX,EAAQl+D,GAEtBo+D,EAAWna,EAAKia,OAAQW,QAMzBT,EAAWna,EAAKia,OAAQA,IAuB3B,GAfK/9D,KAAK2+D,gBAET3Q,EAAO4Q,SAAW5+D,KAAK4+D,SACvB5Q,EAAO6Q,WAAa7+D,KAAK6+D,WAAWnhB,eAEbvkC,IAAlBnZ,KAAK8+D,WAETb,EAAWna,EAAKka,UAAWh+D,KAAK8+D,UAEhC9Q,EAAO8Q,SAAW9+D,KAAK8+D,SAASlc,YAMXzpC,IAAlBnZ,KAAK++D,SAET,GAAKnpD,MAAMC,QAAS7V,KAAK++D,UAAa,CAErC,MAAMC,EAAQ,GAEd,IAAM,IAAIn/D,EAAI,EAAGwO,EAAIrO,KAAK++D,SAASz8D,OAAQzC,EAAIwO,EAAGxO,IAEjDm/D,EAAM19D,KAAM28D,EAAWna,EAAKga,UAAW99D,KAAK++D,SAAUl/D,KAIvDmuD,EAAO+Q,SAAWC,OAIlBhR,EAAO+Q,SAAWd,EAAWna,EAAKga,UAAW99D,KAAK++D,UAQpD,GAAK/+D,KAAK6uD,SAASvsD,OAAS,EAAI,CAE/B0rD,EAAOa,SAAW,GAElB,IAAM,IAAIhvD,EAAI,EAAGA,EAAIG,KAAK6uD,SAASvsD,OAAQzC,IAE1CmuD,EAAOa,SAASvtD,KAAMtB,KAAK6uD,SAAUhvD,GAAIwV,OAAQyuC,GAAOkK,QAQ1D,GAAKhuD,KAAKu7D,WAAWj5D,OAAS,EAAI,CAEjC0rD,EAAOuN,WAAa,GAEpB,IAAM,IAAI17D,EAAI,EAAGA,EAAIG,KAAKu7D,WAAWj5D,OAAQzC,IAAO,CAEnD,MAAMo/D,EAAYj/D,KAAKu7D,WAAY17D,GAEnCmuD,EAAOuN,WAAWj6D,KAAM28D,EAAWna,EAAKyX,WAAY0D,KAMtD,GAAKlb,EAAe,CAEnB,MAAM8Z,EAAaqB,EAAkBpb,EAAK+Z,YACpCC,EAAYoB,EAAkBpb,EAAKga,WACnC9Z,EAAWkb,EAAkBpb,EAAKE,UAClCK,EAAS6a,EAAkBpb,EAAKO,QAChC0Z,EAASmB,EAAkBpb,EAAKia,QAChCC,EAAYkB,EAAkBpb,EAAKka,WACnCzC,EAAa2D,EAAkBpb,EAAKyX,YAErCsC,EAAWv7D,OAAS,IAAI2hD,EAAO4Z,WAAaA,GAC5CC,EAAUx7D,OAAS,IAAI2hD,EAAO6Z,UAAYA,GAC1C9Z,EAAS1hD,OAAS,IAAI2hD,EAAOD,SAAWA,GACxCK,EAAO/hD,OAAS,IAAI2hD,EAAOI,OAASA,GACpC0Z,EAAOz7D,OAAS,IAAI2hD,EAAO8Z,OAASA,GACpCC,EAAU17D,OAAS,IAAI2hD,EAAO+Z,UAAYA,GAC1CzC,EAAWj5D,OAAS,IAAI2hD,EAAOsX,WAAaA,GAMlD,OAFAtX,EAAO+J,OAASA,EAET/J,EAKP,SAASib,EAAkB1iD,GAE1B,MAAM2iD,EAAS,GACf,IAAM,MAAMh5D,KAAOqW,EAAQ,CAE1B,MAAMjc,EAAOic,EAAOrW,UACb5F,EAAK2jD,SACZib,EAAO79D,KAAMf,GAId,OAAO4+D,IAMTx1D,MAAO,SAAWy1D,GAEjB,OAAO,IAAIp/D,KAAKkG,aAAc4c,KAAM9iB,KAAMo/D,IAI3Ct8C,KAAM,SAAW+gC,EAAQub,GAAY,GA4BpC,GA1BAp/D,KAAKuvB,KAAOs0B,EAAOt0B,KAEnBvvB,KAAKgvB,GAAGlM,KAAM+gC,EAAO70B,IAErBhvB,KAAK2f,SAASmD,KAAM+gC,EAAOlkC,UAC3B3f,KAAKghB,SAAS0nB,MAAQmb,EAAO7iC,SAAS0nB,MACtC1oC,KAAKsoD,WAAWxlC,KAAM+gC,EAAOyE,YAC7BtoD,KAAKqK,MAAMyY,KAAM+gC,EAAOx5C,OAExBrK,KAAKwhD,OAAO1+B,KAAM+gC,EAAOrC,QACzBxhD,KAAK+rD,YAAYjpC,KAAM+gC,EAAOkI,aAE9B/rD,KAAKgjD,iBAAmBa,EAAOb,iBAC/BhjD,KAAKk7D,uBAAyBrX,EAAOqX,uBAErCl7D,KAAK25D,OAAON,KAAOxV,EAAO8V,OAAON,KACjCr5D,KAAKuG,QAAUs9C,EAAOt9C,QAEtBvG,KAAKm7D,WAAatX,EAAOsX,WACzBn7D,KAAKo7D,cAAgBvX,EAAOuX,cAE5Bp7D,KAAKq7D,cAAgBxX,EAAOwX,cAC5Br7D,KAAKs7D,YAAczX,EAAOyX,YAE1Bt7D,KAAKw7D,SAAWhmD,KAAKC,MAAOD,KAAK2oD,UAAWta,EAAO2X,YAEhC,IAAd4D,EAEJ,IAAM,IAAIv/D,EAAI,EAAGA,EAAIgkD,EAAOgL,SAASvsD,OAAQzC,IAAO,CAEnD,MAAMqf,EAAQ2kC,EAAOgL,SAAUhvD,GAC/BG,KAAKiJ,IAAKiW,EAAMvV,SAMlB,OAAO3J,QAMT,MAAMq/D,GAAyB,IAAI1U,GAC7B2U,GAAyB,IAAI3U,GAC7B4U,GAA8B,IAAIvhB,GAExC,MAAMwhB,GAELt5D,YAAasxB,EAAQ83B,GAEpB9vD,OAAOC,eAAgBO,KAAM,UAAW,CAAEL,OAAO,IAIjDK,KAAKw3B,YAAsBre,IAAXqe,EAAyBA,EAAS,IAAImzB,GAAS,EAAG,EAAG,GACrE3qD,KAAKsvD,cAA0Bn2C,IAAbm2C,EAA2BA,EAAW,EAIzD1mD,IAAK4uB,EAAQ83B,GAKZ,OAHAtvD,KAAKw3B,OAAO1U,KAAM0U,GAClBx3B,KAAKsvD,SAAWA,EAETtvD,KAIRy/D,cAAe3/D,EAAGC,EAAGI,EAAGmQ,GAKvB,OAHAtQ,KAAKw3B,OAAO5uB,IAAK9I,EAAGC,EAAGI,GACvBH,KAAKsvD,SAAWh/C,EAETtQ,KAIR0/D,8BAA+BloC,EAAQvnB,GAKtC,OAHAjQ,KAAKw3B,OAAO1U,KAAM0U,GAClBx3B,KAAKsvD,UAAar/C,EAAMyQ,IAAK1gB,KAAKw3B,QAE3Bx3B,KAIR2/D,sBAAuBp+D,EAAGC,EAAGC,GAE5B,MAAM+1B,EAAS6nC,GAAS9iB,WAAY96C,EAAGD,GAAIwwB,MAAOstC,GAAS/iB,WAAYh7C,EAAGC,IAAM0N,YAMhF,OAFAlP,KAAK0/D,8BAA+BloC,EAAQj2B,GAErCvB,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAMusC,GAKL,OAHArvD,KAAKw3B,OAAO1U,KAAMusC,EAAM73B,QACxBx3B,KAAKsvD,SAAWD,EAAMC,SAEftvD,KAIRkP,YAIC,MAAM0wD,EAAsB,EAAM5/D,KAAKw3B,OAAOl1B,SAI9C,OAHAtC,KAAKw3B,OAAO5sB,eAAgBg1D,GAC5B5/D,KAAKsvD,UAAYsQ,EAEV5/D,KAIRm9C,SAKC,OAHAn9C,KAAKsvD,WAAc,EACnBtvD,KAAKw3B,OAAO2lB,SAELn9C,KAIRmwD,gBAAiBlgD,GAEhB,OAAOjQ,KAAKw3B,OAAO9W,IAAKzQ,GAAUjQ,KAAKsvD,SAIxCuQ,iBAAkB3Q,GAEjB,OAAOlvD,KAAKmwD,gBAAiBjB,EAAO3kD,QAAW2kD,EAAOj1C,OAIvD6lD,aAAc7vD,EAAOipC,GASpB,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,uDACdmiC,EAAS,IAAIyR,IAIPzR,EAAOp2B,KAAM9iB,KAAKw3B,QAAS5sB,gBAAkB5K,KAAKmwD,gBAAiBlgD,IAAUhH,IAAKgH,GAI1F8vD,cAAezwD,EAAM4pC,QAEJ//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,wDACdmiC,EAAS,IAAIyR,IAId,MAAMp0B,EAAYjnB,EAAK8kB,MAAOirC,IAExB3vD,EAAc1P,KAAKw3B,OAAO9W,IAAK6V,GAErC,GAAqB,IAAhB7mB,EAGJ,OAA4C,IAAvC1P,KAAKmwD,gBAAiB7gD,EAAK9O,OAExB04C,EAAOp2B,KAAMxT,EAAK9O,YAK1B,EAID,MAAM8M,IAAQgC,EAAK9O,MAAMkgB,IAAK1gB,KAAKw3B,QAAWx3B,KAAKsvD,UAAa5/C,EAEhE,OAAKpC,EAAI,GAAKA,EAAI,OAAlB,EAMO4rC,EAAOp2B,KAAMyT,GAAY3rB,eAAgB0C,GAAIrE,IAAKqG,EAAK9O,OAI/Dw/D,eAAgB1wD,GAIf,MAAM2wD,EAAYjgE,KAAKmwD,gBAAiB7gD,EAAK9O,OACvC0/D,EAAUlgE,KAAKmwD,gBAAiB7gD,EAAK7O,KAE3C,OAASw/D,EAAY,GAAKC,EAAU,GAASA,EAAU,GAAKD,EAAY,EAIzEjR,cAAed,GAEd,OAAOA,EAAIkB,gBAAiBpvD,MAI7BivD,iBAAkBC,GAEjB,OAAOA,EAAOE,gBAAiBpvD,MAIhCmgE,cAAejnB,GASd,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,wDACdmiC,EAAS,IAAIyR,IAIPzR,EAAOp2B,KAAM9iB,KAAKw3B,QAAS5sB,gBAAkB5K,KAAKsvD,UAI1DxK,aAActD,EAAQ4e,GAErB,MAAMpF,EAAeoF,GAAwBb,GAAcve,gBAAiBQ,GAEtE6e,EAAiBrgE,KAAKmgE,cAAed,IAAWva,aAActD,GAE9DhqB,EAASx3B,KAAKw3B,OAAOolB,aAAcoe,GAAe9rD,YAIxD,OAFAlP,KAAKsvD,UAAa+Q,EAAe3/C,IAAK8W,GAE/Bx3B,KAIRuS,UAAWyJ,GAIV,OAFAhc,KAAKsvD,UAAYtzC,EAAO0E,IAAK1gB,KAAKw3B,QAE3Bx3B,KAIRnB,OAAQwwD,GAEP,OAAOA,EAAM73B,OAAO34B,OAAQmB,KAAKw3B,SAAc63B,EAAMC,WAAatvD,KAAKsvD,UAMzE,MAAMgR,GAAsB,IAAI3V,GAC1B4V,GAAsB,IAAI5V,GAC1B6V,GAAsB,IAAI7V,GAC1B8V,GAAoB,IAAI9V,GAExB+V,GAAqB,IAAI/V,GACzBgW,GAAqB,IAAIhW,GACzBiW,GAAqB,IAAIjW,GACzBkW,GAAqB,IAAIlW,GACzBmW,GAAqB,IAAInW,GACzBoW,GAAqB,IAAIpW,GAE/B,MAAMxhC,GAELjjB,YAAa3E,EAAGC,EAAGC,GAElBzB,KAAKuB,OAAY4X,IAAN5X,EAAoBA,EAAI,IAAIopD,GACvC3qD,KAAKwB,OAAY2X,IAAN3X,EAAoBA,EAAI,IAAImpD,GACvC3qD,KAAKyB,OAAY0X,IAAN1X,EAAoBA,EAAI,IAAIkpD,GAIxC5kD,iBAAkBxE,EAAGC,EAAGC,EAAGy3C,QAEV//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,uDACdmiC,EAAS,IAAIyR,IAIdzR,EAAOqD,WAAY96C,EAAGD,GACtB8+D,GAAM/jB,WAAYh7C,EAAGC,GACrB03C,EAAOlnB,MAAOsuC,IAEd,MAAMU,EAAiB9nB,EAAOkE,WAC9B,OAAK4jB,EAAiB,EAEd9nB,EAAOtuC,eAAgB,EAAIvH,KAAKyG,KAAMk3D,IAIvC9nB,EAAOtwC,IAAK,EAAG,EAAG,GAM1B7C,oBAAqBkK,EAAO1O,EAAGC,EAAGC,EAAGy3C,GAEpConB,GAAM/jB,WAAY96C,EAAGF,GACrBg/D,GAAMhkB,WAAY/6C,EAAGD,GACrBi/D,GAAMjkB,WAAYtsC,EAAO1O,GAEzB,MAAM0/D,EAAQX,GAAM5/C,IAAK4/C,IACnBY,EAAQZ,GAAM5/C,IAAK6/C,IACnBY,EAAQb,GAAM5/C,IAAK8/C,IACnBY,EAAQb,GAAM7/C,IAAK6/C,IACnBc,EAAQd,GAAM7/C,IAAK8/C,IAEnBc,EAAUL,EAAQG,EAAQF,EAAQA,EAUxC,QARgB/nD,IAAX+/B,IAEJvsC,QAAQoK,KAAM,0DACdmiC,EAAS,IAAIyR,IAKC,IAAV2W,EAIJ,OAAOpoB,EAAOtwC,KAAO,GAAK,GAAK,GAIhC,MAAM24D,EAAW,EAAID,EACfntD,GAAMitD,EAAQD,EAAQD,EAAQG,GAAUE,EACxClxD,GAAM4wD,EAAQI,EAAQH,EAAQC,GAAUI,EAG9C,OAAOroB,EAAOtwC,IAAK,EAAIuL,EAAI9D,EAAGA,EAAG8D,GAIlCpO,qBAAsBkK,EAAO1O,EAAGC,EAAGC,GAIlC,OAFAzB,KAAKwhE,aAAcvxD,EAAO1O,EAAGC,EAAGC,EAAGg/D,IAE1BA,GAAI3gE,GAAK,GAAS2gE,GAAI1gE,GAAK,GAAW0gE,GAAI3gE,EAAI2gE,GAAI1gE,GAAO,EAInEgG,aAAckK,EAAOzL,EAAIC,EAAIg9D,EAAIC,EAAKC,EAAKC,EAAK1oB,GAS/C,OAPAl5C,KAAKwhE,aAAcvxD,EAAOzL,EAAIC,EAAIg9D,EAAIhB,IAEtCvnB,EAAOtwC,IAAK,EAAG,GACfswC,EAAOoD,gBAAiBolB,EAAKjB,GAAI3gE,GACjCo5C,EAAOoD,gBAAiBqlB,EAAKlB,GAAI1gE,GACjCm5C,EAAOoD,gBAAiBslB,EAAKnB,GAAItgE,GAE1B+4C,EAIRnzC,qBAAsBxE,EAAGC,EAAGC,EAAG80B,GAM9B,OAJA+pC,GAAM/jB,WAAY96C,EAAGD,GACrB++D,GAAMhkB,WAAYh7C,EAAGC,GAGZ8+D,GAAMtuC,MAAOuuC,IAAQ7/C,IAAK6V,GAAc,EAIlD3tB,IAAKrH,EAAGC,EAAGC,GAMV,OAJAzB,KAAKuB,EAAEuhB,KAAMvhB,GACbvB,KAAKwB,EAAEshB,KAAMthB,GACbxB,KAAKyB,EAAEqhB,KAAMrhB,GAENzB,KAIR6hE,wBAAyBrU,EAAQsU,EAAIC,EAAIC,GAMxC,OAJAhiE,KAAKuB,EAAEuhB,KAAM0qC,EAAQsU,IACrB9hE,KAAKwB,EAAEshB,KAAM0qC,EAAQuU,IACrB/hE,KAAKyB,EAAEqhB,KAAM0qC,EAAQwU,IAEdhiE,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAMyJ,GAML,OAJAvsB,KAAKuB,EAAEuhB,KAAMyJ,EAAShrB,GACtBvB,KAAKwB,EAAEshB,KAAMyJ,EAAS/qB,GACtBxB,KAAKyB,EAAEqhB,KAAMyJ,EAAS9qB,GAEfzB,KAIRqpB,UAKC,OAHAi3C,GAAM/jB,WAAYv8C,KAAKyB,EAAGzB,KAAKwB,GAC/B++D,GAAMhkB,WAAYv8C,KAAKuB,EAAGvB,KAAKwB,GAEQ,GAAhC8+D,GAAMtuC,MAAOuuC,IAAQj+D,SAI7B2/D,YAAa/oB,GASZ,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,yDACdmiC,EAAS,IAAIyR,IAIPzR,EAAOkD,WAAYp8C,KAAKuB,EAAGvB,KAAKwB,GAAIyH,IAAKjJ,KAAKyB,GAAImJ,eAAgB,EAAI,GAI9Es3D,UAAWhpB,GAEV,OAAO/vB,GAAS+4C,UAAWliE,KAAKuB,EAAGvB,KAAKwB,EAAGxB,KAAKyB,EAAGy3C,GAIpDipB,SAAUjpB,GAST,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,sDACdmiC,EAAS,IAAIsmB,IAIPtmB,EAAOymB,sBAAuB3/D,KAAKuB,EAAGvB,KAAKwB,EAAGxB,KAAKyB,GAI3D+/D,aAAcvxD,EAAOipC,GAEpB,OAAO/vB,GAASq4C,aAAcvxD,EAAOjQ,KAAKuB,EAAGvB,KAAKwB,EAAGxB,KAAKyB,EAAGy3C,GAI9DkpB,MAAOnyD,EAAOyxD,EAAKC,EAAKC,EAAK1oB,GAE5B,OAAO/vB,GAASi5C,MAAOnyD,EAAOjQ,KAAKuB,EAAGvB,KAAKwB,EAAGxB,KAAKyB,EAAGigE,EAAKC,EAAKC,EAAK1oB,GAItEpuB,cAAe7a,GAEd,OAAOkZ,GAAS2B,cAAe7a,EAAOjQ,KAAKuB,EAAGvB,KAAKwB,EAAGxB,KAAKyB,GAI5D4gE,cAAe9rC,GAEd,OAAOpN,GAASk5C,cAAeriE,KAAKuB,EAAGvB,KAAKwB,EAAGxB,KAAKyB,EAAG80B,GAIxDy4B,cAAed,GAEd,OAAOA,EAAIqB,mBAAoBvvD,MAIhC6xD,oBAAqBhxD,EAAGq4C,QAEP//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,iEACdmiC,EAAS,IAAIyR,IAId,MAAMppD,EAAIvB,KAAKuB,EAAGC,EAAIxB,KAAKwB,EAAGC,EAAIzB,KAAKyB,EACvC,IAAI4O,EAAGC,EAQPowD,GAAKnkB,WAAY/6C,EAAGD,GACpBo/D,GAAKpkB,WAAY96C,EAAGF,GACpBs/D,GAAKtkB,WAAY17C,EAAGU,GACpB,MAAMs4C,EAAK6mB,GAAKhgD,IAAKmgD,IACf/mB,EAAK6mB,GAAKjgD,IAAKmgD,IACrB,GAAKhnB,GAAM,GAAKC,GAAM,EAGrB,OAAOZ,EAAOp2B,KAAMvhB,GAIrBu/D,GAAKvkB,WAAY17C,EAAGW,GACpB,MAAMu4C,EAAK2mB,GAAKhgD,IAAKogD,IACfwB,EAAK3B,GAAKjgD,IAAKogD,IACrB,GAAK/mB,GAAM,GAAKuoB,GAAMvoB,EAGrB,OAAOb,EAAOp2B,KAAMthB,GAIrB,MAAM+gE,EAAK1oB,EAAKyoB,EAAKvoB,EAAKD,EAC1B,GAAKyoB,GAAM,GAAK1oB,GAAM,GAAKE,GAAM,EAIhC,OAFA1pC,EAAIwpC,GAAOA,EAAKE,GAETb,EAAOp2B,KAAMvhB,GAAI+6C,gBAAiBokB,GAAMrwD,GAIhD0wD,GAAKxkB,WAAY17C,EAAGY,GACpB,MAAM+gE,EAAK9B,GAAKhgD,IAAKqgD,IACf0B,EAAK9B,GAAKjgD,IAAKqgD,IACrB,GAAK0B,GAAM,GAAKD,GAAMC,EAGrB,OAAOvpB,EAAOp2B,KAAMrhB,GAIrB,MAAMihE,EAAKF,EAAK1oB,EAAKD,EAAK4oB,EAC1B,GAAKC,GAAM,GAAK5oB,GAAM,GAAK2oB,GAAM,EAIhC,OAFAnyD,EAAIwpC,GAAOA,EAAK2oB,GAETvpB,EAAOp2B,KAAMvhB,GAAI+6C,gBAAiBqkB,GAAMrwD,GAIhD,MAAMqyD,EAAK5oB,EAAK0oB,EAAKD,EAAKF,EAC1B,GAAKK,GAAM,GAAOL,EAAKvoB,GAAQ,GAAOyoB,EAAKC,GAAQ,EAKlD,OAHA7B,GAAKrkB,WAAY96C,EAAGD,GACpB8O,GAAMgyD,EAAKvoB,IAAWuoB,EAAKvoB,GAASyoB,EAAKC,IAElCvpB,EAAOp2B,KAAMthB,GAAI86C,gBAAiBskB,GAAMtwD,GAKhD,MAAMgxD,EAAQ,GAAMqB,EAAKD,EAAKH,GAK9B,OAHAlyD,EAAIqyD,EAAKpB,EACThxD,EAAIiyD,EAAKjB,EAEFpoB,EAAOp2B,KAAMvhB,GAAI+6C,gBAAiBokB,GAAMrwD,GAAIisC,gBAAiBqkB,GAAMrwD,GAI3EzR,OAAQ0tB,GAEP,OAAOA,EAAShrB,EAAE1C,OAAQmB,KAAKuB,IAAOgrB,EAAS/qB,EAAE3C,OAAQmB,KAAKwB,IAAO+qB,EAAS9qB,EAAE5C,OAAQmB,KAAKyB,IAM/F,MAAMmhE,GAAiB,CAAE,UAAa,SAAU,aAAgB,SAAU,KAAQ,MAAU,WAAc,QAAU,MAAS,SAC5H,MAAS,SAAU,OAAU,SAAU,MAAS,EAAU,eAAkB,SAAU,KAAQ,IAAU,WAAc,QACtH,MAAS,SAAU,UAAa,SAAU,UAAa,QAAU,WAAc,QAAU,UAAa,SAAU,MAAS,SACzH,eAAkB,QAAU,SAAY,SAAU,QAAW,SAAU,KAAQ,MAAU,SAAY,IAAU,SAAY,MAC3H,cAAiB,SAAU,SAAY,SAAU,UAAa,MAAU,SAAY,SAAU,UAAa,SAAU,YAAe,QACpI,eAAkB,QAAU,WAAc,SAAU,WAAc,SAAU,QAAW,QAAU,WAAc,SAAU,aAAgB,QACzI,cAAiB,QAAU,cAAiB,QAAU,cAAiB,QAAU,cAAiB,MAAU,WAAc,QAC1H,SAAY,SAAU,YAAe,MAAU,QAAW,QAAU,QAAW,QAAU,WAAc,QAAU,UAAa,SAC9H,YAAe,SAAU,YAAe,QAAU,QAAW,SAAU,UAAa,SAAU,WAAc,SAAU,KAAQ,SAC9H,UAAa,SAAU,KAAQ,QAAU,MAAS,MAAU,YAAe,SAAU,KAAQ,QAAU,SAAY,SAAU,QAAW,SACxI,UAAa,SAAU,OAAU,QAAU,MAAS,SAAU,MAAS,SAAU,SAAY,SAAU,cAAiB,SAAU,UAAa,QAC/I,aAAgB,SAAU,UAAa,SAAU,WAAc,SAAU,UAAa,SAAU,qBAAwB,SAAU,UAAa,SAC/I,WAAc,QAAU,UAAa,SAAU,UAAa,SAAU,YAAe,SAAU,cAAiB,QAAU,aAAgB,QAC1I,eAAkB,QAAU,eAAkB,QAAU,eAAkB,SAAU,YAAe,SAAU,KAAQ,MAAU,UAAa,QAC5I,MAAS,SAAU,QAAW,SAAU,OAAU,QAAU,iBAAoB,QAAU,WAAc,IAAU,aAAgB,SAClI,aAAgB,QAAU,eAAkB,QAAU,gBAAmB,QAAU,kBAAqB,MAAU,gBAAmB,QACrI,gBAAmB,SAAU,aAAgB,QAAU,UAAa,SAAU,UAAa,SAAU,SAAY,SAAU,YAAe,SAC1I,KAAQ,IAAU,QAAW,SAAU,MAAS,QAAU,UAAa,QAAU,OAAU,SAAU,UAAa,SAAU,OAAU,SACtI,cAAiB,SAAU,UAAa,SAAU,cAAiB,SAAU,cAAiB,SAAU,WAAc,SAAU,UAAa,SAC7I,KAAQ,SAAU,KAAQ,SAAU,KAAQ,SAAU,WAAc,SAAU,OAAU,QAAU,cAAiB,QAAU,IAAO,SAAU,UAAa,SAC3J,UAAa,QAAU,YAAe,QAAU,OAAU,SAAU,WAAc,SAAU,SAAY,QAAU,SAAY,SAC9H,OAAU,SAAU,OAAU,SAAU,QAAW,QAAU,UAAa,QAAU,UAAa,QAAU,UAAa,QAAU,KAAQ,SAC1I,YAAe,MAAU,UAAa,QAAU,IAAO,SAAU,KAAQ,MAAU,QAAW,SAAU,OAAU,SAAU,UAAa,QACzI,OAAU,SAAU,MAAS,SAAU,MAAS,SAAU,WAAc,SAAU,OAAU,SAAU,YAAe,UAEhHC,GAAQ,CAAEpoD,EAAG,EAAG0R,EAAG,EAAG9d,EAAG,GACzBy0D,GAAQ,CAAEroD,EAAG,EAAG0R,EAAG,EAAG9d,EAAG,GAE/B,SAAS29B,GAASnrC,EAAG0C,EAAG+J,GAIvB,OAFKA,EAAI,IAAIA,GAAK,GACbA,EAAI,IAAIA,GAAK,GACbA,EAAI,EAAI,EAAWzM,EAAgB,GAAV0C,EAAI1C,GAAUyM,EACvCA,EAAI,GAAe/J,EACnB+J,EAAI,EAAI,EAAWzM,EAAgB,GAAV0C,EAAI1C,IAAY,EAAI,EAAIyM,GAC/CzM,EAIR,SAASkiE,GAActhE,GAEtB,OAASA,EAAI,OAAgB,YAAJA,EAAmB4B,KAAK0G,IAAS,YAAJtI,EAAmB,YAAc,KAIxF,SAASuhE,GAAcvhE,GAEtB,OAASA,EAAI,SAAkB,MAAJA,EAAY,MAAU4B,KAAK0G,IAAKtI,EAAG,QAAc,KAI7E,MAAMonC,GAEL3iC,YAAa3B,EAAGukC,EAAGtnC,GAIlB,OAFAhC,OAAOC,eAAgBO,KAAM,UAAW,CAAEL,OAAO,SAEtCwZ,IAAN2vB,QAAyB3vB,IAAN3X,EAGhBxB,KAAK4I,IAAKrE,GAIXvE,KAAKijE,OAAQ1+D,EAAGukC,EAAGtnC,GAI3BoH,IAAKjJ,GAgBJ,OAdKA,GAASA,EAAMujE,QAEnBljE,KAAK8iB,KAAMnjB,GAEiB,iBAAVA,EAElBK,KAAKmjE,OAAQxjE,GAEe,iBAAVA,GAElBK,KAAKojE,SAAUzjE,GAITK,KAIRi8C,UAAWpxC,GAMV,OAJA7K,KAAKuE,EAAIsG,EACT7K,KAAK8oC,EAAIj+B,EACT7K,KAAKwB,EAAIqJ,EAEF7K,KAIRmjE,OAAQE,GAQP,OANAA,EAAMhgE,KAAK+pB,MAAOi2C,GAElBrjE,KAAKuE,GAAM8+D,GAAO,GAAK,KAAQ,IAC/BrjE,KAAK8oC,GAAMu6B,GAAO,EAAI,KAAQ,IAC9BrjE,KAAKwB,GAAY,IAAN6hE,GAAc,IAElBrjE,KAIRijE,OAAQ1+D,EAAGukC,EAAGtnC,GAMb,OAJAxB,KAAKuE,EAAIA,EACTvE,KAAK8oC,EAAIA,EACT9oC,KAAKwB,EAAIA,EAEFxB,KAIRsjE,OAAQ7oD,EAAG0R,EAAG9d,GAOb,GAJAoM,EAAI++B,GAAUS,gBAAiBx/B,EAAG,GAClC0R,EAAIqtB,GAAUQ,MAAO7tB,EAAG,EAAG,GAC3B9d,EAAImrC,GAAUQ,MAAO3rC,EAAG,EAAG,GAEhB,IAAN8d,EAEJnsB,KAAKuE,EAAIvE,KAAK8oC,EAAI9oC,KAAKwB,EAAI6M,MAErB,CAEN,MAAMxN,EAAIwN,GAAK,GAAMA,GAAM,EAAI8d,GAAM9d,EAAI8d,EAAM9d,EAAI8d,EAC7C5oB,EAAM,EAAI8K,EAAMxN,EAEtBb,KAAKuE,EAAIynC,GAASzoC,EAAG1C,EAAG4Z,EAAI,EAAI,GAChCza,KAAK8oC,EAAIkD,GAASzoC,EAAG1C,EAAG4Z,GACxBza,KAAKwB,EAAIwqC,GAASzoC,EAAG1C,EAAG4Z,EAAI,EAAI,GAIjC,OAAOza,KAIRojE,SAAUhlD,GAET,SAASmlD,EAAaC,QAELrqD,IAAXqqD,GAEAhhC,WAAYghC,GAAW,GAE3B72D,QAAQoK,KAAM,mCAAqCqH,EAAQ,qBAO7D,IAAIxb,EAEJ,GAAKA,EAAI,kCAAkC6gE,KAAMrlD,GAAU,CAI1D,IAAIjB,EACJ,MAAMoS,EAAO3sB,EAAG,GACV8gE,EAAa9gE,EAAG,GAEtB,OAAS2sB,GAER,IAAK,MACL,IAAK,OAEJ,GAAKpS,EAAQ,4DAA4DsmD,KAAMC,GAS9E,OANA1jE,KAAKuE,EAAIlB,KAAK4B,IAAK,IAAKqlC,SAAUntB,EAAO,GAAK,KAAS,IACvDnd,KAAK8oC,EAAIzlC,KAAK4B,IAAK,IAAKqlC,SAAUntB,EAAO,GAAK,KAAS,IACvDnd,KAAKwB,EAAI6B,KAAK4B,IAAK,IAAKqlC,SAAUntB,EAAO,GAAK,KAAS,IAEvDomD,EAAapmD,EAAO,IAEbnd,KAIR,GAAKmd,EAAQ,kEAAkEsmD,KAAMC,GASpF,OANA1jE,KAAKuE,EAAIlB,KAAK4B,IAAK,IAAKqlC,SAAUntB,EAAO,GAAK,KAAS,IACvDnd,KAAK8oC,EAAIzlC,KAAK4B,IAAK,IAAKqlC,SAAUntB,EAAO,GAAK,KAAS,IACvDnd,KAAKwB,EAAI6B,KAAK4B,IAAK,IAAKqlC,SAAUntB,EAAO,GAAK,KAAS,IAEvDomD,EAAapmD,EAAO,IAEbnd,KAIR,MAED,IAAK,MACL,IAAK,OAEJ,GAAKmd,EAAQ,sEAAsEsmD,KAAMC,GAAe,CAGvG,MAAMjpD,EAAI+nB,WAAYrlB,EAAO,IAAQ,IAC/BgP,EAAIme,SAAUntB,EAAO,GAAK,IAAO,IACjC9O,EAAIi8B,SAAUntB,EAAO,GAAK,IAAO,IAIvC,OAFAomD,EAAapmD,EAAO,IAEbnd,KAAKsjE,OAAQ7oD,EAAG0R,EAAG9d,UAQvB,GAAKzL,EAAI,oBAAoB6gE,KAAMrlD,GAAU,CAInD,MAAMilD,EAAMzgE,EAAG,GACTgd,EAAOyjD,EAAI/gE,OAEjB,GAAc,IAATsd,EAOJ,OAJA5f,KAAKuE,EAAI+lC,SAAU+4B,EAAIM,OAAQ,GAAMN,EAAIM,OAAQ,GAAK,IAAO,IAC7D3jE,KAAK8oC,EAAIwB,SAAU+4B,EAAIM,OAAQ,GAAMN,EAAIM,OAAQ,GAAK,IAAO,IAC7D3jE,KAAKwB,EAAI8oC,SAAU+4B,EAAIM,OAAQ,GAAMN,EAAIM,OAAQ,GAAK,IAAO,IAEtD3jE,KAED,GAAc,IAAT4f,EAOX,OAJA5f,KAAKuE,EAAI+lC,SAAU+4B,EAAIM,OAAQ,GAAMN,EAAIM,OAAQ,GAAK,IAAO,IAC7D3jE,KAAK8oC,EAAIwB,SAAU+4B,EAAIM,OAAQ,GAAMN,EAAIM,OAAQ,GAAK,IAAO,IAC7D3jE,KAAKwB,EAAI8oC,SAAU+4B,EAAIM,OAAQ,GAAMN,EAAIM,OAAQ,GAAK,IAAO,IAEtD3jE,KAMT,OAAKoe,GAASA,EAAM9b,OAAS,EAErBtC,KAAK4jE,aAAcxlD,GAIpBpe,KAIR4jE,aAAcxlD,GAGb,MAAMilD,EAAMT,GAAgBxkD,GAc5B,YAZajF,IAARkqD,EAGJrjE,KAAKmjE,OAAQE,GAKb12D,QAAQoK,KAAM,8BAAgCqH,GAIxCpe,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,YAAalG,KAAKuE,EAAGvE,KAAK8oC,EAAG9oC,KAAKwB,GAInDshB,KAAM3F,GAML,OAJAnd,KAAKuE,EAAI4Y,EAAM5Y,EACfvE,KAAK8oC,EAAI3rB,EAAM2rB,EACf9oC,KAAKwB,EAAI2b,EAAM3b,EAERxB,KAIR6jE,kBAAmB1mD,EAAO2mD,EAAc,GAMvC,OAJA9jE,KAAKuE,EAAIlB,KAAK0G,IAAKoT,EAAM5Y,EAAGu/D,GAC5B9jE,KAAK8oC,EAAIzlC,KAAK0G,IAAKoT,EAAM2rB,EAAGg7B,GAC5B9jE,KAAKwB,EAAI6B,KAAK0G,IAAKoT,EAAM3b,EAAGsiE,GAErB9jE,KAIR+jE,kBAAmB5mD,EAAO2mD,EAAc,GAEvC,MAAME,EAAgBF,EAAc,EAAQ,EAAMA,EAAgB,EAMlE,OAJA9jE,KAAKuE,EAAIlB,KAAK0G,IAAKoT,EAAM5Y,EAAGy/D,GAC5BhkE,KAAK8oC,EAAIzlC,KAAK0G,IAAKoT,EAAM2rB,EAAGk7B,GAC5BhkE,KAAKwB,EAAI6B,KAAK0G,IAAKoT,EAAM3b,EAAGwiE,GAErBhkE,KAIRikE,qBAAsBH,GAIrB,OAFA9jE,KAAK6jE,kBAAmB7jE,KAAM8jE,GAEvB9jE,KAIRkkE,qBAAsBJ,GAIrB,OAFA9jE,KAAK+jE,kBAAmB/jE,KAAM8jE,GAEvB9jE,KAIRmkE,iBAAkBhnD,GAMjB,OAJAnd,KAAKuE,EAAIw+D,GAAc5lD,EAAM5Y,GAC7BvE,KAAK8oC,EAAIi6B,GAAc5lD,EAAM2rB,GAC7B9oC,KAAKwB,EAAIuhE,GAAc5lD,EAAM3b,GAEtBxB,KAIRokE,iBAAkBjnD,GAMjB,OAJAnd,KAAKuE,EAAIy+D,GAAc7lD,EAAM5Y,GAC7BvE,KAAK8oC,EAAIk6B,GAAc7lD,EAAM2rB,GAC7B9oC,KAAKwB,EAAIwhE,GAAc7lD,EAAM3b,GAEtBxB,KAIRqkE,sBAIC,OAFArkE,KAAKmkE,iBAAkBnkE,MAEhBA,KAIRskE,sBAIC,OAFAtkE,KAAKokE,iBAAkBpkE,MAEhBA,KAIRukE,SAEC,OAAkB,IAATvkE,KAAKuE,GAAa,GAAgB,IAATvE,KAAK8oC,GAAa,EAAe,IAAT9oC,KAAKwB,GAAa,EAI7EgjE,eAEC,OAAS,SAAWxkE,KAAKukE,SAASv5D,SAAU,KAAOouC,OAAS,GAI7DqrB,OAAQvrB,QAIS//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,iDACdmiC,EAAS,CAAEz+B,EAAG,EAAG0R,EAAG,EAAG9d,EAAG,IAI3B,MAAM9J,EAAIvE,KAAKuE,EAAGukC,EAAI9oC,KAAK8oC,EAAGtnC,EAAIxB,KAAKwB,EAEjCwD,EAAM3B,KAAK2B,IAAKT,EAAGukC,EAAGtnC,GACtByD,EAAM5B,KAAK4B,IAAKV,EAAGukC,EAAGtnC,GAE5B,IAAIwoC,EAAKC,EACT,MAAMC,GAAcjlC,EAAMD,GAAQ,EAElC,GAAKC,IAAQD,EAEZglC,EAAM,EACNC,EAAa,MAEP,CAEN,MAAM7V,EAAQpvB,EAAMC,EAIpB,OAFAglC,EAAaC,GAAa,GAAM9V,GAAUpvB,EAAMC,GAAQmvB,GAAU,EAAIpvB,EAAMC,GAEnED,GAER,KAAKT,EAAGylC,GAAQlB,EAAItnC,GAAM4yB,GAAU0U,EAAItnC,EAAI,EAAI,GAAK,MACrD,KAAKsnC,EAAGkB,GAAQxoC,EAAI+C,GAAM6vB,EAAQ,EAAG,MACrC,KAAK5yB,EAAGwoC,GAAQzlC,EAAIukC,GAAM1U,EAAQ,EAInC4V,GAAO,EAQR,OAJAkP,EAAOz+B,EAAIuvB,EACXkP,EAAO/sB,EAAI8d,EACXiP,EAAO7qC,EAAI67B,EAEJgP,EAIRwrB,WAEC,MAAO,QAAsB,IAAT1kE,KAAKuE,EAAY,GAAM,KAAmB,IAATvE,KAAK8oC,EAAY,GAAM,KAAmB,IAAT9oC,KAAKwB,EAAY,GAAM,IAI9GmjE,UAAWlqD,EAAG0R,EAAG9d,GAQhB,OANArO,KAAKykE,OAAQ5B,IAEbA,GAAMpoD,GAAKA,EAAGooD,GAAM12C,GAAKA,EAAG02C,GAAMx0D,GAAKA,EAEvCrO,KAAKsjE,OAAQT,GAAMpoD,EAAGooD,GAAM12C,EAAG02C,GAAMx0D,GAE9BrO,KAIRiJ,IAAKkU,GAMJ,OAJAnd,KAAKuE,GAAK4Y,EAAM5Y,EAChBvE,KAAK8oC,GAAK3rB,EAAM2rB,EAChB9oC,KAAKwB,GAAK2b,EAAM3b,EAETxB,KAIR4kE,UAAWC,EAAQC,GAMlB,OAJA9kE,KAAKuE,EAAIsgE,EAAOtgE,EAAIugE,EAAOvgE,EAC3BvE,KAAK8oC,EAAI+7B,EAAO/7B,EAAIg8B,EAAOh8B,EAC3B9oC,KAAKwB,EAAIqjE,EAAOrjE,EAAIsjE,EAAOtjE,EAEpBxB,KAIRq8C,UAAWlwB,GAMV,OAJAnsB,KAAKuE,GAAK4nB,EACVnsB,KAAK8oC,GAAK3c,EACVnsB,KAAKwB,GAAK2qB,EAEHnsB,KAIRuJ,IAAK4T,GAMJ,OAJAnd,KAAKuE,EAAIlB,KAAK2B,IAAK,EAAGhF,KAAKuE,EAAI4Y,EAAM5Y,GACrCvE,KAAK8oC,EAAIzlC,KAAK2B,IAAK,EAAGhF,KAAK8oC,EAAI3rB,EAAM2rB,GACrC9oC,KAAKwB,EAAI6B,KAAK2B,IAAK,EAAGhF,KAAKwB,EAAI2b,EAAM3b,GAE9BxB,KAIRy8C,SAAUt/B,GAMT,OAJAnd,KAAKuE,GAAK4Y,EAAM5Y,EAChBvE,KAAK8oC,GAAK3rB,EAAM2rB,EAChB9oC,KAAKwB,GAAK2b,EAAM3b,EAETxB,KAIR4K,eAAgBuhB,GAMf,OAJAnsB,KAAKuE,GAAK4nB,EACVnsB,KAAK8oC,GAAK3c,EACVnsB,KAAKwB,GAAK2qB,EAEHnsB,KAIRq6C,KAAMl9B,EAAOitB,GAMZ,OAJApqC,KAAKuE,IAAO4Y,EAAM5Y,EAAIvE,KAAKuE,GAAM6lC,EACjCpqC,KAAK8oC,IAAO3rB,EAAM2rB,EAAI9oC,KAAK8oC,GAAMsB,EACjCpqC,KAAKwB,IAAO2b,EAAM3b,EAAIxB,KAAKwB,GAAM4oC,EAE1BpqC,KAIR+kE,QAAS5nD,EAAOitB,GAEfpqC,KAAKykE,OAAQ5B,IACb1lD,EAAMsnD,OAAQ3B,IAEd,MAAMroD,EAAI++B,GAAUa,KAAMwoB,GAAMpoD,EAAGqoD,GAAMroD,EAAG2vB,GACtCje,EAAIqtB,GAAUa,KAAMwoB,GAAM12C,EAAG22C,GAAM32C,EAAGie,GACtC/7B,EAAImrC,GAAUa,KAAMwoB,GAAMx0D,EAAGy0D,GAAMz0D,EAAG+7B,GAI5C,OAFApqC,KAAKsjE,OAAQ7oD,EAAG0R,EAAG9d,GAEZrO,KAIRnB,OAAQ4C,GAEP,OAASA,EAAE8C,IAAMvE,KAAKuE,GAAS9C,EAAEqnC,IAAM9oC,KAAK8oC,GAASrnC,EAAED,IAAMxB,KAAKwB,EAInE2M,UAAWgrC,EAAOn9B,EAAS,GAM1B,OAJAhc,KAAKuE,EAAI40C,EAAOn9B,GAChBhc,KAAK8oC,EAAIqQ,EAAOn9B,EAAS,GACzBhc,KAAKwB,EAAI23C,EAAOn9B,EAAS,GAElBhc,KAIR09C,QAASvE,EAAQ,GAAIn9B,EAAS,GAM7B,OAJAm9B,EAAOn9B,GAAWhc,KAAKuE,EACvB40C,EAAOn9B,EAAS,GAAMhc,KAAK8oC,EAC3BqQ,EAAOn9B,EAAS,GAAMhc,KAAKwB,EAEpB23C,EAIRwE,oBAAqBC,EAAWzxC,GAgB/B,OAdAnM,KAAKuE,EAAIq5C,EAAUC,KAAM1xC,GACzBnM,KAAK8oC,EAAI8U,EAAUE,KAAM3xC,GACzBnM,KAAKwB,EAAIo8C,EAAUsI,KAAM/5C,IAEK,IAAzByxC,EAAUonB,aAIdhlE,KAAKuE,GAAK,IACVvE,KAAK8oC,GAAK,IACV9oC,KAAKwB,GAAK,KAIJxB,KAIRqV,SAEC,OAAOrV,KAAKukE,UAMd17B,GAAMo8B,MAAQrC,GACd/5B,GAAMgQ,UAAUt0C,EAAI,EACpBskC,GAAMgQ,UAAU/P,EAAI,EACpBD,GAAMgQ,UAAUr3C,EAAI,EAEpB,MAAM0jE,GAELh/D,YAAa3E,EAAGC,EAAGC,EAAG+1B,EAAQra,EAAOgoD,EAAgB,GAEpDnlE,KAAKuB,EAAIA,EACTvB,KAAKwB,EAAIA,EACTxB,KAAKyB,EAAIA,EAETzB,KAAKw3B,OAAWA,GAAUA,EAAOq/B,UAAcr/B,EAAS,IAAImzB,GAC5D3qD,KAAKolE,cAAgBxvD,MAAMC,QAAS2hB,GAAWA,EAAS,GAExDx3B,KAAKmd,MAAUA,GAASA,EAAM+lD,QAAY/lD,EAAQ,IAAI0rB,GACtD7oC,KAAKqlE,aAAezvD,MAAMC,QAASsH,GAAUA,EAAQ,GAErDnd,KAAKmlE,cAAgBA,EAItBx7D,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAM+gC,GAEL7jD,KAAKuB,EAAIsiD,EAAOtiD,EAChBvB,KAAKwB,EAAIqiD,EAAOriD,EAChBxB,KAAKyB,EAAIoiD,EAAOpiD,EAEhBzB,KAAKw3B,OAAO1U,KAAM+gC,EAAOrsB,QACzBx3B,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OAExBnd,KAAKmlE,cAAgBthB,EAAOshB,cAE5B,IAAM,IAAItlE,EAAI,EAAG6tD,EAAK7J,EAAOuhB,cAAc9iE,OAAQzC,EAAI6tD,EAAI7tD,IAE1DG,KAAKolE,cAAevlE,GAAMgkD,EAAOuhB,cAAevlE,GAAI8J,QAIrD,IAAM,IAAI9J,EAAI,EAAG6tD,EAAK7J,EAAOwhB,aAAa/iE,OAAQzC,EAAI6tD,EAAI7tD,IAEzDG,KAAKqlE,aAAcxlE,GAAMgkD,EAAOwhB,aAAcxlE,GAAI8J,QAInD,OAAO3J,MAMT,IAAIslE,GAAa,EAEjB,SAASC,KAER/lE,OAAOC,eAAgBO,KAAM,KAAM,CAAEL,MAAO2lE,OAE5CtlE,KAAK4iD,KAAOpJ,GAAUG,eAEtB35C,KAAKuvB,KAAO,GACZvvB,KAAK8/B,KAAO,WAEZ9/B,KAAKwlE,KAAM,EAEXxlE,KAAKylE,SAAW/3B,EAChB1tC,KAAK0lE,KAAOt4B,EACZptC,KAAK2lE,aAAc,EACnB3lE,KAAKqlE,cAAe,EAEpBrlE,KAAK4lE,QAAU,EACf5lE,KAAK6lE,aAAc,EAEnB7lE,KAAK8lE,SAAWt3B,EAChBxuC,KAAK+lE,SAAWt3B,EAChBzuC,KAAKgmE,cAAgBj4B,EACrB/tC,KAAKimE,cAAgB,KACrBjmE,KAAKkmE,cAAgB,KACrBlmE,KAAKmmE,mBAAqB,KAE1BnmE,KAAKomE,UAAYl3B,EACjBlvC,KAAKqmE,WAAY,EACjBrmE,KAAKsmE,YAAa,EAElBtmE,KAAKumE,iBAAmB,IACxBvmE,KAAKwmE,YAAczuB,GACnB/3C,KAAKymE,WAAa,EAClBzmE,KAAK0mE,gBAAkB,IACvB1mE,KAAK2mE,YAAc1vB,GACnBj3C,KAAK4mE,aAAe3vB,GACpBj3C,KAAK6mE,aAAe5vB,GACpBj3C,KAAK8mE,cAAe,EAEpB9mE,KAAK+mE,eAAiB,KACtB/mE,KAAKgnE,kBAAmB,EACxBhnE,KAAKinE,aAAc,EAEnBjnE,KAAKknE,WAAa,KAElBlnE,KAAKmnE,YAAa,EAElBnnE,KAAKonE,UAAY,KAEjBpnE,KAAKqnE,eAAgB,EACrBrnE,KAAKsnE,oBAAsB,EAC3BtnE,KAAKunE,mBAAqB,EAE1BvnE,KAAKwnE,WAAY,EAEjBxnE,KAAKynE,UAAY,EACjBznE,KAAK0nE,oBAAqB,EAE1B1nE,KAAKuG,SAAU,EAEfvG,KAAK2nE,YAAa,EAElB3nE,KAAKw7D,SAAW,GAEhBx7D,KAAKqjD,QAAU,EA0ZhB,SAASukB,GAAmBnJ,GAE3B8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,oBAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO,UAExB7oC,KAAKu5B,IAAM,KAEXv5B,KAAK6nE,SAAW,KAChB7nE,KAAK8nE,kBAAoB,EAEzB9nE,KAAK+nE,MAAQ,KACb/nE,KAAKgoE,eAAiB,EAEtBhoE,KAAKioE,YAAc,KAEnBjoE,KAAKkoE,SAAW,KAEhBloE,KAAKmoE,OAAS,KACdnoE,KAAKooE,QAAU74B,EACfvvC,KAAKqoE,aAAe,EACpBroE,KAAKsoE,gBAAkB,IAEvBtoE,KAAKuoE,WAAY,EACjBvoE,KAAKwoE,mBAAqB,EAC1BxoE,KAAKyoE,iBAAmB,QACxBzoE,KAAK0oE,kBAAoB,QAEzB1oE,KAAK2oE,UAAW,EAChB3oE,KAAK4oE,cAAe,EAEpB5oE,KAAK6oE,UAAWpK,GAvbjB8G,GAAS1sB,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ/K,GAAgBE,WAAa,CAE/E3yC,YAAaq/D,GAEbuD,YAAY,EAEZC,gBAAiB,aAEjBC,sBAAuB,WAEtB,OAAOhpE,KAAK+oE,gBAAgB/9D,YAI7B69D,UAAW,SAAW1J,GAErB,QAAgBhmD,IAAXgmD,EAEL,IAAM,MAAMh5D,KAAOg5D,EAAS,CAE3B,MAAM8J,EAAW9J,EAAQh5D,GAEzB,QAAkBgT,IAAb8vD,EAAyB,CAE7Bt8D,QAAQoK,KAAM,oBAAuB5Q,EAAM,6BAC3C,SAKD,GAAa,YAARA,EAAoB,CAExBwG,QAAQoK,KAAM,SAAW/W,KAAK8/B,KAAO,sEACrC9/B,KAAK2lE,YAAgBsD,IAAa17B,EAClC,SAID,MAAM27B,EAAelpE,KAAMmG,QAELgT,IAAjB+vD,EAOAA,GAAgBA,EAAahG,QAEjCgG,EAAatgE,IAAKqgE,GAELC,GAAgBA,EAAarS,WAAiBoS,GAAYA,EAASpS,UAEhFqS,EAAapmD,KAAMmmD,GAInBjpE,KAAMmG,GAAQ8iE,EAfdt8D,QAAQoK,KAAM,SAAW/W,KAAK8/B,KAAO,MAAS35B,EAAM,2CAuBvDkP,OAAQ,SAAWyuC,GAElB,MAAMqlB,OAAoBhwD,IAAT2qC,GAAsC,iBAATA,EAEzCqlB,IAEJrlB,EAAO,CACNE,SAAU,GACVK,OAAQ,KAKV,MAAM9jD,EAAO,CACZ2jD,SAAU,CACTb,QAAS,IACTvjB,KAAM,WACNqkB,UAAW,oBA+Jb,SAAS+a,EAAkB1iD,GAE1B,MAAM2iD,EAAS,GAEf,IAAM,MAAMh5D,KAAOqW,EAAQ,CAE1B,MAAMjc,EAAOic,EAAOrW,UACb5F,EAAK2jD,SACZib,EAAO79D,KAAMf,GAId,OAAO4+D,EAIR,GA1KA5+D,EAAKqiD,KAAO5iD,KAAK4iD,KACjBriD,EAAKu/B,KAAO9/B,KAAK8/B,KAEE,KAAd9/B,KAAKuvB,OAAchvB,EAAKgvB,KAAOvvB,KAAKuvB,MAEpCvvB,KAAKmd,OAASnd,KAAKmd,MAAM+lD,UAAU3iE,EAAK4c,MAAQnd,KAAKmd,MAAMonD,eAExCprD,IAAnBnZ,KAAKopE,YAA0B7oE,EAAK6oE,UAAYppE,KAAKopE,gBAClCjwD,IAAnBnZ,KAAKqpE,YAA0B9oE,EAAK8oE,UAAYrpE,KAAKqpE,WAErDrpE,KAAKspE,OAAStpE,KAAKspE,MAAMpG,UAAU3iE,EAAK+oE,MAAQtpE,KAAKspE,MAAM/E,UAC3DvkE,KAAKupE,UAAYvpE,KAAKupE,SAASrG,UAAU3iE,EAAKgpE,SAAWvpE,KAAKupE,SAAShF,UACvEvkE,KAAKwpE,mBAAgD,IAA3BxpE,KAAKwpE,oBAA0BjpE,EAAKipE,kBAAoBxpE,KAAKwpE,mBAEvFxpE,KAAKypE,UAAYzpE,KAAKypE,SAASvG,UAAU3iE,EAAKkpE,SAAWzpE,KAAKypE,SAASlF,eACpDprD,IAAnBnZ,KAAK0pE,YAA0BnpE,EAAKmpE,UAAY1pE,KAAK0pE,gBAClCvwD,IAAnBnZ,KAAK2pE,YAA0BppE,EAAKopE,UAAY3pE,KAAK2pE,gBACzBxwD,IAA5BnZ,KAAK4pE,qBAAmCrpE,EAAKqpE,mBAAqB5pE,KAAK4pE,oBAEvE5pE,KAAK6pE,cAAgB7pE,KAAK6pE,aAAalmB,YAE3CpjD,EAAKspE,aAAe7pE,KAAK6pE,aAAax0D,OAAQyuC,GAAOlB,MAIjD5iD,KAAK8pE,uBAAyB9pE,KAAK8pE,sBAAsBnmB,YAE7DpjD,EAAKupE,sBAAwB9pE,KAAK8pE,sBAAsBz0D,OAAQyuC,GAAOlB,MAInE5iD,KAAK+pE,oBAAsB/pE,KAAK+pE,mBAAmBpmB,YAEvDpjD,EAAKwpE,mBAAqB/pE,KAAK+pE,mBAAmB10D,OAAQyuC,GAAOlB,KACjEriD,EAAKypE,qBAAuBhqE,KAAKgqE,qBAAqBtsB,WAIlD19C,KAAKu5B,KAAOv5B,KAAKu5B,IAAIoqB,YAAYpjD,EAAKg5B,IAAMv5B,KAAKu5B,IAAIlkB,OAAQyuC,GAAOlB,MACpE5iD,KAAKiqE,QAAUjqE,KAAKiqE,OAAOtmB,YAAYpjD,EAAK0pE,OAASjqE,KAAKiqE,OAAO50D,OAAQyuC,GAAOlB,MAChF5iD,KAAKkoE,UAAYloE,KAAKkoE,SAASvkB,YAAYpjD,EAAK2nE,SAAWloE,KAAKkoE,SAAS7yD,OAAQyuC,GAAOlB,MACxF5iD,KAAK6nE,UAAY7nE,KAAK6nE,SAASlkB,YAAYpjD,EAAKsnE,SAAW7nE,KAAK6nE,SAASxyD,OAAQyuC,GAAOlB,MAExF5iD,KAAK+nE,OAAS/nE,KAAK+nE,MAAMpkB,YAE7BpjD,EAAKwnE,MAAQ/nE,KAAK+nE,MAAM1yD,OAAQyuC,GAAOlB,KACvCriD,EAAKynE,eAAiBhoE,KAAKgoE,gBAIvBhoE,KAAKkqE,SAAWlqE,KAAKkqE,QAAQvmB,YAEjCpjD,EAAK2pE,QAAUlqE,KAAKkqE,QAAQ70D,OAAQyuC,GAAOlB,KAC3CriD,EAAK4pE,UAAYnqE,KAAKmqE,WAIlBnqE,KAAKoqE,WAAapqE,KAAKoqE,UAAUzmB,YAErCpjD,EAAK6pE,UAAYpqE,KAAKoqE,UAAU/0D,OAAQyuC,GAAOlB,KAC/CriD,EAAK8pE,cAAgBrqE,KAAKqqE,cAC1B9pE,EAAK+pE,YAActqE,KAAKsqE,YAAY5sB,WAIhC19C,KAAKuqE,iBAAmBvqE,KAAKuqE,gBAAgB5mB,YAEjDpjD,EAAKgqE,gBAAkBvqE,KAAKuqE,gBAAgBl1D,OAAQyuC,GAAOlB,KAC3DriD,EAAKiqE,kBAAoBxqE,KAAKwqE,kBAC9BjqE,EAAKkqE,iBAAmBzqE,KAAKyqE,kBAIzBzqE,KAAK0qE,cAAgB1qE,KAAK0qE,aAAa/mB,YAAYpjD,EAAKmqE,aAAe1qE,KAAK0qE,aAAar1D,OAAQyuC,GAAOlB,MACxG5iD,KAAK2qE,cAAgB3qE,KAAK2qE,aAAahnB,YAAYpjD,EAAKoqE,aAAe3qE,KAAK2qE,aAAat1D,OAAQyuC,GAAOlB,MAExG5iD,KAAK4qE,aAAe5qE,KAAK4qE,YAAYjnB,YAAYpjD,EAAKqqE,YAAc5qE,KAAK4qE,YAAYv1D,OAAQyuC,GAAOlB,MACpG5iD,KAAKioE,aAAejoE,KAAKioE,YAAYtkB,YAAYpjD,EAAK0nE,YAAcjoE,KAAKioE,YAAY5yD,OAAQyuC,GAAOlB,MAEpG5iD,KAAKmoE,QAAUnoE,KAAKmoE,OAAOxkB,YAE/BpjD,EAAK4nE,OAASnoE,KAAKmoE,OAAO9yD,OAAQyuC,GAAOlB,KACzCriD,EAAK8nE,aAAeroE,KAAKqoE,aACzB9nE,EAAK+nE,gBAAkBtoE,KAAKsoE,qBAENnvD,IAAjBnZ,KAAKooE,UAAwB7nE,EAAK6nE,QAAUpoE,KAAKooE,cACxBjvD,IAAzBnZ,KAAK6qE,kBAAgCtqE,EAAKsqE,gBAAkB7qE,KAAK6qE,kBAIlE7qE,KAAK8qE,aAAe9qE,KAAK8qE,YAAYnnB,YAEzCpjD,EAAKuqE,YAAc9qE,KAAK8qE,YAAYz1D,OAAQyuC,GAAOlB,WAIjCzpC,IAAdnZ,KAAK4f,OAAqBrf,EAAKqf,KAAO5f,KAAK4f,WAClBzG,IAAzBnZ,KAAK+qE,kBAAgCxqE,EAAKwqE,gBAAkB/qE,KAAK+qE,iBAEjE/qE,KAAKylE,WAAa/3B,IAAiBntC,EAAKklE,SAAWzlE,KAAKylE,WACnC,IAArBzlE,KAAK2lE,cAAuBplE,EAAKolE,YAAc3lE,KAAK2lE,aACpD3lE,KAAK0lE,OAASt4B,IAAY7sC,EAAKmlE,KAAO1lE,KAAK0lE,MAC3C1lE,KAAKqlE,eAAe9kE,EAAK8kE,cAAe,GAExCrlE,KAAK4lE,QAAU,IAAIrlE,EAAKqlE,QAAU5lE,KAAK4lE,UAClB,IAArB5lE,KAAK6lE,cAAuBtlE,EAAKslE,YAAc7lE,KAAK6lE,aAEzDtlE,EAAK6lE,UAAYpmE,KAAKomE,UACtB7lE,EAAK8lE,UAAYrmE,KAAKqmE,UACtB9lE,EAAK+lE,WAAatmE,KAAKsmE,WAEvB/lE,EAAKumE,aAAe9mE,KAAK8mE,aACzBvmE,EAAKgmE,iBAAmBvmE,KAAKumE,iBAC7BhmE,EAAKimE,YAAcxmE,KAAKwmE,YACxBjmE,EAAKkmE,WAAazmE,KAAKymE,WACvBlmE,EAAKmmE,gBAAkB1mE,KAAK0mE,gBAC5BnmE,EAAKomE,YAAc3mE,KAAK2mE,YACxBpmE,EAAKqmE,aAAe5mE,KAAK4mE,aACzBrmE,EAAKsmE,aAAe7mE,KAAK6mE,aAGpB7mE,KAAKghB,UAA8B,IAAlBhhB,KAAKghB,WAAiBzgB,EAAKygB,SAAWhhB,KAAKghB,WAErC,IAAvBhhB,KAAKqnE,gBAAyB9mE,EAAK8mE,eAAgB,GACtB,IAA7BrnE,KAAKsnE,sBAA4B/mE,EAAK+mE,oBAAsBtnE,KAAKsnE,qBACrC,IAA5BtnE,KAAKunE,qBAA2BhnE,EAAKgnE,mBAAqBvnE,KAAKunE,oBAE/DvnE,KAAKgrE,WAAgC,IAAnBhrE,KAAKgrE,YAAkBzqE,EAAKyqE,UAAYhrE,KAAKgrE,gBAC7C7xD,IAAlBnZ,KAAKirE,WAAyB1qE,EAAK0qE,SAAWjrE,KAAKirE,eAClC9xD,IAAjBnZ,KAAKkrE,UAAwB3qE,EAAK2qE,QAAUlrE,KAAKkrE,cAClC/xD,IAAfnZ,KAAKqK,QAAsB9J,EAAK8J,MAAQrK,KAAKqK,QAE1B,IAAnBrK,KAAKwnE,YAAqBjnE,EAAKinE,WAAY,GAE3CxnE,KAAKynE,UAAY,IAAIlnE,EAAKknE,UAAYznE,KAAKynE,YACf,IAA5BznE,KAAK0nE,qBAA8BnnE,EAAKmnE,mBAAqB1nE,KAAK0nE,qBAE/C,IAAnB1nE,KAAKuoE,YAAqBhoE,EAAKgoE,UAAYvoE,KAAKuoE,WAChDvoE,KAAKwoE,mBAAqB,IAAIjoE,EAAKioE,mBAAqBxoE,KAAKwoE,oBACnC,UAA1BxoE,KAAKyoE,mBAA+BloE,EAAKkoE,iBAAmBzoE,KAAKyoE,kBACtC,UAA3BzoE,KAAK0oE,oBAAgCnoE,EAAKmoE,kBAAoB1oE,KAAK0oE,oBAE7C,IAAtB1oE,KAAK4oE,eAAwBroE,EAAKqoE,cAAe,IAC3B,IAAtB5oE,KAAKmrE,eAAwB5qE,EAAK4qE,cAAe,IAC/B,IAAlBnrE,KAAK2oE,WAAoBpoE,EAAKooE,UAAW,IAExB,IAAjB3oE,KAAKuG,UAAoBhG,EAAKgG,SAAU,IAEpB,IAApBvG,KAAK2nE,aAAuBpnE,EAAKonE,YAAa,GAEV,OAApCnyD,KAAK2oD,UAAWn+D,KAAKw7D,YAAsBj7D,EAAKi7D,SAAWx7D,KAAKw7D,UAoBhE2N,EAAS,CAEb,MAAMnlB,EAAWkb,EAAkBpb,EAAKE,UAClCK,EAAS6a,EAAkBpb,EAAKO,QAEjCL,EAAS1hD,OAAS,IAAI/B,EAAKyjD,SAAWA,GACtCK,EAAO/hD,OAAS,IAAI/B,EAAK8jD,OAASA,GAIxC,OAAO9jD,GAIRoJ,MAAO,WAEN,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,OAIrC8iB,KAAM,SAAW+gC,GAEhB7jD,KAAKuvB,KAAOs0B,EAAOt0B,KAEnBvvB,KAAKwlE,IAAM3hB,EAAO2hB,IAElBxlE,KAAKylE,SAAW5hB,EAAO4hB,SACvBzlE,KAAK0lE,KAAO7hB,EAAO6hB,KACnB1lE,KAAK2lE,YAAc9hB,EAAO8hB,YAC1B3lE,KAAKqlE,aAAexhB,EAAOwhB,aAE3BrlE,KAAK4lE,QAAU/hB,EAAO+hB,QACtB5lE,KAAK6lE,YAAchiB,EAAOgiB,YAE1B7lE,KAAK8lE,SAAWjiB,EAAOiiB,SACvB9lE,KAAK+lE,SAAWliB,EAAOkiB,SACvB/lE,KAAKgmE,cAAgBniB,EAAOmiB,cAC5BhmE,KAAKimE,cAAgBpiB,EAAOoiB,cAC5BjmE,KAAKkmE,cAAgBriB,EAAOqiB,cAC5BlmE,KAAKmmE,mBAAqBtiB,EAAOsiB,mBAEjCnmE,KAAKomE,UAAYviB,EAAOuiB,UACxBpmE,KAAKqmE,UAAYxiB,EAAOwiB,UACxBrmE,KAAKsmE,WAAaziB,EAAOyiB,WAEzBtmE,KAAKumE,iBAAmB1iB,EAAO0iB,iBAC/BvmE,KAAKwmE,YAAc3iB,EAAO2iB,YAC1BxmE,KAAKymE,WAAa5iB,EAAO4iB,WACzBzmE,KAAK0mE,gBAAkB7iB,EAAO6iB,gBAC9B1mE,KAAK2mE,YAAc9iB,EAAO8iB,YAC1B3mE,KAAK4mE,aAAe/iB,EAAO+iB,aAC3B5mE,KAAK6mE,aAAehjB,EAAOgjB,aAC3B7mE,KAAK8mE,aAAejjB,EAAOijB,aAE3B,MAAMsE,EAAYvnB,EAAOkjB,eACzB,IAAIsE,EAAY,KAEhB,GAAmB,OAAdD,EAAqB,CAEzB,MAAMppE,EAAIopE,EAAU9oE,OACpB+oE,EAAY,IAAIz1D,MAAO5T,GAEvB,IAAM,IAAInC,EAAI,EAAGA,IAAMmC,IAAMnC,EAE5BwrE,EAAWxrE,GAAMurE,EAAWvrE,GAAI8J,QA+BlC,OAzBA3J,KAAK+mE,eAAiBsE,EACtBrrE,KAAKgnE,iBAAmBnjB,EAAOmjB,iBAC/BhnE,KAAKinE,YAAcpjB,EAAOojB,YAE1BjnE,KAAKknE,WAAarjB,EAAOqjB,WAEzBlnE,KAAKmnE,WAAatjB,EAAOsjB,WAEzBnnE,KAAKonE,UAAYvjB,EAAOujB,UAExBpnE,KAAKqnE,cAAgBxjB,EAAOwjB,cAC5BrnE,KAAKsnE,oBAAsBzjB,EAAOyjB,oBAClCtnE,KAAKunE,mBAAqB1jB,EAAO0jB,mBAEjCvnE,KAAKwnE,UAAY3jB,EAAO2jB,UAExBxnE,KAAKynE,UAAY5jB,EAAO4jB,UACxBznE,KAAK0nE,mBAAqB7jB,EAAO6jB,mBAEjC1nE,KAAKuG,QAAUs9C,EAAOt9C,QAEtBvG,KAAK2nE,WAAa9jB,EAAO8jB,WAEzB3nE,KAAKw7D,SAAWhmD,KAAKC,MAAOD,KAAK2oD,UAAWta,EAAO2X,WAE5Cx7D,MAIRwkD,QAAS,WAERxkD,KAAKi5C,cAAe,CAAEnZ,KAAM,eAM9BtgC,OAAOC,eAAgB8lE,GAAS1sB,UAAW,cAAe,CAEzDjwC,IAAK,SAAWjJ,IAEA,IAAVA,GAAiBK,KAAKqjD,aA2E7BukB,GAAkB/uB,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACtD+uB,GAAkB/uB,UAAU3yC,YAAc0hE,GAE1CA,GAAkB/uB,UAAUyyB,qBAAsB,EAElD1D,GAAkB/uB,UAAU/1B,KAAO,SAAW+gC,GA+B7C,OA7BA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OAExBnd,KAAKu5B,IAAMsqB,EAAOtqB,IAElBv5B,KAAK6nE,SAAWhkB,EAAOgkB,SACvB7nE,KAAK8nE,kBAAoBjkB,EAAOikB,kBAEhC9nE,KAAK+nE,MAAQlkB,EAAOkkB,MACpB/nE,KAAKgoE,eAAiBnkB,EAAOmkB,eAE7BhoE,KAAKioE,YAAcpkB,EAAOokB,YAE1BjoE,KAAKkoE,SAAWrkB,EAAOqkB,SAEvBloE,KAAKmoE,OAAStkB,EAAOskB,OACrBnoE,KAAKooE,QAAUvkB,EAAOukB,QACtBpoE,KAAKqoE,aAAexkB,EAAOwkB,aAC3BroE,KAAKsoE,gBAAkBzkB,EAAOykB,gBAE9BtoE,KAAKuoE,UAAY1kB,EAAO0kB,UACxBvoE,KAAKwoE,mBAAqB3kB,EAAO2kB,mBACjCxoE,KAAKyoE,iBAAmB5kB,EAAO4kB,iBAC/BzoE,KAAK0oE,kBAAoB7kB,EAAO6kB,kBAEhC1oE,KAAK2oE,SAAW9kB,EAAO8kB,SACvB3oE,KAAK4oE,aAAe/kB,EAAO+kB,aAEpB5oE,MAIR,MAAMurE,GAAY,IAAI5gB,GAChB6gB,GAAa,IAAIxvB,GAEvB,SAASyvB,GAAiBtyB,EAAOuyB,EAAU1G,GAE1C,GAAKpvD,MAAMC,QAASsjC,GAEnB,MAAM,IAAIwyB,UAAW,yDAItB3rE,KAAKuvB,KAAO,GAEZvvB,KAAKm5C,MAAQA,EACbn5C,KAAK0rE,SAAWA,EAChB1rE,KAAKstD,WAAkBn0C,IAAVggC,EAAsBA,EAAM72C,OAASopE,EAAW,EAC7D1rE,KAAKglE,YAA4B,IAAfA,EAElBhlE,KAAK4rE,MAAQ5zB,GACbh4C,KAAK6rE,YAAc,CAAE7vD,OAAQ,EAAGsxC,OAAS,GAEzCttD,KAAKqjD,QAAU,EA8XhB,SAASyoB,GAAqB3yB,EAAOuyB,EAAU1G,GAE9CyG,GAAgBpyB,KAAMr5C,KAAM,IAAI+rE,UAAW5yB,GAASuyB,EAAU1G,GAQ/D,SAASgH,GAAsB7yB,EAAOuyB,EAAU1G,GAE/CyG,GAAgBpyB,KAAMr5C,KAAM,IAAIisE,WAAY9yB,GAASuyB,EAAU1G,GAQhE,SAASkH,GAA6B/yB,EAAOuyB,EAAU1G,GAEtDyG,GAAgBpyB,KAAMr5C,KAAM,IAAImsE,kBAAmBhzB,GAASuyB,EAAU1G,GAQvE,SAASoH,GAAsBjzB,EAAOuyB,EAAU1G,GAE/CyG,GAAgBpyB,KAAMr5C,KAAM,IAAIqsE,WAAYlzB,GAASuyB,EAAU1G,GAQhE,SAASsH,GAAuBnzB,EAAOuyB,EAAU1G,GAEhDyG,GAAgBpyB,KAAMr5C,KAAM,IAAIusE,YAAapzB,GAASuyB,EAAU1G,GAQjE,SAASwH,GAAsBrzB,EAAOuyB,EAAU1G,GAE/CyG,GAAgBpyB,KAAMr5C,KAAM,IAAIysE,WAAYtzB,GAASuyB,EAAU1G,GAQhE,SAAS0H,GAAuBvzB,EAAOuyB,EAAU1G,GAEhDyG,GAAgBpyB,KAAMr5C,KAAM,IAAI2sE,YAAaxzB,GAASuyB,EAAU1G,GAOjE,SAAS4H,GAAwBzzB,EAAOuyB,EAAU1G,GAEjDyG,GAAgBpyB,KAAMr5C,KAAM,IAAIusE,YAAapzB,GAASuyB,EAAU1G,GAQjE,SAAS6H,GAAwB1zB,EAAOuyB,EAAU1G,GAEjDyG,GAAgBpyB,KAAMr5C,KAAM,IAAI0mB,aAAcyyB,GAASuyB,EAAU1G,GAQlE,SAAS8H,GAAwB3zB,EAAOuyB,EAAU1G,GAEjDyG,GAAgBpyB,KAAMr5C,KAAM,IAAI+sE,aAAc5zB,GAASuyB,EAAU1G,GArdlExlE,OAAOC,eAAgBgsE,GAAgB5yB,UAAW,cAAe,CAEhEjwC,IAAK,SAAWjJ,IAEA,IAAVA,GAAiBK,KAAKqjD,aAM7B7jD,OAAOo5C,OAAQ6yB,GAAgB5yB,UAAW,CAEzCm0B,mBAAmB,EAEnBC,iBAAkB,aAElBC,SAAU,SAAWvtE,GAIpB,OAFAK,KAAK4rE,MAAQjsE,EAENK,MAIR8iB,KAAM,SAAW+gC,GAUhB,OARA7jD,KAAKuvB,KAAOs0B,EAAOt0B,KACnBvvB,KAAKm5C,MAAQ,IAAI0K,EAAO1K,MAAMjzC,YAAa29C,EAAO1K,OAClDn5C,KAAK0rE,SAAW7nB,EAAO6nB,SACvB1rE,KAAKstD,MAAQzJ,EAAOyJ,MACpBttD,KAAKglE,WAAanhB,EAAOmhB,WAEzBhlE,KAAK4rE,MAAQ/nB,EAAO+nB,MAEb5rE,MAIRmtE,OAAQ,SAAWC,EAAQxvB,EAAWyvB,GAErCD,GAAUptE,KAAK0rE,SACf2B,GAAUzvB,EAAU8tB,SAEpB,IAAM,IAAI7rE,EAAI,EAAGwO,EAAIrO,KAAK0rE,SAAU7rE,EAAIwO,EAAGxO,IAE1CG,KAAKm5C,MAAOi0B,EAASvtE,GAAM+9C,EAAUzE,MAAOk0B,EAASxtE,GAItD,OAAOG,MAIRstE,UAAW,SAAWn0B,GAIrB,OAFAn5C,KAAKm5C,MAAMvwC,IAAKuwC,GAETn5C,MAIRutE,gBAAiB,SAAWC,GAE3B,MAAMr0B,EAAQn5C,KAAKm5C,MACnB,IAAIn9B,EAAS,EAEb,IAAM,IAAInc,EAAI,EAAGwO,EAAIm/D,EAAOlrE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,IAAIsd,EAAQqwD,EAAQ3tE,QAELsZ,IAAVgE,IAEJxQ,QAAQoK,KAAM,8DAA+DlX,GAC7Esd,EAAQ,IAAI0rB,IAIbsQ,EAAOn9B,KAAcmB,EAAM5Y,EAC3B40C,EAAOn9B,KAAcmB,EAAM2rB,EAC3BqQ,EAAOn9B,KAAcmB,EAAM3b,EAI5B,OAAOxB,MAIRytE,kBAAmB,SAAWC,GAE7B,MAAMv0B,EAAQn5C,KAAKm5C,MACnB,IAAIn9B,EAAS,EAEb,IAAM,IAAInc,EAAI,EAAGwO,EAAIq/D,EAAQprE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAElD,IAAIk+B,EAAS2vC,EAAS7tE,QAENsZ,IAAX4kB,IAEJpxB,QAAQoK,KAAM,iEAAkElX,GAChFk+B,EAAS,IAAIie,IAId7C,EAAOn9B,KAAc+hB,EAAOj+B,EAC5Bq5C,EAAOn9B,KAAc+hB,EAAOh+B,EAI7B,OAAOC,MAIR2tE,kBAAmB,SAAWD,GAE7B,MAAMv0B,EAAQn5C,KAAKm5C,MACnB,IAAIn9B,EAAS,EAEb,IAAM,IAAInc,EAAI,EAAGwO,EAAIq/D,EAAQprE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAElD,IAAIk+B,EAAS2vC,EAAS7tE,QAENsZ,IAAX4kB,IAEJpxB,QAAQoK,KAAM,iEAAkElX,GAChFk+B,EAAS,IAAI4sB,IAIdxR,EAAOn9B,KAAc+hB,EAAOj+B,EAC5Bq5C,EAAOn9B,KAAc+hB,EAAOh+B,EAC5Bo5C,EAAOn9B,KAAc+hB,EAAO59B,EAI7B,OAAOH,MAIR4tE,kBAAmB,SAAWF,GAE7B,MAAMv0B,EAAQn5C,KAAKm5C,MACnB,IAAIn9B,EAAS,EAEb,IAAM,IAAInc,EAAI,EAAGwO,EAAIq/D,EAAQprE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAElD,IAAIk+B,EAAS2vC,EAAS7tE,QAENsZ,IAAX4kB,IAEJpxB,QAAQoK,KAAM,iEAAkElX,GAChFk+B,EAAS,IAAI4mB,IAIdxL,EAAOn9B,KAAc+hB,EAAOj+B,EAC5Bq5C,EAAOn9B,KAAc+hB,EAAOh+B,EAC5Bo5C,EAAOn9B,KAAc+hB,EAAO59B,EAC5Bg5C,EAAOn9B,KAAc+hB,EAAOztB,EAI7B,OAAOtQ,MAIR48C,aAAc,SAAWh6C,GAExB,GAAuB,IAAlB5C,KAAK0rE,SAET,IAAM,IAAI7rE,EAAI,EAAGwO,EAAIrO,KAAKstD,MAAOztD,EAAIwO,EAAGxO,IAEvC2rE,GAAW7tB,oBAAqB39C,KAAMH,GACtC2rE,GAAW5uB,aAAch6C,GAEzB5C,KAAK6tE,MAAOhuE,EAAG2rE,GAAW1rE,EAAG0rE,GAAWzrE,QAInC,GAAuB,IAAlBC,KAAK0rE,SAEhB,IAAM,IAAI7rE,EAAI,EAAGwO,EAAIrO,KAAKstD,MAAOztD,EAAIwO,EAAGxO,IAEvC0rE,GAAU5tB,oBAAqB39C,KAAMH,GACrC0rE,GAAU3uB,aAAch6C,GAExB5C,KAAK8tE,OAAQjuE,EAAG0rE,GAAUzrE,EAAGyrE,GAAUxrE,EAAGwrE,GAAUprE,GAMtD,OAAOH,MAIR8kD,aAAc,SAAWliD,GAExB,IAAM,IAAI/C,EAAI,EAAGwO,EAAIrO,KAAKstD,MAAOztD,EAAIwO,EAAGxO,IAEvC0rE,GAAUzrE,EAAIE,KAAK69C,KAAMh+C,GACzB0rE,GAAUxrE,EAAIC,KAAK89C,KAAMj+C,GACzB0rE,GAAUprE,EAAIH,KAAKkmD,KAAMrmD,GAEzB0rE,GAAUzmB,aAAcliD,GAExB5C,KAAK8tE,OAAQjuE,EAAG0rE,GAAUzrE,EAAGyrE,GAAUxrE,EAAGwrE,GAAUprE,GAIrD,OAAOH,MAIRirD,kBAAmB,SAAWroD,GAE7B,IAAM,IAAI/C,EAAI,EAAGwO,EAAIrO,KAAKstD,MAAOztD,EAAIwO,EAAGxO,IAEvC0rE,GAAUzrE,EAAIE,KAAK69C,KAAMh+C,GACzB0rE,GAAUxrE,EAAIC,KAAK89C,KAAMj+C,GACzB0rE,GAAUprE,EAAIH,KAAKkmD,KAAMrmD,GAEzB0rE,GAAUtgB,kBAAmBroD,GAE7B5C,KAAK8tE,OAAQjuE,EAAG0rE,GAAUzrE,EAAGyrE,GAAUxrE,EAAGwrE,GAAUprE,GAIrD,OAAOH,MAIRgsD,mBAAoB,SAAWppD,GAE9B,IAAM,IAAI/C,EAAI,EAAGwO,EAAIrO,KAAKstD,MAAOztD,EAAIwO,EAAGxO,IAEvC0rE,GAAUzrE,EAAIE,KAAK69C,KAAMh+C,GACzB0rE,GAAUxrE,EAAIC,KAAK89C,KAAMj+C,GACzB0rE,GAAUprE,EAAIH,KAAKkmD,KAAMrmD,GAEzB0rE,GAAUvf,mBAAoBppD,GAE9B5C,KAAK8tE,OAAQjuE,EAAG0rE,GAAUzrE,EAAGyrE,GAAUxrE,EAAGwrE,GAAUprE,GAIrD,OAAOH,MAIR4I,IAAK,SAAWjJ,EAAOqc,EAAS,GAI/B,OAFAhc,KAAKm5C,MAAMvwC,IAAKjJ,EAAOqc,GAEhBhc,MAIR69C,KAAM,SAAW1xC,GAEhB,OAAOnM,KAAKm5C,MAAOhtC,EAAQnM,KAAK0rE,WAIjC7iE,KAAM,SAAWsD,EAAOrM,GAIvB,OAFAE,KAAKm5C,MAAOhtC,EAAQnM,KAAK0rE,UAAa5rE,EAE/BE,MAIR89C,KAAM,SAAW3xC,GAEhB,OAAOnM,KAAKm5C,MAAOhtC,EAAQnM,KAAK0rE,SAAW,IAI5C5iE,KAAM,SAAWqD,EAAOpM,GAIvB,OAFAC,KAAKm5C,MAAOhtC,EAAQnM,KAAK0rE,SAAW,GAAM3rE,EAEnCC,MAIRkmD,KAAM,SAAW/5C,GAEhB,OAAOnM,KAAKm5C,MAAOhtC,EAAQnM,KAAK0rE,SAAW,IAI5C9mB,KAAM,SAAWz4C,EAAOhM,GAIvB,OAFAH,KAAKm5C,MAAOhtC,EAAQnM,KAAK0rE,SAAW,GAAMvrE,EAEnCH,MAIRmmD,KAAM,SAAWh6C,GAEhB,OAAOnM,KAAKm5C,MAAOhtC,EAAQnM,KAAK0rE,SAAW,IAI5C7mB,KAAM,SAAW14C,EAAOmE,GAIvB,OAFAtQ,KAAKm5C,MAAOhtC,EAAQnM,KAAK0rE,SAAW,GAAMp7D,EAEnCtQ,MAIR6tE,MAAO,SAAW1hE,EAAOrM,EAAGC,GAO3B,OALAoM,GAASnM,KAAK0rE,SAEd1rE,KAAKm5C,MAAOhtC,EAAQ,GAAMrM,EAC1BE,KAAKm5C,MAAOhtC,EAAQ,GAAMpM,EAEnBC,MAIR8tE,OAAQ,SAAW3hE,EAAOrM,EAAGC,EAAGI,GAQ/B,OANAgM,GAASnM,KAAK0rE,SAEd1rE,KAAKm5C,MAAOhtC,EAAQ,GAAMrM,EAC1BE,KAAKm5C,MAAOhtC,EAAQ,GAAMpM,EAC1BC,KAAKm5C,MAAOhtC,EAAQ,GAAMhM,EAEnBH,MAIR+tE,QAAS,SAAW5hE,EAAOrM,EAAGC,EAAGI,EAAGmQ,GASnC,OAPAnE,GAASnM,KAAK0rE,SAEd1rE,KAAKm5C,MAAOhtC,EAAQ,GAAMrM,EAC1BE,KAAKm5C,MAAOhtC,EAAQ,GAAMpM,EAC1BC,KAAKm5C,MAAOhtC,EAAQ,GAAMhM,EAC1BH,KAAKm5C,MAAOhtC,EAAQ,GAAMmE,EAEnBtQ,MAIRguE,SAAU,SAAW78C,GAIpB,OAFAnxB,KAAKitE,iBAAmB97C,EAEjBnxB,MAIR2J,MAAO,WAEN,OAAO,IAAI3J,KAAKkG,YAAalG,KAAKm5C,MAAOn5C,KAAK0rE,UAAW5oD,KAAM9iB,OAIhEqV,OAAQ,WAEP,MAAO,CACNq2D,SAAU1rE,KAAK0rE,SACf5rC,KAAM9/B,KAAKm5C,MAAMjzC,YAAYqpB,KAC7B4pB,MAAOvjC,MAAMijC,UAAUO,MAAMC,KAAMr5C,KAAKm5C,OACxC6rB,WAAYhlE,KAAKglE,eAepB8G,GAAoBjzB,UAAYr5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WAC/DizB,GAAoBjzB,UAAU3yC,YAAc4lE,GAS5CE,GAAqBnzB,UAAYr5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WAChEmzB,GAAqBnzB,UAAU3yC,YAAc8lE,GAS7CE,GAA4BrzB,UAAYr5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WACvEqzB,GAA4BrzB,UAAU3yC,YAAcgmE,GASpDE,GAAqBvzB,UAAYr5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WAChEuzB,GAAqBvzB,UAAU3yC,YAAckmE,GAS7CE,GAAsBzzB,UAAYr5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WACjEyzB,GAAsBzzB,UAAU3yC,YAAcomE,GAS9CE,GAAqB3zB,UAAYr5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WAChE2zB,GAAqB3zB,UAAU3yC,YAAcsmE,GAS7CE,GAAsB7zB,UAAYr5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WACjE6zB,GAAsB7zB,UAAU3yC,YAAcwmE,GAQ9CE,GAAuB/zB,UAAYr5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WAClE+zB,GAAuB/zB,UAAU3yC,YAAc0mE,GAC/CA,GAAuB/zB,UAAUo1B,0BAA2B,EAQ5DpB,GAAuBh0B,UAAYr5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WAClEg0B,GAAuBh0B,UAAU3yC,YAAc2mE,GAS/CC,GAAuBj0B,UAAYr5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WAClEi0B,GAAuBj0B,UAAU3yC,YAAc4mE,GAE/C,MAAMoB,GAELhoE,cAEClG,KAAK8L,SAAW,GAChB9L,KAAKmuE,QAAU,GACfnuE,KAAKwtE,OAAS,GACdxtE,KAAKouE,IAAM,GACXpuE,KAAKquE,KAAO,GAEZruE,KAAKsuE,OAAS,GAEdtuE,KAAK4oE,aAAe,GAEpB5oE,KAAKuuE,YAAc,GACnBvuE,KAAKwuE,YAAc,GAInBxuE,KAAKyuD,YAAc,KACnBzuD,KAAKyuE,eAAiB,KAItBzuE,KAAK0uE,oBAAqB,EAC1B1uE,KAAK2uE,mBAAoB,EACzB3uE,KAAK4uE,kBAAmB,EACxB5uE,KAAK6uE,eAAgB,EACrB7uE,KAAK8uE,kBAAmB,EAIzBC,cAAevgB,GAEd,MAAM8f,EAAS,GAEf,IAAIU,EAAOnvE,EACPslE,EAEJ,MAAM8J,EAAQzgB,EAASygB,MAEvB,IAAMpvE,EAAI,EAAGA,EAAIovE,EAAM3sE,OAAQzC,IAAO,CAErC,MAAMqvE,EAAOD,EAAOpvE,GAIfqvE,EAAK/J,gBAAkBA,IAE3BA,EAAgB+J,EAAK/J,mBAENhsD,IAAV61D,IAEJA,EAAM1hB,MAAc,EAAJztD,EAAUmvE,EAAMxuE,MAChC8tE,EAAOhtE,KAAM0tE,IAIdA,EAAQ,CACPxuE,MAAW,EAAJX,EACPslE,cAAeA,SAOHhsD,IAAV61D,IAEJA,EAAM1hB,MAAc,EAAJztD,EAAUmvE,EAAMxuE,MAChC8tE,EAAOhtE,KAAM0tE,IAIdhvE,KAAKsuE,OAASA,EAIfa,aAAc3gB,GAEb,MAAMygB,EAAQzgB,EAASygB,MACjBnjE,EAAW0iD,EAAS1iD,SACpBsjE,EAAgB5gB,EAAS4gB,cAEzBC,EAAkBD,EAAe,IAAOA,EAAe,GAAI9sE,OAAS,EACpEgtE,EAAmBF,EAAe,IAAOA,EAAe,GAAI9sE,OAAS,EAIrEsmE,EAAepa,EAASoa,aACxB2G,EAAqB3G,EAAatmE,OAExC,IAAIktE,EAEJ,GAAKD,EAAqB,EAAI,CAE7BC,EAAuB,GAEvB,IAAM,IAAI3vE,EAAI,EAAGA,EAAI0vE,EAAoB1vE,IAExC2vE,EAAsB3vE,GAAM,CAC3B0vB,KAAMq5C,EAAc/oE,GAAI0vB,KACvBhvB,KAAM,IAKTP,KAAK4oE,aAAajpD,SAAW6vD,EAI9B,MAAMrE,EAAe3c,EAAS2c,aACxBsE,EAAqBtE,EAAa7oE,OAExC,IAAIotE,EAEJ,GAAKD,EAAqB,EAAI,CAE7BC,EAAqB,GAErB,IAAM,IAAI7vE,EAAI,EAAGA,EAAI4vE,EAAoB5vE,IAExC6vE,EAAoB7vE,GAAM,CACzB0vB,KAAM47C,EAActrE,GAAI0vB,KACvBhvB,KAAM,IAKTP,KAAK4oE,aAAapxC,OAASk4C,EAM5B,MAAMlB,EAAchgB,EAASggB,YACvBD,EAAc/f,EAAS+f,YAEvBoB,EAAiBnB,EAAYlsE,SAAWwJ,EAASxJ,OACjDstE,EAAiBrB,EAAYjsE,SAAWwJ,EAASxJ,OAIlDwJ,EAASxJ,OAAS,GAAsB,IAAjB2sE,EAAM3sE,QAEjCqK,QAAQu1B,MAAO,gEAIhB,IAAM,IAAIriC,EAAI,EAAGA,EAAIovE,EAAM3sE,OAAQzC,IAAO,CAEzC,MAAMqvE,EAAOD,EAAOpvE,GAEpBG,KAAK8L,SAASxK,KAAMwK,EAAUojE,EAAK3tE,GAAKuK,EAAUojE,EAAK1tE,GAAKsK,EAAUojE,EAAKztE,IAE3E,MAAM2jE,EAAgB8J,EAAK9J,cAE3B,GAA8B,IAAzBA,EAAc9iE,OAElBtC,KAAKmuE,QAAQ7sE,KAAM8jE,EAAe,GAAKA,EAAe,GAAKA,EAAe,QAEpE,CAEN,MAAM5tC,EAAS03C,EAAK13C,OAEpBx3B,KAAKmuE,QAAQ7sE,KAAMk2B,EAAQA,EAAQA,GAIpC,MAAM6tC,EAAe6J,EAAK7J,aAE1B,GAA6B,IAAxBA,EAAa/iE,OAEjBtC,KAAKwtE,OAAOlsE,KAAM+jE,EAAc,GAAKA,EAAc,GAAKA,EAAc,QAEhE,CAEN,MAAMloD,EAAQ+xD,EAAK/xD,MAEnBnd,KAAKwtE,OAAOlsE,KAAM6b,EAAOA,EAAOA,GAIjC,IAAyB,IAApBkyD,EAA2B,CAE/B,MAAMQ,EAAYT,EAAe,GAAKvvE,QAEnBsZ,IAAd02D,EAEJ7vE,KAAKouE,IAAI9sE,KAAMuuE,EAAW,GAAKA,EAAW,GAAKA,EAAW,KAI1DljE,QAAQoK,KAAM,2DAA4DlX,GAE1EG,KAAKouE,IAAI9sE,KAAM,IAAI06C,GAAW,IAAIA,GAAW,IAAIA,KAMnD,IAA0B,IAArBszB,EAA4B,CAEhC,MAAMO,EAAYT,EAAe,GAAKvvE,QAEnBsZ,IAAd02D,EAEJ7vE,KAAKquE,KAAK/sE,KAAMuuE,EAAW,GAAKA,EAAW,GAAKA,EAAW,KAI3DljE,QAAQoK,KAAM,4DAA6DlX,GAE3EG,KAAKquE,KAAK/sE,KAAM,IAAI06C,GAAW,IAAIA,GAAW,IAAIA,KAQpD,IAAM,IAAIv2C,EAAI,EAAGA,EAAI8pE,EAAoB9pE,IAAO,CAE/C,MAAMqqE,EAAclH,EAAcnjE,GAAIqG,SAEtC0jE,EAAsB/pE,GAAIlF,KAAKe,KAAMwuE,EAAaZ,EAAK3tE,GAAKuuE,EAAaZ,EAAK1tE,GAAKsuE,EAAaZ,EAAKztE,IAItG,IAAM,IAAIgE,EAAI,EAAGA,EAAIgqE,EAAoBhqE,IAAO,CAE/C,MAAMsqE,EAAc5E,EAAc1lE,GAAI2/D,cAAevlE,GAErD6vE,EAAoBjqE,GAAIlF,KAAKe,KAAMyuE,EAAYxuE,EAAGwuE,EAAYvuE,EAAGuuE,EAAYtuE,GAMzEkuE,GAEJ3vE,KAAKwuE,YAAYltE,KAAMktE,EAAaU,EAAK3tE,GAAKitE,EAAaU,EAAK1tE,GAAKgtE,EAAaU,EAAKztE,IAInFmuE,GAEJ5vE,KAAKuuE,YAAYjtE,KAAMitE,EAAaW,EAAK3tE,GAAKgtE,EAAaW,EAAK1tE,GAAK+sE,EAAaW,EAAKztE,IA0BzF,OApBAzB,KAAK+uE,cAAevgB,GAEpBxuD,KAAK0uE,mBAAqBlgB,EAASkgB,mBACnC1uE,KAAK2uE,kBAAoBngB,EAASmgB,kBAClC3uE,KAAK4uE,iBAAmBpgB,EAASogB,iBACjC5uE,KAAK6uE,cAAgBrgB,EAASqgB,cAC9B7uE,KAAK8uE,iBAAmBtgB,EAASsgB,iBAEA,OAA5BtgB,EAASigB,iBAEbzuE,KAAKyuE,eAAiBjgB,EAASigB,eAAe9kE,SAIjB,OAAzB6kD,EAASC,cAEbzuD,KAAKyuD,YAAcD,EAASC,YAAY9kD,SAIlC3J,MAMT,SAASgwE,GAAU72B,GAElB,GAAsB,IAAjBA,EAAM72C,OAAe,OAASc,EAAAA,EAEnC,IAAI4B,EAAMm0C,EAAO,GAEjB,IAAM,IAAIt5C,EAAI,EAAGwO,EAAI8qC,EAAM72C,OAAQzC,EAAIwO,IAAMxO,EAEvCs5C,EAAOt5C,GAAMmF,IAAMA,EAAMm0C,EAAOt5C,IAItC,OAAOmF,EAIR,MAAMirE,GAAe,CACpBlE,UACAE,WAEAE,kBAAgD,oBAAtBA,kBAAoCA,kBAAoBF,WAClFI,WACAE,YACAE,WACAE,YACAjmD,aACAqmD,cAGD,SAASmD,GAAepwC,EAAM30B,GAE7B,OAAO,IAAI8kE,GAAcnwC,GAAQ30B,GAIlC,IAAIglE,GAAoB,EAExB,MAAMC,GAAQ,IAAIlc,GACZmc,GAAO,IAAI5V,GACX6V,GAAU,IAAI3lB,GACd4lB,GAAS,IAAIpjB,GACbqjB,GAAmB,IAAIrjB,GACvBsjB,GAAY,IAAI9lB,GAEtB,SAAS+lB,KAERlxE,OAAOC,eAAgBO,KAAM,KAAM,CAAEL,MAAOwwE,IAAqB,IAEjEnwE,KAAK4iD,KAAOpJ,GAAUG,eAEtB35C,KAAKuvB,KAAO,GACZvvB,KAAK8/B,KAAO,iBAEZ9/B,KAAKmM,MAAQ,KACbnM,KAAK2wE,WAAa,GAElB3wE,KAAK4wE,gBAAkB,GACvB5wE,KAAK6wE,sBAAuB,EAE5B7wE,KAAKsuE,OAAS,GAEdtuE,KAAKyuD,YAAc,KACnBzuD,KAAKyuE,eAAiB,KAEtBzuE,KAAK8wE,UAAY,CAAEtwE,MAAO,EAAG8sD,MAAOlqD,EAAAA,GAEpCpD,KAAKw7D,SAAW,GAIjBkV,GAAe73B,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ/K,GAAgBE,WAAa,CAErF3yC,YAAawqE,GAEbK,kBAAkB,EAElBC,SAAU,WAET,OAAOhxE,KAAKmM,OAIb8kE,SAAU,SAAW9kE,GAYpB,OAVKyJ,MAAMC,QAAS1J,GAEnBnM,KAAKmM,MAAQ,IAAM6jE,GAAU7jE,GAAU,MAAQugE,GAAwBJ,IAAyBngE,EAAO,GAIvGnM,KAAKmM,MAAQA,EAIPnM,MAIRmf,aAAc,SAAWoQ,GAExB,OAAOvvB,KAAK2wE,WAAYphD,IAIzBhR,aAAc,SAAWgR,EAAMquB,GAI9B,OAFA59C,KAAK2wE,WAAYphD,GAASquB,EAEnB59C,MAIRkxE,gBAAiB,SAAW3hD,GAI3B,cAFOvvB,KAAK2wE,WAAYphD,GAEjBvvB,MAIRmxE,aAAc,SAAW5hD,GAExB,YAAmCpW,IAA5BnZ,KAAK2wE,WAAYphD,IAIzB6hD,SAAU,SAAW5wE,EAAO8sD,EAAO6X,EAAgB,GAElDnlE,KAAKsuE,OAAOhtE,KAAM,CAEjBd,MAAOA,EACP8sD,MAAOA,EACP6X,cAAeA,KAMjBkM,YAAa,WAEZrxE,KAAKsuE,OAAS,IAIfgD,aAAc,SAAW9wE,EAAO8sD,GAE/BttD,KAAK8wE,UAAUtwE,MAAQA,EACvBR,KAAK8wE,UAAUxjB,MAAQA,GAIxBxI,aAAc,SAAWtD,GAExB,MAAM7hC,EAAW3f,KAAK2wE,WAAWhxD,cAEfxG,IAAbwG,IAEJA,EAASmlC,aAActD,GAEvB7hC,EAAS4xD,aAAc,GAIxB,MAAM/5C,EAASx3B,KAAK2wE,WAAWn5C,OAE/B,QAAgBre,IAAXqe,EAAuB,CAE3B,MAAMwjC,GAAe,IAAIhd,IAAUgD,gBAAiBQ,GAEpDhqB,EAAOyzB,kBAAmB+P,GAE1BxjC,EAAO+5C,aAAc,EAItB,MAAMC,EAAUxxE,KAAK2wE,WAAWa,QAsBhC,YApBiBr4D,IAAZq4D,IAEJA,EAAQxlB,mBAAoBxK,GAE5BgwB,EAAQD,aAAc,GAIG,OAArBvxE,KAAKyuD,aAETzuD,KAAK0uD,qBAIuB,OAAxB1uD,KAAKyuE,gBAETzuE,KAAKyxE,wBAICzxE,MAIRk8D,QAAS,SAAWlyD,GAQnB,OAJAomE,GAAMjZ,cAAentD,GAErBhK,KAAK8kD,aAAcsrB,IAEZpwE,MAIRm8D,QAAS,SAAWnyD,GAQnB,OAJAomE,GAAMhZ,cAAeptD,GAErBhK,KAAK8kD,aAAcsrB,IAEZpwE,MAIRo8D,QAAS,SAAWpyD,GAQnB,OAJAomE,GAAM/Y,cAAertD,GAErBhK,KAAK8kD,aAAcsrB,IAEZpwE,MAIRuS,UAAW,SAAWzS,EAAGC,EAAGI,GAQ3B,OAJAiwE,GAAMlZ,gBAAiBp3D,EAAGC,EAAGI,GAE7BH,KAAK8kD,aAAcsrB,IAEZpwE,MAIRqK,MAAO,SAAWvK,EAAGC,EAAGI,GAQvB,OAJAiwE,GAAM7Y,UAAWz3D,EAAGC,EAAGI,GAEvBH,KAAK8kD,aAAcsrB,IAEZpwE,MAIR2xD,OAAQ,SAAW5zB,GAQlB,OANAsyC,GAAK1e,OAAQ5zB,GAEbsyC,GAAKzsB,eAEL5jD,KAAK8kD,aAAcurB,GAAK7uB,QAEjBxhD,MAIRuK,OAAQ,WAQP,OANAvK,KAAK0uD,qBAEL1uD,KAAKyuD,YAAYhgD,UAAW6hE,IAAUnzB,SAEtCn9C,KAAKuS,UAAW+9D,GAAQxwE,EAAGwwE,GAAQvwE,EAAGuwE,GAAQnwE,GAEvCH,MAIR+tD,cAAe,SAAWC,GAIzB,MAAMQ,EAAWR,EAAOQ,SAExB,GAAKR,EAAOwQ,UAAYxQ,EAAOuQ,OAAS,CAEvC,MAAMmT,EAAY,IAAI7E,GAAmD,EAA3Bre,EAAS1iD,SAASxJ,OAAY,GACtEkrE,EAAS,IAAIX,GAAiD,EAAzBre,EAASgf,OAAOlrE,OAAY,GAKvE,GAHAtC,KAAKue,aAAc,WAAYmzD,EAAU/D,kBAAmBnf,EAAS1iD,WACrE9L,KAAKue,aAAc,QAASivD,EAAOD,gBAAiB/e,EAASgf,SAExDhf,EAASmjB,eAAiBnjB,EAASmjB,cAAcrvE,SAAWksD,EAAS1iD,SAASxJ,OAAS,CAE3F,MAAMqvE,EAAgB,IAAI9E,GAAwBre,EAASmjB,cAAcrvE,OAAQ,GAEjFtC,KAAKue,aAAc,eAAgBozD,EAAcrE,UAAW9e,EAASmjB,gBAIrC,OAA5BnjB,EAASigB,iBAEbzuE,KAAKyuE,eAAiBjgB,EAASigB,eAAe9kE,SAIjB,OAAzB6kD,EAASC,cAEbzuD,KAAKyuD,YAAcD,EAASC,YAAY9kD,cAI9BqkD,EAAOsQ,QAEb9P,GAAYA,EAASojB,YAEzB5xE,KAAKmvE,aAAc3gB,GAMrB,OAAOxuD,MAIRutD,cAAe,SAAWC,GAEzB,MAAM7tC,EAAW,GAEjB,IAAM,IAAI9f,EAAI,EAAGwO,EAAIm/C,EAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAMoQ,EAAQu9C,EAAQ3tD,GACtB8f,EAASre,KAAM2O,EAAMnQ,EAAGmQ,EAAMlQ,EAAGkQ,EAAM9P,GAAK,GAM7C,OAFAH,KAAKue,aAAc,WAAY,IAAIsuD,GAAwBltD,EAAU,IAE9D3f,MAIR6xE,iBAAkB,SAAW7jB,GAE5B,IAAIQ,EAAWR,EAAOQ,SAEtB,GAAKR,EAAOsQ,OAAS,CAEpB,IAAIwT,EAAStjB,EAASujB,iBAStB,IAPqC,IAAhCvjB,EAASwjB,qBAEbF,OAAS34D,EACTq1C,EAASwjB,oBAAqB,QAIf74D,IAAX24D,EAEJ,OAAO9xE,KAAKmvE,aAAc3gB,GAI3BsjB,EAAOpD,mBAAqBlgB,EAASkgB,mBACrCoD,EAAOnD,kBAAoBngB,EAASmgB,kBACpCmD,EAAOlD,iBAAmBpgB,EAASogB,iBACnCkD,EAAOjD,cAAgBrgB,EAASqgB,cAChCiD,EAAOhD,iBAAmBtgB,EAASsgB,iBAEnCtgB,EAASkgB,oBAAqB,EAC9BlgB,EAASmgB,mBAAoB,EAC7BngB,EAASogB,kBAAmB,EAC5BpgB,EAASqgB,eAAgB,EACzBrgB,EAASsgB,kBAAmB,EAE5BtgB,EAAWsjB,EAIZ,IAAqC,IAAhCtjB,EAASkgB,mBAA8B,CAE3C,MAAM9wB,EAAY59C,KAAK2wE,WAAWhxD,cAEfxG,IAAdykC,IAEJA,EAAU+vB,kBAAmBnf,EAAS1iD,UACtC8xC,EAAU2zB,aAAc,GAIzB/iB,EAASkgB,oBAAqB,EAI/B,IAAoC,IAA/BlgB,EAASmgB,kBAA6B,CAE1C,MAAM/wB,EAAY59C,KAAK2wE,WAAWn5C,YAEfre,IAAdykC,IAEJA,EAAU+vB,kBAAmBnf,EAAS2f,SACtCvwB,EAAU2zB,aAAc,GAIzB/iB,EAASmgB,mBAAoB,EAI9B,IAAmC,IAA9BngB,EAASogB,iBAA4B,CAEzC,MAAMhxB,EAAY59C,KAAK2wE,WAAWxzD,WAEfhE,IAAdykC,IAEJA,EAAU2vB,gBAAiB/e,EAASgf,QACpC5vB,EAAU2zB,aAAc,GAIzB/iB,EAASogB,kBAAmB,EAI7B,GAAKpgB,EAASqgB,cAAgB,CAE7B,MAAMjxB,EAAY59C,KAAK2wE,WAAWjsB,QAEfvrC,IAAdykC,IAEJA,EAAU6vB,kBAAmBjf,EAAS4f,KACtCxwB,EAAU2zB,aAAc,GAIzB/iB,EAASqgB,eAAgB,EAI1B,GAAKrgB,EAASyjB,wBAA0B,CAEvC,MAAMr0B,EAAY59C,KAAK2wE,WAAWv2D,kBAEfjB,IAAdykC,IAEJA,EAAU0vB,UAAW9e,EAASmjB,eAC9B/zB,EAAU2zB,aAAc,GAIzB/iB,EAASyjB,yBAA0B,EAapC,OATKzjB,EAASsgB,mBAEbtgB,EAASugB,cAAe/gB,EAAOQ,UAC/BxuD,KAAKsuE,OAAS9f,EAAS8f,OAEvB9f,EAASsgB,kBAAmB,GAItB9uE,MAIRmvE,aAAc,SAAW3gB,GAIxB,OAFAA,EAASujB,kBAAmB,IAAI7D,IAAiBiB,aAAc3gB,GAExDxuD,KAAKkyE,mBAAoB1jB,EAASujB,mBAI1CG,mBAAoB,SAAW1jB,GAE9B,MAAMkjB,EAAY,IAAIhrD,aAAyC,EAA3B8nC,EAAS1iD,SAASxJ,QAGtD,GAFAtC,KAAKue,aAAc,WAAY,IAAIktD,GAAiBiG,EAAW,GAAI/D,kBAAmBnf,EAAS1iD,WAE1F0iD,EAAS2f,QAAQ7rE,OAAS,EAAI,CAElC,MAAM6rE,EAAU,IAAIznD,aAAwC,EAA1B8nC,EAAS2f,QAAQ7rE,QACnDtC,KAAKue,aAAc,SAAU,IAAIktD,GAAiB0C,EAAS,GAAIR,kBAAmBnf,EAAS2f,UAI5F,GAAK3f,EAASgf,OAAOlrE,OAAS,EAAI,CAEjC,MAAMkrE,EAAS,IAAI9mD,aAAuC,EAAzB8nC,EAASgf,OAAOlrE,QACjDtC,KAAKue,aAAc,QAAS,IAAIktD,GAAiB+B,EAAQ,GAAID,gBAAiB/e,EAASgf,SAIxF,GAAKhf,EAAS4f,IAAI9rE,OAAS,EAAI,CAE9B,MAAM8rE,EAAM,IAAI1nD,aAAoC,EAAtB8nC,EAAS4f,IAAI9rE,QAC3CtC,KAAKue,aAAc,KAAM,IAAIktD,GAAiB2C,EAAK,GAAIX,kBAAmBjf,EAAS4f,MAIpF,GAAK5f,EAAS6f,KAAK/rE,OAAS,EAAI,CAE/B,MAAM+rE,EAAO,IAAI3nD,aAAqC,EAAvB8nC,EAAS6f,KAAK/rE,QAC7CtC,KAAKue,aAAc,MAAO,IAAIktD,GAAiB4C,EAAM,GAAIZ,kBAAmBjf,EAAS6f,OAMtFruE,KAAKsuE,OAAS9f,EAAS8f,OAIvB,IAAM,MAAM/+C,KAAQi/B,EAASoa,aAAe,CAE3C,MAAMzvB,EAAQ,GACRyvB,EAAepa,EAASoa,aAAcr5C,GAE5C,IAAM,IAAI1vB,EAAI,EAAGwO,EAAIu6D,EAAatmE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEvD,MAAMiwE,EAAclH,EAAc/oE,GAE5B+9C,EAAY,IAAIivB,GAAkD,EAA1BiD,EAAYvvE,KAAK+B,OAAY,GAC3Es7C,EAAUruB,KAAOugD,EAAYvgD,KAE7B4pB,EAAM73C,KAAMs8C,EAAU+vB,kBAAmBmC,EAAYvvE,OAItDP,KAAK4wE,gBAAiBrhD,GAAS4pB,EAMhC,GAAKqV,EAASggB,YAAYlsE,OAAS,EAAI,CAEtC,MAAMksE,EAAc,IAAI3B,GAAsD,EAA9Bre,EAASggB,YAAYlsE,OAAY,GACjFtC,KAAKue,aAAc,YAAaiwD,EAAYZ,kBAAmBpf,EAASggB,cAIzE,GAAKhgB,EAAS+f,YAAYjsE,OAAS,EAAI,CAEtC,MAAMisE,EAAc,IAAI1B,GAAsD,EAA9Bre,EAAS+f,YAAYjsE,OAAY,GACjFtC,KAAKue,aAAc,aAAcgwD,EAAYX,kBAAmBpf,EAAS+f,cAkB1E,OAZiC,OAA5B/f,EAASigB,iBAEbzuE,KAAKyuE,eAAiBjgB,EAASigB,eAAe9kE,SAIjB,OAAzB6kD,EAASC,cAEbzuD,KAAKyuD,YAAcD,EAASC,YAAY9kD,SAIlC3J,MAIR0uD,mBAAoB,WAEO,OAArB1uD,KAAKyuD,cAETzuD,KAAKyuD,YAAc,IAAItB,IAIxB,MAAMxtC,EAAW3f,KAAK2wE,WAAWhxD,SAC3BwyD,EAA0BnyE,KAAK4wE,gBAAgBjxD,SAErD,GAAKA,GAAYA,EAASyyD,oBASzB,OAPAzlE,QAAQu1B,MAAO,kJAAmJliC,WAElKA,KAAKyuD,YAAY7lD,IAChB,IAAI+hD,IAAWvnD,EAAAA,GAAYA,EAAAA,GAAYA,EAAAA,GACvC,IAAIunD,GAAWvnD,EAAAA,EAAYA,EAAAA,EAAYA,EAAAA,IAOzC,QAAkB+V,IAAbwG,GAMJ,GAJA3f,KAAKyuD,YAAYpB,uBAAwB1tC,GAIpCwyD,EAEJ,IAAM,IAAItyE,EAAI,EAAG6tD,EAAKykB,EAAwB7vE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEpE,MAAMwyE,EAAiBF,EAAyBtyE,GAChD0wE,GAAOljB,uBAAwBglB,GAE1BryE,KAAK6wE,sBAETJ,GAAUr0B,WAAYp8C,KAAKyuD,YAAYxpD,IAAKsrE,GAAOtrE,KACnDjF,KAAKyuD,YAAYd,cAAe8iB,IAEhCA,GAAUr0B,WAAYp8C,KAAKyuD,YAAYzpD,IAAKurE,GAAOvrE,KACnDhF,KAAKyuD,YAAYd,cAAe8iB,MAIhCzwE,KAAKyuD,YAAYd,cAAe4iB,GAAOtrE,KACvCjF,KAAKyuD,YAAYd,cAAe4iB,GAAOvrE,YAU1ChF,KAAKyuD,YAAYhB,aAIb1zC,MAAO/Z,KAAKyuD,YAAYxpD,IAAInF,IAAOia,MAAO/Z,KAAKyuD,YAAYxpD,IAAIlF,IAAOga,MAAO/Z,KAAKyuD,YAAYxpD,IAAI9E,KAEtGwM,QAAQu1B,MAAO,sIAAuIliC,OAMxJyxE,sBAAuB,WAEO,OAAxBzxE,KAAKyuE,iBAETzuE,KAAKyuE,eAAiB,IAAI/d,IAI3B,MAAM/wC,EAAW3f,KAAK2wE,WAAWhxD,SAC3BwyD,EAA0BnyE,KAAK4wE,gBAAgBjxD,SAErD,GAAKA,GAAYA,EAASyyD,oBAMzB,OAJAzlE,QAAQu1B,MAAO,wJAAyJliC,WAExKA,KAAKyuE,eAAe7lE,IAAK,IAAI+hD,GAAWvnD,EAAAA,GAMzC,GAAKuc,EAAW,CAIf,MAAMpV,EAASvK,KAAKyuE,eAAelkE,OAMnC,GAJAgmE,GAAOljB,uBAAwB1tC,GAI1BwyD,EAEJ,IAAM,IAAItyE,EAAI,EAAG6tD,EAAKykB,EAAwB7vE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEpE,MAAMwyE,EAAiBF,EAAyBtyE,GAChD2wE,GAAiBnjB,uBAAwBglB,GAEpCryE,KAAK6wE,sBAETJ,GAAUr0B,WAAYm0B,GAAOtrE,IAAKurE,GAAiBvrE,KACnDsrE,GAAO5iB,cAAe8iB,IAEtBA,GAAUr0B,WAAYm0B,GAAOvrE,IAAKwrE,GAAiBxrE,KACnDurE,GAAO5iB,cAAe8iB,MAItBF,GAAO5iB,cAAe6iB,GAAiBvrE,KACvCsrE,GAAO5iB,cAAe6iB,GAAiBxrE,MAQ1CurE,GAAO9hE,UAAWlE,GAKlB,IAAIqmD,EAAc,EAElB,IAAM,IAAI/wD,EAAI,EAAG6tD,EAAK/tC,EAAS2tC,MAAOztD,EAAI6tD,EAAI7tD,IAE7C4wE,GAAU9yB,oBAAqBh+B,EAAU9f,GAEzC+wD,EAAcvtD,KAAK2B,IAAK4rD,EAAarmD,EAAOgzC,kBAAmBkzB,KAMhE,GAAK0B,EAEJ,IAAM,IAAItyE,EAAI,EAAG6tD,EAAKykB,EAAwB7vE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEpE,MAAMwyE,EAAiBF,EAAyBtyE,GAC1CgxE,EAAuB7wE,KAAK6wE,qBAElC,IAAM,IAAIprE,EAAI,EAAG6sE,EAAKD,EAAe/kB,MAAO7nD,EAAI6sE,EAAI7sE,IAEnDgrE,GAAU9yB,oBAAqB00B,EAAgB5sE,GAE1CorE,IAEJP,GAAQ3yB,oBAAqBh+B,EAAUla,GACvCgrE,GAAUxnE,IAAKqnE,KAIhB1f,EAAcvtD,KAAK2B,IAAK4rD,EAAarmD,EAAOgzC,kBAAmBkzB,KAQlEzwE,KAAKyuE,eAAex0D,OAAS5W,KAAKyG,KAAM8mD,GAEnC72C,MAAO/Z,KAAKyuE,eAAex0D,SAE/BtN,QAAQu1B,MAAO,+HAAgIliC,QAQlJuyE,mBAAoB,aAMpBC,qBAAsB,WAErB,MAAMrmE,EAAQnM,KAAKmM,MACbsmE,EAAoBzyE,KAAKmf,aAAc,YAE7C,QAA2BhG,IAAtBs5D,EAAkC,CAEtC,IAAIC,EAAkB1yE,KAAKmf,aAAc,UAEzC,QAAyBhG,IAApBu5D,EAEJA,EAAkB,IAAIjH,GAAiB,IAAI/kD,aAAwC,EAA1B+rD,EAAkBnlB,OAAa,GACxFttD,KAAKue,aAAc,SAAUm0D,QAM7B,IAAM,IAAI7yE,EAAI,EAAG6tD,EAAKglB,EAAgBplB,MAAOztD,EAAI6tD,EAAI7tD,IAEpD6yE,EAAgB5E,OAAQjuE,EAAG,EAAG,EAAG,GAMnC,MAAMusB,EAAK,IAAIu+B,GAAWt+B,EAAK,IAAIs+B,GAAWr+B,EAAK,IAAIq+B,GACjDgoB,EAAK,IAAIhoB,GAAWioB,EAAK,IAAIjoB,GAAWkoB,EAAK,IAAIloB,GACjDmoB,EAAK,IAAInoB,GAAWooB,EAAK,IAAIpoB,GAInC,GAAKx+C,EAEJ,IAAM,IAAItM,EAAI,EAAG6tD,EAAKvhD,EAAMmhD,MAAOztD,EAAI6tD,EAAI7tD,GAAK,EAAI,CAEnD,MAAMmzE,EAAK7mE,EAAM0xC,KAAMh+C,EAAI,GACrBozE,EAAK9mE,EAAM0xC,KAAMh+C,EAAI,GACrBqzE,EAAK/mE,EAAM0xC,KAAMh+C,EAAI,GAE3BusB,EAAGuxB,oBAAqB80B,EAAmBO,GAC3C3mD,EAAGsxB,oBAAqB80B,EAAmBQ,GAC3C3mD,EAAGqxB,oBAAqB80B,EAAmBS,GAE3CJ,EAAGv2B,WAAYjwB,EAAID,GACnB0mD,EAAGx2B,WAAYnwB,EAAIC,GACnBymD,EAAG9gD,MAAO+gD,GAEVJ,EAAGh1B,oBAAqB+0B,EAAiBM,GACzCJ,EAAGj1B,oBAAqB+0B,EAAiBO,GACzCJ,EAAGl1B,oBAAqB+0B,EAAiBQ,GAEzCP,EAAG1pE,IAAK6pE,GACRF,EAAG3pE,IAAK6pE,GACRD,EAAG5pE,IAAK6pE,GAERJ,EAAgB5E,OAAQkF,EAAIL,EAAG7yE,EAAG6yE,EAAG5yE,EAAG4yE,EAAGxyE,GAC3CuyE,EAAgB5E,OAAQmF,EAAIL,EAAG9yE,EAAG8yE,EAAG7yE,EAAG6yE,EAAGzyE,GAC3CuyE,EAAgB5E,OAAQoF,EAAIL,EAAG/yE,EAAG+yE,EAAG9yE,EAAG8yE,EAAG1yE,QAQ5C,IAAM,IAAIN,EAAI,EAAG6tD,EAAK+kB,EAAkBnlB,MAAOztD,EAAI6tD,EAAI7tD,GAAK,EAE3DusB,EAAGuxB,oBAAqB80B,EAAmB5yE,EAAI,GAC/CwsB,EAAGsxB,oBAAqB80B,EAAmB5yE,EAAI,GAC/CysB,EAAGqxB,oBAAqB80B,EAAmB5yE,EAAI,GAE/CizE,EAAGv2B,WAAYjwB,EAAID,GACnB0mD,EAAGx2B,WAAYnwB,EAAIC,GACnBymD,EAAG9gD,MAAO+gD,GAEVL,EAAgB5E,OAAQjuE,EAAI,EAAGizE,EAAGhzE,EAAGgzE,EAAG/yE,EAAG+yE,EAAG3yE,GAC9CuyE,EAAgB5E,OAAQjuE,EAAI,EAAGizE,EAAGhzE,EAAGgzE,EAAG/yE,EAAG+yE,EAAG3yE,GAC9CuyE,EAAgB5E,OAAQjuE,EAAI,EAAGizE,EAAGhzE,EAAGgzE,EAAG/yE,EAAG+yE,EAAG3yE,GAMhDH,KAAKmzE,mBAELT,EAAgBnB,aAAc,IAMhC6B,MAAO,SAAW5kB,EAAUxyC,GAE3B,IAASwyC,IAAYA,EAASuiB,iBAG7B,YADApkE,QAAQu1B,MAAO,kFAAmFssB,QAKnFr1C,IAAX6C,IAEJA,EAAS,EAETrP,QAAQoK,KACP,2JAMF,MAAM45D,EAAa3wE,KAAK2wE,WAExB,IAAM,MAAMxqE,KAAOwqE,EAAa,CAE/B,QAAoCx3D,IAA/Bq1C,EAASmiB,WAAYxqE,GAAsB,SAEhD,MACMktE,EADa1C,EAAYxqE,GACIgzC,MAE7Bm6B,EAAa9kB,EAASmiB,WAAYxqE,GAClCotE,EAAkBD,EAAWn6B,MAE7Bq6B,EAAkBF,EAAW5H,SAAW1vD,EACxC1Z,EAASe,KAAK4B,IAAKsuE,EAAgBjxE,OAAQ+wE,EAAgB/wE,OAASkxE,GAE1E,IAAM,IAAI3zE,EAAI,EAAG4F,EAAI+tE,EAAiB3zE,EAAIyC,EAAQzC,IAAM4F,IAEvD4tE,EAAiB5tE,GAAM8tE,EAAiB1zE,GAM1C,OAAOG,MAIRmzE,iBAAkB,WAEjB,MAAMhF,EAAUnuE,KAAK2wE,WAAWn5C,OAEhC,IAAM,IAAI33B,EAAI,EAAG6tD,EAAKygB,EAAQ7gB,MAAOztD,EAAI6tD,EAAI7tD,IAE5C4wE,GAAU9yB,oBAAqBwwB,EAAStuE,GAExC4wE,GAAUvhE,YAEVi/D,EAAQL,OAAQjuE,EAAG4wE,GAAU3wE,EAAG2wE,GAAU1wE,EAAG0wE,GAAUtwE,IAMzDszE,aAAc,WAEb,SAASC,EAAwB91B,EAAW+1B,GAE3C,MAAMx6B,EAAQyE,EAAUzE,MAClBuyB,EAAW9tB,EAAU8tB,SACrB1G,EAAapnB,EAAUonB,WAEvB4O,EAAS,IAAIz6B,EAAMjzC,YAAaytE,EAAQrxE,OAASopE,GAEvD,IAAIv/D,EAAQ,EAAGkhE,EAAS,EAExB,IAAM,IAAIxtE,EAAI,EAAGwO,EAAIslE,EAAQrxE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAElDsM,EAAQwnE,EAAS9zE,GAAM6rE,EAEvB,IAAM,IAAIjmE,EAAI,EAAGA,EAAIimE,EAAUjmE,IAE9BmuE,EAAQvG,KAAcl0B,EAAOhtC,KAM/B,OAAO,IAAIs/D,GAAiBmI,EAAQlI,EAAU1G,GAM/C,GAAoB,OAAfhlE,KAAKmM,MAGT,OADAQ,QAAQoK,KAAM,yEACP/W,KAIR,MAAM6zE,EAAY,IAAInD,GAEhBiD,EAAU3zE,KAAKmM,MAAMgtC,MACrBw3B,EAAa3wE,KAAK2wE,WAIxB,IAAM,MAAMphD,KAAQohD,EAAa,CAEhC,MAEMmD,EAAeJ,EAFH/C,EAAYphD,GAE0BokD,GAExDE,EAAUt1D,aAAcgR,EAAMukD,GAM/B,MAAMlD,EAAkB5wE,KAAK4wE,gBAE7B,IAAM,MAAMrhD,KAAQqhD,EAAkB,CAErC,MAAMmD,EAAa,GACb1B,EAAiBzB,EAAiBrhD,GAExC,IAAM,IAAI1vB,EAAI,EAAG6tD,EAAK2kB,EAAe/vE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAE3D,MAEMi0E,EAAeJ,EAFHrB,EAAgBxyE,GAEsB8zE,GAExDI,EAAWzyE,KAAMwyE,GAIlBD,EAAUjD,gBAAiBrhD,GAASwkD,EAIrCF,EAAUhD,qBAAuB7wE,KAAK6wE,qBAItC,MAAMvC,EAAStuE,KAAKsuE,OAEpB,IAAM,IAAIzuE,EAAI,EAAGwO,EAAIigE,EAAOhsE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAMmvE,EAAQV,EAAQzuE,GACtBg0E,EAAUzC,SAAUpC,EAAMxuE,MAAOwuE,EAAM1hB,MAAO0hB,EAAM7J,eAIrD,OAAO0O,GAIRx+D,OAAQ,WAEP,MAAM9U,EAAO,CACZ2jD,SAAU,CACTb,QAAS,IACTvjB,KAAM,iBACNqkB,UAAW,0BAWb,GALA5jD,EAAKqiD,KAAO5iD,KAAK4iD,KACjBriD,EAAKu/B,KAAO9/B,KAAK8/B,KACE,KAAd9/B,KAAKuvB,OAAchvB,EAAKgvB,KAAOvvB,KAAKuvB,MACpC/vB,OAAOud,KAAM/c,KAAKw7D,UAAWl5D,OAAS,IAAI/B,EAAKi7D,SAAWx7D,KAAKw7D,eAE3CriD,IAApBnZ,KAAKy+D,WAA2B,CAEpC,MAAMA,EAAaz+D,KAAKy+D,WAExB,IAAM,MAAMt4D,KAAOs4D,OAEStlD,IAAtBslD,EAAYt4D,KAAsB5F,EAAM4F,GAAQs4D,EAAYt4D,IAIlE,OAAO5F,EAIRA,EAAKA,KAAO,CAAEowE,WAAY,IAE1B,MAAMxkE,EAAQnM,KAAKmM,MAEJ,OAAVA,IAEJ5L,EAAKA,KAAK4L,MAAQ,CACjB2zB,KAAM3zB,EAAMgtC,MAAMjzC,YAAYqpB,KAC9B4pB,MAAOvjC,MAAMijC,UAAUO,MAAMC,KAAMltC,EAAMgtC,SAK3C,MAAMw3B,EAAa3wE,KAAK2wE,WAExB,IAAM,MAAMxqE,KAAOwqE,EAAa,CAE/B,MAAM/yB,EAAY+yB,EAAYxqE,GAExB6tE,EAAgBp2B,EAAUvoC,OAAQ9U,EAAKA,MAErB,KAAnBq9C,EAAUruB,OAAcykD,EAAczkD,KAAOquB,EAAUruB,MAE5DhvB,EAAKA,KAAKowE,WAAYxqE,GAAQ6tE,EAI/B,MAAMpD,EAAkB,GACxB,IAAIqD,GAAqB,EAEzB,IAAM,MAAM9tE,KAAOnG,KAAK4wE,gBAAkB,CAEzC,MAAMsD,EAAiBl0E,KAAK4wE,gBAAiBzqE,GAEvCgzC,EAAQ,GAEd,IAAM,IAAIt5C,EAAI,EAAG6tD,EAAKwmB,EAAe5xE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAE3D,MAAM+9C,EAAYs2B,EAAgBr0E,GAE5Bm0E,EAAgBp2B,EAAUvoC,OAAQ9U,EAAKA,MAErB,KAAnBq9C,EAAUruB,OAAcykD,EAAczkD,KAAOquB,EAAUruB,MAE5D4pB,EAAM73C,KAAM0yE,GAIR76B,EAAM72C,OAAS,IAEnBsuE,EAAiBzqE,GAAQgzC,EAEzB86B,GAAqB,GAMlBA,IAEJ1zE,EAAKA,KAAKqwE,gBAAkBA,EAC5BrwE,EAAKA,KAAKswE,qBAAuB7wE,KAAK6wE,sBAIvC,MAAMvC,EAAStuE,KAAKsuE,OAEfA,EAAOhsE,OAAS,IAEpB/B,EAAKA,KAAK+tE,OAAS94D,KAAKC,MAAOD,KAAK2oD,UAAWmQ,KAIhD,MAAMG,EAAiBzuE,KAAKyuE,eAW5B,OATwB,OAAnBA,IAEJluE,EAAKA,KAAKkuE,eAAiB,CAC1BlkE,OAAQkkE,EAAelkE,OAAOmzC,UAC9BzjC,OAAQw0D,EAAex0D,SAKlB1Z,GAIRoJ,MAAO,WA0BN,OAAO,IAAI+mE,IAAiB5tD,KAAM9iB,OAInC8iB,KAAM,SAAW+gC,GAIhB7jD,KAAKmM,MAAQ,KACbnM,KAAK2wE,WAAa,GAClB3wE,KAAK4wE,gBAAkB,GACvB5wE,KAAKsuE,OAAS,GACdtuE,KAAKyuD,YAAc,KACnBzuD,KAAKyuE,eAAiB,KAItB,MAAMluE,EAAO,GAIbP,KAAKuvB,KAAOs0B,EAAOt0B,KAInB,MAAMpjB,EAAQ03C,EAAO13C,MAEN,OAAVA,GAEJnM,KAAKixE,SAAU9kE,EAAMxC,MAAOpJ,IAM7B,MAAMowE,EAAa9sB,EAAO8sB,WAE1B,IAAM,MAAMphD,KAAQohD,EAAa,CAEhC,MAAM/yB,EAAY+yB,EAAYphD,GAC9BvvB,KAAKue,aAAcgR,EAAMquB,EAAUj0C,MAAOpJ,IAM3C,MAAMqwE,EAAkB/sB,EAAO+sB,gBAE/B,IAAM,MAAMrhD,KAAQqhD,EAAkB,CAErC,MAAMz3B,EAAQ,GACRk5B,EAAiBzB,EAAiBrhD,GAExC,IAAM,IAAI1vB,EAAI,EAAGwO,EAAIgkE,EAAe/vE,OAAQzC,EAAIwO,EAAGxO,IAElDs5C,EAAM73C,KAAM+wE,EAAgBxyE,GAAI8J,MAAOpJ,IAIxCP,KAAK4wE,gBAAiBrhD,GAAS4pB,EAIhCn5C,KAAK6wE,qBAAuBhtB,EAAOgtB,qBAInC,MAAMvC,EAASzqB,EAAOyqB,OAEtB,IAAM,IAAIzuE,EAAI,EAAGwO,EAAIigE,EAAOhsE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAMmvE,EAAQV,EAAQzuE,GACtBG,KAAKoxE,SAAUpC,EAAMxuE,MAAOwuE,EAAM1hB,MAAO0hB,EAAM7J,eAMhD,MAAM1W,EAAc5K,EAAO4K,YAEN,OAAhBA,IAEJzuD,KAAKyuD,YAAcA,EAAY9kD,SAMhC,MAAM8kE,EAAiB5qB,EAAO4qB,eAiB9B,OAfwB,OAAnBA,IAEJzuE,KAAKyuE,eAAiBA,EAAe9kE,SAMtC3J,KAAK8wE,UAAUtwE,MAAQqjD,EAAOitB,UAAUtwE,MACxCR,KAAK8wE,UAAUxjB,MAAQzJ,EAAOitB,UAAUxjB,MAIxCttD,KAAKw7D,SAAW3X,EAAO2X,SAEhBx7D,MAIRwkD,QAAS,WAERxkD,KAAKi5C,cAAe,CAAEnZ,KAAM,eAM9B,MAAMq0C,GAAiB,IAAIjgB,GACrBkgB,GAAO,IAAI5iB,GACX6iB,GAAU,IAAI3jB,GAEd4jB,GAAM,IAAI3pB,GACV4pB,GAAM,IAAI5pB,GACV6pB,GAAM,IAAI7pB,GAEV8pB,GAAS,IAAI9pB,GACb+pB,GAAS,IAAI/pB,GACbgqB,GAAS,IAAIhqB,GAEbiqB,GAAU,IAAIjqB,GACdkqB,GAAU,IAAIlqB,GACdmqB,GAAU,IAAInqB,GAEdoqB,GAAO,IAAI/4B,GACXg5B,GAAO,IAAIh5B,GACXi5B,GAAO,IAAIj5B,GAEXk5B,GAAqB,IAAIvqB,GACzBwqB,GAA0B,IAAIxqB,GAEpC,SAASyqB,GAAM5mB,EAAW,IAAIkiB,GAAkB3R,EAAW,IAAI6I,IAE9DnN,GAASphB,KAAMr5C,MAEfA,KAAK8/B,KAAO,OAEZ9/B,KAAKwuD,SAAWA,EAChBxuD,KAAK++D,SAAWA,EAEhB/+D,KAAKq1E,qBAkSN,SAASC,GAAmBtnB,EAAQ+Q,EAAUwW,EAAW9jB,EAAKrlC,EAAIC,EAAIC,EAAIrc,GAEzE,IAAIogD,EAYJ,GARCA,EAFI0O,EAAS2G,OAASr4B,EAEVokB,EAAImC,kBAAmBtnC,EAAID,EAAID,GAAI,EAAMnc,GAIzCwhD,EAAImC,kBAAmBxnC,EAAIC,EAAIC,EAAIyyC,EAAS2G,OAASp4B,EAAYr9B,GAI3D,OAAdogD,EAAqB,OAAO,KAEjC8kB,GAAwBryD,KAAM7S,GAC9BklE,GAAwBrwB,aAAckJ,EAAOjC,aAE7C,MAAMniD,EAAW2rE,EAAU9jB,IAAIxnD,OAAOqzC,WAAY63B,IAElD,OAAKvrE,EAAW2rE,EAAUld,MAAQzuD,EAAW2rE,EAAUjd,IAAa,KAE7D,CACN1uD,SAAUA,EACVqG,MAAOklE,GAAwBxrE,QAC/BqkD,OAAQA,GAKV,SAASwnB,GAAiCxnB,EAAQ+Q,EAAUwW,EAAW9jB,EAAK9xC,EAAU81D,EAAe5E,EAAsBnsB,EAAIid,EAAKpgE,EAAGC,EAAGC,GAEzI6yE,GAAI32B,oBAAqBh+B,EAAUpe,GACnCgzE,GAAI52B,oBAAqBh+B,EAAUne,GACnCgzE,GAAI72B,oBAAqBh+B,EAAUle,GAEnC,MAAMi0E,EAAkB1nB,EAAO2nB,sBAE/B,GAAK5W,EAAS6J,cAAgB6M,GAAiBC,EAAkB,CAEhEd,GAAQhsE,IAAK,EAAG,EAAG,GACnBisE,GAAQjsE,IAAK,EAAG,EAAG,GACnBksE,GAAQlsE,IAAK,EAAG,EAAG,GAEnB,IAAM,IAAI/I,EAAI,EAAG6tD,EAAK+nB,EAAcnzE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAE1D,MAAM+1E,EAAYF,EAAiB71E,GAC7BwyE,EAAiBoD,EAAe51E,GAEnB,IAAd+1E,IAELnB,GAAO92B,oBAAqB00B,EAAgB9wE,GAC5CmzE,GAAO/2B,oBAAqB00B,EAAgB7wE,GAC5CmzE,GAAOh3B,oBAAqB00B,EAAgB5wE,GAEvCovE,GAEJ+D,GAAQt4B,gBAAiBm4B,GAAQmB,GACjCf,GAAQv4B,gBAAiBo4B,GAAQkB,GACjCd,GAAQx4B,gBAAiBq4B,GAAQiB,KAIjChB,GAAQt4B,gBAAiBm4B,GAAOlrE,IAAK+qE,IAAOsB,GAC5Cf,GAAQv4B,gBAAiBo4B,GAAOnrE,IAAKgrE,IAAOqB,GAC5Cd,GAAQx4B,gBAAiBq4B,GAAOprE,IAAKirE,IAAOoB,KAM9CtB,GAAIrrE,IAAK2rE,IACTL,GAAItrE,IAAK4rE,IACTL,GAAIvrE,IAAK6rE,IAIL9mB,EAAO2Q,gBAEX3Q,EAAO6nB,cAAet0E,EAAG+yE,IACzBtmB,EAAO6nB,cAAer0E,EAAG+yE,IACzBvmB,EAAO6nB,cAAep0E,EAAG+yE,KAI1B,MAAM1jE,EAAewkE,GAAmBtnB,EAAQ+Q,EAAUwW,EAAW9jB,EAAK6iB,GAAKC,GAAKC,GAAKU,IAEzF,GAAKpkE,EAAe,CAEd4zC,IAEJqwB,GAAKp3B,oBAAqB+G,EAAInjD,GAC9ByzE,GAAKr3B,oBAAqB+G,EAAIljD,GAC9ByzE,GAAKt3B,oBAAqB+G,EAAIjjD,GAE9BqP,EAAa4zC,GAAKv7B,GAASi5C,MAAO8S,GAAoBZ,GAAKC,GAAKC,GAAKO,GAAMC,GAAMC,GAAM,IAAIj5B,KAIvF2lB,IAEJoT,GAAKp3B,oBAAqBgkB,EAAKpgE,GAC/ByzE,GAAKr3B,oBAAqBgkB,EAAKngE,GAC/ByzE,GAAKt3B,oBAAqBgkB,EAAKlgE,GAE/BqP,EAAa6wD,IAAMx4C,GAASi5C,MAAO8S,GAAoBZ,GAAKC,GAAKC,GAAKO,GAAMC,GAAMC,GAAM,IAAIj5B,KAI7F,MAAMkzB,EAAO,IAAIhK,GAAO3jE,EAAGC,EAAGC,GAC9B0nB,GAAS+4C,UAAWoS,GAAKC,GAAKC,GAAKtF,EAAK13C,QAExC1mB,EAAao+D,KAAOA,EAIrB,OAAOp+D,EAnZRskE,GAAKv8B,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+W,GAAS5hB,WAAa,CAEpE3yC,YAAakvE,GAEb9W,QAAQ,EAERx7C,KAAM,SAAW+gC,GAmBhB,OAjBA4W,GAAS5hB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,QAEE1qC,IAAjC0qC,EAAO8xB,wBAEX31E,KAAK21E,sBAAwB9xB,EAAO8xB,sBAAsBv8B,cAIrBjgC,IAAjC0qC,EAAOiyB,wBAEX91E,KAAK81E,sBAAwBt2E,OAAOo5C,OAAQ,GAAIiL,EAAOiyB,wBAIxD91E,KAAK++D,SAAWlb,EAAOkb,SACvB/+D,KAAKwuD,SAAW3K,EAAO2K,SAEhBxuD,MAIRq1E,mBAAoB,WAEnB,MAAM7mB,EAAWxuD,KAAKwuD,SAEtB,GAAKA,EAASuiB,iBAAmB,CAEhC,MAAMH,EAAkBpiB,EAASoiB,gBAC3B7zD,EAAOvd,OAAOud,KAAM6zD,GAE1B,GAAK7zD,EAAKza,OAAS,EAAI,CAEtB,MAAM+vE,EAAiBzB,EAAiB7zD,EAAM,IAE9C,QAAwB5D,IAAnBk5D,EAA+B,CAEnCryE,KAAK21E,sBAAwB,GAC7B31E,KAAK81E,sBAAwB,GAE7B,IAAM,IAAIlzE,EAAI,EAAGmzE,EAAK1D,EAAe/vE,OAAQM,EAAImzE,EAAInzE,IAAO,CAE3D,MAAM2sB,EAAO8iD,EAAgBzvE,GAAI2sB,MAAQymD,OAAQpzE,GAEjD5C,KAAK21E,sBAAsBr0E,KAAM,GACjCtB,KAAK81E,sBAAuBvmD,GAAS3sB,SAQlC,CAEN,MAAMgmE,EAAepa,EAASoa,kBAERzvD,IAAjByvD,GAA8BA,EAAatmE,OAAS,GAExDqK,QAAQu1B,MAAO,0GAQlBm7B,QAAS,SAAWkY,EAAWz2E,GAE9B,MAAM0vD,EAAWxuD,KAAKwuD,SAChBuQ,EAAW/+D,KAAK++D,SAChBhT,EAAc/rD,KAAK+rD,YAEzB,QAAkB5yC,IAAb4lD,EAAyB,OAS9B,GALiC,OAA5BvQ,EAASigB,gBAA0BjgB,EAASijB,wBAEjD4C,GAAQvxD,KAAM0rC,EAASigB,gBACvB4F,GAAQvvB,aAAciH,IAE6B,IAA9CwpB,EAAU9jB,IAAIxC,iBAAkBolB,IAAsB,OAS3D,GALAF,GAAerxD,KAAMipC,GAActL,SACnC2zB,GAAKtxD,KAAMyyD,EAAU9jB,KAAM3M,aAAcqvB,IAIX,OAAzB3lB,EAASC,cAEuC,IAA/C2lB,GAAKplB,cAAeR,EAASC,aAA0B,OAI7D,IAAI39C,EAEJ,GAAK09C,EAASuiB,iBAAmB,CAEhC,MAAM5kE,EAAQqiD,EAASriD,MACjBwT,EAAW6uC,EAASmiB,WAAWhxD,SAC/B81D,EAAgBjnB,EAASoiB,gBAAgBjxD,SACzCkxD,EAAuBriB,EAASqiB,qBAChCnsB,EAAK8J,EAASmiB,WAAWjsB,GACzBid,EAAMnT,EAASmiB,WAAWhP,IAC1B2M,EAAS9f,EAAS8f,OAClBwC,EAAYtiB,EAASsiB,UAE3B,GAAe,OAAV3kE,EAIJ,GAAKyJ,MAAMC,QAASkpD,GAEnB,IAAM,IAAIl/D,EAAI,EAAG6tD,EAAK4gB,EAAOhsE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEnD,MAAMmvE,EAAQV,EAAQzuE,GAChBo2E,EAAgBlX,EAAUiQ,EAAM7J,eAKtC,IAAM,IAAI1/D,EAHIpC,KAAK2B,IAAKgqE,EAAMxuE,MAAOswE,EAAUtwE,OAG1B8xE,EAFTjvE,KAAK4B,IAAO+pE,EAAMxuE,MAAQwuE,EAAM1hB,MAAWwjB,EAAUtwE,MAAQswE,EAAUxjB,OAEpD7nD,EAAI6sE,EAAI7sE,GAAK,EAAI,CAE/C,MAAMlE,EAAI4K,EAAM0xC,KAAMp4C,GAChBjE,EAAI2K,EAAM0xC,KAAMp4C,EAAI,GACpBhE,EAAI0K,EAAM0xC,KAAMp4C,EAAI,GAE1BqL,EAAe0kE,GAAiCx1E,KAAMi2E,EAAeV,EAAWnB,GAAMz0D,EAAU81D,EAAe5E,EAAsBnsB,EAAIid,EAAKpgE,EAAGC,EAAGC,GAE/IqP,IAEJA,EAAaolE,UAAY7yE,KAAK+pB,MAAO3nB,EAAI,GACzCqL,EAAao+D,KAAK/J,cAAgB6J,EAAM7J,cACxCrmE,EAAWwC,KAAMwP,SAQd,CAKN,IAAM,IAAIjR,EAHIwD,KAAK2B,IAAK,EAAG8rE,EAAUtwE,OAGhBktD,EAFTrqD,KAAK4B,IAAKkH,EAAMmhD,MAASwjB,EAAUtwE,MAAQswE,EAAUxjB,OAElCztD,EAAI6tD,EAAI7tD,GAAK,EAAI,CAE/C,MAAM0B,EAAI4K,EAAM0xC,KAAMh+C,GAChB2B,EAAI2K,EAAM0xC,KAAMh+C,EAAI,GACpB4B,EAAI0K,EAAM0xC,KAAMh+C,EAAI,GAE1BiR,EAAe0kE,GAAiCx1E,KAAM++D,EAAUwW,EAAWnB,GAAMz0D,EAAU81D,EAAe5E,EAAsBnsB,EAAIid,EAAKpgE,EAAGC,EAAGC,GAE1IqP,IAEJA,EAAaolE,UAAY7yE,KAAK+pB,MAAOvtB,EAAI,GACzCf,EAAWwC,KAAMwP,UAQd,QAAkBqI,IAAbwG,EAIX,GAAK/J,MAAMC,QAASkpD,GAEnB,IAAM,IAAIl/D,EAAI,EAAG6tD,EAAK4gB,EAAOhsE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEnD,MAAMmvE,EAAQV,EAAQzuE,GAChBo2E,EAAgBlX,EAAUiQ,EAAM7J,eAKtC,IAAM,IAAI1/D,EAHIpC,KAAK2B,IAAKgqE,EAAMxuE,MAAOswE,EAAUtwE,OAG1B8xE,EAFTjvE,KAAK4B,IAAO+pE,EAAMxuE,MAAQwuE,EAAM1hB,MAAWwjB,EAAUtwE,MAAQswE,EAAUxjB,OAEpD7nD,EAAI6sE,EAAI7sE,GAAK,EAAI,CAM/CqL,EAAe0kE,GAAiCx1E,KAAMi2E,EAAeV,EAAWnB,GAAMz0D,EAAU81D,EAAe5E,EAAsBnsB,EAAIid,EAJ/Hl8D,EACAA,EAAI,EACJA,EAAI,GAITqL,IAEJA,EAAaolE,UAAY7yE,KAAK+pB,MAAO3nB,EAAI,GACzCqL,EAAao+D,KAAK/J,cAAgB6J,EAAM7J,cACxCrmE,EAAWwC,KAAMwP,SAQd,CAKN,IAAM,IAAIjR,EAHIwD,KAAK2B,IAAK,EAAG8rE,EAAUtwE,OAGhBktD,EAFTrqD,KAAK4B,IAAK0a,EAAS2tC,MAASwjB,EAAUtwE,MAAQswE,EAAUxjB,OAErCztD,EAAI6tD,EAAI7tD,GAAK,EAAI,CAM/CiR,EAAe0kE,GAAiCx1E,KAAM++D,EAAUwW,EAAWnB,GAAMz0D,EAAU81D,EAAe5E,EAAsBnsB,EAAIid,EAJ1H9hE,EACAA,EAAI,EACJA,EAAI,GAITiR,IAEJA,EAAaolE,UAAY7yE,KAAK+pB,MAAOvtB,EAAI,GACzCf,EAAWwC,KAAMwP,WAUf,GAAK09C,EAASojB,WAAa,CAEjC,MAAMuE,EAAkBvgE,MAAMC,QAASkpD,GAEjCjzD,EAAW0iD,EAAS1iD,SACpBmjE,EAAQzgB,EAASygB,MACvB,IAAIb,EAEJ,MAAMgB,EAAgB5gB,EAAS4gB,cAAe,GACzCA,EAAc9sE,OAAS,IAAI8rE,EAAMgB,GAEtC,IAAM,IAAIv3C,EAAI,EAAGu+C,EAAKnH,EAAM3sE,OAAQu1B,EAAIu+C,EAAIv+C,IAAO,CAElD,MAAMq3C,EAAOD,EAAOp3C,GACdw+C,EAAeF,EAAkBpX,EAAUmQ,EAAK/J,eAAkBpG,EAExE,QAAsB5lD,IAAjBk9D,EAA6B,SAElC,MAAMC,EAAMxqE,EAAUojE,EAAK3tE,GACrBg1E,EAAMzqE,EAAUojE,EAAK1tE,GACrBg1E,EAAM1qE,EAAUojE,EAAKztE,GAI3B,GAFAqP,EAAewkE,GAAmBt1E,KAAMq2E,EAAcd,EAAWnB,GAAMkC,EAAKC,EAAKC,EAAKtB,IAEjFpkE,EAAe,CAEnB,GAAKs9D,GAAOA,EAAKv2C,GAAM,CAEtB,MAAM4+C,EAAQrI,EAAKv2C,GACnBk9C,GAAKjyD,KAAM2zD,EAAO,IAClBzB,GAAKlyD,KAAM2zD,EAAO,IAClBxB,GAAKnyD,KAAM2zD,EAAO,IAElB3lE,EAAa4zC,GAAKv7B,GAASi5C,MAAO8S,GAAoBoB,EAAKC,EAAKC,EAAKzB,GAAMC,GAAMC,GAAM,IAAIj5B,IAI5FlrC,EAAao+D,KAAOA,EACpBp+D,EAAaolE,UAAYr+C,EACzB/4B,EAAWwC,KAAMwP,SAqItB,MAAM4lE,WAA0BhG,GAE/BxqE,YAAaoI,EAAQ,EAAGC,EAAS,EAAGooE,EAAQ,EAAGC,EAAgB,EAAGC,EAAiB,EAAGC,EAAgB,GAErGpmE,QAEA1Q,KAAK8/B,KAAO,oBAEZ9/B,KAAKy+D,WAAa,CACjBnwD,MAAOA,EACPC,OAAQA,EACRooE,MAAOA,EACPC,cAAeA,EACfC,eAAgBA,EAChBC,cAAeA,GAGhB,MAAMC,EAAQ/2E,KAId42E,EAAgBvzE,KAAK+pB,MAAOwpD,GAC5BC,EAAiBxzE,KAAK+pB,MAAOypD,GAC7BC,EAAgBzzE,KAAK+pB,MAAO0pD,GAI5B,MAAMnD,EAAU,GACV7nE,EAAW,GACXqiE,EAAU,GACVC,EAAM,GAIZ,IAAI4I,EAAmB,EACnBC,EAAa,EAkBjB,SAASC,EAAY/iE,EAAG9D,EAAGC,EAAG6mE,EAAMC,EAAM9oE,EAAOC,EAAQooE,EAAOU,EAAOC,EAAOnS,GAE7E,MAAMoS,EAAejpE,EAAQ+oE,EACvBG,EAAgBjpE,EAAS+oE,EAEzBG,EAAYnpE,EAAQ,EACpBopE,EAAanpE,EAAS,EACtBopE,EAAYhB,EAAQ,EAEpBiB,EAASP,EAAQ,EACjBQ,EAASP,EAAQ,EAEvB,IAAIQ,EAAgB,EAChBC,EAAa,EAEjB,MAAMh6C,EAAS,IAAI4sB,GAInB,IAAM,IAAIW,EAAK,EAAGA,EAAKusB,EAAQvsB,IAAQ,CAEtC,MAAMvrD,EAAIurD,EAAKksB,EAAgBE,EAE/B,IAAM,IAAIrsB,EAAK,EAAGA,EAAKusB,EAAQvsB,IAAQ,CAEtC,MAAMvrD,EAAIurD,EAAKksB,EAAeE,EAI9B15C,EAAQ5pB,GAAMrU,EAAIq3E,EAClBp5C,EAAQ1tB,GAAMtQ,EAAIq3E,EAClBr5C,EAAQztB,GAAMqnE,EAId7rE,EAASxK,KAAMy8B,EAAOj+B,EAAGi+B,EAAOh+B,EAAGg+B,EAAO59B,GAI1C49B,EAAQ5pB,GAAM,EACd4pB,EAAQ1tB,GAAM,EACd0tB,EAAQztB,GAAMqmE,EAAQ,EAAI,GAAM,EAIhCxI,EAAQ7sE,KAAMy8B,EAAOj+B,EAAGi+B,EAAOh+B,EAAGg+B,EAAO59B,GAIzCiuE,EAAI9sE,KAAM+pD,EAAKgsB,GACfjJ,EAAI9sE,KAAM,EAAMgqD,EAAKgsB,GAIrBQ,GAAiB,GAYnB,IAAM,IAAIxsB,EAAK,EAAGA,EAAKgsB,EAAOhsB,IAE7B,IAAM,IAAID,EAAK,EAAGA,EAAKgsB,EAAOhsB,IAAQ,CAErC,MAAM9pD,EAAIy1E,EAAmB3rB,EAAKusB,EAAStsB,EACrC9pD,EAAIw1E,EAAmB3rB,EAAKusB,GAAWtsB,EAAK,GAC5C7pD,EAAIu1E,GAAqB3rB,EAAK,GAAMusB,GAAWtsB,EAAK,GACpDj3C,EAAI2iE,GAAqB3rB,EAAK,GAAMusB,EAAStsB,EAInDqoB,EAAQryE,KAAMC,EAAGC,EAAG6S,GACpBs/D,EAAQryE,KAAME,EAAGC,EAAG4S,GAIpB0jE,GAAc,EAQhBhB,EAAM3F,SAAU6F,EAAYc,EAAY5S,GAIxC8R,GAAcc,EAIdf,GAAoBc,EAhHrBZ,EAAY,IAAK,IAAK,KAAO,GAAK,EAAGP,EAAOpoE,EAAQD,EAAOwoE,EAAeD,EAAgB,GAC1FK,EAAY,IAAK,IAAK,IAAK,GAAK,EAAGP,EAAOpoE,GAAUD,EAAOwoE,EAAeD,EAAgB,GAC1FK,EAAY,IAAK,IAAK,IAAK,EAAG,EAAG5oE,EAAOqoE,EAAOpoE,EAAQqoE,EAAeE,EAAe,GACrFI,EAAY,IAAK,IAAK,IAAK,GAAK,EAAG5oE,EAAOqoE,GAASpoE,EAAQqoE,EAAeE,EAAe,GACzFI,EAAY,IAAK,IAAK,IAAK,GAAK,EAAG5oE,EAAOC,EAAQooE,EAAOC,EAAeC,EAAgB,GACxFK,EAAY,IAAK,IAAK,KAAO,GAAK,EAAG5oE,EAAOC,GAAUooE,EAAOC,EAAeC,EAAgB,GAI5F72E,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,KAgH5D,SAAS4J,GAAe53D,GAEvB,MAAMknC,EAAM,GAEZ,IAAM,MAAMnzC,KAAKiM,EAAM,CAEtBknC,EAAKnzC,GAAM,GAEX,IAAM,MAAMtT,KAAKuf,EAAKjM,GAAM,CAE3B,MAAM8jE,EAAW73D,EAAKjM,GAAKtT,GAEtBo3E,IAAcA,EAAS/U,SAC3B+U,EAASC,WAAaD,EAASE,WAC/BF,EAASG,WAAaH,EAASphB,WAAaohB,EAASI,WACrDJ,EAASt0B,WAET2D,EAAKnzC,GAAKtT,GAAMo3E,EAAStuE,QAEdiM,MAAMC,QAASoiE,GAE1B3wB,EAAKnzC,GAAKtT,GAAMo3E,EAAS7+B,QAIzBkO,EAAKnzC,GAAKtT,GAAMo3E,GAQnB,OAAO3wB,EAIR,SAASgxB,GAAeC,GAEvB,MAAMC,EAAS,GAEf,IAAM,IAAIrkE,EAAI,EAAGA,EAAIokE,EAASj2E,OAAQ6R,IAAO,CAE5C,MAAMtD,EAAMmnE,GAAeO,EAAUpkE,IAErC,IAAM,MAAMtT,KAAKgQ,EAEhB2nE,EAAQ33E,GAAMgQ,EAAKhQ,GAMrB,OAAO23E,EAMR,MAAMC,GAAgB,CAAE9uE,MAAOquE,GAAe5E,MAAOkF,IAyBrD,SAASI,GAAgBja,GAExB8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,iBAEZ9/B,KAAK24E,QAAU,GACf34E,KAAKu4E,SAAW,GAEhBv4E,KAAK44E,aAhCe,gGAiCpB54E,KAAK64E,eA/BiB,iEAiCtB74E,KAAKgrE,UAAY,EAEjBhrE,KAAKuoE,WAAY,EACjBvoE,KAAKwoE,mBAAqB,EAE1BxoE,KAAKwlE,KAAM,EACXxlE,KAAK84E,QAAS,EACd94E,KAAK+4E,UAAW,EAEhB/4E,KAAK2oE,UAAW,EAChB3oE,KAAK4oE,cAAe,EACpB5oE,KAAKmrE,cAAe,EAEpBnrE,KAAKg5E,WAAa,CACjBC,aAAa,EACbC,WAAW,EACXC,aAAa,EACbC,kBAAkB,GAKnBp5E,KAAKq5E,uBAAyB,CAC7B,MAAS,CAAE,EAAG,EAAG,GACjB,GAAM,CAAE,EAAG,GACX,IAAO,CAAE,EAAG,IAGbr5E,KAAKs5E,yBAAsBngE,EAC3BnZ,KAAKu5E,oBAAqB,EAE1Bv5E,KAAKw5E,YAAc,UAECrgE,IAAfslD,SAE2BtlD,IAA1BslD,EAAWkS,YAEfhkE,QAAQu1B,MAAO,2FAIhBliC,KAAK6oE,UAAWpK,IAqIlB,SAASgb,KAERhf,GAASphB,KAAMr5C,MAEfA,KAAK8/B,KAAO,SAEZ9/B,KAAK2rD,mBAAqB,IAAIuI,GAE9Bl0D,KAAK4rD,iBAAmB,IAAIsI,GAC5Bl0D,KAAK8rD,wBAA0B,IAAIoI,GAgEpC,SAASwlB,GAAmBC,EAAM,GAAIC,EAAS,EAAGvhB,EAAO,GAAKC,EAAM,KAEnEmhB,GAAOpgC,KAAMr5C,MAEbA,KAAK8/B,KAAO,oBAEZ9/B,KAAK25E,IAAMA,EACX35E,KAAKizB,KAAO,EAEZjzB,KAAKq4D,KAAOA,EACZr4D,KAAKs4D,IAAMA,EACXt4D,KAAKo/B,MAAQ,GAEbp/B,KAAK45E,OAASA,EACd55E,KAAK65E,KAAO,KAEZ75E,KAAK85E,UAAY,GACjB95E,KAAK+5E,WAAa,EAElB/5E,KAAKg6E,yBA3NNtB,GAAe7/B,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACnD6/B,GAAe7/B,UAAU3yC,YAAcwyE,GAEvCA,GAAe7/B,UAAUohC,kBAAmB,EAE5CvB,GAAe7/B,UAAU/1B,KAAO,SAAW+gC,GA0B1C,OAxBA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAK64E,eAAiBh1B,EAAOg1B,eAC7B74E,KAAK44E,aAAe/0B,EAAO+0B,aAE3B54E,KAAKu4E,SAAWP,GAAen0B,EAAO00B,UAEtCv4E,KAAK24E,QAAUn5E,OAAOo5C,OAAQ,GAAIiL,EAAO80B,SAEzC34E,KAAKuoE,UAAY1kB,EAAO0kB,UACxBvoE,KAAKwoE,mBAAqB3kB,EAAO2kB,mBAEjCxoE,KAAK84E,OAASj1B,EAAOi1B,OACrB94E,KAAK+4E,SAAWl1B,EAAOk1B,SAEvB/4E,KAAK2oE,SAAW9kB,EAAO8kB,SAEvB3oE,KAAK4oE,aAAe/kB,EAAO+kB,aAC3B5oE,KAAKmrE,aAAetnB,EAAOsnB,aAE3BnrE,KAAKg5E,WAAax5E,OAAOo5C,OAAQ,GAAIiL,EAAOm1B,YAE5Ch5E,KAAKw5E,YAAc31B,EAAO21B,YAEnBx5E,MAIR04E,GAAe7/B,UAAUxjC,OAAS,SAAWyuC,GAE5C,MAAMvjD,EAAOglE,GAAS1sB,UAAUxjC,OAAOgkC,KAAMr5C,KAAM8jD,GAEnDvjD,EAAKi5E,YAAcx5E,KAAKw5E,YACxBj5E,EAAKg4E,SAAW,GAEhB,IAAM,MAAMhpD,KAAQvvB,KAAKu4E,SAAW,CAEnC,MACM54E,EADUK,KAAKu4E,SAAUhpD,GACT5vB,MAEjBA,GAASA,EAAMgkD,UAEnBpjD,EAAKg4E,SAAUhpD,GAAS,CACvBuQ,KAAM,IACNngC,MAAOA,EAAM0V,OAAQyuC,GAAOlB,MAGlBjjD,GAASA,EAAMujE,QAE1B3iE,EAAKg4E,SAAUhpD,GAAS,CACvBuQ,KAAM,IACNngC,MAAOA,EAAM4kE,UAGH5kE,GAASA,EAAMy4E,UAE1B73E,EAAKg4E,SAAUhpD,GAAS,CACvBuQ,KAAM,KACNngC,MAAOA,EAAM+9C,WAGH/9C,GAASA,EAAMk3D,UAE1Bt2D,EAAKg4E,SAAUhpD,GAAS,CACvBuQ,KAAM,KACNngC,MAAOA,EAAM+9C,WAGH/9C,GAASA,EAAM04E,UAE1B93E,EAAKg4E,SAAUhpD,GAAS,CACvBuQ,KAAM,KACNngC,MAAOA,EAAM+9C,WAGH/9C,GAASA,EAAMu4E,UAE1B33E,EAAKg4E,SAAUhpD,GAAS,CACvBuQ,KAAM,KACNngC,MAAOA,EAAM+9C,WAGH/9C,GAASA,EAAMw4E,UAE1B53E,EAAKg4E,SAAUhpD,GAAS,CACvBuQ,KAAM,KACNngC,MAAOA,EAAM+9C,WAKdn9C,EAAKg4E,SAAUhpD,GAAS,CACvB5vB,MAAOA,GASLH,OAAOud,KAAM/c,KAAK24E,SAAUr2E,OAAS,IAAI/B,EAAKo4E,QAAU34E,KAAK24E,SAElEp4E,EAAKq4E,aAAe54E,KAAK44E,aACzBr4E,EAAKs4E,eAAiB74E,KAAK64E,eAE3B,MAAMG,EAAa,GAEnB,IAAM,MAAM7yE,KAAOnG,KAAKg5E,YAES,IAA3Bh5E,KAAKg5E,WAAY7yE,KAAiB6yE,EAAY7yE,IAAQ,GAM5D,OAFK3G,OAAOud,KAAMi8D,GAAa12E,OAAS,IAAI/B,EAAKy4E,WAAaA,GAEvDz4E,GAiBRk5E,GAAO5gC,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+W,GAAS5hB,WAAa,CAEtE3yC,YAAauzE,GAEb9c,UAAU,EAEV75C,KAAM,SAAW+gC,EAAQub,GASxB,OAPA3E,GAAS5hB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,EAAQub,GAE5Cp/D,KAAK2rD,mBAAmB7oC,KAAM+gC,EAAO8H,oBAErC3rD,KAAK4rD,iBAAiB9oC,KAAM+gC,EAAO+H,kBACnC5rD,KAAK8rD,wBAAwBhpC,KAAM+gC,EAAOiI,yBAEnC9rD,MAIRo9D,kBAAmB,SAAWlkB,QAEb//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,6DACdmiC,EAAS,IAAIyR,IAId3qD,KAAKuuD,mBAAmB,GAAM,GAE9B,MAAM/qD,EAAIxD,KAAK+rD,YAAYlP,SAE3B,OAAO3D,EAAOtwC,KAAOpF,EAAG,IAAOA,EAAG,IAAOA,EAAG,KAAO0L,aAIpDuuD,kBAAmB,SAAWC,GAE7BjD,GAAS5hB,UAAU4kB,kBAAkBpkB,KAAMr5C,KAAM09D,GAEjD19D,KAAK2rD,mBAAmB7oC,KAAM9iB,KAAK+rD,aAActL,UAIlD8N,kBAAmB,SAAWoP,EAAeC,GAE5CnD,GAAS5hB,UAAU0V,kBAAkBlV,KAAMr5C,KAAM29D,EAAeC,GAEhE59D,KAAK2rD,mBAAmB7oC,KAAM9iB,KAAK+rD,aAActL,UAIlD92C,MAAO,WAEN,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,SA6BtC05E,GAAkB7gC,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+1B,GAAO5gC,WAAa,CAE/E3yC,YAAawzE,GAEbQ,qBAAqB,EAErBp3D,KAAM,SAAW+gC,EAAQub,GAiBxB,OAfAqa,GAAO5gC,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,EAAQub,GAE1Cp/D,KAAK25E,IAAM91B,EAAO81B,IAClB35E,KAAKizB,KAAO4wB,EAAO5wB,KAEnBjzB,KAAKq4D,KAAOxU,EAAOwU,KACnBr4D,KAAKs4D,IAAMzU,EAAOyU,IAClBt4D,KAAKo/B,MAAQykB,EAAOzkB,MAEpBp/B,KAAK45E,OAAS/1B,EAAO+1B,OACrB55E,KAAK65E,KAAuB,OAAhBh2B,EAAOg2B,KAAgB,KAAOr6E,OAAOo5C,OAAQ,GAAIiL,EAAOg2B,MAEpE75E,KAAK85E,UAAYj2B,EAAOi2B,UACxB95E,KAAK+5E,WAAal2B,EAAOk2B,WAElB/5E,MAYRm6E,eAAgB,SAAWC,GAG1B,MAAMC,EAAe,GAAMr6E,KAAKs6E,gBAAkBF,EAElDp6E,KAAK25E,IAA0B,EAApBngC,GAAUE,QAAcr2C,KAAK01B,KAAMshD,GAC9Cr6E,KAAKg6E,0BAONO,eAAgB,WAEf,MAAMF,EAAeh3E,KAAKL,IAAyB,GAApBw2C,GAAUC,QAAgBz5C,KAAK25E,KAE9D,MAAO,GAAM35E,KAAKs6E,gBAAkBD,GAIrCG,gBAAiB,WAEhB,OAA2B,EAApBhhC,GAAUE,QAAcr2C,KAAK01B,KACnC11B,KAAKL,IAAyB,GAApBw2C,GAAUC,QAAgBz5C,KAAK25E,KAAQ35E,KAAKizB,OAIxDwnD,aAAc,WAGb,OAAOz6E,KAAK85E,UAAYz2E,KAAK4B,IAAKjF,KAAK45E,OAAQ,IAIhDU,cAAe,WAGd,OAAOt6E,KAAK85E,UAAYz2E,KAAK2B,IAAKhF,KAAK45E,OAAQ,IAuChDc,cAAe,SAAWC,EAAWC,EAAY96E,EAAGC,EAAGuO,EAAOC,GAE7DvO,KAAK45E,OAASe,EAAYC,EAEP,OAAd56E,KAAK65E,OAET75E,KAAK65E,KAAO,CACXgB,SAAS,EACTF,UAAW,EACXC,WAAY,EACZxqD,QAAS,EACTC,QAAS,EACT/hB,MAAO,EACPC,OAAQ,IAKVvO,KAAK65E,KAAKgB,SAAU,EACpB76E,KAAK65E,KAAKc,UAAYA,EACtB36E,KAAK65E,KAAKe,WAAaA,EACvB56E,KAAK65E,KAAKzpD,QAAUtwB,EACpBE,KAAK65E,KAAKxpD,QAAUtwB,EACpBC,KAAK65E,KAAKvrE,MAAQA,EAClBtO,KAAK65E,KAAKtrE,OAASA,EAEnBvO,KAAKg6E,0BAINc,gBAAiB,WAEG,OAAd96E,KAAK65E,OAET75E,KAAK65E,KAAKgB,SAAU,GAIrB76E,KAAKg6E,0BAINA,uBAAwB,WAEvB,MAAM3hB,EAAOr4D,KAAKq4D,KAClB,IAAI55B,EAAM45B,EAAOh1D,KAAKL,IAAyB,GAApBw2C,GAAUC,QAAgBz5C,KAAK25E,KAAQ35E,KAAKizB,KACnE1kB,EAAS,EAAIkwB,EACbnwB,EAAQtO,KAAK45E,OAASrrE,EACtBiwB,GAAS,GAAMlwB,EACnB,MAAMurE,EAAO75E,KAAK65E,KAElB,GAAmB,OAAd75E,KAAK65E,MAAiB75E,KAAK65E,KAAKgB,QAAU,CAE9C,MAAMF,EAAYd,EAAKc,UACtBC,EAAaf,EAAKe,WAEnBp8C,GAAQq7C,EAAKzpD,QAAU9hB,EAAQqsE,EAC/Bl8C,GAAOo7C,EAAKxpD,QAAU9hB,EAASqsE,EAC/BtsE,GAASurE,EAAKvrE,MAAQqsE,EACtBpsE,GAAUsrE,EAAKtrE,OAASqsE,EAIzB,MAAMG,EAAO/6E,KAAK+5E,WACJ,IAATgB,IAAav8C,GAAQ65B,EAAO0iB,EAAO/6E,KAAKy6E,gBAE7Cz6E,KAAK4rD,iBAAiBsM,gBAAiB15B,EAAMA,EAAOlwB,EAAOmwB,EAAKA,EAAMlwB,EAAQ8pD,EAAMr4D,KAAKs4D,KAEzFt4D,KAAK8rD,wBAAwBhpC,KAAM9iB,KAAK4rD,kBAAmBnL,UAI5DprC,OAAQ,SAAWyuC,GAElB,MAAMvjD,EAAOk6D,GAAS5hB,UAAUxjC,OAAOgkC,KAAMr5C,KAAM8jD,GAgBnD,OAdAvjD,EAAKytD,OAAO2rB,IAAM35E,KAAK25E,IACvBp5E,EAAKytD,OAAO/6B,KAAOjzB,KAAKizB,KAExB1yB,EAAKytD,OAAOqK,KAAOr4D,KAAKq4D,KACxB93D,EAAKytD,OAAOsK,IAAMt4D,KAAKs4D,IACvB/3D,EAAKytD,OAAO5uB,MAAQp/B,KAAKo/B,MAEzB7+B,EAAKytD,OAAO4rB,OAAS55E,KAAK45E,OAEP,OAAd55E,KAAK65E,OAAgBt5E,EAAKytD,OAAO6rB,KAAOr6E,OAAOo5C,OAAQ,GAAI54C,KAAK65E,OAErEt5E,EAAKytD,OAAO8rB,UAAY95E,KAAK85E,UAC7Bv5E,EAAKytD,OAAO+rB,WAAa/5E,KAAK+5E,WAEvBx5E,KAMT,MAAMo5E,GAAM,GAEZ,SAASqB,GAAY3iB,EAAMC,EAAK2iB,GAM/B,GAJAxgB,GAASphB,KAAMr5C,MAEfA,KAAK8/B,KAAO,cAEkC,IAAzCm7C,EAAaC,wBAGjB,YADAvuE,QAAQu1B,MAAO,0GAKhBliC,KAAKi7E,aAAeA,EAEpB,MAAME,EAAW,IAAIzB,GAAmBC,GAjBhB,EAiB6BthB,EAAMC,GAC3D6iB,EAASxhB,OAAS35D,KAAK25D,OACvBwhB,EAASnsD,GAAGpmB,IAAK,GAAK,EAAG,GACzBuyE,EAASxpB,OAAQ,IAAIhH,GAAS,EAAG,EAAG,IACpC3qD,KAAKiJ,IAAKkyE,GAEV,MAAMC,EAAW,IAAI1B,GAAmBC,GAvBhB,EAuB6BthB,EAAMC,GAC3D8iB,EAASzhB,OAAS35D,KAAK25D,OACvByhB,EAASpsD,GAAGpmB,IAAK,GAAK,EAAG,GACzBwyE,EAASzpB,OAAQ,IAAIhH,IAAW,EAAG,EAAG,IACtC3qD,KAAKiJ,IAAKmyE,GAEV,MAAMC,EAAW,IAAI3B,GAAmBC,GA7BhB,EA6B6BthB,EAAMC,GAC3D+iB,EAAS1hB,OAAS35D,KAAK25D,OACvB0hB,EAASrsD,GAAGpmB,IAAK,EAAG,EAAG,GACvByyE,EAAS1pB,OAAQ,IAAIhH,GAAS,EAAG,EAAG,IACpC3qD,KAAKiJ,IAAKoyE,GAEV,MAAMC,EAAW,IAAI5B,GAAmBC,GAnChB,EAmC6BthB,EAAMC,GAC3DgjB,EAAS3hB,OAAS35D,KAAK25D,OACvB2hB,EAAStsD,GAAGpmB,IAAK,EAAG,GAAK,GACzB0yE,EAAS3pB,OAAQ,IAAIhH,GAAS,GAAK,EAAG,IACtC3qD,KAAKiJ,IAAKqyE,GAEV,MAAMC,EAAW,IAAI7B,GAAmBC,GAzChB,EAyC6BthB,EAAMC,GAC3DijB,EAAS5hB,OAAS35D,KAAK25D,OACvB4hB,EAASvsD,GAAGpmB,IAAK,GAAK,EAAG,GACzB2yE,EAAS5pB,OAAQ,IAAIhH,GAAS,EAAG,EAAG,IACpC3qD,KAAKiJ,IAAKsyE,GAEV,MAAMC,EAAW,IAAI9B,GAAmBC,GA/ChB,EA+C6BthB,EAAMC,GAC3DkjB,EAAS7hB,OAAS35D,KAAK25D,OACvB6hB,EAASxsD,GAAGpmB,IAAK,GAAK,EAAG,GACzB4yE,EAAS7pB,OAAQ,IAAIhH,GAAS,EAAG,GAAK,IACtC3qD,KAAKiJ,IAAKuyE,GAEVx7E,KAAKyoD,OAAS,SAAWgzB,EAAUC,GAEb,OAAhB17E,KAAK06D,QAAkB16D,KAAKy9D,oBAEjC,MAAMke,EAAmBF,EAASG,GAAGf,QAC/BgB,EAAsBJ,EAASK,kBAErCL,EAASG,GAAGf,SAAU,EAEtB,MAAM53B,EAAkBg4B,EAAa10B,QAAQtD,gBAE7Cg4B,EAAa10B,QAAQtD,iBAAkB,EAEvCw4B,EAASM,gBAAiBd,EAAc,GACxCQ,EAASO,OAAQN,EAAOP,GAExBM,EAASM,gBAAiBd,EAAc,GACxCQ,EAASO,OAAQN,EAAON,GAExBK,EAASM,gBAAiBd,EAAc,GACxCQ,EAASO,OAAQN,EAAOL,GAExBI,EAASM,gBAAiBd,EAAc,GACxCQ,EAASO,OAAQN,EAAOJ,GAExBG,EAASM,gBAAiBd,EAAc,GACxCQ,EAASO,OAAQN,EAAOH,GAExBN,EAAa10B,QAAQtD,gBAAkBA,EAEvCw4B,EAASM,gBAAiBd,EAAc,GACxCQ,EAASO,OAAQN,EAAOF,GAExBC,EAASM,gBAAiBF,GAE1BJ,EAASG,GAAGf,QAAUc,GASxB,SAASM,GAAa53B,EAAQlC,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQ3iB,EAAM4iB,EAAYC,GAEpG0B,OAAoBlrC,IAAXkrC,EAAuBA,EAAS,GACzClC,OAAsBhpC,IAAZgpC,EAAwBA,EAAUlS,GAC5CwS,OAAoBtpC,IAAXspC,EAAuBA,EAASxQ,GAEzCgQ,GAAQ5I,KAAMr5C,KAAMqkD,EAAQlC,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQ3iB,EAAM4iB,EAAYC,GAEnG3iD,KAAKmjD,OAAQ,EAYbnjD,KAAKk8E,kBAAmB,EAyBzB,SAASC,GAAuBv8D,EAAM1U,EAASkxE,GAEzCxoE,OAAOyoE,UAAWnxE,KAEtByB,QAAQoK,KAAM,oGAEd7L,EAAUkxE,GAIXh2B,GAAkB/M,KAAMr5C,KAAM4f,EAAMA,EAAM1U,GAE1CA,EAAUA,GAAW,GAErBlL,KAAKumD,QAAU,IAAI01B,QAAa9iE,EAAWjO,EAAQi3C,QAASj3C,EAAQm3C,MAAOn3C,EAAQo3C,MAAOp3C,EAAQq3C,UAAWr3C,EAAQs3C,UAAWt3C,EAAQu3C,OAAQv3C,EAAQ40B,KAAM50B,EAAQw3C,WAAYx3C,EAAQy3C,UAE1L3iD,KAAKumD,QAAQ21B,kBAAmB,EAoHjC,SAASI,GAAa/7E,EAAM+N,EAAOC,EAAQk0C,EAAQ3iB,EAAMqiB,EAASE,EAAOC,EAAOC,EAAWC,EAAWE,EAAYC,GAEjHV,GAAQ5I,KAAMr5C,KAAM,KAAMmiD,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQ3iB,EAAM4iB,EAAYC,GAEjG3iD,KAAK0f,MAAQ,CAAEnf,KAAMA,GAAQ,KAAM+N,MAAOA,GAAS,EAAGC,OAAQA,GAAU,GAExEvO,KAAKuiD,eAA0BppC,IAAdopC,EAA0BA,EAAY7R,GACvD1wC,KAAKwiD,eAA0BrpC,IAAdqpC,EAA0BA,EAAY9R,GAEvD1wC,KAAKijD,iBAAkB,EACvBjjD,KAAKmjD,OAAQ,EACbnjD,KAAKojD,gBAAkB,EAEvBpjD,KAAKuxE,aAAc,EAjMpByJ,GAAWniC,UAAYr5C,OAAOkkD,OAAQ+W,GAAS5hB,WAC/CmiC,GAAWniC,UAAU3yC,YAAc80E,GA0BnCiB,GAAYpjC,UAAYr5C,OAAOkkD,OAAQzB,GAAQpJ,WAC/CojC,GAAYpjC,UAAU3yC,YAAc+1E,GAEpCA,GAAYpjC,UAAU0jC,eAAgB,EAEtC/8E,OAAOC,eAAgBw8E,GAAYpjC,UAAW,SAAU,CAEvDj7B,IAAK,WAEJ,OAAO5d,KAAK0f,OAIb9W,IAAK,SAAWjJ,GAEfK,KAAK0f,MAAQ/f,KA0Bfw8E,GAAsBtjC,UAAYr5C,OAAOkkD,OAAQ0C,GAAkBvN,WACnEsjC,GAAsBtjC,UAAU3yC,YAAci2E,GAE9CA,GAAsBtjC,UAAUqiC,yBAA0B,EAE1DiB,GAAsBtjC,UAAU2jC,2BAA6B,SAAWf,EAAUl1B,GAEjFvmD,KAAKumD,QAAQzmB,KAAOymB,EAAQzmB,KAC5B9/B,KAAKumD,QAAQ9D,OAASvQ,GACtBlyC,KAAKumD,QAAQ5D,SAAW4D,EAAQ5D,SAEhC3iD,KAAKumD,QAAQtD,gBAAkBsD,EAAQtD,gBACvCjjD,KAAKumD,QAAQ/D,UAAY+D,EAAQ/D,UACjCxiD,KAAKumD,QAAQhE,UAAYgE,EAAQhE,UAEjC,MAAMn6B,EAAS,CAEdmwD,SAAU,CACTkE,UAAW,CAAE98E,MAAO,OAGrBi5E,aAAwB,iXAoBxBC,eAA0B,8TAoBrBrqB,EAAW,IAAIkoB,GAAmB,EAAG,EAAG,GAExC3X,EAAW,IAAI2Z,GAAgB,CAEpCnpD,KAAM,sBAENgpD,SAAUP,GAAe5vD,EAAOmwD,UAChCK,aAAcxwD,EAAOwwD,aACrBC,eAAgBzwD,EAAOywD,eACvBnT,KAAMr4B,EACNo4B,SAAUh4B,IAIXsxB,EAASwZ,SAASkE,UAAU98E,MAAQ4mD,EAEpC,MAAMm2B,EAAO,IAAItH,GAAM5mB,EAAUuQ,GAE3B4d,EAAmBp2B,EAAQ/D,UAG5B+D,EAAQ/D,YAActR,KAA2BqV,EAAQ/D,UAAYzR,IAU1E,OARe,IAAIiqC,GAAY,EAAG,GAAIh7E,MAC/ByoD,OAAQgzB,EAAUiB,GAEzBn2B,EAAQ/D,UAAYm6B,EAEpBD,EAAKluB,SAAShK,UACdk4B,EAAK3d,SAASva,UAEPxkD,MAIRm8E,GAAsBtjC,UAAU75B,MAAQ,SAAWy8D,EAAUt+D,EAAOw5D,EAAOiG,GAE1E,MAAMf,EAAsBJ,EAASK,kBAErC,IAAM,IAAIj8E,EAAI,EAAGA,EAAI,EAAGA,IAEvB47E,EAASM,gBAAiB/7E,KAAMH,GAEhC47E,EAASz8D,MAAO7B,EAAOw5D,EAAOiG,GAI/BnB,EAASM,gBAAiBF,IAqB3BS,GAAYzjC,UAAYr5C,OAAOkkD,OAAQzB,GAAQpJ,WAC/CyjC,GAAYzjC,UAAU3yC,YAAco2E,GAEpCA,GAAYzjC,UAAU0L,eAAgB,EAEtC,MAAMs4B,GAA0B,IAAInsB,GAC9BosB,GAA0B,IAAInyB,GAEpC,MAAMoyB,GAEL72E,YAAasU,EAAIhW,EAAIC,EAAIg9D,EAAIub,EAAIC,GAEhCj9E,KAAKk9E,OAAS,MAEJ/jE,IAAPqB,EAAqBA,EAAK,IAAIglD,QACvBrmD,IAAP3U,EAAqBA,EAAK,IAAIg7D,QACvBrmD,IAAP1U,EAAqBA,EAAK,IAAI+6D,QACvBrmD,IAAPsoD,EAAqBA,EAAK,IAAIjC,QACvBrmD,IAAP6jE,EAAqBA,EAAK,IAAIxd,QACvBrmD,IAAP8jE,EAAqBA,EAAK,IAAIzd,IAMlC52D,IAAK4R,EAAIhW,EAAIC,EAAIg9D,EAAIub,EAAIC,GAExB,MAAMC,EAASl9E,KAAKk9E,OASpB,OAPAA,EAAQ,GAAIp6D,KAAMtI,GAClB0iE,EAAQ,GAAIp6D,KAAMte,GAClB04E,EAAQ,GAAIp6D,KAAMre,GAClBy4E,EAAQ,GAAIp6D,KAAM2+C,GAClByb,EAAQ,GAAIp6D,KAAMk6D,GAClBE,EAAQ,GAAIp6D,KAAMm6D,GAEXj9E,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAMq6D,GAEL,MAAMD,EAASl9E,KAAKk9E,OAEpB,IAAM,IAAIr9E,EAAI,EAAGA,EAAI,EAAGA,IAEvBq9E,EAAQr9E,GAAIijB,KAAMq6D,EAAQD,OAAQr9E,IAInC,OAAOG,KAIRo9E,wBAAyBx6E,GAExB,MAAMs6E,EAASl9E,KAAKk9E,OACdt+B,EAAKh8C,EAAEi6C,SACPwgC,EAAMz+B,EAAI,GAAK0+B,EAAM1+B,EAAI,GAAK2+B,EAAM3+B,EAAI,GAAK4+B,EAAM5+B,EAAI,GACvD6+B,EAAM7+B,EAAI,GAAK8+B,EAAM9+B,EAAI,GAAK++B,EAAM/+B,EAAI,GAAKg/B,EAAMh/B,EAAI,GACvDi/B,EAAMj/B,EAAI,GAAKk/B,EAAMl/B,EAAI,GAAKm/B,EAAOn/B,EAAI,IAAMo/B,EAAOp/B,EAAI,IAC1Dq/B,EAAOr/B,EAAI,IAAMs/B,EAAOt/B,EAAI,IAAMu/B,EAAOv/B,EAAI,IAAMw/B,EAAOx/B,EAAI,IASpE,OAPAs+B,EAAQ,GAAIzd,cAAe+d,EAAMH,EAAKO,EAAMH,EAAKO,EAAOH,EAAKO,EAAOH,GAAO/uE,YAC3EguE,EAAQ,GAAIzd,cAAe+d,EAAMH,EAAKO,EAAMH,EAAKO,EAAOH,EAAKO,EAAOH,GAAO/uE,YAC3EguE,EAAQ,GAAIzd,cAAe+d,EAAMF,EAAKM,EAAMF,EAAKM,EAAOF,EAAKM,EAAOF,GAAOhvE,YAC3EguE,EAAQ,GAAIzd,cAAe+d,EAAMF,EAAKM,EAAMF,EAAKM,EAAOF,EAAKM,EAAOF,GAAOhvE,YAC3EguE,EAAQ,GAAIzd,cAAe+d,EAAMD,EAAKK,EAAMD,EAAKK,EAAOD,EAAMK,EAAOD,GAAOjvE,YAC5EguE,EAAQ,GAAIzd,cAAe+d,EAAMD,EAAKK,EAAMD,EAAKK,EAAOD,EAAMK,EAAOD,GAAOjvE,YAErElP,KAIRq+E,iBAAkBrwB,GAEjB,MAAMQ,EAAWR,EAAOQ,SAMxB,OAJiC,OAA5BA,EAASigB,gBAA0BjgB,EAASijB,wBAEjDoL,GAAU/5D,KAAM0rC,EAASigB,gBAAiB3pB,aAAckJ,EAAOjC,aAExD/rD,KAAKivD,iBAAkB4tB,IAI/ByB,iBAAkBC,GAMjB,OAJA1B,GAAUtyE,OAAO3B,IAAK,EAAG,EAAG,GAC5Bi0E,GAAU5iE,OAAS,kBACnB4iE,GAAU/3B,aAAcy5B,EAAOxyB,aAExB/rD,KAAKivD,iBAAkB4tB,IAI/B5tB,iBAAkBC,GAEjB,MAAMguB,EAASl9E,KAAKk9E,OACd3yE,EAAS2kD,EAAO3kD,OAChBi0E,GAActvB,EAAOj1C,OAE3B,IAAM,IAAIpa,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAI9B,GAFiBq9E,EAAQr9E,GAAIswD,gBAAiB5lD,GAE9Bi0E,EAEf,OAAO,EAMT,OAAO,EAIRxvB,cAAed,GAEd,MAAMgvB,EAASl9E,KAAKk9E,OAEpB,IAAM,IAAIr9E,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B,MAAMwvD,EAAQ6tB,EAAQr9E,GAQtB,GAJAi9E,GAAUh9E,EAAIuvD,EAAM73B,OAAO13B,EAAI,EAAIouD,EAAIlpD,IAAIlF,EAAIouD,EAAIjpD,IAAInF,EACvDg9E,GAAU/8E,EAAIsvD,EAAM73B,OAAOz3B,EAAI,EAAImuD,EAAIlpD,IAAIjF,EAAImuD,EAAIjpD,IAAIlF,EACvD+8E,GAAU38E,EAAIkvD,EAAM73B,OAAOr3B,EAAI,EAAI+tD,EAAIlpD,IAAI7E,EAAI+tD,EAAIjpD,IAAI9E,EAElDkvD,EAAMc,gBAAiB2sB,IAAc,EAEzC,OAAO,EAMT,OAAO,EAIRhyD,cAAe7a,GAEd,MAAMitE,EAASl9E,KAAKk9E,OAEpB,IAAM,IAAIr9E,EAAI,EAAGA,EAAI,EAAGA,IAEvB,GAAKq9E,EAAQr9E,GAAIswD,gBAAiBlgD,GAAU,EAE3C,OAAO,EAMT,OAAO,GAMT,SAASwuE,KAER,IAAIl7D,EAAU,KACVm7D,GAAc,EACdC,EAAgB,KAChBC,EAAY,KAEhB,SAASC,EAAkBC,EAAMC,GAEhCJ,EAAeG,EAAMC,GAErBH,EAAYr7D,EAAQy7D,sBAAuBH,GAI5C,MAAO,CAENr+E,MAAO,YAEe,IAAhBk+E,GACkB,OAAlBC,IAELC,EAAYr7D,EAAQy7D,sBAAuBH,GAE3CH,GAAc,IAIfr9E,KAAM,WAELkiB,EAAQ07D,qBAAsBL,GAE9BF,GAAc,GAIfQ,iBAAkB,SAAW/tD,GAE5BwtD,EAAgBxtD,GAIjBguD,WAAY,SAAWx/E,GAEtB4jB,EAAU5jB,IAQb,SAASy/E,GAAiB35D,EAAI45D,GAE7B,MAAMC,EAAWD,EAAaC,SAExBC,EAAU,IAAIC,QA6KpB,MAAO,CAEN5hE,IAjED,SAAcggC,GAIb,OAFKA,EAAU6hC,+BAA+B7hC,EAAYA,EAAUr9C,MAE7Dg/E,EAAQ3hE,IAAKggC,IA8DpB9c,OA1DD,SAAiB8c,GAEXA,EAAU6hC,+BAA+B7hC,EAAYA,EAAUr9C,MAEpE,MAAMA,EAAOg/E,EAAQ3hE,IAAKggC,GAErBr9C,IAEJklB,EAAGi6D,aAAcn/E,EAAK4K,QAEtBo0E,EAAQzhE,OAAQ8/B,KAiDjB6K,OA3CD,SAAiB7K,EAAW+hC,GAE3B,GAAK/hC,EAAUw0B,oBAAsB,CAEpC,MAAMwN,EAASL,EAAQ3hE,IAAKggC,GAa5B,cAXOgiC,GAAUA,EAAOv8B,QAAUzF,EAAUyF,UAE3Ck8B,EAAQ32E,IAAKg1C,EAAW,CACvBzyC,OAAQyyC,EAAUzyC,OAClB20B,KAAM8d,EAAU9d,KAChB+/C,gBAAiBjiC,EAAUkiC,YAC3Bz8B,QAASzF,EAAUyF,WASjBzF,EAAU6hC,+BAA+B7hC,EAAYA,EAAUr9C,MAEpE,MAAMA,EAAOg/E,EAAQ3hE,IAAKggC,QAEZzkC,IAAT5Y,EAEJg/E,EAAQ32E,IAAKg1C,EA/Jf,SAAuBA,EAAW+hC,GAEjC,MAAMxmC,EAAQyE,EAAUzE,MAClByyB,EAAQhuB,EAAUguB,MAElBzgE,EAASsa,EAAGc,eAElBd,EAAGkB,WAAYg5D,EAAYx0E,GAC3Bsa,EAAGoB,WAAY84D,EAAYxmC,EAAOyyB,GAElChuB,EAAUqvB,mBAEV,IAAIntC,EAAO,KAoDX,OAlDKqZ,aAAiBzyB,aAErBoZ,EAAO,KAEIqZ,aAAiB4zB,aAE5BpgE,QAAQoK,KAAM,wEAEHoiC,aAAiBozB,YAEvB3uB,EAAUqwB,yBAETqR,EAEJx/C,EAAO,KAIPnzB,QAAQoK,KAAM,2EAMf+oB,EAAO,KAIGqZ,aAAiBkzB,WAE5BvsC,EAAO,KAEIqZ,aAAiBwzB,YAE5B7sC,EAAO,KAEIqZ,aAAiBszB,WAE5B3sC,EAAO,KAEIqZ,aAAiB4yB,UAE5BjsC,EAAO,KAEIqZ,aAAiB8yB,aAE5BnsC,EAAO,MAID,CACN30B,OAAQA,EACR20B,KAAMA,EACN+/C,gBAAiB1mC,EAAM4mC,kBACvB18B,QAASzF,EAAUyF,SA2FK98B,CAAcq3B,EAAW+hC,IAEtCp/E,EAAK8iD,QAAUzF,EAAUyF,WAxFtC,SAAuBl4C,EAAQyyC,EAAW+hC,GAEzC,MAAMxmC,EAAQyE,EAAUzE,MAClB0yB,EAAcjuB,EAAUiuB,YAE9BpmD,EAAGkB,WAAYg5D,EAAYx0E,IAEE,IAAxB0gE,EAAYve,MAIhB7nC,EAAGu6D,cAAeL,EAAY,EAAGxmC,IAI5BmmC,EAEJ75D,EAAGu6D,cAAeL,EAAY9T,EAAY7vD,OAASm9B,EAAM4mC,kBACxD5mC,EAAO0yB,EAAY7vD,OAAQ6vD,EAAYve,OAIxC7nC,EAAGu6D,cAAeL,EAAY9T,EAAY7vD,OAASm9B,EAAM4mC,kBACxD5mC,EAAM8mC,SAAUpU,EAAY7vD,OAAQ6vD,EAAY7vD,OAAS6vD,EAAYve,QAIvEue,EAAYve,OAAU,GA+DtB4yB,CAAc3/E,EAAK4K,OAAQyyC,EAAW+hC,GAEtCp/E,EAAK8iD,QAAUzF,EAAUyF,WAgB5B,MAAM88B,WAA4BzP,GAEjCxqE,YAAaoI,EAAQ,EAAGC,EAAS,EAAGqoE,EAAgB,EAAGC,EAAiB,GAEvEnmE,QACA1Q,KAAK8/B,KAAO,sBAEZ9/B,KAAKy+D,WAAa,CACjBnwD,MAAOA,EACPC,OAAQA,EACRqoE,cAAeA,EACfC,eAAgBA,GAGjB,MAAMuJ,EAAa9xE,EAAQ,EACrB+xE,EAAc9xE,EAAS,EAEvB8oE,EAAQh0E,KAAK+pB,MAAOwpD,GACpBU,EAAQj0E,KAAK+pB,MAAOypD,GAEpBe,EAASP,EAAQ,EACjBQ,EAASP,EAAQ,EAEjBgJ,EAAgBhyE,EAAQ+oE,EACxBkJ,EAAiBhyE,EAAS+oE,EAI1B3D,EAAU,GACV7nE,EAAW,GACXqiE,EAAU,GACVC,EAAM,GAEZ,IAAM,IAAI9iB,EAAK,EAAGA,EAAKusB,EAAQvsB,IAAQ,CAEtC,MAAMvrD,EAAIurD,EAAKi1B,EAAiBF,EAEhC,IAAM,IAAIh1B,EAAK,EAAGA,EAAKusB,EAAQvsB,IAAQ,CAEtC,MAAMvrD,EAAIurD,EAAKi1B,EAAgBF,EAE/Bt0E,EAASxK,KAAMxB,GAAKC,EAAG,GAEvBouE,EAAQ7sE,KAAM,EAAG,EAAG,GAEpB8sE,EAAI9sE,KAAM+pD,EAAKgsB,GACfjJ,EAAI9sE,KAAM,EAAMgqD,EAAKgsB,IAMvB,IAAM,IAAIhsB,EAAK,EAAGA,EAAKgsB,EAAOhsB,IAE7B,IAAM,IAAID,EAAK,EAAGA,EAAKgsB,EAAOhsB,IAAQ,CAErC,MAAM9pD,EAAI8pD,EAAKusB,EAAStsB,EAClB9pD,EAAI6pD,EAAKusB,GAAWtsB,EAAK,GACzB7pD,EAAM4pD,EAAK,EAAMusB,GAAWtsB,EAAK,GACjCj3C,EAAMg3C,EAAK,EAAMusB,EAAStsB,EAEhCqoB,EAAQryE,KAAMC,EAAGC,EAAG6S,GACpBs/D,EAAQryE,KAAME,EAAGC,EAAG4S,GAMtBrU,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,KAwQ5D,MAAMoS,GAAc,CACnBC,kBAnQuB,iFAoQvBC,uBAlQ4B,6DAmQ5BC,mBAjQwB,yEAkQxBC,eAhQoB,2aAiQpBC,oBA/PyB,wFAgQzBC,aA9PkB,uCA+PlBC,mBA7PwB,+GA8PxBC,MA5PW,4pPA6PXC,sBA3P2B,i9BA4P3BC,yBA1P8B,6nBA2P9BC,8BAzPmC,4HA0PnCC,4BAxPiC,qEAyPjCC,uBAvP4B,2EAwP5BC,eAtPoB,0DAuPpBC,oBArPyB,mDAsPzBC,kBApPuB,8FAqPvBC,aAnPkB,8NAoPlBC,OAlPY,s0FAmPZC,4BAjPiC,21HAkPjCC,qBAhP0B,2jBAiP1BC,4BA/OiC,kJAgPjCC,uBA9O4B,mKA+O5BC,qBA7O0B,6MA8O1BC,0BA5O+B,mEA6O/BC,mBA3OwB,sDA4OxBC,wBA1O6B,4uFA2O7BC,gBAzOqB,g3CA0OrBC,4BAxOiC,yOAyOjCC,qBAvO0B,yTAwO1BC,mBAtOwB,+RAuOxBC,8BAjNmC,02EAkNnCC,cAtOmB,4oBAuOnBC,WArOgB,uDAsOhBC,gBApOqB,oDAqOrBC,aAnOkB,wRAoOlBC,kBAlOuB,0MAmOvBC,0BAjO+B,iYAkO/BC,kBAhOuB,4LAiOvBC,uBA/N4B,iGAgO5BC,sBA9N2B,wwFA+N3BC,kBA7NuB,szIA8NvBC,qBA1N0B,oEA2N1BC,0BAzN+B,u9BA0N/BC,sBAxN2B,sMAyN3BC,2BAvNgC,qxCAwNhCC,yBAtN8B,w0CAuN9BC,8BArNmC,wjLAsNnCC,sBApN2B,62HAqN3BC,qBAnN0B,63BAoN1BC,oBAlNyB,2QAmNzBC,qBAjN0B,mLAkN1BC,0BAhN+B,yKAiN/BC,wBA/M6B,sLAgN7BC,mBA9MwB,+XA+MxBC,aA7MkB,oJA8MlBC,kBA5MuB,mDA6MvBC,sBA3M2B,kVA4M3BC,2BA1MgC,uMA2MhCC,sBAzM2B,uKA0M3BC,2BAxMgC,qEAyMhCC,mBAvMwB,uUAwMxBC,wBAtM6B,0NAuM7BC,mBArMwB,omBAsMxBC,sBApM2B,63BAqM3BC,qBAnM0B,6pBAoM1BC,wBAlM6B,q6BAmM7BC,gCAjMqC,qEAkMrCC,+BAhMoC,oWAiMpCC,wBA/L6B,mRAgM7BC,QA9La,wjDA+LbC,6BA7LkC,4EA8LlCC,eA5LoB,oNA6LpBC,mBA3LwB,gFA4LxBC,wBA1L6B,2UA2L7BC,sBAzL2B,uKA0L3BC,2BAxLgC,qEAyLhCC,wBAvL6B,26RAwL7BC,sBAtL2B,mxCAuL3BC,iBArLsB,kzCAsLtBC,yBApL8B,k5CAqL9BC,gBAnLqB,kOAoLrBC,qBAlL0B,ghCAmL1BC,gBAjLqB,+XAkLrBC,kBAhLuB,qdAiLvBC,qBA/K0B,0LAgL1BC,0BA9K+B,mEA+K/BC,qBA7K0B,6FA8K1BC,0BA5K+B,kyCA6K/BC,yBA3K8B,kGA4K9BC,8BA1KmC,2EA2KnCC,iBAzKsB,yFA0KtBC,eAxKoB,wIAyKpBC,UAvKe,qEAwKfC,kBAtKuB,oFAuKvBC,gBArKqB,yIAsKrBC,WApKgB,8GAqKhBC,gBAnKqB,kRAqKrBC,gBAnKqB,4NAoKrBC,gBAlKqB,8JAmKrBC,UAjKe,0VAkKfC,UAhKe,iOAiKfC,WA/JgB,01BAgKhBC,WA9JgB,wuBA+JhBC,kBA7JuB,6rBA8JvBC,kBA5JuB,ktBA6JvBC,cA3JmB,0WA4JnBC,cA1JmB,+LA2JnBC,gBAzJqB,myBA0JrBC,gBAxJqB,+hBAyJrBC,eAvJoB,gqDAwJpBC,eAtJoB,q2BAuJpBC,iBArJsB,60EAsJtBC,iBApJsB,6nCAqJtBC,gBAnJqB,6gDAoJrBC,gBAlJqB,69BAmJrBC,cAjJmB,yvDAkJnBC,cAhJmB,ymCAiJnBC,eA/IoB,kiEAgJpBC,eA9IoB,qqCA+IpBC,kBA7IuB,omGA8IvBC,kBA5IuB,+1CA6IvBC,YA3IiB,muBA4IjBC,YA1IiB,myCA2IjBC,YAzIiB,ovBA0IjBC,YAxIiB,qrBAyIjBC,YAvIiB,maAwIjBC,YAtIiB,qZAuIjBC,YArIiB,0tBAsIjBC,YApIiB,unCA2IZC,GAAc,CAEnBhH,OAAQ,CAEPiH,QAAS,CAAEhpF,MAAO,IAAIkpC,GAAO,WAC7B+8B,QAAS,CAAEjmE,MAAO,GAElB45B,IAAK,CAAE55B,MAAO,MACdipF,YAAa,CAAEjpF,MAAO,IAAIq+C,IAC1B6qC,aAAc,CAAElpF,MAAO,IAAIq+C,IAE3BkqB,SAAU,CAAEvoE,MAAO,OAIpBmpF,YAAa,CAEZ7gB,YAAa,CAAEtoE,MAAO,OAIvBopF,OAAQ,CAEP5gB,OAAQ,CAAExoE,MAAO,MACjBqpF,WAAY,CAAErpF,OAAS,GACvB0oE,aAAc,CAAE1oE,MAAO,GACvB2oE,gBAAiB,CAAE3oE,MAAO,KAC1BspF,YAAa,CAAEtpF,MAAO,IAIvBupF,MAAO,CAENnhB,MAAO,CAAEpoE,MAAO,MAChBqoE,eAAgB,CAAEroE,MAAO,IAI1BwpF,SAAU,CAETthB,SAAU,CAAEloE,MAAO,MACnBmoE,kBAAmB,CAAEnoE,MAAO,IAI7BypF,YAAa,CAEZxe,YAAa,CAAEjrE,MAAO,OAIvB0pF,QAAS,CAERnf,QAAS,CAAEvqE,MAAO,MAClBwqE,UAAW,CAAExqE,MAAO,IAIrB2pF,UAAW,CAEVlf,UAAW,CAAEzqE,MAAO,MACpB2qE,YAAa,CAAE3qE,MAAO,IAAIq8C,GAAS,EAAG,KAIvCutC,gBAAiB,CAEhBhf,gBAAiB,CAAE5qE,MAAO,MAC1B6qE,kBAAmB,CAAE7qE,MAAO,GAC5B8qE,iBAAkB,CAAE9qE,MAAO,IAI5B6pF,aAAc,CAEb9e,aAAc,CAAE/qE,MAAO,OAIxB8pF,aAAc,CAEb9e,aAAc,CAAEhrE,MAAO,OAIxB+pF,YAAa,CAEZ5e,YAAa,CAAEnrE,MAAO,OAIvB6lE,IAAK,CAEJmkB,WAAY,CAAEhqF,MAAO,OACrBiqF,QAAS,CAAEjqF,MAAO,GAClBkqF,OAAQ,CAAElqF,MAAO,KACjBmqF,SAAU,CAAEnqF,MAAO,IAAIkpC,GAAO,YAI/BiwC,OAAQ,CAEPiR,kBAAmB,CAAEpqF,MAAO,IAE5BqqF,WAAY,CAAErqF,MAAO,IAErBsqF,kBAAmB,CAAEtqF,MAAO,GAAIuqF,WAAY,CAC3C3zD,UAAW,GACXpZ,MAAO,KAGRgtE,wBAAyB,CAAExqF,MAAO,GAAIuqF,WAAY,CACjDE,WAAY,GACZC,iBAAkB,GAClBC,aAAc,GACdC,cAAe,KAGhBC,qBAAsB,CAAE7qF,MAAO,IAC/B8qF,wBAAyB,CAAE9qF,MAAO,IAElC+qF,WAAY,CAAE/qF,MAAO,GAAIuqF,WAAY,CACpC/sE,MAAO,GACPwC,SAAU,GACV4W,UAAW,GACX3sB,SAAU,GACV+gF,QAAS,GACTC,YAAa,GACbC,MAAO,KAGRC,iBAAkB,CAAEnrF,MAAO,GAAIuqF,WAAY,CAC1CE,WAAY,GACZC,iBAAkB,GAClBC,aAAc,GACdC,cAAe,KAGhBQ,cAAe,CAAEprF,MAAO,IACxBqrF,iBAAkB,CAAErrF,MAAO,IAE3BsrF,YAAa,CAAEtrF,MAAO,GAAIuqF,WAAY,CACrC/sE,MAAO,GACPwC,SAAU,GACVkrE,MAAO,GACPjhF,SAAU,KAGXshF,kBAAmB,CAAEvrF,MAAO,GAAIuqF,WAAY,CAC3CE,WAAY,GACZC,iBAAkB,GAClBC,aAAc,GACdC,cAAe,GACfY,iBAAkB,GAClBC,gBAAiB,KAGlBC,eAAgB,CAAE1rF,MAAO,IACzB2rF,kBAAmB,CAAE3rF,MAAO,IAE5B4rF,iBAAkB,CAAE5rF,MAAO,GAAIuqF,WAAY,CAC1C3zD,UAAW,GACXi1D,SAAU,GACVC,YAAa,KAIdC,eAAgB,CAAE/rF,MAAO,GAAIuqF,WAAY,CACxC/sE,MAAO,GACPwC,SAAU,GACVrR,MAAO,GACPC,OAAQ,KAGTo9E,MAAO,CAAEhsF,MAAO,MAChBisF,MAAO,CAAEjsF,MAAO,OAIjB6tD,OAAQ,CAEPm7B,QAAS,CAAEhpF,MAAO,IAAIkpC,GAAO,WAC7B+8B,QAAS,CAAEjmE,MAAO,GAClBigB,KAAM,CAAEjgB,MAAO,GACf0K,MAAO,CAAE1K,MAAO,GAChB45B,IAAK,CAAE55B,MAAO,MACduoE,SAAU,CAAEvoE,MAAO,MACnBipF,YAAa,CAAEjpF,MAAO,IAAIq+C,KAI3BugC,OAAQ,CAEPoK,QAAS,CAAEhpF,MAAO,IAAIkpC,GAAO,WAC7B+8B,QAAS,CAAEjmE,MAAO,GAClB4K,OAAQ,CAAE5K,MAAO,IAAIq8C,GAAS,GAAK,KACnCh7B,SAAU,CAAErhB,MAAO,GACnB45B,IAAK,CAAE55B,MAAO,MACduoE,SAAU,CAAEvoE,MAAO,MACnBipF,YAAa,CAAEjpF,MAAO,IAAIq+C,MAMtB6tC,GAAY,CAEjBC,MAAO,CAENvT,SAAUD,GAAe,CACxBoQ,GAAYhH,OACZgH,GAAYI,YACZJ,GAAYK,OACZL,GAAYQ,MACZR,GAAYS,SACZT,GAAYljB,MAGboT,aAAc4H,GAAY+G,eAC1B1O,eAAgB2H,GAAY8G,gBAI7ByE,QAAS,CAERxT,SAAUD,GAAe,CACxBoQ,GAAYhH,OACZgH,GAAYI,YACZJ,GAAYK,OACZL,GAAYQ,MACZR,GAAYS,SACZT,GAAYU,YACZV,GAAYljB,IACZkjB,GAAY5P,OACZ,CACCvP,SAAU,CAAE5pE,MAAO,IAAIkpC,GAAO,OAIhC+vC,aAAc4H,GAAYiH,iBAC1B5O,eAAgB2H,GAAYgH,kBAI7BwE,MAAO,CAENzT,SAAUD,GAAe,CACxBoQ,GAAYhH,OACZgH,GAAYI,YACZJ,GAAYK,OACZL,GAAYQ,MACZR,GAAYS,SACZT,GAAYU,YACZV,GAAYW,QACZX,GAAYY,UACZZ,GAAYa,gBACZb,GAAYljB,IACZkjB,GAAY5P,OACZ,CACCvP,SAAU,CAAE5pE,MAAO,IAAIkpC,GAAO,IAC9B4gC,SAAU,CAAE9pE,MAAO,IAAIkpC,GAAO,UAC9B6gC,UAAW,CAAE/pE,MAAO,OAItBi5E,aAAc4H,GAAYuH,eAC1BlP,eAAgB2H,GAAYsH,gBAI7BmE,SAAU,CAET1T,SAAUD,GAAe,CACxBoQ,GAAYhH,OACZgH,GAAYK,OACZL,GAAYQ,MACZR,GAAYS,SACZT,GAAYU,YACZV,GAAYW,QACZX,GAAYY,UACZZ,GAAYa,gBACZb,GAAYc,aACZd,GAAYe,aACZf,GAAYljB,IACZkjB,GAAY5P,OACZ,CACCvP,SAAU,CAAE5pE,MAAO,IAAIkpC,GAAO,IAC9BugC,UAAW,CAAEzpE,MAAO,GACpB0pE,UAAW,CAAE1pE,MAAO,GACpBkrE,gBAAiB,CAAElrE,MAAO,MAI5Bi5E,aAAc4H,GAAYyH,kBAC1BpP,eAAgB2H,GAAYwH,mBAI7BkE,KAAM,CAEL3T,SAAUD,GAAe,CACxBoQ,GAAYhH,OACZgH,GAAYQ,MACZR,GAAYS,SACZT,GAAYU,YACZV,GAAYW,QACZX,GAAYY,UACZZ,GAAYa,gBACZb,GAAYgB,YACZhB,GAAYljB,IACZkjB,GAAY5P,OACZ,CACCvP,SAAU,CAAE5pE,MAAO,IAAIkpC,GAAO,OAIhC+vC,aAAc4H,GAAYqH,cAC1BhP,eAAgB2H,GAAYoH,eAI7B3d,OAAQ,CAEPsO,SAAUD,GAAe,CACxBoQ,GAAYhH,OACZgH,GAAYW,QACZX,GAAYY,UACZZ,GAAYa,gBACZb,GAAYljB,IACZ,CACCyE,OAAQ,CAAEtqE,MAAO,SAInBi5E,aAAc4H,GAAYmH,gBAC1B9O,eAAgB2H,GAAYkH,iBAI7Bl6B,OAAQ,CAEP+qB,SAAUD,GAAe,CACxBoQ,GAAYl7B,OACZk7B,GAAYljB,MAGboT,aAAc4H,GAAY6H,YAC1BxP,eAAgB2H,GAAY4H,aAI7B+D,OAAQ,CAEP5T,SAAUD,GAAe,CACxBoQ,GAAYhH,OACZgH,GAAYljB,IACZ,CACCn7D,MAAO,CAAE1K,MAAO,GAChBsrE,SAAU,CAAEtrE,MAAO,GACnBysF,UAAW,CAAEzsF,MAAO,MAItBi5E,aAAc4H,GAAY6G,gBAC1BxO,eAAgB2H,GAAY4G,iBAI7BzQ,MAAO,CAEN4B,SAAUD,GAAe,CACxBoQ,GAAYhH,OACZgH,GAAYa,kBAGb3Q,aAAc4H,GAAYuG,WAC1BlO,eAAgB2H,GAAYsG,YAI7BtvD,OAAQ,CAEP+gD,SAAUD,GAAe,CACxBoQ,GAAYhH,OACZgH,GAAYW,QACZX,GAAYY,UACZZ,GAAYa,gBACZ,CACC3jB,QAAS,CAAEjmE,MAAO,MAIpBi5E,aAAc4H,GAAY2H,YAC1BtP,eAAgB2H,GAAY0H,aAI7B3J,OAAQ,CAEPhG,SAAUD,GAAe,CACxBoQ,GAAYnK,OACZmK,GAAYljB,MAGboT,aAAc4H,GAAYiI,YAC1B5P,eAAgB2H,GAAYgI,aAI7B6D,WAAY,CAEX9T,SAAU,CACTqQ,YAAa,CAAEjpF,MAAO,IAAIq+C,IAC1BsuC,IAAK,CAAE3sF,MAAO,OAGfi5E,aAAc4H,GAAYmG,gBAC1B9N,eAAgB2H,GAAYkG,iBAO7B6F,KAAM,CAELhU,SAAUD,GAAe,CACxBoQ,GAAYK,OACZ,CACCnjB,QAAS,CAAEjmE,MAAO,MAIpBi5E,aAAc4H,GAAYqG,UAC1BhO,eAAgB2H,GAAYoG,WAI7B4F,SAAU,CAETjU,SAAU,CACTkE,UAAW,CAAE98E,MAAO,OAGrBi5E,aAAc4H,GAAY2G,cAC1BtO,eAAgB2H,GAAY0G,eAI7BuF,aAAc,CAEblU,SAAUD,GAAe,CACxBoQ,GAAYhH,OACZgH,GAAYa,gBACZ,CACCmD,kBAAmB,CAAE/sF,MAAO,IAAIgrD,IAChCgiC,aAAc,CAAEhtF,MAAO,GACvBitF,YAAa,CAAEjtF,MAAO,QAIxBi5E,aAAc4H,GAAYyG,kBAC1BpO,eAAgB2H,GAAYwG,mBAI7B6F,OAAQ,CAEPtU,SAAUD,GAAe,CACxBoQ,GAAY5P,OACZ4P,GAAYljB,IACZ,CACCroD,MAAO,CAAExd,MAAO,IAAIkpC,GAAO,IAC3B+8B,QAAS,CAAEjmE,MAAO,MAIpBi5E,aAAc4H,GAAY+H,YAC1B1P,eAAgB2H,GAAY8H,cA4B9B,SAASwE,GAAiBrR,EAAUsR,EAAUC,EAAOC,EAASvlB,GAE7D,MAAM//C,EAAa,IAAIkhB,GAAO,GAC9B,IAEIqkD,EACAC,EAHAC,EAAa,EAKbC,EAAoB,KACpBC,EAA2B,EAC3BC,EAAqB,KA8KzB,SAASC,EAAUrwE,EAAOitB,GAEzB4iD,EAAMzN,QAAQpiE,MAAMqwE,SAAUrwE,EAAM5Y,EAAG4Y,EAAM2rB,EAAG3rB,EAAM3b,EAAG4oC,EAAOs9B,GAIjE,MAAO,CAEN+lB,cAAe,WAEd,OAAO9lE,GAGR+lE,cAAe,SAAWvwE,EAAOitB,EAAQ,GAExCziB,EAAW/e,IAAKuU,GAChBiwE,EAAahjD,EACbojD,EAAU7lE,EAAYylE,IAGvBO,cAAe,WAEd,OAAOP,GAGRQ,cAAe,SAAWxjD,GAEzBgjD,EAAahjD,EACbojD,EAAU7lE,EAAYylE,IAGvBpR,OA3MD,SAAiB6R,EAAYnS,EAAOhwB,EAAQoiC,GAE3C,IAAIzB,GAA+B,IAAlB3Q,EAAMqS,QAAmBrS,EAAM2Q,WAAa,KAExDA,GAAcA,EAAW1oC,YAE7B0oC,EAAaU,EAASnvE,IAAKyuE,IAO5B,MAAMzQ,EAAKH,EAASG,GACdoS,EAAUpS,EAAGqS,YAAcrS,EAAGqS,aAE/BD,GAA4C,aAAjCA,EAAQE,uBAEvB7B,EAAa,MAIM,OAAfA,EAEJmB,EAAU7lE,EAAYylE,GAEXf,GAAcA,EAAWnpB,UAEpCsqB,EAAUnB,EAAY,GACtByB,GAAa,IAITrS,EAAS0S,WAAaL,IAE1BrS,EAASz8D,MAAOy8D,EAAS2S,eAAgB3S,EAAS4S,eAAgB5S,EAAS6S,kBAIvEjC,IAAgBA,EAAW9P,eAAiB8P,EAAWnR,yBAA2BmR,EAAWlqC,UAAY9R,UAE5Fl3B,IAAZg0E,IAEJA,EAAU,IAAI/X,GACb,IAAIsB,GAAmB,EAAG,EAAG,GAC7B,IAAIgC,GAAgB,CACnBnpD,KAAM,yBACNgpD,SAAUP,GAAe6T,GAAUU,KAAKhU,UACxCK,aAAciT,GAAUU,KAAK3T,aAC7BC,eAAgBgT,GAAUU,KAAK1T,eAC/BnT,KAAMr4B,EACNg5B,WAAW,EACXC,YAAY,EACZd,KAAK,KAIP2nB,EAAQ3+B,SAAS0iB,gBAAiB,UAClCic,EAAQ3+B,SAAS0iB,gBAAiB,MAElCic,EAAQzxB,eAAiB,SAAW+f,EAAUC,EAAOhwB,GAEpD1rD,KAAK+rD,YAAY2I,aAAchJ,EAAOK,cAKvCvsD,OAAOC,eAAgB0tF,EAAQpuB,SAAU,SAAU,CAElDnhD,IAAK,WAEJ,OAAO5d,KAAKu4E,SAASpQ,OAAOxoE,SAM9BstF,EAAQxkC,OAAQ0kC,IAIZd,EAAWnR,0BAIfmR,EAAaA,EAAW9lC,SAIzB4mC,EAAQpuB,SAASwZ,SAASpQ,OAAOxoE,MAAQ0sF,EACzCc,EAAQpuB,SAASwZ,SAASyQ,WAAWrpF,MAAU0sF,EAAW9P,eAAiB8P,EAAWnQ,kBAAuB,EAAI,EAE5GmR,IAAsBhB,GAC1BiB,IAA6BjB,EAAWhpC,SACxCkqC,IAAuB9R,EAAS8S,cAEhCpB,EAAQpuB,SAASwS,aAAc,EAE/B8b,EAAoBhB,EACpBiB,EAA2BjB,EAAWhpC,QACtCkqC,EAAqB9R,EAAS8S,aAK/BV,EAAWW,QAASrB,EAASA,EAAQ3+B,SAAU2+B,EAAQpuB,SAAU,EAAG,EAAG,OAE5DstB,GAAcA,EAAW1oC,iBAEjBxqC,IAAd+zE,IAEJA,EAAY,IAAI9X,GACf,IAAI+K,GAAqB,EAAG,GAC5B,IAAIzH,GAAgB,CACnBnpD,KAAM,qBACNgpD,SAAUP,GAAe6T,GAAUQ,WAAW9T,UAC9CK,aAAciT,GAAUQ,WAAWzT,aACnCC,eAAgBgT,GAAUQ,WAAWxT,eACrCnT,KAAMt4B,EACNi5B,WAAW,EACXC,YAAY,EACZd,KAAK,KAIP0nB,EAAU1+B,SAAS0iB,gBAAiB,UAGpC1xE,OAAOC,eAAgBytF,EAAUnuB,SAAU,MAAO,CAEjDnhD,IAAK,WAEJ,OAAO5d,KAAKu4E,SAAS+T,IAAI3sF,SAM3BstF,EAAQxkC,OAAQykC,IAIjBA,EAAUnuB,SAASwZ,SAAS+T,IAAI3sF,MAAQ0sF,GAEH,IAAhCA,EAAWrpC,kBAEfqpC,EAAWzoC,eAIZspC,EAAUnuB,SAASwZ,SAASqQ,YAAYjpF,MAAMmjB,KAAMupE,EAAW7qC,QAE1D6rC,IAAsBhB,GAC1BiB,IAA6BjB,EAAWhpC,SACxCkqC,IAAuB9R,EAAS8S,cAEhCrB,EAAUnuB,SAASwS,aAAc,EAEjC8b,EAAoBhB,EACpBiB,EAA2BjB,EAAWhpC,QACtCkqC,EAAqB9R,EAAS8S,aAM/BV,EAAWW,QAAStB,EAAWA,EAAU1+B,SAAU0+B,EAAUnuB,SAAU,EAAG,EAAG,SA2ChF,SAAS0vB,GAAoBhpE,EAAIuzD,EAAYrI,EAAY0O,GAExD,MAAMqP,EAAsBjpE,EAAGspC,aAAc,OAEvC3nB,EAAYi4C,EAAaC,SAAW,KAAOtG,EAAWp7D,IAAK,2BAC3D+wE,EAAetP,EAAaC,UAA0B,OAAdl4C,EAExCwnD,EAAgB,GAEhBC,EAAeC,EAAoB,MACzC,IAAIC,EAAeF,EAyEnB,SAASG,EAAuBC,GAE/B,OAAK5P,EAAaC,SAAkB75D,EAAGypE,gBAAiBD,GAEjD7nD,EAAU+nD,mBAAoBF,GAItC,SAASG,EAAyBH,GAEjC,OAAK5P,EAAaC,SAAkB75D,EAAG4pE,kBAAmBJ,GAEnD7nD,EAAUkoD,qBAAsBL,GAuCxC,SAASH,EAAoBG,GAE5B,MAAMM,EAAgB,GAChBC,EAAoB,GACpBC,EAAoB,GAE1B,IAAM,IAAI5vF,EAAI,EAAGA,EAAI6uF,EAAqB7uF,IAEzC0vF,EAAe1vF,GAAM,EACrB2vF,EAAmB3vF,GAAM,EACzB4vF,EAAmB5vF,GAAM,EAI1B,MAAO,CAGN2uD,SAAU,KACV3lC,QAAS,KACT0/C,WAAW,EAEXgnB,cAAeA,EACfC,kBAAmBA,EACnBC,kBAAmBA,EACnBzhC,OAAQihC,EACRte,WAAY,GACZxkE,MAAO,MAoET,SAASujF,IAER,MAAMH,EAAgBR,EAAaQ,cAEnC,IAAM,IAAI1vF,EAAI,EAAG6tD,EAAK6hC,EAAcjtF,OAAQzC,EAAI6tD,EAAI7tD,IAEnD0vF,EAAe1vF,GAAM,EAMvB,SAAS8vF,EAAiB/xC,GAEzBgyC,EAA2BhyC,EAAW,GAIvC,SAASgyC,EAA2BhyC,EAAWiyC,GAE9C,MAAMN,EAAgBR,EAAaQ,cAC7BC,EAAoBT,EAAaS,kBACjCC,EAAoBV,EAAaU,kBAWvC,GATAF,EAAe3xC,GAAc,EAEW,IAAnC4xC,EAAmB5xC,KAEvBn4B,EAAG0B,wBAAyBy2B,GAC5B4xC,EAAmB5xC,GAAc,GAI7B6xC,EAAmB7xC,KAAgBiyC,EAAmB,EAExCxQ,EAAaC,SAAW75D,EAAKuzD,EAAWp7D,IAAK,2BAEpDyhE,EAAaC,SAAW,sBAAwB,4BAA8B1hC,EAAWiyC,GACpGJ,EAAmB7xC,GAAciyC,GAMnC,SAASC,IAER,MAAMP,EAAgBR,EAAaQ,cAC7BC,EAAoBT,EAAaS,kBAEvC,IAAM,IAAI3vF,EAAI,EAAG6tD,EAAK8hC,EAAkBltF,OAAQzC,EAAI6tD,EAAI7tD,IAElD2vF,EAAmB3vF,KAAQ0vF,EAAe1vF,KAE9C4lB,EAAGsqE,yBAA0BlwF,GAC7B2vF,EAAmB3vF,GAAM,GAQ5B,SAASonB,EAAqB9a,EAAOyT,EAAMkgB,EAAMklC,EAAYgrB,EAAQh0E,IAErC,IAA1BqjE,EAAaC,UAAgC,OAATx/C,GAA0B,OAATA,EAMzDra,EAAGwB,oBAAqB9a,EAAOyT,EAAMkgB,EAAMklC,EAAYgrB,EAAQh0E,GAJ/DyJ,EAAGwqE,qBAAsB9jF,EAAOyT,EAAMkgB,EAAMkwD,EAAQh0E,GA8PtD,SAASk0E,IAERC,IAEKpB,IAAiBF,IAEtBE,EAAeF,EACfG,EAAuBD,EAAa/gC,SAMrC,SAASmiC,IAERtB,EAAargC,SAAW,KACxBqgC,EAAahmE,QAAU,KACvBgmE,EAAatmB,WAAY,EAI1B,MAAO,CAEN6nB,MA/iBD,SAAgBpiC,EAAQ+Q,EAAUl2C,EAAS2lC,EAAUriD,GAEpD,IAAIkkF,GAAgB,EAEpB,GAAK1B,EAAe,CAEnB,MAAM3B,EAiFR,SAA0Bx+B,EAAU3lC,EAASk2C,GAE5C,MAAMwJ,GAAqC,IAAvBxJ,EAASwJ,UAE7B,IAAI+nB,EAAa1B,EAAepgC,EAASx6C,SAErBmF,IAAfm3E,IAEJA,EAAa,GACb1B,EAAepgC,EAASx6C,IAAOs8E,GAIhC,IAAIC,EAAWD,EAAYznE,EAAQ7U,SAEjBmF,IAAbo3E,IAEJA,EAAW,GACXD,EAAYznE,EAAQ7U,IAAOu8E,GAI5B,IAAIvD,EAAQuD,EAAUhoB,QAEPpvD,IAAV6zE,IAEJA,EAAQ8B,EAhDJzP,EAAaC,SAAkB75D,EAAG+qE,oBAEhCppD,EAAUqpD,wBA+ChBF,EAAUhoB,GAAcykB,GAIzB,OAAOA,EAhHQ0D,CAAiBliC,EAAU3lC,EAASk2C,GAE7CgwB,IAAiB/B,IAErB+B,EAAe/B,EACfgC,EAAuBD,EAAa/gC,SAIrCqiC,EA2IF,SAAsB7hC,EAAUriD,GAE/B,MAAMwkF,EAAmB5B,EAAape,WAChCigB,EAAqBpiC,EAASmiB,WAEpC,IAAIkgB,EAAgB,EAEpB,IAAM,MAAM1qF,KAAOyqF,EAAqB,CAEvC,MAAME,EAAkBH,EAAkBxqF,GACpC4qF,EAAoBH,EAAoBzqF,GAE9C,QAAyBgT,IAApB23E,EAAgC,OAAO,EAE5C,GAAKA,EAAgBlzC,YAAcmzC,EAAoB,OAAO,EAE9D,GAAKD,EAAgBvwF,OAASwwF,EAAkBxwF,KAAO,OAAO,EAE9DswF,IAID,OAAK9B,EAAa8B,gBAAkBA,GAE/B9B,EAAa5iF,QAAUA,EAnKXolE,CAAa/iB,EAAUriD,GAElCkkF,GAuKP,SAAoB7hC,EAAUriD,GAE7B,MAAMqQ,EAAQ,GACRm0D,EAAaniB,EAASmiB,WAC5B,IAAIkgB,EAAgB,EAEpB,IAAM,MAAM1qF,KAAOwqE,EAAa,CAE/B,MAAM/yB,EAAY+yB,EAAYxqE,GAExB5F,EAAO,GACbA,EAAKq9C,UAAYA,EAEZA,EAAUr9C,OAEdA,EAAKA,KAAOq9C,EAAUr9C,MAIvBic,EAAOrW,GAAQ5F,EAEfswF,IAID9B,EAAape,WAAan0D,EAC1BuyE,EAAa8B,cAAgBA,EAE7B9B,EAAa5iF,MAAQA,EAnMC6kF,CAAWxiC,EAAUriD,OAEpC,CAEN,MAAMo8D,GAAqC,IAAvBxJ,EAASwJ,UAExBwmB,EAAavgC,WAAaA,EAASx6C,IACvC+6E,EAAalmE,UAAYA,EAAQ7U,IACjC+6E,EAAaxmB,YAAcA,IAE3BwmB,EAAavgC,SAAWA,EAASx6C,GACjC+6E,EAAalmE,QAAUA,EAAQ7U,GAC/B+6E,EAAaxmB,UAAYA,EAEzB8nB,GAAgB,IAMc,IAA3BriC,EAAOoQ,kBAEXiyB,GAAgB,GAIF,OAAVlkF,GAEJwkE,EAAWloB,OAAQt8C,EAAO,OAItBkkF,KAmPN,SAAgCriC,EAAQ+Q,EAAUl2C,EAAS2lC,GAE1D,IAA+B,IAA1B6wB,EAAaC,WAAwBtxB,EAAOoQ,iBAAmB5P,EAASyiC,4BAExB,OAA/CjY,EAAWp7D,IAAK,0BAAsC,OAI5D8xE,IAEA,MAAMkB,EAAqBpiC,EAASmiB,WAE9BugB,EAAoBroE,EAAQsoE,gBAE5BC,EAAiCryB,EAASsa,uBAEhD,IAAM,MAAM9pD,KAAQ2hE,EAAoB,CAEvC,MAAMG,EAAmBH,EAAmB3hE,GAE5C,GAAK8hE,GAAoB,EAAI,CAE5B,MAAMN,EAAoBH,EAAoBrhE,GAE9C,QAA2BpW,IAAtB43E,EAAkC,CAEtC,MAAM/rB,EAAa+rB,EAAkB/rB,WAC/BplD,EAAOmxE,EAAkBrlB,SAEzB9tB,EAAY+yB,EAAW/yD,IAAKmzE,GAIlC,QAAmB53E,IAAdykC,EAA0B,SAE/B,MAAMzyC,EAASyyC,EAAUzyC,OACnB20B,EAAO8d,EAAU9d,KACjB+/C,EAAkBjiC,EAAUiiC,gBAElC,GAAKkR,EAAkBtR,6BAA+B,CAErD,MAAMl/E,EAAOwwF,EAAkBxwF,KACzByvF,EAASzvF,EAAKyvF,OACdh0E,EAAS+0E,EAAkB/0E,OAE5Bzb,GAAQA,EAAK+wF,8BAEjB1B,EAA2ByB,EAAkB9wF,EAAKsvF,uBAEd12E,IAA/Bq1C,EAAS+iC,oBAEb/iC,EAAS+iC,kBAAoBhxF,EAAKsvF,iBAAmBtvF,EAAK+sD,QAM3DqiC,EAAiB0B,GAIlB5rE,EAAGkB,WAAY,MAAOxb,GACtB8b,EAAqBoqE,EAAkBzxE,EAAMkgB,EAAMklC,EAAYgrB,EAASnQ,EAAiB7jE,EAAS6jE,QAI7FkR,EAAkBS,4BAEtB5B,EAA2ByB,EAAkBN,EAAkBlB,uBAE3B12E,IAA/Bq1C,EAAS+iC,oBAEb/iC,EAAS+iC,kBAAoBR,EAAkBlB,iBAAmBkB,EAAkBzjC,QAMrFqiC,EAAiB0B,GAIlB5rE,EAAGkB,WAAY,MAAOxb,GACtB8b,EAAqBoqE,EAAkBzxE,EAAMkgB,EAAMklC,EAAY,EAAG,QAI7D,GAAc,mBAATz1C,EAA4B,CAEvC,MAAMquB,EAAY+yB,EAAW/yD,IAAKowC,EAAOqQ,gBAIzC,QAAmBllD,IAAdykC,EAA0B,SAE/B,MAAMzyC,EAASyyC,EAAUzyC,OACnB20B,EAAO8d,EAAU9d,KAEvB8vD,EAA2ByB,EAAmB,EAAG,GACjDzB,EAA2ByB,EAAmB,EAAG,GACjDzB,EAA2ByB,EAAmB,EAAG,GACjDzB,EAA2ByB,EAAmB,EAAG,GAEjD5rE,EAAGkB,WAAY,MAAOxb,GAEtBsa,EAAGwB,oBAAqBoqE,EAAmB,EAAG,EAAGvxD,GAAM,EAAO,GAAI,GAClEra,EAAGwB,oBAAqBoqE,EAAmB,EAAG,EAAGvxD,GAAM,EAAO,GAAI,IAClEra,EAAGwB,oBAAqBoqE,EAAmB,EAAG,EAAGvxD,GAAM,EAAO,GAAI,IAClEra,EAAGwB,oBAAqBoqE,EAAmB,EAAG,EAAGvxD,GAAM,EAAO,GAAI,SAE5D,GAAc,kBAATvQ,EAA2B,CAEtC,MAAMquB,EAAY+yB,EAAW/yD,IAAKowC,EAAOyjC,eAIzC,QAAmBt4E,IAAdykC,EAA0B,SAE/B,MAAMzyC,EAASyyC,EAAUzyC,OACnB20B,EAAO8d,EAAU9d,KAEvB8vD,EAA2ByB,EAAkB,GAE7C5rE,EAAGkB,WAAY,MAAOxb,GAEtBsa,EAAGwB,oBAAqBoqE,EAAkB,EAAGvxD,GAAM,EAAO,GAAI,QAExD,QAAwC3mB,IAAnCi4E,EAA+C,CAE1D,MAAMzxF,EAAQyxF,EAAgC7hE,GAE9C,QAAepW,IAAVxZ,EAEJ,OAASA,EAAM2C,QAEd,KAAK,EACJmjB,EAAGisE,gBAAiBL,EAAkB1xF,GACtC,MAED,KAAK,EACJ8lB,EAAGksE,gBAAiBN,EAAkB1xF,GACtC,MAED,KAAK,EACJ8lB,EAAGmsE,gBAAiBP,EAAkB1xF,GACtC,MAED,QACC8lB,EAAGosE,gBAAiBR,EAAkB1xF,MAY5CmwF,IAjZCgC,CAAuB9jC,EAAQ+Q,EAAUl2C,EAAS2lC,GAEnC,OAAVriD,GAEJsZ,EAAGkB,WAAY,MAAOgqD,EAAW/yD,IAAKzR,GAAQhB,UAyfhD+kF,MAAOA,EACPC,kBAAmBA,EACnB3rC,QA1GD,WAEC0rC,IAEA,IAAM,MAAM6B,KAAcnD,EAAgB,CAEzC,MAAM0B,EAAa1B,EAAemD,GAElC,IAAM,MAAMC,KAAa1B,EAAa,CAErC,MAAMC,EAAWD,EAAY0B,GAE7B,IAAM,MAAMzpB,KAAagoB,EAExBnB,EAAyBmB,EAAUhoB,GAAYva,eAExCuiC,EAAUhoB,UAIX+nB,EAAY0B,UAIbpD,EAAemD,KAmFvBE,wBA7ED,SAAkCzjC,GAEjC,QAAsCr1C,IAAjCy1E,EAAepgC,EAASx6C,IAAqB,OAElD,MAAMs8E,EAAa1B,EAAepgC,EAASx6C,IAE3C,IAAM,MAAMg+E,KAAa1B,EAAa,CAErC,MAAMC,EAAWD,EAAY0B,GAE7B,IAAM,MAAMzpB,KAAagoB,EAExBnB,EAAyBmB,EAAUhoB,GAAYva,eAExCuiC,EAAUhoB,UAIX+nB,EAAY0B,UAIbpD,EAAepgC,EAASx6C,KAwD/Bk+E,uBApDD,SAAiCrpE,GAEhC,IAAM,MAAMkpE,KAAcnD,EAAgB,CAEzC,MAAM0B,EAAa1B,EAAemD,GAElC,QAAkC54E,IAA7Bm3E,EAAYznE,EAAQ7U,IAAqB,SAE9C,MAAMu8E,EAAWD,EAAYznE,EAAQ7U,IAErC,IAAM,MAAMu0D,KAAagoB,EAExBnB,EAAyBmB,EAAUhoB,GAAYva,eAExCuiC,EAAUhoB,UAIX+nB,EAAYznE,EAAQ7U,MAoC5B07E,eAAgBA,EAChBC,gBAAiBA,EACjBG,wBAAyBA,GAM3B,SAASqC,GAAqB1sE,EAAIuzD,EAAYoZ,EAAM/S,GAEnD,MAAMC,EAAWD,EAAaC,SAE9B,IAAI+S,EAiDJryF,KAAKsyF,QA/CL,SAAkB3yF,GAEjB0yF,EAAO1yF,GA8CRK,KAAKg8E,OA1CL,SAAiBx7E,EAAO8sD,GAEvB7nC,EAAG+B,WAAY6qE,EAAM7xF,EAAO8sD,GAE5B8kC,EAAK3pC,OAAQ6E,EAAO+kC,EAAM,IAuC3BryF,KAAKuyF,gBAnCL,SAA0B/xF,EAAO8sD,EAAOklC,GAEvC,GAAmB,IAAdA,EAAkB,OAEvB,IAAIprD,EAAWqrD,EAEf,GAAKnT,EAEJl4C,EAAY3hB,EACZgtE,EAAa,2BAOb,GAHArrD,EAAY4xC,EAAWp7D,IAAK,0BAC5B60E,EAAa,2BAEM,OAAdrrD,EAGJ,YADAz6B,QAAQu1B,MAAO,kIAOjBkF,EAAWqrD,GAAcJ,EAAM7xF,EAAO8sD,EAAOklC,GAE7CJ,EAAK3pC,OAAQ6E,EAAO+kC,EAAMG,IAY5B,SAASE,GAAmBjtE,EAAIuzD,EAAYva,GAE3C,IAAIk0B,EAsBJ,SAASC,EAAiBxrB,GAEzB,GAAmB,UAAdA,EAAwB,CAE5B,GAAK3hD,EAAGotE,yBAA0B,MAAO,OAAQzrB,UAAY,GAC5D3hD,EAAGotE,yBAA0B,MAAO,OAAQzrB,UAAY,EAExD,MAAO,QAIRA,EAAY,UAIb,MAAmB,YAAdA,GAEC3hD,EAAGotE,yBAA0B,MAAO,OAAQzrB,UAAY,GAC5D3hD,EAAGotE,yBAA0B,MAAO,OAAQzrB,UAAY,EAEjD,UAMF,OAKR,MAAMkY,EAA+C,oBAA3BwT,wBAA0CrtE,aAAcqtE,wBACtC,oBAAlCC,+BAAiDttE,aAAcstE,8BAGzE,IAAI3rB,OAAqCjuD,IAAzBslD,EAAW2I,UAA0B3I,EAAW2I,UAAY,QAC5E,MAAM4rB,EAAeJ,EAAiBxrB,GAEjC4rB,IAAiB5rB,IAErBz6D,QAAQoK,KAAM,uBAAwBqwD,EAAW,uBAAwB4rB,EAAc,YACvF5rB,EAAY4rB,GAIb,MAAMC,GAA+D,IAAtCx0B,EAAWw0B,uBAEpCC,EAAcztE,EAAGspC,aAAc,OAC/BokC,EAAoB1tE,EAAGspC,aAAc,OACrCqkC,EAAiB3tE,EAAGspC,aAAc,MAClCskC,EAAiB5tE,EAAGspC,aAAc,OAElCukC,EAAgB7tE,EAAGspC,aAAc,OACjCwkC,EAAoB9tE,EAAGspC,aAAc,OACrCykC,EAAc/tE,EAAGspC,aAAc,OAC/B0kC,EAAsBhuE,EAAGspC,aAAc,OAEvC2kC,EAAiBP,EAAoB,EACrCQ,EAAwBrU,KAAetG,EAAWp7D,IAAK,qBAK7D,MAAO,CAEN0hE,SAAUA,EAEVsU,iBAvFD,WAEC,QAAuBz6E,IAAlBw5E,EAA8B,OAAOA,EAE1C,MAAMvrD,EAAY4xC,EAAWp7D,IAAK,kCAYlC,OARC+0E,EAFkB,OAAdvrD,EAEY3hB,EAAGspC,aAAc3nB,EAAUysD,gCAI3B,EAIVlB,GAwEPC,gBAAiBA,EAEjBxrB,UAAWA,EACX6rB,uBAAwBA,EAExBC,YAAaA,EACbC,kBAAmBA,EACnBC,eAAgBA,EAChBC,eAAgBA,EAEhBC,cAAeA,EACfC,kBAAmBA,EACnBC,YAAaA,EACbC,oBAAqBA,EAErBC,eAAgBA,EAChBC,sBAAuBA,EACvBG,oBA1B2BJ,GAAkBC,EA4B7CI,WA1BkBzU,EAAW75D,EAAGspC,aAAc,OAAU,GAgC1D,SAASilC,GAAe9J,GAEvB,MAAMnT,EAAQ/2E,KAEd,IAAIi0F,EAAc,KACjBC,EAAkB,EAClBC,GAAuB,EACvBC,GAAmB,EAEpB,MAAM/kC,EAAQ,IAAImQ,GACjB60B,EAAmB,IAAIr2C,GAEvBs2C,EAAU,CAAE30F,MAAO,KAAM4xE,aAAa,GAyFvC,SAASgjB,IAEHD,EAAQ30F,QAAUs0F,IAEtBK,EAAQ30F,MAAQs0F,EAChBK,EAAQ/iB,YAAc2iB,EAAkB,GAIzCnd,EAAMyd,UAAYN,EAClBnd,EAAM0d,gBAAkB,EAIzB,SAASC,EAAexX,EAAQxxB,EAAQnE,EAAWotC,GAElD,MAAMC,EAAqB,OAAX1X,EAAkBA,EAAO56E,OAAS,EAClD,IAAIuyF,EAAW,KAEf,GAAiB,IAAZD,EAAgB,CAIpB,GAFAC,EAAWP,EAAQ30F,OAEI,IAAlBg1F,GAAuC,OAAbE,EAAoB,CAElD,MAAMC,EAAWvtC,EAAsB,EAAVqtC,EAC5BG,EAAarpC,EAAOC,mBAErB0oC,EAAiBrzC,gBAAiB+zC,IAEhB,OAAbF,GAAqBA,EAASvyF,OAASwyF,KAE3CD,EAAW,IAAInuE,aAAcouE,IAI9B,IAAM,IAAIj1F,EAAI,EAAGm1F,EAAKztC,EAAW1nD,IAAM+0F,IAAY/0F,EAAGm1F,GAAM,EAE3D3lC,EAAMvsC,KAAMo6D,EAAQr9E,IAAMilD,aAAciwC,EAAYV,GAEpDhlC,EAAM73B,OAAOkmB,QAASm3C,EAAUG,GAChCH,EAAUG,EAAK,GAAM3lC,EAAMC,SAM7BglC,EAAQ30F,MAAQk1F,EAChBP,EAAQ/iB,aAAc,EAOvB,OAHAwF,EAAMyd,UAAYI,EAClB7d,EAAM0d,gBAAkB,EAEjBI,EA9IR70F,KAAKs0F,QAAUA,EACft0F,KAAKw0F,UAAY,EACjBx0F,KAAKy0F,gBAAkB,EAEvBz0F,KAAKi1F,KAAO,SAAW/X,EAAQgY,EAAqBxpC,GAEnD,MAAMmvB,EACa,IAAlBqC,EAAO56E,QACP4yF,GAGoB,IAApBhB,GACAC,EAOD,OALAA,EAAuBe,EAEvBjB,EAAcS,EAAexX,EAAQxxB,EAAQ,GAC7CwoC,EAAkBhX,EAAO56E,OAElBu4E,GAIR76E,KAAKm1F,aAAe,WAEnBf,GAAmB,EACnBM,EAAe,OAIhB10F,KAAKo1F,WAAa,WAEjBhB,GAAmB,EACnBG,KAIDv0F,KAAKq1F,SAAW,SAAWt2B,EAAUrT,EAAQ4pC,GAE5C,MAAMpY,EAASne,EAASgI,eACvBC,EAAmBjI,EAASiI,iBAC5BC,EAAclI,EAASkI,YAElBsuB,EAAqBrL,EAAWtsE,IAAKmhD,GAE3C,IAAOo1B,GAAmC,OAAXjX,GAAqC,IAAlBA,EAAO56E,QAAgB8xF,IAAsBntB,EAIzFmtB,EAIJM,EAAe,MAIfH,QAIK,CAEN,MAAMiB,EAAUpB,EAAmB,EAAIF,EACtCuB,EAAoB,EAAVD,EAEX,IAAIX,EAAWU,EAAmBG,eAAiB,KAEnDpB,EAAQ30F,MAAQk1F,EAEhBA,EAAWH,EAAexX,EAAQxxB,EAAQ+pC,EAASH,GAEnD,IAAM,IAAIz1F,EAAI,EAAGA,IAAM41F,IAAY51F,EAElCg1F,EAAUh1F,GAAMo0F,EAAap0F,GAI9B01F,EAAmBG,cAAgBb,EACnC70F,KAAKy0F,gBAAkBztB,EAAmBhnE,KAAKw0F,UAAY,EAC3Dx0F,KAAKw0F,WAAagB,IAoErB,SAASG,GAAela,GAEvB,IAAIsR,EAAW,IAAIvN,QAEnB,SAASoW,EAAmBrvC,EAASpE,GAYpC,OAVKA,IAAYhS,GAEhBoW,EAAQpE,QAAUlS,GAEPkS,IAAY/R,KAEvBmW,EAAQpE,QAAUjS,IAIZqW,EAuDR,SAASsvC,EAAkB11E,GAE1B,MAAMomC,EAAUpmC,EAAM+4B,OAEtBqN,EAAQ33B,oBAAqB,UAAWinE,GAExC,MAAMC,EAAU/I,EAASnvE,IAAK2oC,QAEbptC,IAAZ28E,IAEJ/I,EAASjvE,OAAQyoC,GACjBuvC,EAAQtxC,WAYV,MAAO,CACN5mC,IA3ED,SAAc2oC,GAEb,GAAKA,GAAWA,EAAQ5C,UAAY,CAEnC,MAAMxB,EAAUoE,EAAQpE,QAExB,GAAKA,IAAYhS,IAAoCgS,IAAY/R,GAAmC,CAEnG,GAAK28C,EAASgJ,IAAKxvC,GAAY,CAG9B,OAAOqvC,EADS7I,EAASnvE,IAAK2oC,GAAUA,QACLA,EAAQpE,SAErC,CAEN,MAAMziC,EAAQ6mC,EAAQ7mC,MAEtB,GAAKA,GAASA,EAAMnR,OAAS,EAAI,CAEhC,MAAMynF,EAAoBva,EAASwa,gBAC7Bpa,EAAsBJ,EAASK,kBAE/Bb,EAAe,IAAIkB,GAAuBz8D,EAAMnR,OAAS,GAS/D,OARA0sE,EAAauB,2BAA4Bf,EAAUl1B,GACnDwmC,EAASnkF,IAAK29C,EAAS00B,GAEvBQ,EAASM,gBAAiBF,GAC1BJ,EAASya,cAAeF,GAExBzvC,EAAQrmC,iBAAkB,UAAW21E,GAE9BD,EAAmB3a,EAAa10B,QAASA,EAAQpE,SAMxD,OAAO,OAUX,OAAOoE,GA6BP/B,QARD,WAECuoC,EAAW,IAAIvN,UAWjB,SAAS2W,GAAiB1wE,GAEzB,MAAMuzD,EAAa,GAEnB,MAAO,CAEN+c,IAAK,SAAWxmE,GAEf,QAA4BpW,IAAvB6/D,EAAYzpD,GAEhB,OAA8B,OAAvBypD,EAAYzpD,GAIpB,IAAI6X,EAEJ,OAAS7X,GAER,IAAK,sBACJ6X,EAAY3hB,EAAG2wE,aAAc,wBAA2B3wE,EAAG2wE,aAAc,4BAA+B3wE,EAAG2wE,aAAc,8BACzH,MAED,IAAK,iCACJhvD,EAAY3hB,EAAG2wE,aAAc,mCAAsC3wE,EAAG2wE,aAAc,uCAA0C3wE,EAAG2wE,aAAc,yCAC/I,MAED,IAAK,gCACJhvD,EAAY3hB,EAAG2wE,aAAc,kCAAqC3wE,EAAG2wE,aAAc,sCAAyC3wE,EAAG2wE,aAAc,wCAC7I,MAED,IAAK,iCACJhvD,EAAY3hB,EAAG2wE,aAAc,mCAAsC3wE,EAAG2wE,aAAc,yCACpF,MAED,QACChvD,EAAY3hB,EAAG2wE,aAAc7mE,GAM/B,OAFAypD,EAAYzpD,GAAS6X,EAEA,OAAdA,GAIRxpB,IAAK,SAAW2R,GAQf,OANOvvB,KAAK+1F,IAAKxmE,IAEhB5iB,QAAQoK,KAAM,wBAA0BwY,EAAO,6BAIzCypD,EAAYzpD,KAQtB,SAAS8mE,GAAiB5wE,EAAIkrD,EAAYyhB,EAAMxD,GAE/C,MAAM/wB,EAAa,IAAI2hB,QACjB8W,EAAsB,IAAI9W,QAEhC,SAAS+W,EAAmBp2E,GAE3B,MAAMquC,EAAWruC,EAAM+4B,OACjBs9C,EAAiB34B,EAAWjgD,IAAK4wC,GAET,OAAzBgoC,EAAerqF,OAEnBwkE,EAAW7vC,OAAQ01D,EAAerqF,OAInC,IAAM,MAAMojB,KAAQinE,EAAe7lB,WAElCA,EAAW7vC,OAAQ01D,EAAe7lB,WAAYphD,IAI/Ci/B,EAAS5/B,oBAAqB,UAAW2nE,GAEzC14B,EAAW//C,OAAQ0wC,GAEnB,MAAM5Q,EAAY04C,EAAoB14E,IAAK44E,GAEtC54C,IAEJ+yB,EAAW7vC,OAAQ8c,GACnB04C,EAAoBx4E,OAAQ04E,IAI7B5H,EAAcqD,wBAAyBuE,IAEK,IAAvChoC,EAASyiC,kCAENziC,EAAS+iC,kBAMjBa,EAAKqE,OAAO54B,aAkEb,SAAS64B,EAA0BloC,GAElC,MAAMmlB,EAAU,GAEVgjB,EAAgBnoC,EAASriD,MACzByqF,EAAmBpoC,EAASmiB,WAAWhxD,SAC7C,IAAI0jC,EAAU,EAEd,GAAuB,OAAlBszC,EAAyB,CAE7B,MAAMx9C,EAAQw9C,EAAcx9C,MAC5BkK,EAAUszC,EAActzC,QAExB,IAAM,IAAIxjD,EAAI,EAAGwO,EAAI8qC,EAAM72C,OAAQzC,EAAIwO,EAAGxO,GAAK,EAAI,CAElD,MAAM0B,EAAI43C,EAAOt5C,EAAI,GACf2B,EAAI23C,EAAOt5C,EAAI,GACf4B,EAAI03C,EAAOt5C,EAAI,GAErB8zE,EAAQryE,KAAMC,EAAGC,EAAGA,EAAGC,EAAGA,EAAGF,QAIxB,CAEN,MAAM43C,EAAQy9C,EAAiBz9C,MAC/BkK,EAAUuzC,EAAiBvzC,QAE3B,IAAM,IAAIxjD,EAAI,EAAGwO,EAAM8qC,EAAM72C,OAAS,EAAM,EAAGzC,EAAIwO,EAAGxO,GAAK,EAAI,CAE9D,MAAM0B,EAAI1B,EAAI,EACR2B,EAAI3B,EAAI,EACR4B,EAAI5B,EAAI,EAEd8zE,EAAQryE,KAAMC,EAAGC,EAAGA,EAAGC,EAAGA,EAAGF,IAM/B,MAAMq8C,EAAY,IAAMoyB,GAAU2D,GAAY,MAAQjH,GAAwBJ,IAAyBqH,EAAS,GAChH/1B,EAAUyF,QAAUA,EAMpB,MAAMwzC,EAAoBP,EAAoB14E,IAAK4wC,GAE9CqoC,GAAoBlmB,EAAW7vC,OAAQ+1D,GAI5CP,EAAoB1tF,IAAK4lD,EAAU5Q,GAkCpC,MAAO,CAENhgC,IAvJD,SAAcowC,EAAQQ,GAErB,IAAIgoC,EAAiB34B,EAAWjgD,IAAK4wC,GAErC,OAAKgoC,IAELhoC,EAAStuC,iBAAkB,UAAWq2E,GAEjC/nC,EAASuiB,iBAEbylB,EAAiBhoC,EAENA,EAASojB,kBAEcz4D,IAA7Bq1C,EAASsoC,kBAEbtoC,EAASsoC,iBAAkB,IAAIpmB,IAAiB3iB,cAAeC,IAIhEwoC,EAAiBhoC,EAASsoC,iBAI3Bj5B,EAAWj1D,IAAK4lD,EAAUgoC,GAE1BpE,EAAKqE,OAAO54B,aAEL24B,IA4HP/tC,OAxHD,SAAiB+F,GAEhB,MAAMoiC,EAAqBpiC,EAASmiB,WAIpC,IAAM,MAAMphD,KAAQqhE,EAEnBjgB,EAAWloB,OAAQmoC,EAAoBrhE,GAAQ,OAMhD,MAAMqhD,EAAkBpiB,EAASoiB,gBAEjC,IAAM,MAAMrhD,KAAQqhD,EAAkB,CAErC,MAAMz3B,EAAQy3B,EAAiBrhD,GAE/B,IAAM,IAAI1vB,EAAI,EAAGwO,EAAI8qC,EAAM72C,OAAQzC,EAAIwO,EAAGxO,IAEzC8wE,EAAWloB,OAAQtP,EAAOt5C,GAAK,SAoGjCk3F,sBAnCD,SAAgCvoC,GAE/B,MAAMwoC,EAAmBV,EAAoB14E,IAAK4wC,GAElD,GAAKwoC,EAAmB,CAEvB,MAAML,EAAgBnoC,EAASriD,MAER,OAAlBwqF,GAICK,EAAiB3zC,QAAUszC,EAActzC,SAE7CqzC,EAA0BloC,QAQ5BkoC,EAA0BloC,GAI3B,OAAO8nC,EAAoB14E,IAAK4wC,KAelC,SAASyoC,GAA4BxxE,EAAIuzD,EAAYoZ,EAAM/S,GAE1D,MAAMC,EAAWD,EAAaC,SAE9B,IAAI+S,EAQAvyD,EAAM+/C,EAkDV7/E,KAAKsyF,QAxDL,SAAkB3yF,GAEjB0yF,EAAO1yF,GAuDRK,KAAKixE,SAjDL,SAAmBtxE,GAElBmgC,EAAOngC,EAAMmgC,KACb+/C,EAAkBlgF,EAAMkgF,iBA+CzB7/E,KAAKg8E,OA3CL,SAAiBx7E,EAAO8sD,GAEvB7nC,EAAGyxE,aAAc7E,EAAM/kC,EAAOxtB,EAAMt/B,EAAQq/E,GAE5CuS,EAAK3pC,OAAQ6E,EAAO+kC,EAAM,IAwC3BryF,KAAKuyF,gBApCL,SAA0B/xF,EAAO8sD,EAAOklC,GAEvC,GAAmB,IAAdA,EAAkB,OAEvB,IAAIprD,EAAWqrD,EAEf,GAAKnT,EAEJl4C,EAAY3hB,EACZgtE,EAAa,6BAOb,GAHArrD,EAAY4xC,EAAWp7D,IAAK,0BAC5B60E,EAAa,6BAEM,OAAdrrD,EAGJ,YADAz6B,QAAQu1B,MAAO,yIAOjBkF,EAAWqrD,GAAcJ,EAAM/kC,EAAOxtB,EAAMt/B,EAAQq/E,EAAiB2S,GAErEJ,EAAK3pC,OAAQ6E,EAAO+kC,EAAMG,IAa5B,SAAS2E,GAAW1xE,GAEnB,MAKMu2D,EAAS,CACd+C,MAAO,EACPqY,MAAO,EACPp2F,UAAW,EACXwsD,OAAQ,EACR6pC,MAAO,GA+CR,MAAO,CACNZ,OA1Dc,CACd54B,WAAY,EACZ7Z,SAAU,GAyDVg4B,OAAQA,EACRsb,SAAU,KACVC,WAAW,EACXrH,MAfD,WAEClU,EAAO+C,QACP/C,EAAOob,MAAQ,EACfpb,EAAOh7E,UAAY,EACnBg7E,EAAOxuB,OAAS,EAChBwuB,EAAOqb,MAAQ,GAUf5uC,OAlDD,SAAiB6E,EAAO+kC,EAAMmF,GAI7B,OAFAxb,EAAOob,QAEE/E,GAER,KAAK,EACJrW,EAAOh7E,WAAaw2F,GAAkBlqC,EAAQ,GAC9C,MAED,KAAK,EACJ0uB,EAAOqb,OAASG,GAAkBlqC,EAAQ,GAC1C,MAED,KAAK,EACJ0uB,EAAOqb,OAASG,GAAkBlqC,EAAQ,GAC1C,MAED,KAAK,EACJ0uB,EAAOqb,OAASG,EAAgBlqC,EAChC,MAED,KAAK,EACJ0uB,EAAOxuB,QAAUgqC,EAAgBlqC,EACjC,MAED,QACC3gD,QAAQu1B,MAAO,sCAAuCmwD,MA4B1D,SAASoF,GAAel2F,EAAGC,GAE1B,OAAOD,EAAG,GAAMC,EAAG,GAIpB,SAASk2F,GAAkBn2F,EAAGC,GAE7B,OAAO6B,KAAKC,IAAK9B,EAAG,IAAQ6B,KAAKC,IAAK/B,EAAG,IAI1C,SAASo2F,GAAmBlyE,GAE3B,MAAMmyE,EAAiB,GACjBliB,EAAkB,IAAIhvD,aAAc,GAEpCmxE,EAAiB,GAEvB,IAAM,IAAIh4F,EAAI,EAAGA,EAAI,EAAGA,IAEvBg4F,EAAgBh4F,GAAM,CAAEA,EAAG,GAwH5B,MAAO,CAEN4oD,OAtHD,SAAiBuF,EAAQQ,EAAUuQ,EAAUl2C,GAE5C,MAAMivE,EAAmB9pC,EAAO2nB,sBAK1BrzE,OAA8B6W,IAArB2+E,EAAiC,EAAIA,EAAiBx1F,OAErE,IAAIy1F,EAAaH,EAAgBppC,EAASx6C,IAE1C,QAAoBmF,IAAf4+E,EAA2B,CAI/BA,EAAa,GAEb,IAAM,IAAIl4F,EAAI,EAAGA,EAAIyC,EAAQzC,IAE5Bk4F,EAAYl4F,GAAM,CAAEA,EAAG,GAIxB+3F,EAAgBppC,EAASx6C,IAAO+jF,EAMjC,IAAM,IAAIl4F,EAAI,EAAGA,EAAIyC,EAAQzC,IAAO,CAEnC,MAAM+1E,EAAYmiB,EAAYl4F,GAE9B+1E,EAAW,GAAM/1E,EACjB+1E,EAAW,GAAMkiB,EAAkBj4F,GAIpCk4F,EAAWx1F,KAAMm1F,IAEjB,IAAM,IAAI73F,EAAI,EAAGA,EAAI,EAAGA,IAElBA,EAAIyC,GAAUy1F,EAAYl4F,GAAK,IAEnCg4F,EAAgBh4F,GAAK,GAAMk4F,EAAYl4F,GAAK,GAC5Cg4F,EAAgBh4F,GAAK,GAAMk4F,EAAYl4F,GAAK,KAI5Cg4F,EAAgBh4F,GAAK,GAAM+T,OAAOokF,iBAClCH,EAAgBh4F,GAAK,GAAM,GAM7Bg4F,EAAet1F,KAAMk1F,IAErB,MAAM7uB,EAAe7J,EAAS6J,cAAgBpa,EAASoiB,gBAAgBjxD,SACjEwrD,EAAepM,EAASoM,cAAgB3c,EAASoiB,gBAAgBp5C,OAEvE,IAAIygE,EAAqB,EAEzB,IAAM,IAAIp4F,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B,MAAM+1E,EAAYiiB,EAAgBh4F,GAC5BsM,EAAQypE,EAAW,GACnBj2E,EAAQi2E,EAAW,GAEpBzpE,IAAUyH,OAAOokF,kBAAoBr4F,GAEpCipE,GAAgBpa,EAASrvC,aAAc,cAAgBtf,KAAQ+oE,EAAcz8D,IAEjFqiD,EAASjwC,aAAc,cAAgB1e,EAAG+oE,EAAcz8D,IAIpDg/D,GAAgB3c,EAASrvC,aAAc,cAAgBtf,KAAQsrE,EAAch/D,IAEjFqiD,EAASjwC,aAAc,cAAgB1e,EAAGsrE,EAAch/D,IAIzDupE,EAAiB71E,GAAMF,EACvBs4F,GAAsBt4F,IAIjBipE,IAA+D,IAA/Cpa,EAAS2iB,aAAc,cAAgBtxE,IAE3D2uD,EAAS0iB,gBAAiB,cAAgBrxE,GAItCsrE,IAA+D,IAA/C3c,EAAS2iB,aAAc,cAAgBtxE,IAE3D2uD,EAAS0iB,gBAAiB,cAAgBrxE,GAI3C61E,EAAiB71E,GAAM,GASzB,MAAMq4F,EAAqB1pC,EAASqiB,qBAAuB,EAAI,EAAIonB,EAEnEpvE,EAAQsvE,cAAcC,SAAU3yE,EAAI,2BAA4ByyE,GAChErvE,EAAQsvE,cAAcC,SAAU3yE,EAAI,wBAAyBiwD,KAY/D,SAAS2iB,GAAc5yE,EAAIo4C,EAAY8S,EAAYyhB,GAElD,IAAIkG,EAAY,IAAI9Y,QAqDpB,SAAS+Y,EAAwBp4E,GAEhC,MAAMq4E,EAAgBr4E,EAAM+4B,OAE5Bs/C,EAAc5pE,oBAAqB,UAAW2pE,GAE9C5nB,EAAW7vC,OAAQ03D,EAAcn6B,gBAEI,OAAhCm6B,EAAc/G,eAAyB9gB,EAAW7vC,OAAQ03D,EAAc/G,eAI9E,MAAO,CAENhpC,OAjED,SAAiBuF,GAEhB,MAAM+wB,EAAQqT,EAAKpW,OAAO+C,MAEpBvwB,EAAWR,EAAOQ,SAClBgoC,EAAiB34B,EAAWjgD,IAAKowC,EAAQQ,GAoC/C,OAhCK8pC,EAAU16E,IAAK44E,KAAqBzX,IAEnCvwB,EAASojB,YAEb4kB,EAAe3kB,iBAAkB7jB,GAIlC6P,EAAWpV,OAAQ+tC,GAEnB8B,EAAU1vF,IAAK4tF,EAAgBzX,IAI3B/wB,EAAOoQ,mBAE2D,IAAjEpQ,EAAOjV,iBAAkB,UAAWw/C,IAExCvqC,EAAO9tC,iBAAkB,UAAWq4E,GAIrC5nB,EAAWloB,OAAQuF,EAAOqQ,eAAgB,OAEZ,OAAzBrQ,EAAOyjC,eAEX9gB,EAAWloB,OAAQuF,EAAOyjC,cAAe,QAMpC+E,GAyBPhyC,QArBD,WAEC8zC,EAAY,IAAI9Y,UAyBlB,SAASiZ,GAAoBl4F,EAAO,KAAM+N,EAAQ,EAAGC,EAAS,EAAGooE,EAAQ,GAExE10B,GAAQ5I,KAAMr5C,KAAM,MAEpBA,KAAK0f,MAAQ,CAAEnf,KAAAA,EAAM+N,MAAAA,EAAOC,OAAAA,EAAQooE,MAAAA,GAEpC32E,KAAKuiD,UAAY7R,GACjB1wC,KAAKwiD,UAAY9R,GAEjB1wC,KAAK04F,MAAQloD,GAEbxwC,KAAKijD,iBAAkB,EACvBjjD,KAAKmjD,OAAQ,EAEbnjD,KAAKuxE,aAAc,EAQpB,SAASonB,GAAep4F,EAAO,KAAM+N,EAAQ,EAAGC,EAAS,EAAGooE,EAAQ,GAUnE10B,GAAQ5I,KAAMr5C,KAAM,MAEpBA,KAAK0f,MAAQ,CAAEnf,KAAAA,EAAM+N,MAAAA,EAAOC,OAAAA,EAAQooE,MAAAA,GAEpC32E,KAAKuiD,UAAY7R,GACjB1wC,KAAKwiD,UAAY9R,GAEjB1wC,KAAK04F,MAAQloD,GAEbxwC,KAAKijD,iBAAkB,EACvBjjD,KAAKmjD,OAAQ,EAEbnjD,KAAKuxE,aAAc,EA15DpBsa,GAAU+M,SAAW,CAEpBrgB,SAAUD,GAAe,CACxBuT,GAAUI,SAAS1T,SACnB,CACC5O,UAAW,CAAEhqE,MAAO,GACpBkqE,aAAc,CAAElqE,MAAO,MACvBiqE,mBAAoB,CAAEjqE,MAAO,GAC7BmqE,sBAAuB,CAAEnqE,MAAO,MAChCqqE,qBAAsB,CAAErqE,MAAO,IAAIq8C,GAAS,EAAG,IAC/C+tB,mBAAoB,CAAEpqE,MAAO,MAC7B2pE,MAAO,CAAE3pE,MAAO,IAAIkpC,GAAO,IAC3BgwD,aAAc,CAAEl5F,MAAO,GACvBm5F,gBAAiB,CAAEn5F,MAAO,SAI5Bi5E,aAAc4H,GAAYyH,kBAC1BpP,eAAgB2H,GAAYwH,mBA82D7ByQ,GAAmB5/C,UAAYr5C,OAAOkkD,OAAQzB,GAAQpJ,WACtD4/C,GAAmB5/C,UAAU3yC,YAAcuyF,GAC3CA,GAAmB5/C,UAAUkgD,sBAAuB,EA6BpDJ,GAAc9/C,UAAYr5C,OAAOkkD,OAAQzB,GAAQpJ,WACjD8/C,GAAc9/C,UAAU3yC,YAAcyyF,GACtCA,GAAc9/C,UAAUmgD,iBAAkB,EA6C1C,MAAMC,GAAe,IAAIh3C,GACnBi3C,GAAsB,IAAIT,GAC1BU,GAAiB,IAAIR,GACrBS,GAAmB,IAAInd,GAMvBod,GAAgB,GAChBC,GAAgB,GAIhBC,GAAY,IAAI7yE,aAAc,IAC9B8yE,GAAY,IAAI9yE,aAAc,GAC9B+yE,GAAY,IAAI/yE,aAAc,GAIpC,SAASgzE,GAASvgD,EAAOwgD,EAASC,GAEjC,MAAMC,EAAY1gD,EAAO,GAEzB,GAAK0gD,GAAa,GAAKA,EAAY,EAAI,OAAO1gD,EAI9C,MAAMn3C,EAAI23F,EAAUC,EACpB,IAAIr1F,EAAI80F,GAAer3F,GASvB,QAPWmX,IAAN5U,IAEJA,EAAI,IAAImiB,aAAc1kB,GACtBq3F,GAAer3F,GAAMuC,GAIL,IAAZo1F,EAAgB,CAEpBE,EAAUn8C,QAASn5C,EAAG,GAEtB,IAAM,IAAI1E,EAAI,EAAGmc,EAAS,EAAGnc,IAAM85F,IAAY95F,EAE9Cmc,GAAU49E,EACVzgD,EAAOt5C,GAAI69C,QAASn5C,EAAGyX,GAMzB,OAAOzX,EAIR,SAASu1F,GAAav4F,EAAGC,GAExB,GAAKD,EAAEe,SAAWd,EAAEc,OAAS,OAAO,EAEpC,IAAM,IAAIzC,EAAI,EAAGwO,EAAI9M,EAAEe,OAAQzC,EAAIwO,EAAGxO,IAErC,GAAK0B,EAAG1B,KAAQ2B,EAAG3B,GAAM,OAAO,EAIjC,OAAO,EAIR,SAASytE,GAAW/rE,EAAGC,GAEtB,IAAM,IAAI3B,EAAI,EAAGwO,EAAI7M,EAAEc,OAAQzC,EAAIwO,EAAGxO,IAErC0B,EAAG1B,GAAM2B,EAAG3B,GAQd,SAASk6F,GAAe/1C,EAAUhiD,GAEjC,IAAIuC,EAAI+0F,GAAet3F,QAEZmX,IAAN5U,IAEJA,EAAI,IAAIkoE,WAAYzqE,GACpBs3F,GAAet3F,GAAMuC,GAItB,IAAM,IAAI1E,EAAI,EAAGA,IAAMmC,IAAMnC,EAE5B0E,EAAG1E,GAAMmkD,EAASg2C,sBAInB,OAAOz1F,EAWR,SAAS01F,GAAax0E,EAAIpV,GAEzB,MAAMmM,EAAQxc,KAAKwc,MAEdA,EAAO,KAAQnM,IAEpBoV,EAAGy0E,UAAWl6F,KAAKm6F,KAAM9pF,GAEzBmM,EAAO,GAAMnM,GAMd,SAAS+pF,GAAa30E,EAAIpV,GAEzB,MAAMmM,EAAQxc,KAAKwc,MAEnB,QAAarD,IAAR9I,EAAEvQ,EAED0c,EAAO,KAAQnM,EAAEvQ,GAAK0c,EAAO,KAAQnM,EAAEtQ,IAE3C0lB,EAAG40E,UAAWr6F,KAAKm6F,KAAM9pF,EAAEvQ,EAAGuQ,EAAEtQ,GAEhCyc,EAAO,GAAMnM,EAAEvQ,EACf0c,EAAO,GAAMnM,EAAEtQ,OAIV,CAEN,GAAK+5F,GAAat9E,EAAOnM,GAAM,OAE/BoV,EAAG8B,WAAYvnB,KAAKm6F,KAAM9pF,GAE1Bi9D,GAAW9wD,EAAOnM,IAMpB,SAASiqF,GAAa70E,EAAIpV,GAEzB,MAAMmM,EAAQxc,KAAKwc,MAEnB,QAAarD,IAAR9I,EAAEvQ,EAED0c,EAAO,KAAQnM,EAAEvQ,GAAK0c,EAAO,KAAQnM,EAAEtQ,GAAKyc,EAAO,KAAQnM,EAAElQ,IAEjEslB,EAAG80E,UAAWv6F,KAAKm6F,KAAM9pF,EAAEvQ,EAAGuQ,EAAEtQ,EAAGsQ,EAAElQ,GAErCqc,EAAO,GAAMnM,EAAEvQ,EACf0c,EAAO,GAAMnM,EAAEtQ,EACfyc,EAAO,GAAMnM,EAAElQ,QAIV,QAAagZ,IAAR9I,EAAE9L,EAERiY,EAAO,KAAQnM,EAAE9L,GAAKiY,EAAO,KAAQnM,EAAEy4B,GAAKtsB,EAAO,KAAQnM,EAAE7O,IAEjEikB,EAAG80E,UAAWv6F,KAAKm6F,KAAM9pF,EAAE9L,EAAG8L,EAAEy4B,EAAGz4B,EAAE7O,GAErCgb,EAAO,GAAMnM,EAAE9L,EACfiY,EAAO,GAAMnM,EAAEy4B,EACftsB,EAAO,GAAMnM,EAAE7O,OAIV,CAEN,GAAKs4F,GAAat9E,EAAOnM,GAAM,OAE/BoV,EAAG+0E,WAAYx6F,KAAKm6F,KAAM9pF,GAE1Bi9D,GAAW9wD,EAAOnM,IAMpB,SAASoqF,GAAah1E,EAAIpV,GAEzB,MAAMmM,EAAQxc,KAAKwc,MAEnB,QAAarD,IAAR9I,EAAEvQ,EAED0c,EAAO,KAAQnM,EAAEvQ,GAAK0c,EAAO,KAAQnM,EAAEtQ,GAAKyc,EAAO,KAAQnM,EAAElQ,GAAKqc,EAAO,KAAQnM,EAAEC,IAEvFmV,EAAGi1E,UAAW16F,KAAKm6F,KAAM9pF,EAAEvQ,EAAGuQ,EAAEtQ,EAAGsQ,EAAElQ,EAAGkQ,EAAEC,GAE1CkM,EAAO,GAAMnM,EAAEvQ,EACf0c,EAAO,GAAMnM,EAAEtQ,EACfyc,EAAO,GAAMnM,EAAElQ,EACfqc,EAAO,GAAMnM,EAAEC,OAIV,CAEN,GAAKwpF,GAAat9E,EAAOnM,GAAM,OAE/BoV,EAAGk1E,WAAY36F,KAAKm6F,KAAM9pF,GAE1Bi9D,GAAW9wD,EAAOnM,IAQpB,SAASuqF,GAAYn1E,EAAIpV,GAExB,MAAMmM,EAAQxc,KAAKwc,MACbqgC,EAAWxsC,EAAEwsC,SAEnB,QAAkB1jC,IAAb0jC,EAAyB,CAE7B,GAAKi9C,GAAat9E,EAAOnM,GAAM,OAE/BoV,EAAGo1E,iBAAkB76F,KAAKm6F,MAAM,EAAO9pF,GAEvCi9D,GAAW9wD,EAAOnM,OAEZ,CAEN,GAAKypF,GAAat9E,EAAOqgC,GAAa,OAEtC48C,GAAU7wF,IAAKi0C,GAEfp3B,EAAGo1E,iBAAkB76F,KAAKm6F,MAAM,EAAOV,IAEvCnsB,GAAW9wD,EAAOqgC,IAMpB,SAASi+C,GAAYr1E,EAAIpV,GAExB,MAAMmM,EAAQxc,KAAKwc,MACbqgC,EAAWxsC,EAAEwsC,SAEnB,QAAkB1jC,IAAb0jC,EAAyB,CAE7B,GAAKi9C,GAAat9E,EAAOnM,GAAM,OAE/BoV,EAAGs1E,iBAAkB/6F,KAAKm6F,MAAM,EAAO9pF,GAEvCi9D,GAAW9wD,EAAOnM,OAEZ,CAEN,GAAKypF,GAAat9E,EAAOqgC,GAAa,OAEtC28C,GAAU5wF,IAAKi0C,GAEfp3B,EAAGs1E,iBAAkB/6F,KAAKm6F,MAAM,EAAOX,IAEvClsB,GAAW9wD,EAAOqgC,IAMpB,SAASm+C,GAAYv1E,EAAIpV,GAExB,MAAMmM,EAAQxc,KAAKwc,MACbqgC,EAAWxsC,EAAEwsC,SAEnB,QAAkB1jC,IAAb0jC,EAAyB,CAE7B,GAAKi9C,GAAat9E,EAAOnM,GAAM,OAE/BoV,EAAGw1E,iBAAkBj7F,KAAKm6F,MAAM,EAAO9pF,GAEvCi9D,GAAW9wD,EAAOnM,OAEZ,CAEN,GAAKypF,GAAat9E,EAAOqgC,GAAa,OAEtC08C,GAAU3wF,IAAKi0C,GAEfp3B,EAAGw1E,iBAAkBj7F,KAAKm6F,MAAM,EAAOZ,IAEvCjsB,GAAW9wD,EAAOqgC,IAQpB,SAASq+C,GAAYz1E,EAAIpV,EAAG2zC,GAE3B,MAAMxnC,EAAQxc,KAAKwc,MACb2+E,EAAOn3C,EAASg2C,sBAEjBx9E,EAAO,KAAQ2+E,IAEnB11E,EAAG21E,UAAWp7F,KAAKm6F,KAAMgB,GACzB3+E,EAAO,GAAM2+E,GAIdn3C,EAASq3C,iBAAkBhrF,GAAK4oF,GAAckC,GAI/C,SAASG,GAAmB71E,EAAIpV,EAAG2zC,GAElC,MAAMxnC,EAAQxc,KAAKwc,MACb2+E,EAAOn3C,EAASg2C,sBAEjBx9E,EAAO,KAAQ2+E,IAEnB11E,EAAG21E,UAAWp7F,KAAKm6F,KAAMgB,GACzB3+E,EAAO,GAAM2+E,GAIdn3C,EAASu3C,kBAAmBlrF,GAAK6oF,GAAqBiC,GAIvD,SAASK,GAAc/1E,EAAIpV,EAAG2zC,GAE7B,MAAMxnC,EAAQxc,KAAKwc,MACb2+E,EAAOn3C,EAASg2C,sBAEjBx9E,EAAO,KAAQ2+E,IAEnB11E,EAAG21E,UAAWp7F,KAAKm6F,KAAMgB,GACzB3+E,EAAO,GAAM2+E,GAIdn3C,EAASy3C,aAAcprF,GAAK8oF,GAAgBgC,GAI7C,SAASO,GAAYj2E,EAAIpV,EAAG2zC,GAE3B,MAAMxnC,EAAQxc,KAAKwc,MACb2+E,EAAOn3C,EAASg2C,sBAEjBx9E,EAAO,KAAQ2+E,IAEnB11E,EAAG21E,UAAWp7F,KAAKm6F,KAAMgB,GACzB3+E,EAAO,GAAM2+E,GAIdn3C,EAAS23C,mBAAoBtrF,GAAK+oF,GAAkB+B,GAMrD,SAASS,GAAan2E,EAAIpV,GAEzB,MAAMmM,EAAQxc,KAAKwc,MAEdA,EAAO,KAAQnM,IAEpBoV,EAAG21E,UAAWp7F,KAAKm6F,KAAM9pF,GAEzBmM,EAAO,GAAMnM,GAId,SAASwrF,GAAap2E,EAAIpV,GAEzB,MAAMmM,EAAQxc,KAAKwc,MAEds9E,GAAat9E,EAAOnM,KAEzBoV,EAAGq2E,WAAY97F,KAAKm6F,KAAM9pF,GAE1Bi9D,GAAW9wD,EAAOnM,IAInB,SAAS0rF,GAAat2E,EAAIpV,GAEzB,MAAMmM,EAAQxc,KAAKwc,MAEds9E,GAAat9E,EAAOnM,KAEzBoV,EAAGu2E,WAAYh8F,KAAKm6F,KAAM9pF,GAE1Bi9D,GAAW9wD,EAAOnM,IAInB,SAAS4rF,GAAax2E,EAAIpV,GAEzB,MAAMmM,EAAQxc,KAAKwc,MAEds9E,GAAat9E,EAAOnM,KAEzBoV,EAAGy2E,WAAYl8F,KAAKm6F,KAAM9pF,GAE1Bi9D,GAAW9wD,EAAOnM,IAMnB,SAAS8rF,GAAc12E,EAAIpV,GAE1B,MAAMmM,EAAQxc,KAAKwc,MAEdA,EAAO,KAAQnM,IAEpBoV,EAAG22E,WAAYp8F,KAAKm6F,KAAM9pF,GAE1BmM,EAAO,GAAMnM,GAuDd,SAASgsF,GAAkB52E,EAAIpV,GAE9BoV,EAAG62E,WAAYt8F,KAAKm6F,KAAM9pF,GAK3B,SAASksF,GAAkB92E,EAAIpV,GAE9BoV,EAAG+2E,WAAYx8F,KAAKm6F,KAAM9pF,GAI3B,SAASosF,GAAkBh3E,EAAIpV,GAE9BoV,EAAGq2E,WAAY97F,KAAKm6F,KAAM9pF,GAI3B,SAASqsF,GAAkBj3E,EAAIpV,GAE9BoV,EAAGu2E,WAAYh8F,KAAKm6F,KAAM9pF,GAI3B,SAASssF,GAAkBl3E,EAAIpV,GAE9BoV,EAAGy2E,WAAYl8F,KAAKm6F,KAAM9pF,GAO3B,SAASusF,GAAkBn3E,EAAIpV,GAE9B,MAAM9P,EAAOm5F,GAASrpF,EAAGrQ,KAAK4f,KAAM,GAEpC6F,EAAG8B,WAAYvnB,KAAKm6F,KAAM55F,GAI3B,SAASs8F,GAAkBp3E,EAAIpV,GAE9B,MAAM9P,EAAOm5F,GAASrpF,EAAGrQ,KAAK4f,KAAM,GAEpC6F,EAAG+0E,WAAYx6F,KAAKm6F,KAAM55F,GAI3B,SAASu8F,GAAkBr3E,EAAIpV,GAE9B,MAAM9P,EAAOm5F,GAASrpF,EAAGrQ,KAAK4f,KAAM,GAEpC6F,EAAGk1E,WAAY36F,KAAKm6F,KAAM55F,GAM3B,SAASw8F,GAAiBt3E,EAAIpV,GAE7B,MAAM9P,EAAOm5F,GAASrpF,EAAGrQ,KAAK4f,KAAM,GAEpC6F,EAAGo1E,iBAAkB76F,KAAKm6F,MAAM,EAAO55F,GAIxC,SAASy8F,GAAiBv3E,EAAIpV,GAE7B,MAAM9P,EAAOm5F,GAASrpF,EAAGrQ,KAAK4f,KAAM,GAEpC6F,EAAGs1E,iBAAkB/6F,KAAKm6F,MAAM,EAAO55F,GAIxC,SAAS08F,GAAiBx3E,EAAIpV,GAE7B,MAAM9P,EAAOm5F,GAASrpF,EAAGrQ,KAAK4f,KAAM,IAEpC6F,EAAGw1E,iBAAkBj7F,KAAKm6F,MAAM,EAAO55F,GAMxC,SAAS28F,GAAiBz3E,EAAIpV,EAAG2zC,GAEhC,MAAMhiD,EAAIqO,EAAE/N,OAEN66F,EAAQpD,GAAe/1C,EAAUhiD,GAEvCyjB,EAAG+2E,WAAYx8F,KAAKm6F,KAAMgD,GAE1B,IAAM,IAAIt9F,EAAI,EAAGA,IAAMmC,IAAMnC,EAE5BmkD,EAASq3C,iBAAkBhrF,EAAGxQ,IAAOo5F,GAAckE,EAAOt9F,IAM5D,SAASu9F,GAAiB33E,EAAIpV,EAAG2zC,GAEhC,MAAMhiD,EAAIqO,EAAE/N,OAEN66F,EAAQpD,GAAe/1C,EAAUhiD,GAEvCyjB,EAAG+2E,WAAYx8F,KAAKm6F,KAAMgD,GAE1B,IAAM,IAAIt9F,EAAI,EAAGA,IAAMmC,IAAMnC,EAE5BmkD,EAAS23C,mBAAoBtrF,EAAGxQ,IAAOu5F,GAAkB+D,EAAOt9F,IA6ClE,SAASw9F,GAAerpF,EAAIspF,EAAYnD,GAEvCn6F,KAAKgU,GAAKA,EACVhU,KAAKm6F,KAAOA,EACZn6F,KAAKwc,MAAQ,GACbxc,KAAKo4F,SAnNN,SAA4Bt4D,GAE3B,OAASA,GAER,KAAK,KAAQ,OAAOm6D,GACpB,KAAK,MAAQ,OAAOG,GACpB,KAAK,MAAQ,OAAOE,GACpB,KAAK,MAAQ,OAAOG,GAEpB,KAAK,MAAQ,OAAOG,GACpB,KAAK,MAAQ,OAAOE,GACpB,KAAK,MAAQ,OAAOE,GAEpB,KAAK,KAAQ,KAAK,MAAQ,OAAOY,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOC,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOE,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOE,GAEjC,KAAK,KAAQ,OAAOE,GAEpB,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOjB,GAER,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOM,GAER,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOE,GAER,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOJ,IAyKOiC,CAAmBD,EAAWx9D,MAM/C,SAAS09D,GAAkBxpF,EAAIspF,EAAYnD,GAE1Cn6F,KAAKgU,GAAKA,EACVhU,KAAKm6F,KAAOA,EACZn6F,KAAKwc,MAAQ,GACbxc,KAAK4f,KAAO09E,EAAW19E,KACvB5f,KAAKo4F,SAtDN,SAA6Bt4D,GAE5B,OAASA,GAER,KAAK,KAAQ,OAAOu8D,GACpB,KAAK,MAAQ,OAAOO,GACpB,KAAK,MAAQ,OAAOC,GACpB,KAAK,MAAQ,OAAOC,GAEpB,KAAK,MAAQ,OAAOC,GACpB,KAAK,MAAQ,OAAOC,GACpB,KAAK,MAAQ,OAAOC,GAEpB,KAAK,KAAQ,KAAK,MAAQ,OAAOV,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOE,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOC,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOC,GAEjC,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOO,GAER,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOE,IAyBOK,CAAoBH,EAAWx9D,MAoBhD,SAAS49D,GAAmB1pF,GAE3BhU,KAAKgU,GAAKA,EAEVhU,KAAK29F,IAAM,GACX39F,KAAKu5B,IAAM,GAnBZikE,GAAiB3kD,UAAU+kD,YAAc,SAAWr9F,GAEnD,MAAMic,EAAQxc,KAAKwc,MAEdjc,aAAgBmmB,cAAgBlK,EAAMla,SAAW/B,EAAK+B,SAE1DtC,KAAKwc,MAAQ,IAAIkK,aAAcnmB,EAAK+B,SAIrCgrE,GAAW9wD,EAAOjc,IAanBm9F,GAAkB7kD,UAAUu/C,SAAW,SAAW3yE,EAAI9lB,EAAOqkD,GAE5D,MAAM25C,EAAM39F,KAAK29F,IAEjB,IAAM,IAAI99F,EAAI,EAAGmC,EAAI27F,EAAIr7F,OAAQzC,IAAMmC,IAAMnC,EAAI,CAEhD,MAAMsU,EAAIwpF,EAAK99F,GACfsU,EAAEikF,SAAU3yE,EAAI9lB,EAAOwU,EAAEH,IAAMgwC,KAUjC,MAAM65C,GAAa,sBAWnB,SAASC,GAAYl7D,EAAWm7D,GAE/Bn7D,EAAU+6D,IAAIr8F,KAAMy8F,GACpBn7D,EAAUrJ,IAAKwkE,EAAc/pF,IAAO+pF,EAIrC,SAASC,GAAcV,EAAYnD,EAAMv3D,GAExC,MAAMtrB,EAAOgmF,EAAW/tE,KACvB0uE,EAAa3mF,EAAKhV,OAKnB,IAFAu7F,GAAWK,UAAY,IAER,CAEd,MAAMvyD,EAAQkyD,GAAWp6B,KAAMnsD,GAC9B6mF,EAAWN,GAAWK,UAEvB,IAAIlqF,EAAK23B,EAAO,GAChB,MAAMyyD,EAA2B,MAAfzyD,EAAO,GACxB0yD,EAAY1yD,EAAO,GAIpB,GAFKyyD,IAAYpqF,GAAU,QAERmF,IAAdklF,GAAyC,MAAdA,GAAqBF,EAAW,IAAMF,EAAa,CAIlFH,GAAYl7D,OAAyBzpB,IAAdklF,EACtB,IAAIhB,GAAerpF,EAAIspF,EAAYnD,GACnC,IAAIqD,GAAkBxpF,EAAIspF,EAAYnD,IAEvC,MAEM,CAKN,IAAIj6F,EADQ0iC,EAAUrJ,IACNvlB,QAEFmF,IAATjZ,IAEJA,EAAO,IAAIw9F,GAAmB1pF,GAC9B8pF,GAAYl7D,EAAW1iC,IAIxB0iC,EAAY1iC,IAUf,SAASo+F,GAAe74E,EAAIoD,GAE3B7oB,KAAK29F,IAAM,GACX39F,KAAKu5B,IAAM,GAEX,MAAMv3B,EAAIyjB,EAAG84E,oBAAqB11E,EAAS,OAE3C,IAAM,IAAIhpB,EAAI,EAAGA,EAAImC,IAAMnC,EAAI,CAE9B,MAAMuyF,EAAO3sE,EAAG+4E,iBAAkB31E,EAAShpB,GAG3Cm+F,GAAc5L,EAFN3sE,EAAG6B,mBAAoBuB,EAASupE,EAAK7iE,MAEnBvvB,OA0D5B,SAASy+F,GAAah5E,EAAIqa,EAAM0jC,GAE/B,MAAMp7C,EAAS3C,EAAG4C,aAAcyX,GAKhC,OAHAra,EAAG6C,aAAcF,EAAQo7C,GACzB/9C,EAAGK,cAAesC,GAEXA,EA3DRk2E,GAAczlD,UAAUu/C,SAAW,SAAW3yE,EAAI8J,EAAM5vB,EAAOqkD,GAE9D,MAAM7vC,EAAInU,KAAKu5B,IAAKhK,QAETpW,IAANhF,GAAkBA,EAAEikF,SAAU3yE,EAAI9lB,EAAOqkD,IAI/Cs6C,GAAczlD,UAAU6lD,YAAc,SAAWj5E,EAAIuoC,EAAQz+B,GAE5D,MAAMlf,EAAI29C,EAAQz+B,QAEPpW,IAAN9I,GAAkBrQ,KAAKo4F,SAAU3yE,EAAI8J,EAAMlf,IAOjDiuF,GAAcK,OAAS,SAAWl5E,EAAIk4E,EAAKx+B,EAAQnb,GAElD,IAAM,IAAInkD,EAAI,EAAGmC,EAAI27F,EAAIr7F,OAAQzC,IAAMmC,IAAMnC,EAAI,CAEhD,MAAMsU,EAAIwpF,EAAK99F,GACdwQ,EAAI8uD,EAAQhrD,EAAEH,KAEQ,IAAlB3D,EAAEkhE,aAGNp9D,EAAEikF,SAAU3yE,EAAIpV,EAAE1Q,MAAOqkD,KAQ5Bs6C,GAAcM,aAAe,SAAWjB,EAAKx+B,GAE5C,MAAM56D,EAAI,GAEV,IAAM,IAAI1E,EAAI,EAAGmC,EAAI27F,EAAIr7F,OAAQzC,IAAMmC,IAAMnC,EAAI,CAEhD,MAAMsU,EAAIwpF,EAAK99F,GACVsU,EAAEH,MAAMmrD,GAAS56D,EAAEjD,KAAM6S,GAI/B,OAAO5P,GAeR,IAAIs6F,GAAiB,EAgBrB,SAASC,GAAuBn8C,GAE/B,OAASA,GAER,KAAKvM,GACJ,MAAO,CAAE,SAAU,aACpB,KAAKC,GACJ,MAAO,CAAE,OAAQ,aAClB,KAAKE,GACJ,MAAO,CAAE,OAAQ,aAClB,KAAKE,GACJ,MAAO,CAAE,OAAQ,kBAClB,KAAKC,GACJ,MAAO,CAAE,OAAQ,mBAClB,KAAKC,GACJ,MAAO,CAAE,OAAQ,oBAClB,KAAKL,GACJ,MAAO,CAAE,QAAS,oCACnB,KAAKE,GACJ,MAAO,CAAE,SAAU,aACpB,QAEC,OADA7pC,QAAQoK,KAAM,4CAA6C4rC,GACpD,CAAE,SAAU,cAMtB,SAASo8C,GAAiBt5E,EAAI2C,EAAQ0X,GAErC,MAAMk/D,EAASv5E,EAAG8C,mBAAoBH,EAAQ,OACxCxb,EAAM6Y,EAAGgD,iBAAkBL,GAASmjB,OAE1C,GAAKyzD,GAAkB,KAARpyF,EAAa,MAAO,GAOnC,MAAO,4CAA8CkzB,EAAO,KAAOlzB,EAtDpE,SAAyB42D,GAExB,MAAM6zB,EAAQ7zB,EAAOy7B,MAAO,MAE5B,IAAM,IAAIp/F,EAAI,EAAGA,EAAIw3F,EAAM/0F,OAAQzC,IAElCw3F,EAAOx3F,GAAQA,EAAI,EAAM,KAAOw3F,EAAOx3F,GAIxC,OAAOw3F,EAAMjsF,KAAM,MA4CsD8zF,CAF1Dz5E,EAAG05E,gBAAiB/2E,IAMpC,SAASg3E,GAA0BC,EAAc18C,GAEhD,MAAM+gB,EAAao7B,GAAuBn8C,GAC1C,MAAO,QAAU08C,EAAe,2BAA6B37B,EAAY,GAAM,WAAaA,EAAY,GAAM,MAI/G,SAAS47B,GAA0BD,EAAc18C,GAEhD,MAAM+gB,EAAao7B,GAAuBn8C,GAC1C,MAAO,QAAU08C,EAAe,mCAAqC37B,EAAY,GAAMA,EAAY,GAAM,MAI1G,SAAS67B,GAAwBF,EAAc9Q,GAE9C,IAAIiR,EAEJ,OAASjR,GAER,KAAK5+C,EACJ6vD,EAAkB,SAClB,MAED,KAAK5vD,GACJ4vD,EAAkB,WAClB,MAED,KAAK3vD,GACJ2vD,EAAkB,kBAClB,MAED,KAAK1vD,GACJ0vD,EAAkB,aAClB,MAED,KAAKzvD,GACJyvD,EAAkB,SAClB,MAED,QACC7yF,QAAQoK,KAAM,+CAAgDw3E,GAC9DiR,EAAkB,SAIpB,MAAO,QAAUH,EAAe,2BAA6BG,EAAkB,0BAwDhF,SAASC,GAAiBj8B,GAEzB,MAAkB,KAAXA,EAIR,SAASk8B,GAAkBl8B,EAAQ/E,GAElC,OAAO+E,EACLm8B,QAAS,kBAAmBlhC,EAAWmhC,cACvCD,QAAS,mBAAoBlhC,EAAWohC,eACxCF,QAAS,wBAAyBlhC,EAAWqhC,mBAC7CH,QAAS,oBAAqBlhC,EAAWshC,gBACzCJ,QAAS,mBAAoBlhC,EAAWuhC,eACxCL,QAAS,yBAA0BlhC,EAAWwhC,oBAC9CN,QAAS,0BAA2BlhC,EAAWyhC,qBAC/CP,QAAS,2BAA4BlhC,EAAW0hC,sBAInD,SAASC,GAA0B58B,EAAQ/E,GAE1C,OAAO+E,EACLm8B,QAAS,uBAAwBlhC,EAAW4hC,mBAC5CV,QAAS,yBAA4BlhC,EAAW4hC,kBAAoB5hC,EAAW6hC,qBAMlF,MAAMC,GAAiB,mCAEvB,SAASC,GAAiBh9B,GAEzB,OAAOA,EAAOm8B,QAASY,GAAgBE,IAIxC,SAASA,GAAiB90D,EAAO+0D,GAEhC,MAAMl9B,EAASgd,GAAakgB,GAE5B,QAAgBvnF,IAAXqqD,EAEJ,MAAM,IAAIvvD,MAAO,6BAA+BysF,EAAU,KAI3D,OAAOF,GAAiBh9B,GAMzB,MAAMm9B,GAA8B,+FAC9BC,GAAoB,+IAE1B,SAASC,GAAar9B,GAErB,OAAOA,EACLm8B,QAASiB,GAAmBE,IAC5BnB,QAASgB,GAA6BI,IAIzC,SAASA,GAAwBp1D,EAAOnrC,EAAOC,EAAKugG,GAGnD,OADAr0F,QAAQoK,KAAM,uHACP+pF,GAAcn1D,EAAOnrC,EAAOC,EAAKugG,GAIzC,SAASF,GAAcn1D,EAAOnrC,EAAOC,EAAKugG,GAEzC,IAAIx9B,EAAS,GAEb,IAAM,IAAI3jE,EAAIyqC,SAAU9pC,GAASX,EAAIyqC,SAAU7pC,GAAOZ,IAErD2jE,GAAUw9B,EACRrB,QAAS,eAAgB,KAAO9/F,EAAI,MACpC8/F,QAAS,uBAAwB9/F,GAIpC,OAAO2jE,EAMR,SAASy9B,GAAmBxiC,GAE3B,IAAIyiC,EAAkB,aAAeziC,EAAW2I,UAAY,sBAAwB3I,EAAW2I,UAAY,QAgB3G,MAd8B,UAAzB3I,EAAW2I,UAEf85B,GAAmB,2BAEiB,YAAzBziC,EAAW2I,UAEtB85B,GAAmB,6BAEiB,SAAzBziC,EAAW2I,YAEtB85B,GAAmB,2BAIbA,EAsGR,SAASC,GAAc1lB,EAAU2lB,EAAU3iC,EAAYmwB,GAEtD,MAAMnpE,EAAKg2D,EAASr9C,aAEdu6C,EAAUla,EAAWka,QAE3B,IAAIC,EAAena,EAAWma,aAC1BC,EAAiBpa,EAAWoa,eAEhC,MAAMwoB,EA3GP,SAAsC5iC,GAErC,IAAI4iC,EAAsB,uBAgB1B,OAdK5iC,EAAW6iC,gBAAkBr0D,EAEjCo0D,EAAsB,qBAEX5iC,EAAW6iC,gBAAkBp0D,EAExCm0D,EAAsB,0BAEX5iC,EAAW6iC,gBAAkBn0D,IAExCk0D,EAAsB,sBAIhBA,EAyFqBE,CAA6B9iC,GACnD+iC,EAtFP,SAAmC/iC,GAElC,IAAI+iC,EAAmB,mBAEvB,GAAK/iC,EAAW0J,OAEf,OAAS1J,EAAWgjC,YAEnB,KAAKxxD,GACL,KAAKC,GACJsxD,EAAmB,mBACnB,MAED,KAAKnxD,GACL,KAAKC,GACJkxD,EAAmB,sBAOtB,OAAOA,EAgEkBE,CAA0BjjC,GAC7CkjC,EA7DP,SAAmCljC,GAElC,IAAIkjC,EAAmB,yBAEvB,GAAKljC,EAAW0J,OAEf,OAAS1J,EAAWgjC,YAEnB,KAAKvxD,GACL,KAAKI,GAEJqxD,EAAmB,yBAOtB,OAAOA,EA2CkBC,CAA0BnjC,GAC7CojC,EAxCP,SAAuCpjC,GAEtC,IAAIojC,EAAuB,uBAE3B,GAAKpjC,EAAW0J,OAEf,OAAS1J,EAAW2J,SAEnB,KAAK74B,EACJsyD,EAAuB,2BACvB,MAED,KAAKryD,EACJqyD,EAAuB,sBACvB,MAED,KAAKpyD,EACJoyD,EAAuB,sBAO1B,OAAOA,EAgBsBC,CAA8BrjC,GAGrDsjC,EAAsBtmB,EAAS3X,YAAc,EAAM2X,EAAS3X,YAAc,EAE1Ek+B,EAAmBvjC,EAAW6gB,SAAW,GAvRhD,SAA6B7gB,GAS5B,MAPe,CACZA,EAAWwjC,sBAAwBxjC,EAAWyjC,cAAgBzjC,EAAWyL,SAAWzL,EAAW0jC,uBAAyB1jC,EAAWsL,oBAAsBtL,EAAWkH,aAAuC,aAAxBlH,EAAW2jC,SAA4B,kDAAoD,IAC9Q3jC,EAAW4jC,oBAAsB5jC,EAAWw0B,yBAA4Bx0B,EAAW6jC,2BAA6B,wCAA0C,GAC1J7jC,EAAW8jC,sBAAwB9jC,EAAW+jC,6BAAiC,2CAA6C,IAC5H/jC,EAAWgkC,2BAA6BhkC,EAAW0J,SAAY1J,EAAWikC,kCAAoC,gDAAkD,IAGrJlpE,OAAQimE,IAAkBr0F,KAAM,MA8QMu3F,CAAoBlkC,GAElEmkC,EA5QP,SAA0BjqB,GAEzB,MAAMkqB,EAAS,GAEf,IAAM,MAAMtzE,KAAQopD,EAAU,CAE7B,MAAMh5E,EAAQg5E,EAASppD,IAER,IAAV5vB,GAELkjG,EAAOvhG,KAAM,WAAaiuB,EAAO,IAAM5vB,GAIxC,OAAOkjG,EAAOz3F,KAAM,MA8PE03F,CAAiBnqB,GAEjC9vD,EAAUpD,EAAGqD,gBAEnB,IAAIi6E,EAAcC,EACdC,EAAgBxkC,EAAW+a,YAAc,YAAc/a,EAAW+a,YAAc,KAAO,GAEtF/a,EAAWykC,qBAEfH,EAAe,CAEdH,GAECppE,OAAQimE,IAAkBr0F,KAAM,MAE7B23F,EAAazgG,OAAS,IAE1BygG,GAAgB,MAIjBC,EAAiB,CAEhBhB,EACAY,GAECppE,OAAQimE,IAAkBr0F,KAAM,MAE7B43F,EAAe1gG,OAAS,IAE5B0gG,GAAkB,QAMnBD,EAAe,CAEd9B,GAAmBxiC,GAEnB,uBAAyBA,EAAW0kC,WAEpCP,EAEAnkC,EAAW2kC,WAAa,yBAA2B,GACnD3kC,EAAW4kC,gBAAkB,+BAAiC,GAE9D5kC,EAAW6kC,uBAAyB,0BAA4B,GAEhE,wBAA0BvB,EAE1B,qBAAuBtjC,EAAW8kC,SAChC9kC,EAAW+kC,QAAU/kC,EAAW+G,IAAQ,kBAAoB,GAC5D/G,EAAW+kC,QAAU/kC,EAAWglC,QAAY,mBAAqB,GAEnEhlC,EAAWllC,IAAM,kBAAoB,GACrCklC,EAAW0J,OAAS,qBAAuB,GAC3C1J,EAAW0J,OAAS,WAAaw5B,EAAmB,GACpDljC,EAAWoJ,SAAW,uBAAyB,GAC/CpJ,EAAWsJ,MAAQ,oBAAsB,GACzCtJ,EAAWmM,YAAc,0BAA4B,GACrDnM,EAAWyL,QAAU,sBAAwB,GAC7CzL,EAAW2L,UAAY,wBAA0B,GAC/C3L,EAAW2L,WAAa3L,EAAWilC,qBAAyB,gCAAkC,GAC9FjlC,EAAW2L,WAAa3L,EAAW0jC,sBAA0B,iCAAmC,GAElG1jC,EAAWoL,aAAe,2BAA6B,GACvDpL,EAAWqL,sBAAwB,qCAAuC,GAC1ErL,EAAWsL,mBAAqB,kCAAoC,GACpEtL,EAAW8L,iBAAmB9L,EAAW6kC,uBAAyB,8BAAgC,GAClG7kC,EAAWwJ,YAAc,0BAA4B,GACrDxJ,EAAWiM,aAAe,2BAA6B,GACvDjM,EAAWkM,aAAe,2BAA6B,GACvDlM,EAAWyJ,SAAW,uBAAyB,GAC/CzJ,EAAWq6B,gBAAkB,8BAAgC,GAE7Dr6B,EAAWklC,eAAiB,sBAAwB,GACpDllC,EAAW4G,aAAe,oBAAsB,GAChD5G,EAAWoR,UAAY,iBAAmB,GAC1CpR,EAAWmlC,cAAgB,0BAA4B,GAEvDnlC,EAAWkH,YAAc,sBAAwB,GAEjDlH,EAAWkK,SAAW,uBAAyB,GAC/ClK,EAAWolC,iBAAmB,uBAAyB,GAEvDplC,EAAWmK,aAAe,2BAA6B,GACvDnK,EAAW0M,eAA2C,IAA3B1M,EAAWkH,YAAwB,2BAA6B,GAC3FlH,EAAWqlC,YAAc,uBAAyB,GAClDrlC,EAAWslC,UAAY,qBAAuB,GAE9CtlC,EAAWulC,iBAAmB,wBAA0B,GACxDvlC,EAAWulC,iBAAmB,WAAa3C,EAAsB,GAEjE5iC,EAAWsM,gBAAkB,8BAAgC,GAE7DtM,EAAWw0B,uBAAyB,0BAA4B,GAC9Dx0B,EAAWw0B,wBAA0Bx0B,EAAW6jC,2BAA+B,8BAAgC,GAEjH,4BACA,gCACA,iCACA,2BACA,6BACA,+BACA,+BAEA,wBAEA,mCAEA,SAEA,8BAEA,kCAEA,SAEA,2BACA,yBACA,qBAEA,qBAEA,4BAEA,SAEA,mBAEA,0BAEA,SAEA,0BAEA,iCACA,iCACA,iCACA,iCAEA,4BAEA,mCACA,mCACA,mCACA,mCAEA,UAEA,mCACA,mCACA,mCACA,mCAEA,WAEA,SAEA,sBAEA,8BACA,+BAEA,SAEA,MAEC9oE,OAAQimE,IAAkBr0F,KAAM,MAElC43F,EAAiB,CAEhBhB,EAEAf,GAAmBxiC,GAEnB,uBAAyBA,EAAW0kC,WAEpCP,EAEAnkC,EAAWgJ,UAAY,qBAAuBhJ,EAAWgJ,WAAchJ,EAAWgJ,UAAY,EAAI,GAAK,MAAS,GAEhH,wBAA0Bs6B,EAExBtjC,EAAW+kC,QAAU/kC,EAAW+G,IAAQ,kBAAoB,GAC5D/G,EAAW+kC,QAAU/kC,EAAWglC,QAAY,mBAAqB,GAEnEhlC,EAAWllC,IAAM,kBAAoB,GACrCklC,EAAWwL,OAAS,qBAAuB,GAC3CxL,EAAW0J,OAAS,qBAAuB,GAC3C1J,EAAW0J,OAAS,WAAaq5B,EAAmB,GACpD/iC,EAAW0J,OAAS,WAAaw5B,EAAmB,GACpDljC,EAAW0J,OAAS,WAAa05B,EAAuB,GACxDpjC,EAAWoJ,SAAW,uBAAyB,GAC/CpJ,EAAWsJ,MAAQ,oBAAsB,GACzCtJ,EAAWmM,YAAc,0BAA4B,GACrDnM,EAAWyL,QAAU,sBAAwB,GAC7CzL,EAAW2L,UAAY,wBAA0B,GAC/C3L,EAAW2L,WAAa3L,EAAWilC,qBAAyB,gCAAkC,GAC9FjlC,EAAW2L,WAAa3L,EAAW0jC,sBAA0B,iCAAmC,GAClG1jC,EAAWoL,aAAe,2BAA6B,GACvDpL,EAAWqL,sBAAwB,qCAAuC,GAC1ErL,EAAWsL,mBAAqB,kCAAoC,GACpEtL,EAAWwJ,YAAc,0BAA4B,GACrDxJ,EAAWiM,aAAe,2BAA6B,GACvDjM,EAAWkM,aAAe,2BAA6B,GACvDlM,EAAWyJ,SAAW,uBAAyB,GAE/CzJ,EAAW6K,MAAQ,oBAAsB,GACzC7K,EAAWq6B,gBAAkB,8BAAgC,GAE7Dr6B,EAAWklC,eAAiB,sBAAwB,GACpDllC,EAAW4G,cAAgB5G,EAAW4kC,gBAAkB,oBAAsB,GAC9E5kC,EAAWoR,UAAY,iBAAmB,GAC1CpR,EAAWmlC,cAAgB,0BAA4B,GAEvDnlC,EAAWqM,YAAc,0BAA4B,GAErDrM,EAAWkH,YAAc,sBAAwB,GAEjDlH,EAAWqlC,YAAc,uBAAyB,GAClDrlC,EAAWslC,UAAY,qBAAuB,GAE9CtlC,EAAWulC,iBAAmB,wBAA0B,GACxDvlC,EAAWulC,iBAAmB,WAAa3C,EAAsB,GAEjE5iC,EAAWiJ,mBAAqB,8BAAgC,GAEhEjJ,EAAWwlC,wBAA0B,oCAAsC,GAE3ExlC,EAAWw0B,uBAAyB,0BAA4B,GAC9Dx0B,EAAWw0B,wBAA0Bx0B,EAAW6jC,2BAA+B,8BAAgC,IAE7G7jC,EAAWgkC,2BAA6BhkC,EAAW0J,SAAY1J,EAAWikC,kCAAsC,0BAA4B,GAEhJ,2BACA,+BACA,+BAEEjkC,EAAW8vB,cAAgB7+C,EAAkB,uBAAyB,GACtE+uB,EAAW8vB,cAAgB7+C,EAAkB8wC,GAAyC,0BAAI,GAC1F/hB,EAAW8vB,cAAgB7+C,EAAkB6vD,GAAwB,cAAe9gC,EAAW8vB,aAAgB,GAEjH9vB,EAAW+I,UAAY,oBAAsB,GAE7CgZ,GAAuC,wBACvC/hB,EAAWllC,IAAM6lE,GAA0B,mBAAoB3gC,EAAWylC,aAAgB,GAC1FzlC,EAAWwL,OAASm1B,GAA0B,sBAAuB3gC,EAAW0lC,gBAAmB,GACnG1lC,EAAW0J,OAASi3B,GAA0B,sBAAuB3gC,EAAW2lC,gBAAmB,GACnG3lC,EAAWmM,YAAcw0B,GAA0B,2BAA4B3gC,EAAW4lC,qBAAwB,GAClH5lC,EAAWoJ,SAAWu3B,GAA0B,wBAAyB3gC,EAAW6lC,kBAAqB,GACzGhF,GAA0B,sBAAuB7gC,EAAW8lC,gBAE5D9lC,EAAW+lC,aAAe,yBAA2B/lC,EAAW+lC,aAAe,GAE/E,MAEChrE,OAAQimE,IAAkBr0F,KAAM,OAInCwtE,EAAe4nB,GAAiB5nB,GAChCA,EAAe8mB,GAAkB9mB,EAAcna,GAC/Cma,EAAewnB,GAA0BxnB,EAAcna,GAEvDoa,EAAiB2nB,GAAiB3nB,GAClCA,EAAiB6mB,GAAkB7mB,EAAgBpa,GACnDoa,EAAiBunB,GAA0BvnB,EAAgBpa,GAE3Dma,EAAeioB,GAAajoB,GAC5BC,EAAiBgoB,GAAahoB,GAEzBpa,EAAW6gB,WAA+C,IAAnC7gB,EAAWykC,sBAItCD,EAAgB,oBAEhBF,EAAe,CACd,uBACA,sBACA,6BACC33F,KAAM,MAAS,KAAO23F,EAExBC,EAAiB,CAChB,qBACEvkC,EAAW+a,cAAgB9gC,GAAU,GAAK,+BAC1C+lB,EAAW+a,cAAgB9gC,GAAU,GAAK,oCAC5C,uCACA,4BACA,8BACA,oCACA,qCACA,6CACA,uCACA,uCACA,+CACA,0CACCttC,KAAM,MAAS,KAAO43F,GAIzB,MACMyB,EAAexB,EAAgBD,EAAiBnqB,EAKhD6rB,EAAiBjG,GAAah5E,EAAI,MANrBw9E,EAAgBF,EAAenqB,GAO5C+rB,EAAmBlG,GAAah5E,EAAI,MAAOg/E,GAqBjD,GAnBAh/E,EAAGsD,aAAcF,EAAS67E,GAC1Bj/E,EAAGsD,aAAcF,EAAS87E,QAIcxrF,IAAnCslD,EAAW6a,oBAEf7zD,EAAGm/E,mBAAoB/7E,EAAS,EAAG41C,EAAW6a,sBAEP,IAA5B7a,EAAWmK,cAGtBnjD,EAAGm/E,mBAAoB/7E,EAAS,EAAG,YAIpCpD,EAAGuD,YAAaH,GAGX4yD,EAASopB,MAAMC,kBAAoB,CAEvC,MAAMC,EAAat/E,EAAGu/E,kBAAmBn8E,GAAU0iB,OAC7C05D,EAAYx/E,EAAGgD,iBAAkBi8E,GAAiBn5D,OAClD25D,EAAcz/E,EAAGgD,iBAAkBk8E,GAAmBp5D,OAE5D,IAAI45D,GAAW,EACXC,GAAkB,EAEtB,IAAkD,IAA7C3/E,EAAG84E,oBAAqB11E,EAAS,OAAoB,CAEzDs8E,GAAW,EAEX,MAAME,EAAetG,GAAiBt5E,EAAIi/E,EAAgB,UACpDY,EAAiBvG,GAAiBt5E,EAAIk/E,EAAkB,YAE9Dh4F,QAAQu1B,MAAO,qCAAsCzc,EAAG8/E,WAAY,QAAS9/E,EAAG84E,oBAAqB11E,EAAS,OAAS,uBAAwBk8E,EAAYM,EAAcC,OAE/I,KAAfP,EAEXp4F,QAAQoK,KAAM,6CAA8CguF,GAEnC,KAAdE,GAAoC,KAAhBC,IAE/BE,GAAkB,GAIdA,IAEJplG,KAAKwlG,YAAc,CAElBL,SAAUA,EAEVJ,WAAYA,EAEZnsB,aAAc,CAEbhsE,IAAKq4F,EACLQ,OAAQ1C,GAITlqB,eAAgB,CAEfjsE,IAAKs4F,EACLO,OAAQzC,KAqBZ,IAAI0C,EAgBA/U,EAmCJ,OAxDAlrE,EAAGiD,aAAcg8E,GACjBj/E,EAAGiD,aAAci8E,GAMjB3kG,KAAKm4F,YAAc,WAQlB,YANwBh/E,IAAnBusF,IAEJA,EAAiB,IAAIpH,GAAe74E,EAAIoD,IAIlC68E,GAQR1lG,KAAKmxF,cAAgB,WAQpB,YAN0Bh4E,IAArBw3E,IAEJA,EA9pBH,SAAkClrE,EAAIoD,GAErC,MAAM8nD,EAAa,GAEb3uE,EAAIyjB,EAAG84E,oBAAqB11E,EAAS,OAE3C,IAAM,IAAIhpB,EAAI,EAAGA,EAAImC,EAAGnC,IAAO,CAE9B,MACM0vB,EADO9J,EAAGkgF,gBAAiB98E,EAAShpB,GACxB0vB,KAIlBohD,EAAYphD,GAAS9J,EAAGuB,kBAAmB6B,EAAS0G,GAIrD,OAAOohD,EA6oBci1B,CAAyBngF,EAAIoD,IAI1C8nE,GAMR3wF,KAAKqxB,QAAU,WAEdu9D,EAAcsD,uBAAwBlyF,MAEtCylB,EAAGogF,cAAeh9E,GAClB7oB,KAAK6oB,aAAU1P,GAMhBnZ,KAAKuvB,KAAOkvC,EAAW0kC,WACvBnjG,KAAKgU,GAAK6qF,KACV7+F,KAAKohG,SAAWA,EAChBphG,KAAK8lG,UAAY,EACjB9lG,KAAK6oB,QAAUA,EACf7oB,KAAK44E,aAAe8rB,EACpB1kG,KAAK64E,eAAiB8rB,EAEf3kG,KAIR,SAAS+lG,GAAetqB,EAAUsR,EAAU/T,EAAYqG,EAAcuP,EAAe7V,GAEpF,MAAMue,EAAW,GAEXhY,EAAWD,EAAaC,SACxB2T,EAAyB5T,EAAa4T,uBACtCa,EAAsBzU,EAAayU,oBACnCP,EAAoBlU,EAAakU,kBACjCG,EAAiBrU,EAAaqU,eAEpC,IAAItsB,EAAYiY,EAAajY,UAE7B,MAAM4+B,EAAY,CACjBC,kBAAmB,QACnBC,qBAAsB,eACtBC,mBAAoB,SACpBv+B,kBAAmB,QACnBw+B,oBAAqB,UACrBC,kBAAmB,QACnBC,iBAAkB,OAClBC,qBAAsB,WACtBC,qBAAsB,WACtBC,mBAAoB,SACpBC,kBAAmB,QACnBC,mBAAoB,SACpBC,eAAgB,SAChBC,eAAgB,SAChBC,eAAgB,UAGXC,EAAiB,CACtB,YAAa,WAAY,yBAA0B,iBAAkB,aAAc,kBACnF,MAAO,cAAe,SAAU,iBAAkB,SAAU,aAAc,iBAAkB,eAC5F,WAAY,mBAAoB,QAAS,cAAe,sBAAuB,UAAW,YAAa,uBAAwB,wBAAyB,eAAgB,wBAAyB,qBAAsB,kBAAmB,cAC1O,eAAgB,eAAgB,cAChC,WAAY,UAAW,eAAgB,iBAAkB,YAAa,gBAAiB,MAAO,SAAU,UACxG,cAAe,kBAAmB,yBAA0B,WAC5D,WAAY,mBAAoB,eAAgB,eAChD,kBAAmB,kBAAmB,qBACtC,eAAgB,iBAAkB,gBAAiB,gBAAiB,oBACpE,qBAAsB,uBAAwB,sBAC9C,mBAAoB,gBAAiB,cAAe,0BACpD,YAAa,cAAe,YAAa,oBAAqB,sBAAuB,eAAgB,YACrG,QAAS,mBAuCV,SAASC,EAA2BztE,GAEnC,IAAIopB,EAiBJ,OAfKppB,GAAOA,EAAIoqB,UAEfhB,EAAWppB,EAAIopB,SAEJppB,GAAOA,EAAIstB,qBAEtBl6C,QAAQoK,KAAM,6HACd4rC,EAAWppB,EAAIgtB,QAAQ5D,UAIvBA,EAAWvM,GAILuM,EA8RR,MAAO,CACNskD,cA3RD,SAAwBloC,EAAU+Z,EAAQouB,EAASxrB,EAAO1tB,GAEzD,MAAMwX,EAAMkW,EAAMlW,IACZ2hC,EAAcpoC,EAASqoC,uBAAyB1rB,EAAMyrB,YAAc,KAEpEh/B,EAAS4kB,EAASnvE,IAAKmhD,EAASoJ,QAAUg/B,GAE1C/E,EAAW4D,EAAWjnC,EAASj/B,MAK/ByjE,EAAWv1C,EAAO2Q,cAvEzB,SAAsB3Q,GAErB,MACMq5C,EADWr5C,EAAO8Q,SACDuoC,MAEvB,GAAKvT,EAEJ,OAAO,KAED,CASN,MAAMwT,EAAkB/T,EAClBgU,EAAkBlkG,KAAK+pB,OAASk6E,EAAkB,IAAO,GAEzD/D,EAAWlgG,KAAK4B,IAAKsiG,EAAiBF,EAAM/kG,QAElD,OAAKihG,EAAW8D,EAAM/kG,QAErBqK,QAAQoK,KAAM,qCAAuCswF,EAAM/kG,OAAS,6BAA+BihG,EAAW,KACvG,GAIDA,GAyCgCiE,CAAax5C,GAAW,EAchE,IAAI4qB,EAAcC,EAElB,GAd4B,OAAvB9Z,EAASqI,YAEbA,EAAYiY,EAAauT,gBAAiB7zB,EAASqI,WAE9CA,IAAcrI,EAASqI,WAE3Bz6D,QAAQoK,KAAM,oCAAqCgoD,EAASqI,UAAW,uBAAwBA,EAAW,aAQvGg7B,EAAW,CAEf,MAAMh6E,EAASyjE,GAAWuW,GAE1BxpB,EAAexwD,EAAOwwD,aACtBC,EAAiBzwD,EAAOywD,oBAIxBD,EAAe7Z,EAAS6Z,aACxBC,EAAiB9Z,EAAS8Z,eAI3B,MAAMgD,EAAsBJ,EAASK,kBA4HrC,MA1HmB,CAElBwD,SAAUA,EAEV8iB,SAAUA,EACVe,WAAYpkC,EAASj/B,KAErB84C,aAAcA,EACdC,eAAgBA,EAChBF,QAAS5Z,EAAS4Z,QAElBuqB,qBAAsD,IAAjCnkC,EAASmkC,oBAC9B1pB,YAAaza,EAASya,YAEtBpS,UAAWA,EAEXg8B,YAAuC,IAA3Bp1C,EAAOoQ,gBACnBilC,iBAA4C,IAA3Br1C,EAAOoQ,iBAAqD,OAAzBpQ,EAAOyjC,cAE3D6R,uBAAwB5P,EACxB6Q,eAA0C,OAAxB1oB,EAAiCmrB,EAA2BnrB,EAAoBt1B,SAAYk1B,EAAS8oB,eACvHhrE,MAAQwlC,EAASxlC,IACjB2qE,YAAa8C,EAA2BjoC,EAASxlC,KACjD0wC,SAAWlL,EAASkL,OACpBk6B,eAAgB6C,EAA2BjoC,EAASkL,QACpD9B,SAAWA,EACXs5B,WAAYt5B,GAAUA,EAAOhmB,QAC7BiiD,eAAgB4C,EAA2B7+B,GAC3C+5B,eAAmB/5B,IAAgBA,EAAOhmB,UAAY9R,IAA+B83B,EAAOhmB,UAAY7R,IACxGu3B,WAAa9I,EAAS8I,SACtBy8B,iBAAkB0C,EAA2BjoC,EAAS8I,UACtDE,QAAUhJ,EAASgJ,MACnB6C,cAAgB7L,EAAS6L,YACzBy5B,oBAAqB2C,EAA2BjoC,EAAS6L,aACzDV,UAAYnL,EAASmL,QACrBE,YAAcrL,EAASqL,UACvBs5B,qBAAsB3kC,EAASsL,gBAAkBtzB,GACjDorD,sBAAuBpjC,EAASsL,gBAAkBvzB,GAClD+yB,eAAiB9K,EAAS8K,aAC1BC,wBAA0B/K,EAAS+K,sBACnCC,qBAAuBhL,EAASgL,mBAChCQ,kBAAoBxL,EAASwL,gBAC7BG,eAAiB3L,EAAS2L,aAC1BC,eAAiB5L,EAAS4L,aAC1B1C,cAAgBlJ,EAASkJ,YACzBC,WAAanJ,EAASmJ,SAEtB4C,cAAgB/L,EAAS+L,YAEzBxB,QAAUvK,EAASuK,MAEnBwvB,kBAAoB/5B,EAAS+5B,gBAE7B1wB,QAASrJ,EAASqJ,QAElBu7B,eAAkB5kC,EAASqL,WAAarL,EAAS4kC,eACjDt+B,aAActG,EAASsG,aACvBwK,aAAc9Q,EAASxlC,KAAUwlC,EAASmL,SAAcnL,EAASqL,WAAgBrL,EAASkJ,aAAkBlJ,EAASmJ,UAAenJ,EAAS6L,aAAkB7L,EAAS2L,cAAmB3L,EAAS4L,cAAmB5L,EAAS8K,cAAmB9K,EAAS+K,uBAA4B/K,EAASgL,oBAAyBhL,EAASwL,iBAAsBxL,EAAS+5B,iBAClW8K,gBAAsB7kC,EAASxlC,KAAUwlC,EAASmL,SAAcnL,EAASqL,WAAgBrL,EAASkJ,aAAkBlJ,EAASmJ,UAAenJ,EAAS6L,aAAkB7L,EAAS2L,cAAmB3L,EAAS4L,cAAmB5L,EAASgL,oBAAyBhL,EAAS+5B,kBAAwB/5B,EAASwL,iBAE3S/E,MAAQA,EACRg+B,OAAQzkC,EAASyG,IACjBi+B,QAAWj+B,GAAOA,EAAIiiC,UAEtB9hC,YAAa5G,EAAS4G,YAEtBoF,gBAAiBhM,EAASgM,gBAC1BkoB,uBAAwBA,EAExBtqB,SAAU5J,EAAS4J,UAAY46B,EAAW,EAC1CA,SAAUA,EACVM,iBAAkB/P,EAElBlrB,aAAc7J,EAAS6J,aACvBuC,aAAcpM,EAASoM,aACvBu8B,gBAAiBjsB,EAASisB,gBAC1BC,gBAAiBlsB,EAASksB,gBAE1B/H,aAAc9mB,EAAO8uB,YAAYtlG,OACjCy9F,eAAgBjnB,EAAO7oE,MAAM3N,OAC7Bu9F,cAAe/mB,EAAO+uB,KAAKvlG,OAC3Bw9F,kBAAmBhnB,EAAOgvB,SAASxlG,OACnC09F,cAAelnB,EAAOivB,KAAKzlG,OAE3B29F,mBAAoBnnB,EAAO0R,qBAAqBloF,OAChD69F,qBAAsBrnB,EAAOuS,eAAe/oF,OAC5C49F,oBAAqBpnB,EAAOiS,cAAczoF,OAE1C+9F,kBAAmBtnB,EAASyb,UAC5B8L,oBAAqBvnB,EAAS0b,gBAE9BjtB,UAAWzI,EAASyI,UAEpBw8B,iBAAkBvoB,EAASusB,UAAUntB,SAAWqsB,EAAQ5kG,OAAS,EACjEg/F,cAAe7lB,EAASusB,UAAUloE,KAElCyuD,YAAaxvB,EAAS4I,WAAa8T,EAAS8S,YAAc7+C,EAC1Du0D,wBAAyBxoB,EAASwoB,wBAElCv8B,mBAAoB3I,EAAS2I,mBAE7BD,UAAW1I,EAAS0I,UACpBq8B,YAAa/kC,EAAS2G,OAASp4B,EAC/By2D,UAAWhlC,EAAS2G,OAASr4B,EAE7Bm3D,kBAA0CrrF,IAA1B4lD,EAASylC,cAA+BzlC,EAASylC,aAEjElrB,oBAAqBva,EAASua,oBAE9B2oB,qBAAsBljC,EAASia,YAAcja,EAASia,WAAWC,YACjEopB,mBAAoBtjC,EAASia,YAAcja,EAASia,WAAWE,UAC/DqpB,qBAAsBxjC,EAASia,YAAcja,EAASia,WAAWG,YACjEspB,0BAA2B1jC,EAASia,YAAcja,EAASia,WAAWI,iBAEtEkpB,2BAA4BhjB,GAAYtG,EAAW+c,IAAK,kBACxDyM,6BAA8BljB,GAAYtG,EAAW+c,IAAK,sBAC1D2M,kCAAmCpjB,GAAYtG,EAAW+c,IAAK,0BAE/D/sB,sBAAuBjK,EAASiK,0BA0HjCi/B,mBAlHD,SAA6BxpC,GAE5B,MAAMtlB,EAAQ,GAad,GAXKslB,EAAW2jC,SAEfjpD,EAAM73C,KAAMm9D,EAAW2jC,WAIvBjpD,EAAM73C,KAAMm9D,EAAWoa,gBACvB1/B,EAAM73C,KAAMm9D,EAAWma,oBAIIz/D,IAAvBslD,EAAWka,QAEf,IAAM,MAAMppD,KAAQkvC,EAAWka,QAE9Bx/B,EAAM73C,KAAMiuB,GACZ4pB,EAAM73C,KAAMm9D,EAAWka,QAASppD,IAMlC,IAAwC,IAAnCkvC,EAAWykC,oBAAgC,CAE/C,IAAM,IAAIrjG,EAAI,EAAGA,EAAIknG,EAAezkG,OAAQzC,IAE3Cs5C,EAAM73C,KAAMm9D,EAAYsoC,EAAgBlnG,KAIzCs5C,EAAM73C,KAAMm6E,EAAS8oB,gBACrBprD,EAAM73C,KAAMm6E,EAAS3X,aAMtB,OAFA3qB,EAAM73C,KAAMm9D,EAAWuK,uBAEhB7vB,EAAM/tC,QA0Eb+sF,YAtED,SAAsBp5B,GAErB,MAAMqjC,EAAW4D,EAAWjnC,EAASj/B,MACrC,IAAIy4C,EAEJ,GAAK6pB,EAAW,CAEf,MAAMh6E,EAASyjE,GAAWuW,GAC1B7pB,EAAWE,GAAc9uE,MAAOye,EAAOmwD,eAIvCA,EAAWxZ,EAASwZ,SAIrB,OAAOA,GAuDP2vB,eAnDD,SAAyBzpC,EAAY2iC,GAEpC,IAAIv4E,EAGJ,IAAM,IAAIhoB,EAAI,EAAGmiC,EAAKs0D,EAASh1F,OAAQzB,EAAImiC,EAAIniC,IAAO,CAErD,MAAMsnG,EAAqB7Q,EAAUz2F,GAErC,GAAKsnG,EAAmB/G,WAAaA,EAAW,CAE/Cv4E,EAAUs/E,IACPt/E,EAAQi9E,UAEX,OAaF,YAPiB3sF,IAAZ0P,IAEJA,EAAU,IAAIs4E,GAAc1lB,EAAU2lB,EAAU3iC,EAAYmwB,GAC5D0I,EAASh2F,KAAMunB,IAITA,GAyBPu/E,eArBD,SAAyBv/E,GAExB,GAA8B,KAAtBA,EAAQi9E,UAAkB,CAGjC,MAAMjmG,EAAIy3F,EAASryE,QAAS4D,GAC5ByuE,EAAUz3F,GAAMy3F,EAAUA,EAASh1F,OAAS,GAC5Cg1F,EAAS+Q,MAGTx/E,EAAQwI,YAaTimE,SAAUA,GAKZ,SAASgR,KAER,IAAIpe,EAAa,IAAI1K,QAmCrB,MAAO,CACN5hE,IAlCD,SAAcowC,GAEb,IAAIz0B,EAAM2wD,EAAWtsE,IAAKowC,GAS1B,YAPa70C,IAARogB,IAEJA,EAAM,GACN2wD,EAAWthF,IAAKolD,EAAQz0B,IAIlBA,GAwBPuH,OApBD,SAAiBktB,GAEhBk8B,EAAWpsE,OAAQkwC,IAmBnBvF,OAfD,SAAiBuF,EAAQ7nD,EAAKxG,GAE7BuqF,EAAWtsE,IAAKowC,GAAU7nD,GAAQxG,GAclC6kD,QAVD,WAEC0lC,EAAa,IAAI1K,UAanB,SAAS+oB,GAAmBhnG,EAAGC,GAE9B,OAAKD,EAAEinG,aAAehnG,EAAEgnG,WAEhBjnG,EAAEinG,WAAahnG,EAAEgnG,WAEbjnG,EAAE+5D,cAAgB95D,EAAE85D,YAExB/5D,EAAE+5D,YAAc95D,EAAE85D,YAEd/5D,EAAEsnB,UAAYrnB,EAAEqnB,QAEpBtnB,EAAEsnB,QAAQ7U,GAAKxS,EAAEqnB,QAAQ7U,GAErBzS,EAAEw9D,SAAS/qD,KAAOxS,EAAEu9D,SAAS/qD,GAEjCzS,EAAEw9D,SAAS/qD,GAAKxS,EAAEu9D,SAAS/qD,GAEvBzS,EAAEpB,IAAMqB,EAAErB,EAEdoB,EAAEpB,EAAIqB,EAAErB,EAIRoB,EAAEyS,GAAKxS,EAAEwS,GAMlB,SAASy0F,GAA0BlnG,EAAGC,GAErC,OAAKD,EAAEinG,aAAehnG,EAAEgnG,WAEhBjnG,EAAEinG,WAAahnG,EAAEgnG,WAEbjnG,EAAE+5D,cAAgB95D,EAAE85D,YAExB/5D,EAAE+5D,YAAc95D,EAAE85D,YAEd/5D,EAAEpB,IAAMqB,EAAErB,EAEdqB,EAAErB,EAAIoB,EAAEpB,EAIRoB,EAAEyS,GAAKxS,EAAEwS,GAOlB,SAAS00F,GAAiBxe,GAEzB,MAAMye,EAAc,GACpB,IAAIC,EAAmB,EAEvB,MAAMC,EAAS,GACThjC,EAAc,GAEdijC,EAAiB,CAAE90F,IAAM,GAW/B,SAAS+0F,EAAmB/6C,EAAQQ,EAAUuQ,EAAUypC,EAAYroG,EAAG6uE,GAEtE,IAAIg6B,EAAaL,EAAaC,GAC9B,MAAMrT,EAAqBrL,EAAWtsE,IAAKmhD,GAkC3C,YAhCoB5lD,IAAf6vF,GAEJA,EAAa,CACZh1F,GAAIg6C,EAAOh6C,GACXg6C,OAAQA,EACRQ,SAAUA,EACVuQ,SAAUA,EACVl2C,QAAS0sE,EAAmB1sE,SAAWigF,EACvCN,WAAYA,EACZltC,YAAatN,EAAOsN,YACpBn7D,EAAGA,EACH6uE,MAAOA,GAGR25B,EAAaC,GAAqBI,IAIlCA,EAAWh1F,GAAKg6C,EAAOh6C,GACvBg1F,EAAWh7C,OAASA,EACpBg7C,EAAWx6C,SAAWA,EACtBw6C,EAAWjqC,SAAWA,EACtBiqC,EAAWngF,QAAU0sE,EAAmB1sE,SAAWigF,EACnDE,EAAWR,WAAaA,EACxBQ,EAAW1tC,YAActN,EAAOsN,YAChC0tC,EAAW7oG,EAAIA,EACf6oG,EAAWh6B,MAAQA,GAIpB45B,IAEOI,EAgDR,MAAO,CAENH,OAAQA,EACRhjC,YAAaA,EAEbovB,KAnGD,WAEC2T,EAAmB,EAEnBC,EAAOvmG,OAAS,EAChBujE,EAAYvjE,OAAS,GA+FrBhB,KAlDD,SAAe0sD,EAAQQ,EAAUuQ,EAAUypC,EAAYroG,EAAG6uE,GAEzD,MAAMg6B,EAAaD,EAAmB/6C,EAAQQ,EAAUuQ,EAAUypC,EAAYroG,EAAG6uE,KAEtD,IAAzBjQ,EAAS8G,YAAuBA,EAAcgjC,GAASvnG,KAAM0nG,IA+C/Dxa,QA3CD,SAAkBxgC,EAAQQ,EAAUuQ,EAAUypC,EAAYroG,EAAG6uE,GAE5D,MAAMg6B,EAAaD,EAAmB/6C,EAAQQ,EAAUuQ,EAAUypC,EAAYroG,EAAG6uE,KAEtD,IAAzBjQ,EAAS8G,YAAuBA,EAAcgjC,GAASra,QAASwa,IAwClEC,OA7BD,WAIC,IAAM,IAAIppG,EAAI+oG,EAAkBl7C,EAAKi7C,EAAYrmG,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEvE,MAAMmpG,EAAaL,EAAa9oG,GAEhC,GAAuB,OAAlBmpG,EAAWh1F,GAAc,MAE9Bg1F,EAAWh1F,GAAK,KAChBg1F,EAAWh7C,OAAS,KACpBg7C,EAAWx6C,SAAW,KACtBw6C,EAAWjqC,SAAW,KACtBiqC,EAAWngF,QAAU,KACrBmgF,EAAWh6B,MAAQ,OAgBpBzsE,KAtCD,SAAe2mG,EAAkBC,GAE3BN,EAAOvmG,OAAS,GAAIumG,EAAOtmG,KAAM2mG,GAAoBX,IACrD1iC,EAAYvjE,OAAS,GAAIujE,EAAYtjE,KAAM4mG,GAAyBV,MAwC3E,SAASW,GAAkBlf,GAE1B,IAAImf,EAAQ,IAAI7pB,QAmChB,MAAO,CACN5hE,IAlCD,SAAc89D,EAAOhwB,GAEpB,MAAM49C,EAAUD,EAAMzrF,IAAK89D,GAC3B,IAAIv5E,EAoBJ,YAlBiBgX,IAAZmwF,GAEJnnG,EAAO,IAAIumG,GAAiBxe,GAC5Bmf,EAAMzgG,IAAK8yE,EAAO,IAAI8D,SACtB6pB,EAAMzrF,IAAK89D,GAAQ9yE,IAAK8iD,EAAQvpD,KAIhCA,EAAOmnG,EAAQ1rF,IAAK8tC,QACNvyC,IAAThX,IAEJA,EAAO,IAAIumG,GAAiBxe,GAC5Bof,EAAQ1gG,IAAK8iD,EAAQvpD,KAMhBA,GAYPqiD,QARD,WAEC6kD,EAAQ,IAAI7pB,UAWd,SAAS+pB,KAER,MAAMzwB,EAAS,GAEf,MAAO,CAENl7D,IAAK,SAAW4rF,GAEf,QAA4BrwF,IAAvB2/D,EAAQ0wB,EAAMx1F,IAElB,OAAO8kE,EAAQ0wB,EAAMx1F,IAItB,IAAIukE,EAEJ,OAASixB,EAAM1pE,MAEd,IAAK,mBACJy4C,EAAW,CACVhiD,UAAW,IAAIo0B,GACfxtC,MAAO,IAAI0rB,IAEZ,MAED,IAAK,YACJ0vC,EAAW,CACV54D,SAAU,IAAIgrC,GACdp0B,UAAW,IAAIo0B,GACfxtC,MAAO,IAAI0rB,GACXj/B,SAAU,EACV+gF,QAAS,EACTC,YAAa,EACbC,MAAO,GAER,MAED,IAAK,aACJtS,EAAW,CACV54D,SAAU,IAAIgrC,GACdxtC,MAAO,IAAI0rB,GACXj/B,SAAU,EACVihF,MAAO,GAER,MAED,IAAK,kBACJtS,EAAW,CACVhiD,UAAW,IAAIo0B,GACf6gC,SAAU,IAAI3iD,GACd4iD,YAAa,IAAI5iD,IAElB,MAED,IAAK,gBACJ0vC,EAAW,CACVp7D,MAAO,IAAI0rB,GACXlpB,SAAU,IAAIgrC,GACd8+C,UAAW,IAAI9+C,GACf++C,WAAY,IAAI/+C,IAQnB,OAFAmuB,EAAQ0wB,EAAMx1F,IAAOukE,EAEdA,IAuEV,IAAIoxB,GAAc,EAElB,SAASC,GAA0BC,EAAQC,GAE1C,OAASA,EAAO3uC,WAAa,EAAI,IAAQ0uC,EAAO1uC,WAAa,EAAI,GAIlE,SAAS4uC,GAAa/wB,EAAYqG,GAEjC,MAAM7iE,EAAQ,IAAI+sF,GAEZS,EA3EP,WAEC,MAAMlxB,EAAS,GAEf,MAAO,CAENl7D,IAAK,SAAW4rF,GAEf,QAA4BrwF,IAAvB2/D,EAAQ0wB,EAAMx1F,IAElB,OAAO8kE,EAAQ0wB,EAAMx1F,IAItB,IAAIukE,EAEJ,OAASixB,EAAM1pE,MAEd,IAAK,mBASL,IAAK,YACJy4C,EAAW,CACV6R,WAAY,EACZC,iBAAkB,EAClBC,aAAc,EACdC,cAAe,IAAIvuC,IAEpB,MAED,IAAK,aACJu8B,EAAW,CACV6R,WAAY,EACZC,iBAAkB,EAClBC,aAAc,EACdC,cAAe,IAAIvuC,GACnBmvC,iBAAkB,EAClBC,gBAAiB,KAUpB,OAFAtS,EAAQ0wB,EAAMx1F,IAAOukE,EAEdA,IAsBW0xB,GAEdjd,EAAQ,CAEb3pC,QAAS,EAET6mD,KAAM,CACLC,mBAAqB,EACrBC,aAAe,EACfC,YAAc,EACdC,gBAAkB,EAClBC,YAAc,EAEdC,uBAAyB,EACzBC,iBAAmB,EACnBC,gBAAkB,GAGnBC,QAAS,CAAE,EAAG,EAAG,GACjBC,MAAO,GACPhD,YAAa,GACbiD,kBAAmB,GACnBrgB,qBAAsB,GACtBC,wBAAyB,GACzBod,KAAM,GACNiD,WAAY,GACZ/f,cAAe,GACfC,iBAAkB,GAClB8c,SAAU,GACViD,aAAc,KACdC,aAAc,KACd/6F,MAAO,GACPg7F,YAAa,GACb5f,eAAgB,GAChBC,kBAAmB,GACnByc,KAAM,IAIP,IAAM,IAAIloG,EAAI,EAAGA,EAAI,EAAGA,IAAOmtF,EAAM4d,MAAMtpG,KAAM,IAAIqpD,IAErD,MAAMugD,EAAU,IAAIvgD,GACd1J,EAAU,IAAIiT,GACdi3C,EAAW,IAAIj3C,GAmVrB,MAAO,CACNk8B,MAlVD,SAAgBtX,GAEf,IAAIv0E,EAAI,EAAGukC,EAAI,EAAGtnC,EAAI,EAEtB,IAAM,IAAI3B,EAAI,EAAGA,EAAI,EAAGA,IAAOmtF,EAAM4d,MAAO/qG,GAAI+I,IAAK,EAAG,EAAG,GAE3D,IAAIuhG,EAAoB,EACpBC,EAAc,EACdC,EAAa,EACbC,EAAiB,EACjBC,EAAa,EAEbC,EAAwB,EACxBC,EAAkB,EAClBC,EAAiB,EAErB5xB,EAAOv2E,KAAMqnG,IAEb,IAAM,IAAI/pG,EAAI,EAAGwO,EAAIyqE,EAAOx2E,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAM2pG,EAAQ1wB,EAAQj5E,GAEhBsd,EAAQqsF,EAAMrsF,MACdiuF,EAAY5B,EAAM4B,UAClBxhG,EAAW4/F,EAAM5/F,SAEjBo+F,EAAcwB,EAAM3c,QAAU2c,EAAM3c,OAAOtzD,IAAQiwE,EAAM3c,OAAOtzD,IAAIgtB,QAAU,KAEpF,GAAKijD,EAAM6B,eAEV9mG,GAAK4Y,EAAM5Y,EAAI6mG,EACftiE,GAAK3rB,EAAM2rB,EAAIsiE,EACf5pG,GAAK2b,EAAM3b,EAAI4pG,OAET,GAAK5B,EAAM8B,aAEjB,IAAM,IAAI7lG,EAAI,EAAGA,EAAI,EAAGA,IAEvBunF,EAAM4d,MAAOnlG,GAAI62C,gBAAiBktD,EAAM+B,GAAGC,aAAc/lG,GAAK2lG,QAIzD,GAAK5B,EAAMiC,mBAAqB,CAEtC,MAAMlzB,EAAW/7D,EAAMoB,IAAK4rF,GAI5B,GAFAjxB,EAASp7D,MAAM2F,KAAM0mF,EAAMrsF,OAAQvS,eAAgB4+F,EAAM4B,WAEpD5B,EAAMruC,WAAa,CAEvB,MAAM0xB,EAAS2c,EAAM3c,OAEf6e,EAAiB1B,EAAYpsF,IAAK4rF,GAExCkC,EAAethB,WAAayC,EAAO8e,KACnCD,EAAerhB,iBAAmBwC,EAAO+e,WACzCF,EAAephB,aAAeuC,EAAO5yE,OACrCyxF,EAAenhB,cAAgBsC,EAAOgf,QAEtC7e,EAAM6d,kBAAmBV,GAAsBuB,EAC/C1e,EAAMxC,qBAAsB2f,GAAsBnC,EAClDhb,EAAMvC,wBAAyB0f,GAAsBX,EAAM3c,OAAOrrC,OAElEgpD,IAIDxd,EAAM4a,YAAauC,GAAsB5xB,EAEzC4xB,SAEM,GAAKX,EAAMsC,YAAc,CAE/B,MAAMvzB,EAAW/7D,EAAMoB,IAAK4rF,GAW5B,GATAjxB,EAAS54D,SAASotC,sBAAuBy8C,EAAMz9C,aAE/CwsB,EAASp7D,MAAM2F,KAAM3F,GAAQvS,eAAgBwgG,GAC7C7yB,EAAS3uE,SAAWA,EAEpB2uE,EAASoS,QAAUtnF,KAAKqH,IAAK8+F,EAAMx/F,OACnCuuE,EAASqS,YAAcvnF,KAAKqH,IAAK8+F,EAAMx/F,OAAU,EAAIw/F,EAAMuC,WAC3DxzB,EAASsS,MAAQ2e,EAAM3e,MAElB2e,EAAMruC,WAAa,CAEvB,MAAM0xB,EAAS2c,EAAM3c,OAEf6e,EAAiB1B,EAAYpsF,IAAK4rF,GAExCkC,EAAethB,WAAayC,EAAO8e,KACnCD,EAAerhB,iBAAmBwC,EAAO+e,WACzCF,EAAephB,aAAeuC,EAAO5yE,OACrCyxF,EAAenhB,cAAgBsC,EAAOgf,QAEtC7e,EAAM8d,WAAYT,GAAeqB,EACjC1e,EAAMjC,cAAesf,GAAerC,EACpChb,EAAMhC,iBAAkBqf,GAAeb,EAAM3c,OAAOrrC,OAEpDkpD,IAID1d,EAAM6a,KAAMwC,GAAe9xB,EAE3B8xB,SAEM,GAAKb,EAAMwC,gBAAkB,CAEnC,MAAMzzB,EAAW/7D,EAAMoB,IAAK4rF,GAM5BjxB,EAASp7D,MAAM2F,KAAM3F,GAAQvS,eAAgBwgG,GAE7C7yB,EAASkxB,UAAU7gG,IAAmB,GAAd4gG,EAAMl7F,MAAa,EAAK,GAChDiqE,EAASmxB,WAAW9gG,IAAK,EAAoB,GAAf4gG,EAAMj7F,OAAc,GAElDy+E,EAAM8a,SAAUwC,GAAmB/xB,EAEnC+xB,SAEM,GAAKd,EAAMyC,aAAe,CAEhC,MAAM1zB,EAAW/7D,EAAMoB,IAAK4rF,GAM5B,GAJAjxB,EAASp7D,MAAM2F,KAAM0mF,EAAMrsF,OAAQvS,eAAgB4+F,EAAM4B,WACzD7yB,EAAS3uE,SAAW4/F,EAAM5/F,SAC1B2uE,EAASsS,MAAQ2e,EAAM3e,MAElB2e,EAAMruC,WAAa,CAEvB,MAAM0xB,EAAS2c,EAAM3c,OAEf6e,EAAiB1B,EAAYpsF,IAAK4rF,GAExCkC,EAAethB,WAAayC,EAAO8e,KACnCD,EAAerhB,iBAAmBwC,EAAO+e,WACzCF,EAAephB,aAAeuC,EAAO5yE,OACrCyxF,EAAenhB,cAAgBsC,EAAOgf,QACtCH,EAAevgB,iBAAmB0B,EAAOnhC,OAAO2M,KAChDqzC,EAAetgB,gBAAkByB,EAAOnhC,OAAO4M,IAE/C00B,EAAMie,YAAab,GAAgBsB,EACnC1e,EAAM3B,eAAgB+e,GAAgBpC,EACtChb,EAAM1B,kBAAmB8e,GAAgBZ,EAAM3c,OAAOrrC,OAEtDipD,IAIDzd,EAAM/8E,MAAOm6F,GAAgB7xB,EAE7B6xB,SAEM,GAAKZ,EAAM0C,kBAAoB,CAErC,MAAM3zB,EAAW/7D,EAAMoB,IAAK4rF,GAE5BjxB,EAASiT,SAAS1oE,KAAM0mF,EAAMrsF,OAAQvS,eAAgBwgG,GACtD7yB,EAASkT,YAAY3oE,KAAM0mF,EAAM/d,aAAc7gF,eAAgBwgG,GAE/Dpe,EAAM+a,KAAMwC,GAAehyB,EAE3BgyB,KAMGD,EAAiB,IAEhBjrB,EAAaC,WAWqC,IAAjDtG,EAAW+c,IAAK,6BAPrB/I,EAAM+d,aAAeriB,GAAYyjB,YACjCnf,EAAMge,aAAetiB,GAAY0jB,cAWiC,IAAtDpzB,EAAW+c,IAAK,kCAE3B/I,EAAM+d,aAAeriB,GAAY2jB,WACjCrf,EAAMge,aAAetiB,GAAY4jB,YAIjC3/F,QAAQu1B,MAAO,gFAQlB8qD,EAAM2d,QAAS,GAAMpmG,EACrByoF,EAAM2d,QAAS,GAAM7hE,EACrBkkD,EAAM2d,QAAS,GAAMnpG,EAErB,MAAM0oG,EAAOld,EAAMkd,KAEdA,EAAKC,oBAAsBA,GAC/BD,EAAKE,cAAgBA,GACrBF,EAAKG,aAAeA,GACpBH,EAAKI,iBAAmBA,GACxBJ,EAAKK,aAAeA,GACpBL,EAAKM,wBAA0BA,GAC/BN,EAAKO,kBAAoBA,GACzBP,EAAKQ,iBAAmBA,IAExB1d,EAAM4a,YAAYtlG,OAAS6nG,EAC3Bnd,EAAM6a,KAAKvlG,OAAS+nG,EACpBrd,EAAM8a,SAASxlG,OAASgoG,EACxBtd,EAAM/8E,MAAM3N,OAAS8nG,EACrBpd,EAAM+a,KAAKzlG,OAASioG,EAEpBvd,EAAM6d,kBAAkBvoG,OAASkoG,EACjCxd,EAAMxC,qBAAqBloF,OAASkoG,EACpCxd,EAAMie,YAAY3oG,OAASmoG,EAC3Bzd,EAAM3B,eAAe/oF,OAASmoG,EAC9Bzd,EAAM8d,WAAWxoG,OAASooG,EAC1B1d,EAAMjC,cAAczoF,OAASooG,EAC7B1d,EAAMvC,wBAAwBnoF,OAASkoG,EACvCxd,EAAM1B,kBAAkBhpF,OAASmoG,EACjCzd,EAAMhC,iBAAiB1oF,OAASooG,EAEhCR,EAAKC,kBAAoBA,EACzBD,EAAKE,YAAcA,EACnBF,EAAKG,WAAaA,EAClBH,EAAKI,eAAiBA,EACtBJ,EAAKK,WAAaA,EAElBL,EAAKM,sBAAwBA,EAC7BN,EAAKO,gBAAkBA,EACvBP,EAAKQ,eAAiBA,EAEtB1d,EAAM3pC,QAAUsmD,OA6FjB4C,UAvFD,SAAoBzzB,EAAQptB,GAE3B,IAAIy+C,EAAoB,EACpBC,EAAc,EACdC,EAAa,EACbC,EAAiB,EACjBC,EAAa,EAEjB,MAAMxV,EAAarpC,EAAOC,mBAE1B,IAAM,IAAI9rD,EAAI,EAAGwO,EAAIyqE,EAAOx2E,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAM2pG,EAAQ1wB,EAAQj5E,GAEtB,GAAK2pG,EAAMiC,mBAAqB,CAE/B,MAAMlzB,EAAWyU,EAAM4a,YAAauC,GAEpC5xB,EAAShiD,UAAUw2B,sBAAuBy8C,EAAMz9C,aAChDm/C,EAAQn+C,sBAAuBy8C,EAAMtwD,OAAO6S,aAC5CwsB,EAAShiD,UAAUhtB,IAAK2hG,GACxB3yB,EAAShiD,UAAUy1B,mBAAoB+oC,GAEvCoV,SAEM,GAAKX,EAAMsC,YAAc,CAE/B,MAAMvzB,EAAWyU,EAAM6a,KAAMwC,GAE7B9xB,EAAS54D,SAASotC,sBAAuBy8C,EAAMz9C,aAC/CwsB,EAAS54D,SAASmlC,aAAciwC,GAEhCxc,EAAShiD,UAAUw2B,sBAAuBy8C,EAAMz9C,aAChDm/C,EAAQn+C,sBAAuBy8C,EAAMtwD,OAAO6S,aAC5CwsB,EAAShiD,UAAUhtB,IAAK2hG,GACxB3yB,EAAShiD,UAAUy1B,mBAAoB+oC,GAEvCsV,SAEM,GAAKb,EAAMwC,gBAAkB,CAEnC,MAAMzzB,EAAWyU,EAAM8a,SAAUwC,GAEjC/xB,EAAS54D,SAASotC,sBAAuBy8C,EAAMz9C,aAC/CwsB,EAAS54D,SAASmlC,aAAciwC,GAGhCoW,EAASxsD,WACTsC,EAAQn+B,KAAM0mF,EAAMz9C,aACpB9K,EAAQ7B,YAAa21C,GACrBoW,EAASv2C,gBAAiB3T,GAE1Bs3B,EAASkxB,UAAU7gG,IAAmB,GAAd4gG,EAAMl7F,MAAa,EAAK,GAChDiqE,EAASmxB,WAAW9gG,IAAK,EAAoB,GAAf4gG,EAAMj7F,OAAc,GAElDgqE,EAASkxB,UAAU3kD,aAAcqmD,GACjC5yB,EAASmxB,WAAW5kD,aAAcqmD,GAElCb,SAEM,GAAKd,EAAMyC,aAAe,CAEhC,MAAM1zB,EAAWyU,EAAM/8E,MAAOm6F,GAE9B7xB,EAAS54D,SAASotC,sBAAuBy8C,EAAMz9C,aAC/CwsB,EAAS54D,SAASmlC,aAAciwC,GAEhCqV,SAEM,GAAKZ,EAAM0C,kBAAoB,CAErC,MAAM3zB,EAAWyU,EAAM+a,KAAMwC,GAE7BhyB,EAAShiD,UAAUw2B,sBAAuBy8C,EAAMz9C,aAChDwsB,EAAShiD,UAAUy1B,mBAAoB+oC,GACvCxc,EAAShiD,UAAUrnB,YAEnBq7F,OAWFvd,MAAOA,GAKT,SAASwf,GAAkBxzB,EAAYqG,GAEtC,MAAMvG,EAAS,IAAIixB,GAAa/wB,EAAYqG,GAEtCotB,EAAc,GACdC,EAAe,GAwCrB,MAAO,CACNzX,KAvCD,WAECwX,EAAYnqG,OAAS,EACrBoqG,EAAapqG,OAAS,GAqCtB0qF,MATa,CACbyf,YAAaA,EACbC,aAAcA,EAEd5zB,OAAQA,GAMR6zB,YAtBD,WAEC7zB,EAAOsX,MAAOqc,IAqBdG,gBAjBD,SAA0BlhD,GAEzBotB,EAAOyzB,UAAWE,EAAa/gD,IAiB/BmhD,UArCD,SAAoBrD,GAEnBiD,EAAYnrG,KAAMkoG,IAoClBsD,WAhCD,SAAqBC,GAEpBL,EAAaprG,KAAMyrG,KAmCrB,SAASC,GAAmBh0B,EAAYqG,GAEvC,IAAI4tB,EAAe,IAAIztB,QAqCvB,MAAO,CACN5hE,IApCD,SAAc89D,EAAOwxB,EAAkB,GAEtC,IAAIC,EAuBJ,OArBmC,IAA9BF,EAAalX,IAAKra,IAEtByxB,EAAc,IAAIX,GAAkBxzB,EAAYqG,GAChD4tB,EAAarkG,IAAK8yE,EAAO,IACzBuxB,EAAarvF,IAAK89D,GAAQp6E,KAAM6rG,IAI3BD,GAAmBD,EAAarvF,IAAK89D,GAAQp5E,QAEjD6qG,EAAc,IAAIX,GAAkBxzB,EAAYqG,GAChD4tB,EAAarvF,IAAK89D,GAAQp6E,KAAM6rG,IAIhCA,EAAcF,EAAarvF,IAAK89D,GAASwxB,GAMpCC,GAYP3oD,QARD,WAECyoD,EAAe,IAAIztB,UA6BrB,SAASymB,GAAmBxnC,GAE3B8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,oBAEZ9/B,KAAKwkG,aAAe5tD,GAEpB52C,KAAK2oE,UAAW,EAChB3oE,KAAK4oE,cAAe,EAEpB5oE,KAAKu5B,IAAM,KAEXv5B,KAAKkoE,SAAW,KAEhBloE,KAAKuqE,gBAAkB,KACvBvqE,KAAKwqE,kBAAoB,EACzBxqE,KAAKyqE,iBAAmB,EAExBzqE,KAAKuoE,WAAY,EACjBvoE,KAAKwoE,mBAAqB,EAE1BxoE,KAAKwlE,KAAM,EAEXxlE,KAAK6oE,UAAWpK,GAsDjB,SAASynC,GAAsBznC,GAE9B8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,uBAEZ9/B,KAAK0sF,kBAAoB,IAAI/hC,GAC7B3qD,KAAK2sF,aAAe,EACpB3sF,KAAK4sF,YAAc,IAEnB5sF,KAAK2oE,UAAW,EAChB3oE,KAAK4oE,cAAe,EAEpB5oE,KAAKu5B,IAAM,KAEXv5B,KAAKkoE,SAAW,KAEhBloE,KAAKuqE,gBAAkB,KACvBvqE,KAAKwqE,kBAAoB,EACzBxqE,KAAKyqE,iBAAmB,EAExBzqE,KAAKwlE,KAAM,EAEXxlE,KAAK6oE,UAAWpK,GAzEjBwnC,GAAkBptD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACtDotD,GAAkBptD,UAAU3yC,YAAc+/F,GAE1CA,GAAkBptD,UAAUu0D,qBAAsB,EAElDnH,GAAkBptD,UAAU/1B,KAAO,SAAW+gC,GAoB7C,OAlBA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKwkG,aAAe3gD,EAAO2gD,aAE3BxkG,KAAK2oE,SAAW9kB,EAAO8kB,SACvB3oE,KAAK4oE,aAAe/kB,EAAO+kB,aAE3B5oE,KAAKu5B,IAAMsqB,EAAOtqB,IAElBv5B,KAAKkoE,SAAWrkB,EAAOqkB,SAEvBloE,KAAKuqE,gBAAkB1mB,EAAO0mB,gBAC9BvqE,KAAKwqE,kBAAoB3mB,EAAO2mB,kBAChCxqE,KAAKyqE,iBAAmB5mB,EAAO4mB,iBAE/BzqE,KAAKuoE,UAAY1kB,EAAO0kB,UACxBvoE,KAAKwoE,mBAAqB3kB,EAAO2kB,mBAE1BxoE,MAoDRkmG,GAAqBrtD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACzDqtD,GAAqBrtD,UAAU3yC,YAAcggG,GAE7CA,GAAqBrtD,UAAUw0D,wBAAyB,EAExDnH,GAAqBrtD,UAAU/1B,KAAO,SAAW+gC,GAmBhD,OAjBA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAK0sF,kBAAkB5pE,KAAM+gC,EAAO6oC,mBACpC1sF,KAAK2sF,aAAe9oC,EAAO8oC,aAC3B3sF,KAAK4sF,YAAc/oC,EAAO+oC,YAE1B5sF,KAAK2oE,SAAW9kB,EAAO8kB,SACvB3oE,KAAK4oE,aAAe/kB,EAAO+kB,aAE3B5oE,KAAKu5B,IAAMsqB,EAAOtqB,IAElBv5B,KAAKkoE,SAAWrkB,EAAOqkB,SAEvBloE,KAAKuqE,gBAAkB1mB,EAAO0mB,gBAC9BvqE,KAAKwqE,kBAAoB3mB,EAAO2mB,kBAChCxqE,KAAKyqE,iBAAmB5mB,EAAO4mB,iBAExBzqE,MAQR,SAASstG,GAAgBC,EAAWC,EAAUpa,GAE7C,IAAIqa,EAAW,IAAI1wB,GAEnB,MAAM2wB,EAAiB,IAAI1xD,GAC1B2xD,EAAgB,IAAI3xD,GAEpB4xD,EAAY,IAAIjpD,GAEhBkpD,EAAkB,GAClBC,EAAqB,GAErBC,EAAiB,GAEZ7mC,EAAa,CAAE,EAAG75B,EAAU,EAAGD,EAAW,EAAGE,GAE7C0gE,EAAyB,IAAIt1B,GAAgB,CAElDC,QAAS,CACRs1B,YAAa,EAAM,EACnBC,iBAAkB,EAAM,GAGzB31B,SAAU,CACT41B,YAAa,CAAExuG,MAAO,MACtByuG,WAAY,CAAEzuG,MAAO,IAAIq8C,IACzB/hC,OAAQ,CAAEta,MAAO,IAGlBi5E,aA/Ba,2DAiCbC,eAnCa,igCAuCRw1B,EAA2BL,EAAuBrkG,QACxD0kG,EAAyB11B,QAAQ21B,gBAAkB,EAEnD,MAAMC,EAAgB,IAAI79B,GAC1B69B,EAAchwF,aACb,WACA,IAAIktD,GACH,IAAI/kD,aAAc,EAAI,GAAK,EAAG,GAAK,GAAK,EAAG,IAAO,EAAG,EAAG,KACxD,IAIF,MAAM8nF,EAAiB,IAAIp5B,GAAMm5B,EAAeP,GAE1Cj3B,EAAQ/2E,KA4Id,SAASyuG,EAAS5hB,EAAQnhC,GAEzB,MAAM8C,EAAWg/C,EAAS/kD,OAAQ+lD,GAIlCR,EAAuBz1B,SAAS41B,YAAYxuG,MAAQktF,EAAOtzD,IAAIgtB,QAC/DynD,EAAuBz1B,SAAS61B,WAAWzuG,MAAQktF,EAAOgf,QAC1DmC,EAAuBz1B,SAASt+D,OAAOta,MAAQktF,EAAO5yE,OACtDszF,EAAUxxB,gBAAiB8Q,EAAO6hB,SAClCnB,EAAUvuF,QACVuuF,EAAUoB,mBAAoBjjD,EAAQ,KAAM8C,EAAUw/C,EAAwBQ,EAAgB,MAI9FH,EAAyB91B,SAAS41B,YAAYxuG,MAAQktF,EAAO6hB,QAAQnoD,QACrE8nD,EAAyB91B,SAAS61B,WAAWzuG,MAAQktF,EAAOgf,QAC5DwC,EAAyB91B,SAASt+D,OAAOta,MAAQktF,EAAO5yE,OACxDszF,EAAUxxB,gBAAiB8Q,EAAOtzD,KAClCg0E,EAAUvuF,QACVuuF,EAAUoB,mBAAoBjjD,EAAQ,KAAM8C,EAAU6/C,EAA0BG,EAAgB,MAIjG,SAASI,EAAyBC,EAAaC,EAAaC,GAE3D,MAAM5iG,EAAQ0iG,GAAe,EAAIC,GAAe,EAAIC,GAAiB,EAErE,IAAIhwC,EAAW8uC,EAAiB1hG,GAiBhC,YAfkBgN,IAAb4lD,IAEJA,EAAW,IAAIknC,GAAmB,CAEjCzB,aAAc3tD,GAEd+xB,aAAcimC,EACdlmC,SAAUmmC,IAIXjB,EAAiB1hG,GAAU4yD,GAIrBA,EAIR,SAASiwC,EAA4BH,EAAaC,EAAaC,GAE9D,MAAM5iG,EAAQ0iG,GAAe,EAAIC,GAAe,EAAIC,GAAiB,EAErE,IAAIhwC,EAAW+uC,EAAoB3hG,GAenC,YAbkBgN,IAAb4lD,IAEJA,EAAW,IAAImnC,GAAsB,CAEpCt9B,aAAcimC,EACdlmC,SAAUmmC,IAIXhB,EAAoB3hG,GAAU4yD,GAIxBA,EAIR,SAASkwC,EAAkBjhD,EAAQQ,EAAUuQ,EAAUyqC,EAAOre,EAAkBC,EAAiBtrD,GAEhG,IAAI9sB,EAAS,KAETk8F,EAAqBN,EACrBO,EAAiBnhD,EAAOohD,oBAS5B,IAP4B,IAAvB5F,EAAMyC,eAEViD,EAAqBF,EACrBG,EAAiBnhD,EAAOqhD,6BAIDl2F,IAAnBg2F,EAA+B,CAEnC,IAAIN,GAAc,GAEa,IAA1B9vC,EAAS6J,eAEbimC,EAAcrgD,EAASoiB,iBAAmBpiB,EAASoiB,gBAAgBjxD,UAAY6uC,EAASoiB,gBAAgBjxD,SAASrd,OAAS,GAI3H,IAAIwsG,GAAc,GAEY,IAAzB9gD,EAAO2Q,iBAEgB,IAAtBI,EAAS4J,SAEbmmC,GAAc,EAIdniG,QAAQoK,KAAM,+EAAgFi3C,IAQhGh7C,EAASk8F,EAAoBL,EAAaC,GAFO,IAA3B9gD,EAAOoQ,sBAM7BprD,EAASm8F,EAIV,GAAK5B,EAAUpZ,uBACY,IAAzBp1B,EAASkI,aAC0B,IAAnClI,EAASgI,eAAezkE,OAAe,CAKxC,MAAMgtG,EAAOt8F,EAAO4vC,KAAM2sD,EAAOxwC,EAASnc,KAE1C,IAAI4sD,EAAsBzB,EAAgBuB,QAEbn2F,IAAxBq2F,IAEJA,EAAsB,GACtBzB,EAAgBuB,GAASE,GAI1B,IAAIC,EAAiBD,EAAqBD,QAElBp2F,IAAnBs2F,IAEJA,EAAiBz8F,EAAOrJ,QACxB6lG,EAAqBD,GAASE,GAI/Bz8F,EAASy8F,EAgCV,OA5BAz8F,EAAOzM,QAAUw4D,EAASx4D,QAC1ByM,EAAOu1D,UAAYxJ,EAASwJ,UAI3Bv1D,EAAO0yD,KAFH5lC,IAASqN,EAE2B,OAAxB4xB,EAASmI,WAAwBnI,EAASmI,WAAanI,EAAS2G,KAIxC,OAAxB3G,EAASmI,WAAwBnI,EAASmI,WAAaA,EAAYnI,EAAS2G,MAI7F1yD,EAAOi0D,YAAclI,EAASkI,YAC9Bj0D,EAAO+zD,eAAiBhI,EAASgI,eACjC/zD,EAAOg0D,iBAAmBjI,EAASiI,iBAEnCh0D,EAAOw1D,mBAAqBzJ,EAASyJ,mBACrCx1D,EAAOg4D,UAAYjM,EAASiM,WAEA,IAAvBw+B,EAAMyC,eAA2D,IAAlCj5F,EAAOq6F,yBAE1Cr6F,EAAO05E,kBAAkB3/B,sBAAuBy8C,EAAMz9C,aACtD/4C,EAAO25E,aAAexB,EACtBn4E,EAAO45E,YAAcxB,GAIfp4E,EAIR,SAAS08F,EAAc1hD,EAAQtC,EAAQikD,EAAcnG,EAAO1pE,GAE3D,IAAwB,IAAnBkuB,EAAOznD,QAAoB,OAIhC,GAFgBynD,EAAO2L,OAAO/X,KAAM8J,EAAOiO,UAEzB3L,EAAOsQ,QAAUtQ,EAAOuQ,QAAUvQ,EAAOwQ,YAEnDxQ,EAAOmN,YAAgBnN,EAAOoN,eAAiBt7B,IAASqN,MAAwB6gB,EAAOqN,eAAiBoyC,EAASpvB,iBAAkBrwB,IAAa,CAEtJA,EAAO+M,gBAAgB5b,iBAAkBwwD,EAAahkD,mBAAoBqC,EAAOjC,aAEjF,MAAMyC,EAAWg/C,EAAS/kD,OAAQuF,GAC5B+Q,EAAW/Q,EAAO+Q,SAExB,GAAKnpD,MAAMC,QAASkpD,GAAa,CAEhC,MAAMuP,EAAS9f,EAAS8f,OAExB,IAAM,IAAIrxD,EAAI,EAAG2yF,EAAKthC,EAAOhsE,OAAQ2a,EAAI2yF,EAAI3yF,IAAO,CAEnD,MAAM+xD,EAAQV,EAAQrxD,GAChBg5D,EAAgBlX,EAAUiQ,EAAM7J,eAEtC,GAAK8Q,GAAiBA,EAAc1vE,QAAU,CAE7C,MAAMspG,EAAgBZ,EAAkBjhD,EAAQQ,EAAUynB,EAAeuzB,EAAOmG,EAAat3C,KAAMs3C,EAAar3C,IAAKx4B,GAErHytE,EAAUoB,mBAAoBgB,EAAc,KAAMnhD,EAAUqhD,EAAe7hD,EAAQghB,UAM/E,GAAKjQ,EAASx4D,QAAU,CAE9B,MAAMspG,EAAgBZ,EAAkBjhD,EAAQQ,EAAUuQ,EAAUyqC,EAAOmG,EAAat3C,KAAMs3C,EAAar3C,IAAKx4B,GAEhHytE,EAAUoB,mBAAoBgB,EAAc,KAAMnhD,EAAUqhD,EAAe7hD,EAAQ,OAQtF,MAAMa,EAAWb,EAAOa,SAExB,IAAM,IAAIhvD,EAAI,EAAGwO,EAAIwgD,EAASvsD,OAAQzC,EAAIwO,EAAGxO,IAE5C6vG,EAAc7gD,EAAUhvD,GAAK6rD,EAAQikD,EAAcnG,EAAO1pE,GArX5D9/B,KAAK66E,SAAU,EAEf76E,KAAK8vG,YAAa,EAClB9vG,KAAKuxE,aAAc,EAEnBvxE,KAAK8/B,KAAOmN,EAEZjtC,KAAKg8E,OAAS,SAAWlD,EAAQ4C,EAAOhwB,GAEvC,IAAuB,IAAlBqrB,EAAM8D,QAAoB,OAC/B,IAA0B,IAArB9D,EAAM+4B,aAA8C,IAAtB/4B,EAAMxF,YAAwB,OAEjE,GAAuB,IAAlBuH,EAAOx2E,OAAe,OAE3B,MAAMu5E,EAAsB0xB,EAAUzxB,kBAChCi0B,EAAiBxC,EAAUyC,oBAC3BC,EAAoB1C,EAAU2C,uBAE9BC,EAAS5C,EAAUvgB,MAGzBmjB,EAAOC,YAAa3iE,GACpB0iE,EAAO5wB,QAAQpiE,MAAMqwE,SAAU,EAAG,EAAG,EAAG,GACxC2iB,EAAO5wB,QAAQ5I,MAAM05B,SAAS,GAC9BF,EAAOG,gBAAgB,GAIvB,IAAM,IAAIzwG,EAAI,EAAG6tD,EAAKorB,EAAOx2E,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEnD,MAAM2pG,EAAQ1wB,EAAQj5E,GAChBgtF,EAAS2c,EAAM3c,OAErB,QAAgB1zE,IAAX0zE,EAAuB,CAE3BlgF,QAAQoK,KAAM,wBAAyByyF,EAAO,kBAC9C,SAID,IAA2B,IAAtB3c,EAAOijB,aAA+C,IAAvBjjB,EAAOtb,YAAwB,SAEnEm8B,EAAe5qF,KAAM+pE,EAAOgf,SAE5B,MAAM0E,EAAqB1jB,EAAO2jB,kBA0BlC,GAxBA9C,EAAejxD,SAAU8zD,GAEzB5C,EAAc7qF,KAAM+pE,EAAOgf,UAEtB6B,EAAe5tG,EAAIszF,GAAkBsa,EAAe3tG,EAAIqzF,KAEvDsa,EAAe5tG,EAAIszF,IAEvBua,EAAc7tG,EAAIuD,KAAK+pB,MAAOgmE,EAAiBmd,EAAmBzwG,GAClE4tG,EAAe5tG,EAAI6tG,EAAc7tG,EAAIywG,EAAmBzwG,EACxD+sF,EAAOgf,QAAQ/rG,EAAI6tG,EAAc7tG,GAI7B4tG,EAAe3tG,EAAIqzF,IAEvBua,EAAc5tG,EAAIsD,KAAK+pB,MAAOgmE,EAAiBmd,EAAmBxwG,GAClE2tG,EAAe3tG,EAAI4tG,EAAc5tG,EAAIwwG,EAAmBxwG,EACxD8sF,EAAOgf,QAAQ9rG,EAAI4tG,EAAc5tG,IAMf,OAAf8sF,EAAOtzD,MAAkBszD,EAAO4jB,oBAAsBzwG,KAAK8/B,OAASqN,EAAe,CAEvF,MAAMujE,EAAO,CAAEluD,UAAWzR,GAAcwR,UAAWxR,GAAc0R,OAAQvQ,IAEzE26C,EAAOtzD,IAAM,IAAI6sB,GAAmBsnD,EAAe5tG,EAAG4tG,EAAe3tG,EAAG2wG,GACxE7jB,EAAOtzD,IAAIgtB,QAAQh3B,KAAOi6E,EAAMj6E,KAAO,aAEvCs9D,EAAO6hB,QAAU,IAAItoD,GAAmBsnD,EAAe5tG,EAAG4tG,EAAe3tG,EAAG2wG,GAE5E7jB,EAAOnhC,OAAOsuB,yBAIf,GAAoB,OAAf6S,EAAOtzD,IAAe,CAE1B,MAAMm3E,EAAO,CAAEluD,UAAW9R,GAAe6R,UAAW7R,GAAe+R,OAAQvQ,IAE3E26C,EAAOtzD,IAAM,IAAI6sB,GAAmBsnD,EAAe5tG,EAAG4tG,EAAe3tG,EAAG2wG,GACxE7jB,EAAOtzD,IAAIgtB,QAAQh3B,KAAOi6E,EAAMj6E,KAAO,aAEvCs9D,EAAOnhC,OAAOsuB,yBAIfuzB,EAAUxxB,gBAAiB8Q,EAAOtzD,KAClCg0E,EAAUvuF,QAEV,MAAM2xF,EAAgB9jB,EAAO+jB,mBAE7B,IAAM,IAAIC,EAAK,EAAGA,EAAKF,EAAeE,IAAQ,CAE7C,MAAMzpF,EAAWylE,EAAOikB,YAAaD,GAErCjD,EAAUhlG,IACT+kG,EAAc7tG,EAAIsnB,EAAStnB,EAC3B6tG,EAAc5tG,EAAIqnB,EAASrnB,EAC3B4tG,EAAc7tG,EAAIsnB,EAASjnB,EAC3BwtG,EAAc5tG,EAAIqnB,EAAS9W,GAG5B6/F,EAAO/oF,SAAUwmF,GAEjB/gB,EAAOkkB,eAAgBvH,EAAOqH,GAE9BpD,EAAW5gB,EAAOmkB,aAElBtB,EAAch0B,EAAOhwB,EAAQmhC,EAAOnhC,OAAQ89C,EAAOxpG,KAAK8/B,MAMlD+sD,EAAO4jB,oBAAsBzwG,KAAK8/B,OAASqN,GAEjDshE,EAAS5hB,EAAQnhC,GAIlBmhC,EAAOtb,aAAc,EAItBwF,EAAMxF,aAAc,EAEpBg8B,EAAUxxB,gBAAiBF,EAAqBk0B,EAAgBE,IAuPlE,SAASgB,GAAYxrF,EAAIuzD,EAAYqG,GAEpC,MAAMC,EAAWD,EAAaC,SAmT9B,MAAM4xB,EAAc,IAjTpB,WAEC,IAAIC,GAAS,EAEb,MAAMh0F,EAAQ,IAAIwnC,GAClB,IAAIysD,EAAmB,KACvB,MAAMC,EAAoB,IAAI1sD,GAAS,EAAG,EAAG,EAAG,GAEhD,MAAO,CAEN2sD,QAAS,SAAWC,GAEdH,IAAqBG,GAAeJ,IAExC1rF,EAAG8rF,UAAWA,EAAWA,EAAWA,EAAWA,GAC/CH,EAAmBG,IAMrBC,UAAW,SAAWC,GAErBN,EAASM,GAIVjkB,SAAU,SAAWjpF,EAAGukC,EAAGtnC,EAAGD,EAAGmmE,IAEJ,IAAvBA,IAEJnjE,GAAKhD,EAAGunC,GAAKvnC,EAAGC,GAAKD,GAItB4b,EAAMvU,IAAKrE,EAAGukC,EAAGtnC,EAAGD,IAEuB,IAAtC8vG,EAAkBxyG,OAAQse,KAE9BsI,EAAGkC,WAAYpjB,EAAGukC,EAAGtnC,EAAGD,GACxB8vG,EAAkBvuF,KAAM3F,KAM1B+yE,MAAO,WAENihB,GAAS,EAETC,EAAmB,KACnBC,EAAkBzoG,KAAO,EAAG,EAAG,EAAG,MA+P/B49C,EAAc,IAvPpB,WAEC,IAAI2qD,GAAS,EAETO,EAAmB,KACnBC,EAAmB,KACnBC,EAAoB,KAExB,MAAO,CAENvB,QAAS,SAAWhqC,GAEdA,EAEJz+C,GAAQ,MAIR6xC,GAAS,OAMX63C,QAAS,SAAWO,GAEdH,IAAqBG,GAAeV,IAExC1rF,EAAGosF,UAAWA,GACdH,EAAmBG,IAMrBC,QAAS,SAAW1rC,GAEnB,GAAKurC,IAAqBvrC,EAAY,CAErC,GAAKA,EAEJ,OAASA,GAER,KAAKr3B,EAEJtpB,EAAG2gD,UAAW,KACd,MAED,KAAKp3B,EAEJvpB,EAAG2gD,UAAW,KACd,MAED,KAAKn3B,EAEJxpB,EAAG2gD,UAAW,KACd,MA2BD,QAEC3gD,EAAG2gD,UAAW,WAtBf,KAAKj3B,EAEJ1pB,EAAG2gD,UAAW,KACd,MAED,KAAKh3B,EAEJ3pB,EAAG2gD,UAAW,KACd,MAED,KAAK/2B,EAEJ5pB,EAAG2gD,UAAW,KACd,MAED,KAAK92B,EAEJ7pB,EAAG2gD,UAAW,UAWhB3gD,EAAG2gD,UAAW,KAIfurC,EAAmBvrC,IAMrBorC,UAAW,SAAWC,GAErBN,EAASM,GAIVjkB,SAAU,SAAW7W,GAEfi7B,IAAsBj7B,IAE1BlxD,EAAGssF,WAAYp7B,GACfi7B,EAAoBj7B,IAMtBuZ,MAAO,WAENihB,GAAS,EAETO,EAAmB,KACnBC,EAAmB,KACnBC,EAAoB,QA4HjBnrD,EAAgB,IApHtB,WAEC,IAAI0qD,GAAS,EAETa,EAAqB,KACrBC,EAAqB,KACrBC,EAAoB,KACpBC,EAAyB,KACzBC,EAAqB,KACrBC,EAAsB,KACtBC,EAAsB,KACtBC,EAAsB,KAE1B,MAAO,CAENlC,QAAS,SAAWmC,GAEZrB,IAEDqB,EAEJ5qF,GAAQ,MAIR6xC,GAAS,QAQZ63C,QAAS,SAAWmB,GAEdT,IAAuBS,GAAiBtB,IAE5C1rF,EAAGgtF,YAAaA,GAChBT,EAAqBS,IAMvBX,QAAS,SAAWtrC,EAAaC,EAAYgsC,GAEvCR,IAAuBzrC,GACvB0rC,IAAsBzrC,GACtB0rC,IAA2BM,IAE/BhtF,EAAG+gD,YAAaA,EAAaC,EAAYgsC,GAEzCR,EAAqBzrC,EACrB0rC,EAAoBzrC,EACpB0rC,EAAyBM,IAM3BC,MAAO,SAAW/rC,EAAaC,EAAcC,GAEvCurC,IAAuBzrC,GACvB0rC,IAAwBzrC,GACxB0rC,IAAwBzrC,IAE5BphD,EAAGktF,UAAWhsC,EAAaC,EAAcC,GAEzCurC,EAAqBzrC,EACrB0rC,EAAsBzrC,EACtB0rC,EAAsBzrC,IAMxB2qC,UAAW,SAAWC,GAErBN,EAASM,GAIVjkB,SAAU,SAAW5Q,GAEf21B,IAAwB31B,IAE5Bn3D,EAAGmtF,aAAch2B,GACjB21B,EAAsB31B,IAMxBsT,MAAO,WAENihB,GAAS,EAETa,EAAqB,KACrBC,EAAqB,KACrBC,EAAoB,KACpBC,EAAyB,KACzBC,EAAqB,KACrBC,EAAsB,KACtBC,EAAsB,KACtBC,EAAsB,QAczB,IAAIM,EAAsB,GAEtBC,EAAiB,KAEjBC,EAAyB,KACzBC,EAAkB,KAClBC,EAAuB,KACvBC,EAAkB,KAClBC,EAAkB,KAClBC,EAA4B,KAC5BC,EAAuB,KACvBC,EAAuB,KACvBC,GAA2B,EAE3BC,EAAmB,KACnBC,GAAkB,KAElBC,GAAmB,KAEnBC,GAA6B,KAC7BC,GAA4B,KAEhC,MAAM1gB,GAAcztE,EAAGspC,aAAc,OAErC,IAAI8kD,IAAqB,EACrBxwD,GAAU,EACd,MAAMywD,GAAYruF,EAAGspC,aAAc,OAEK,IAAnC+kD,GAAU7uF,QAAS,UAEvBo+B,GAAU7gB,WAAY,cAAcihC,KAAMqwC,IAAa,IACvDD,GAAuBxwD,IAAW,IAEgB,IAAvCywD,GAAU7uF,QAAS,eAE9Bo+B,GAAU7gB,WAAY,kBAAkBihC,KAAMqwC,IAAa,IAC3DD,GAAuBxwD,IAAW,GAInC,IAAI0wD,GAAqB,KACrBC,GAAuB,GAE3B,MAAMC,GAAiB,IAAItvD,GACrBuvD,GAAkB,IAAIvvD,GAE5B,SAASwvD,GAAer0E,EAAMoZ,EAAQoU,GAErC,MAAM/sD,EAAO,IAAI0rE,WAAY,GACvB1lB,EAAU9gC,EAAG0uF,gBAEnB1uF,EAAG2uF,YAAat0E,EAAMymB,GACtB9gC,EAAG4uF,cAAev0E,EAAM,MAAO,MAC/Bra,EAAG4uF,cAAev0E,EAAM,MAAO,MAE/B,IAAM,IAAIjgC,EAAI,EAAGA,EAAIytD,EAAOztD,IAE3B4lB,EAAG6uF,WAAYp7D,EAASr5C,EAAG,EAAG,KAAM,EAAG,EAAG,EAAG,KAAM,KAAMU,GAI1D,OAAOgmD,EAIR,MAAMguD,GAAgB,GAqBtB,SAAS3sF,GAAQ5T,IAEmB,IAA9B6+F,EAAqB7+F,KAEzByR,EAAGmC,OAAQ5T,GACX6+F,EAAqB7+F,IAAO,GAM9B,SAASylD,GAASzlD,IAEkB,IAA9B6+F,EAAqB7+F,KAEzByR,EAAGg0C,QAASzlD,GACZ6+F,EAAqB7+F,IAAO,GApC9BugG,GAAe,MAASJ,GAAe,KAAM,KAAM,GACnDI,GAAe,OAAUJ,GAAe,MAAO,MAAO,GAItDjD,EAAY1jB,SAAU,EAAG,EAAG,EAAG,GAC/BhnC,EAAYgnC,SAAU,GACtB/mC,EAAc+mC,SAAU,GAExB5lE,GAAQ,MACR4+B,EAAYsrD,QAAS5iE,GAErBslE,IAAc,GACdC,GAAa5nE,GACbjlB,GAAQ,MAERwoF,GAAa3iE,GA0Cb,MAAMinE,GAAe,CACpB,CAAE3mE,GAAe,MACjB,CAAEC,GAAoB,MACtB,CAAEC,GAA2B,OAG9B,GAAKqxC,EAEJo1B,GAAcxmE,GAAgB,MAC9BwmE,GAAcvmE,GAAgB,UAExB,CAEN,MAAM/G,EAAY4xC,EAAWp7D,IAAK,oBAEf,OAAdwpB,IAEJstE,GAAcxmE,GAAgB9G,EAAUutE,QACxCD,GAAcvmE,GAAgB/G,EAAUwtE,SAM1C,MAAMC,GAAa,CAClB,CAAEzmE,GAAc,EAChB,CAAEC,GAAa,EACf,CAAEC,GAAkB,IACpB,CAAEE,GAAkB,IACpB,CAAEM,GAA0B,IAC5B,CAAEF,GAAkB,IACpB,CAAEF,GAAkB,IACpB,CAAEH,GAA0B,IAC5B,CAAEE,GAA0B,IAC5B,CAAEI,GAA0B,IAC5B,CAAEF,GAA0B,KAG7B,SAASyhE,GAAa3qC,EAAUO,EAAeF,EAAUC,EAAUI,EAAoBF,EAAeC,EAAewB,GAEpH,GAAKjC,IAAah4B,GAoBlB,GAPOslE,IAENnrF,GAAQ,MACRmrF,GAAyB,GAIrBttC,IAAa33B,EAmFlBq4B,EAAqBA,GAAsBH,EAC3CC,EAAgBA,GAAiBH,EACjCI,EAAgBA,GAAiBH,EAE5BC,IAAkBitC,GAAwB9sC,IAAuBitC,IAErE3tF,EAAGqvF,sBAAuBJ,GAAc1uC,GAAiB0uC,GAAcvuC,IAEvE8sC,EAAuBjtC,EACvBotC,EAA4BjtC,GAIxBL,IAAaotC,GAAmBntC,IAAaotC,GAAmBltC,IAAkBotC,GAAwBntC,IAAkBotC,IAEhI7tF,EAAGsvF,kBAAmBF,GAAY/uC,GAAY+uC,GAAY9uC,GAAY8uC,GAAY5uC,GAAiB4uC,GAAY3uC,IAE/GgtC,EAAkBptC,EAClBqtC,EAAkBptC,EAClBstC,EAAuBptC,EACvBqtC,EAAuBptC,GAIxB8sC,EAAkBvtC,EAClB8tC,EAA2B,UA1G1B,GAAK9tC,IAAautC,GAAmBtrC,IAAuB6rC,EAA2B,CAWtF,GATKN,IAAyBllE,GAAeqlE,IAA8BrlE,IAE1EtoB,EAAGugD,cAAe,OAElBitC,EAAuBllE,EACvBqlE,EAA4BrlE,GAIxB25B,EAEJ,OAASjC,GAER,KAAK/3B,EACJjoB,EAAGsvF,kBAAmB,EAAG,IAAK,EAAG,KACjC,MAED,KAAKpnE,EACJloB,EAAGuvF,UAAW,EAAG,GACjB,MAED,KAAKpnE,EACJnoB,EAAGsvF,kBAAmB,EAAG,EAAG,IAAK,KACjC,MAED,KAAKlnE,EACJpoB,EAAGsvF,kBAAmB,EAAG,IAAK,EAAG,KACjC,MAED,QACCpoG,QAAQu1B,MAAO,uCAAwCujC,QAOzD,OAASA,GAER,KAAK/3B,EACJjoB,EAAGsvF,kBAAmB,IAAK,IAAK,EAAG,KACnC,MAED,KAAKpnE,EACJloB,EAAGuvF,UAAW,IAAK,GACnB,MAED,KAAKpnE,EACJnoB,EAAGuvF,UAAW,EAAG,KACjB,MAED,KAAKnnE,EACJpoB,EAAGuvF,UAAW,EAAG,KACjB,MAED,QACCroG,QAAQu1B,MAAO,uCAAwCujC,GAO1DytC,EAAkB,KAClBC,EAAkB,KAClBE,EAAuB,KACvBC,EAAuB,KAEvBN,EAAkBvtC,EAClB8tC,EAA2B7rC,QA3FvBqrC,IAEJt5C,GAAS,MACTs5C,GAAyB,GAmK5B,SAASyB,GAAczQ,GAEjByP,IAAqBzP,IAEpBA,EAEJt+E,EAAGwvF,UAAW,MAIdxvF,EAAGwvF,UAAW,MAIfzB,EAAmBzP,GAMrB,SAAS0Q,GAAaS,GAEhBA,IAAatoE,GAEjBhlB,GAAQ,MAEHstF,IAAazB,KAEZyB,IAAaroE,EAEjBpnB,EAAGyvF,SAAU,MAEFA,IAAapoE,EAExBrnB,EAAGyvF,SAAU,MAIbzvF,EAAGyvF,SAAU,QAQfz7C,GAAS,MAIVg6C,GAAkByB,EAgBnB,SAASC,GAAkB9tC,EAAe/8D,EAAQ6yF,GAE5C91B,GAEJz/C,GAAQ,OAEH+rF,KAA+BrpG,GAAUspG,KAA8BzW,IAE3E13E,EAAG4hD,cAAe/8D,EAAQ6yF,GAE1BwW,GAA6BrpG,EAC7BspG,GAA4BzW,IAM7B1jC,GAAS,OAsBX,SAAS27C,GAAeC,QAEJl8F,IAAdk8F,IAA0BA,EAAY,MAAQniB,GAAc,GAE5D6gB,KAAuBsB,IAE3B5vF,EAAG2vF,cAAeC,GAClBtB,GAAqBsB,GAsJvB,MAAO,CAEN91B,QAAS,CACRpiE,MAAO+zF,EACPv6B,MAAOnwB,EACPo2B,QAASn2B,GAGV7+B,OAAQA,GACR6xC,QAASA,GAETxwC,WAjfD,SAAqBJ,GAEpB,OAAKiqF,IAAmBjqF,IAEvBpD,EAAGwD,WAAYJ,GAEfiqF,EAAiBjqF,GAEV,IA2eRunF,YAAaA,GACbkF,YAxTD,SAAsBv2C,EAAUw2C,GAE/Bx2C,EAAS2G,OAASp4B,EACfmsB,GAAS,MACT7xC,GAAQ,MAEX,IAAIm8E,EAAchlC,EAAS2G,OAASr4B,EAC/BkoE,IAAcxR,GAAcA,GAEjCyQ,GAAczQ,GAEZhlC,EAAS0G,WAAa/3B,IAA2C,IAAzBqxB,EAAS8G,YAChDuqC,GAAa3iE,GACb2iE,GAAarxC,EAAS0G,SAAU1G,EAASiH,cAAejH,EAAS+G,SAAU/G,EAASgH,SAAUhH,EAASoH,mBAAoBpH,EAASkH,cAAelH,EAASmH,cAAenH,EAAS2I,oBAEvLlhB,EAAYsrD,QAAS/yC,EAASqH,WAC9B5f,EAAY6pD,QAAStxC,EAASsH,WAC9B7f,EAAY8qD,QAASvyC,EAASuH,YAC9B4qC,EAAYI,QAASvyC,EAASoI,YAE9B,MAAML,EAAe/H,EAAS+H,aAC9BrgB,EAAc4pD,QAASvpC,GAClBA,IAEJrgB,EAAc6qD,QAASvyC,EAASwH,kBAChC9f,EAAcqrD,QAAS/yC,EAASyH,YAAazH,EAAS0H,WAAY1H,EAAS2H,iBAC3EjgB,EAAcisD,MAAO3zC,EAAS4H,YAAa5H,EAAS6H,aAAc7H,EAAS8H,eAI5EsuC,GAAkBp2C,EAASsI,cAAetI,EAASuI,oBAAqBvI,EAASwI,qBA4RjFitC,aAAcA,GACdC,YAAaA,GAEbe,aAnOD,SAAuBlnG,GAEjBA,IAAUolG,KAETG,IAAqBpuF,EAAGrI,UAAW9O,GAExColG,GAAmBplG,IA8NpB6mG,iBAAkBA,GAElB7E,eAnMD,SAAyBhqD,GAEnBA,EAEJ1+B,GAAQ,MAIR6xC,GAAS,OA6LV27C,cAAeA,GACfhB,YAzKD,SAAsBqB,EAAWC,GAEJ,OAAvB3B,IAEJqB,KAID,IAAIO,EAAe3B,GAAsBD,SAEnB56F,IAAjBw8F,IAEJA,EAAe,CAAE71E,UAAM3mB,EAAWotC,aAASptC,GAC3C66F,GAAsBD,IAAuB4B,GAIzCA,EAAa71E,OAAS21E,GAAaE,EAAapvD,UAAYmvD,IAEhEjwF,EAAG2uF,YAAaqB,EAAWC,GAAgBnB,GAAekB,IAE1DE,EAAa71E,KAAO21E,EACpBE,EAAapvD,QAAUmvD,IAoJxBE,cA9ID,WAEC,MAAMD,EAAe3B,GAAsBD,SAErB56F,IAAjBw8F,QAAoDx8F,IAAtBw8F,EAAa71E,OAE/Cra,EAAG2uF,YAAauB,EAAa71E,KAAM,MAEnC61E,EAAa71E,UAAO3mB,EACpBw8F,EAAapvD,aAAUptC,IAsIxB08F,qBAhID,WAEC,IAECpwF,EAAGowF,qBAAqBvjF,MAAO7M,EAAI8M,WAElC,MAAQ2P,GAETv1B,QAAQu1B,MAAO,oBAAqBA,KAyHrCoyE,WAnHD,WAEC,IAEC7uF,EAAG6uF,WAAWhiF,MAAO7M,EAAI8M,WAExB,MAAQ2P,GAETv1B,QAAQu1B,MAAO,oBAAqBA,KA4GrC4zE,WAtGD,WAEC,IAECrwF,EAAGqwF,WAAWxjF,MAAO7M,EAAI8M,WAExB,MAAQ2P,GAETv1B,QAAQu1B,MAAO,oBAAqBA,KAgGrCmkB,QAxFD,SAAkBA,IAEyB,IAArC4tD,GAAep1G,OAAQwnD,KAE3B5gC,EAAG4gC,QAASA,EAAQvmD,EAAGumD,EAAQtmD,EAAGsmD,EAAQlmD,EAAGkmD,EAAQ/1C,GACrD2jG,GAAenxF,KAAMujC,KAoFtBj/B,SA9ED,SAAmBA,IAE0B,IAAvC8sF,GAAgBr1G,OAAQuoB,KAE5B3B,EAAG2B,SAAUA,EAAStnB,EAAGsnB,EAASrnB,EAAGqnB,EAASjnB,EAAGinB,EAAS9W,GAC1D4jG,GAAgBpxF,KAAMsE,KA2EvB8oE,MAnED,WAEC2iB,EAAsB,GAEtBkB,GAAqB,KACrBC,GAAuB,GAEvBlB,EAAiB,KAEjBC,EAAyB,KACzBC,EAAkB,KAClBC,EAAuB,KACvBC,EAAkB,KAClBC,EAAkB,KAClBC,EAA4B,KAC5BC,EAAuB,KACvBC,EAAuB,KACvBC,GAA2B,EAE3BC,EAAmB,KACnBC,GAAkB,KAElBC,GAAmB,KAEnBC,GAA6B,KAC7BC,GAA4B,KAE5B1C,EAAYhhB,QACZ1pC,EAAY0pC,QACZzpC,EAAcypC,UA4ChB,SAAS6lB,GAAeC,EAAKh9B,EAAYgU,EAAO9C,EAAY7K,EAAc9zE,EAAO6mF,GAEhF,MAAM9S,EAAWD,EAAaC,SACxB4T,EAAc7T,EAAa6T,YAC3BG,EAAiBhU,EAAagU,eAC9BD,EAAiB/T,EAAa+T,eAC9BW,EAAa1U,EAAa0U,WAE1BkiB,EAAiB,IAAIz2B,QAC3B,IAAI/9B,EAMAy0D,GAAqB,EAEzB,IAECA,EAAgD,oBAApBC,iBAC+B,OAArD,IAAIA,gBAAiB,EAAG,GAAI/3E,WAAY,MAE7C,MAAQg4E,IAMV,SAASC,EAAc/nG,EAAOC,GAI7B,OAAO2nG,EACN,IAAIC,gBAAiB7nG,EAAOC,GAC5BwP,SAASC,gBAAiB,+BAAgC,UAI5D,SAASs4F,EAAa52F,EAAO62F,EAAiBC,EAAgBC,GAE7D,IAAIpsG,EAAQ,EAYZ,IARKqV,EAAMpR,MAAQmoG,GAAW/2F,EAAMnR,OAASkoG,KAE5CpsG,EAAQosG,EAAUpzG,KAAK2B,IAAK0a,EAAMpR,MAAOoR,EAAMnR,SAM3ClE,EAAQ,IAAyB,IAApBksG,EAA2B,CAI5C,GAAmC,oBAArB/yD,kBAAoC9jC,aAAiB8jC,kBACnC,oBAAtB9f,mBAAqChkB,aAAiBgkB,mBACtC,oBAAhB+f,aAA+B/jC,aAAiB+jC,YAAgB,CAEzE,MAAMr2B,EAAQmpF,EAAkB/8D,GAAU8B,gBAAkBj4C,KAAK+pB,MAE3D9e,EAAQ8e,EAAO/iB,EAAQqV,EAAMpR,OAC7BC,EAAS6e,EAAO/iB,EAAQqV,EAAMnR,aAEnB4K,IAAZsoC,IAAwBA,EAAU40D,EAAc/nG,EAAOC,IAI5D,MAAM+W,EAASkxF,EAAiBH,EAAc/nG,EAAOC,GAAWkzC,EAEhEn8B,EAAOhX,MAAQA,EACfgX,EAAO/W,OAASA,EAOhB,OALgB+W,EAAO8Y,WAAY,MAC3Bla,UAAWxE,EAAO,EAAG,EAAGpR,EAAOC,GAEvC5B,QAAQoK,KAAM,uDAAyD2I,EAAMpR,MAAQ,IAAMoR,EAAMnR,OAAS,SAAWD,EAAQ,IAAMC,EAAS,MAErI+W,EAUP,MANK,SAAU5F,GAEd/S,QAAQoK,KAAM,yDAA2D2I,EAAMpR,MAAQ,IAAMoR,EAAMnR,OAAS,MAItGmR,EAMT,OAAOA,EAIR,SAASy7B,EAAcz7B,GAEtB,OAAO85B,GAAU2B,aAAcz7B,EAAMpR,QAAWkrC,GAAU2B,aAAcz7B,EAAMnR,QAa/E,SAASmoG,EAA6BnwD,EAASowD,GAE9C,OAAOpwD,EAAQtD,iBAAmB0zD,GACjCpwD,EAAQ/D,YAAc9R,IAAiB6V,EAAQ/D,YAAczR,GAI/D,SAAS6lE,EAAgB19D,EAAQqN,EAASj4C,EAAOC,GAEhDynG,EAAIY,eAAgB19D,GAEMgxC,EAAWtsE,IAAK2oC,GAGxBswD,cAAgBxzG,KAAKuJ,IAAKvJ,KAAK2B,IAAKsJ,EAAOC,IAAalL,KAAKyzG,MAIhF,SAASC,EAAmBC,EAAoBC,EAAUC,GAEzD,IAAkB,IAAb53B,EAAqB,OAAO23B,EAEjC,GAA4B,OAAvBD,EAA8B,CAElC,QAAmC79F,IAA9B68F,EAAKgB,GAAqC,OAAOhB,EAAKgB,GAE3DrqG,QAAQoK,KAAM,2EAA8EigG,EAAqB,KAIlH,IAAIl0D,EAAiBm0D,EAiCrB,OA/BkB,OAAbA,IAEY,OAAXC,IAAkBp0D,EAAiB,OACxB,OAAXo0D,IAAkBp0D,EAAiB,OACxB,OAAXo0D,IAAkBp0D,EAAiB,QAIvB,OAAbm0D,IAEY,OAAXC,IAAkBp0D,EAAiB,OACxB,OAAXo0D,IAAkBp0D,EAAiB,OACxB,OAAXo0D,IAAkBp0D,EAAiB,QAIvB,OAAbm0D,IAEY,OAAXC,IAAkBp0D,EAAiB,OACxB,OAAXo0D,IAAkBp0D,EAAiB,OACxB,OAAXo0D,IAAkBp0D,EAAiB,QAIjB,QAAnBA,GAA+C,QAAnBA,GACb,QAAnBA,GAA+C,QAAnBA,GAE5Bk2B,EAAWp7D,IAAK,0BAIVklC,EAMR,SAASq0D,EAAgBt/E,GAExB,OAAKA,IAAM6Y,IAAiB7Y,IAAM8Y,IAA8B9Y,IAAMgZ,GAE9D,KAID,KAMR,SAASglD,EAAkB11E,GAE1B,MAAMomC,EAAUpmC,EAAM+4B,OAEtBqN,EAAQ33B,oBAAqB,UAAWinE,GA4BzC,SAA4BtvC,GAE3B,MAAM6wD,EAAoBltB,EAAWtsE,IAAK2oC,GAE1C,QAAuCptC,IAAlCi+F,EAAkBC,YAA4B,OAEnDrB,EAAIsB,cAAeF,EAAkBG,gBAErCrtB,EAAWppD,OAAQylB,GAlCnBixD,CAAmBjxD,GAEdA,EAAQkxD,gBAEZxB,EAAen4F,OAAQyoC,GAIxB6rC,EAAKqE,OAAOzyC,WAIb,SAAS0zD,EAAuBv3F,GAE/B,MAAM86D,EAAe96D,EAAM+4B,OAE3B+hC,EAAarsD,oBAAqB,UAAW8oF,GAsB9C,SAAiCz8B,GAEhC,MAAM08B,EAAyBztB,EAAWtsE,IAAKq9D,GACzCm8B,EAAoBltB,EAAWtsE,IAAKq9D,EAAa10B,SAEvD,IAAO00B,EAAe,YAEoB9hE,IAArCi+F,EAAkBG,gBAEtBvB,EAAIsB,cAAeF,EAAkBG,gBAIjCt8B,EAAav0B,cAEjBu0B,EAAav0B,aAAalC,UAI3B,GAAKy2B,EAAaC,wBAEjB,IAAM,IAAIr7E,EAAI,EAAGA,EAAI,EAAGA,IAEvBm2G,EAAI4B,kBAAmBD,EAAuBE,mBAAoBh4G,IAC7D83G,EAAuBG,oBAAqB9B,EAAI+B,mBAAoBJ,EAAuBG,mBAAoBj4G,SAMrHm2G,EAAI4B,kBAAmBD,EAAuBE,oBACzCF,EAAuBG,oBAAqB9B,EAAI+B,mBAAoBJ,EAAuBG,oBAC3FH,EAAuBK,gCAAiChC,EAAI4B,kBAAmBD,EAAuBK,gCACtGL,EAAuBM,0BAA2BjC,EAAI+B,mBAAoBJ,EAAuBM,0BACjGN,EAAuBO,0BAA2BlC,EAAI+B,mBAAoBJ,EAAuBO,0BAIvGhuB,EAAWppD,OAAQm6C,EAAa10B,SAChC2jC,EAAWppD,OAAQm6C,GA3DnBk9B,CAAwBl9B,GAExBmX,EAAKqE,OAAOzyC,WA+Db,IAAIo0D,EAAe,EA0BnB,SAASC,EAAc9xD,EAAS+xD,GAE/B,MAAMlB,EAAoBltB,EAAWtsE,IAAK2oC,GAI1C,GAFKA,EAAQkxD,gBA02Bd,SAA6BlxD,GAE5B,MAAMw4B,EAAQqT,EAAKpW,OAAO+C,MAIrBk3B,EAAer4F,IAAK2oC,KAAcw4B,IAEtCk3B,EAAertG,IAAK29C,EAASw4B,GAC7Bx4B,EAAQkC,UAn3BqB8vD,CAAoBhyD,GAE7CA,EAAQlD,QAAU,GAAK+zD,EAAkBoB,YAAcjyD,EAAQlD,QAAU,CAE7E,MAAM3jC,EAAQ6mC,EAAQ7mC,MAEtB,QAAevG,IAAVuG,EAEJ/S,QAAQoK,KAAM,6EAER,KAAwB,IAAnB2I,EAAMuE,SAOjB,YADAw0F,EAAerB,EAAmB7wD,EAAS+xD,GAJ3C3rG,QAAQoK,KAAM,2EAWhBi2E,EAAMooB,cAAe,MAAQkD,GAC7BtrB,EAAMonB,YAAa,KAAMgD,EAAkBG,gBAoC5C,SAASmB,EAAgBnyD,EAAS+xD,GAEjC,MAAMlB,EAAoBltB,EAAWtsE,IAAK2oC,GAErCA,EAAQlD,QAAU,GAAK+zD,EAAkBoB,YAAcjyD,EAAQlD,QA8TrE,SAA4B+zD,EAAmB7wD,EAAS+xD,GAEvD,GAA8B,IAAzB/xD,EAAQ7mC,MAAMpd,OAAe,OAElCq2G,EAAavB,EAAmB7wD,GAEhCymC,EAAMooB,cAAe,MAAQkD,GAC7BtrB,EAAMonB,YAAa,MAAOgD,EAAkBG,gBAE5CvB,EAAI4C,YAAa,MAAOryD,EAAQpD,OAEhC,MAAM01D,EAAiBtyD,IAAaA,EAAQuyD,qBAAuBvyD,EAAQ7mC,MAAO,GAAIo5F,qBAChFv0D,EAAkBgC,EAAQ7mC,MAAO,IAAO6mC,EAAQ7mC,MAAO,GAAI6kC,cAE3Dw0D,EAAY,GAElB,IAAM,IAAIl5G,EAAI,EAAGA,EAAI,EAAGA,IAQtBk5G,EAAWl5G,GANLg5G,GAAkBt0D,EAMPA,EAAgBgC,EAAQ7mC,MAAO7f,GAAI6f,MAAQ6mC,EAAQ7mC,MAAO7f,GAJ1Dy2G,EAAa/vD,EAAQ7mC,MAAO7f,IAAK,GAAO,EAAMwzF,GAUjE,MAAM3zE,EAAQq5F,EAAW,GACxBpC,EAAex7D,EAAcz7B,IAAW4/D,EACxC23B,EAAW1rG,EAAMytG,QAASzyD,EAAQ9D,QAClCy0D,EAAS3rG,EAAMytG,QAASzyD,EAAQzmB,MAChCm5E,EAAmBlC,EAAmBxwD,EAAQzD,eAAgBm0D,EAAUC,GAIzE,IAAIr0D,EAEJ,GAJAq2D,EAAsB,MAAO3yD,EAASowD,GAIjCkC,EAAe,CAEnB,IAAM,IAAIh5G,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9BgjD,EAAUk2D,EAAWl5G,GAAIgjD,QAEzB,IAAM,IAAIp9C,EAAI,EAAGA,EAAIo9C,EAAQvgD,OAAQmD,IAAO,CAE3C,MAAM0zG,EAASt2D,EAASp9C,GAEnB8gD,EAAQ9D,SAAWvQ,IAAcqU,EAAQ9D,SAAWxQ,GAEtC,OAAbglE,EAEJjqB,EAAM6oB,qBAAsB,MAAQh2G,EAAG4F,EAAGwzG,EAAkBE,EAAO7qG,MAAO6qG,EAAO5qG,OAAQ,EAAG4qG,EAAO54G,MAInGoM,QAAQoK,KAAM,mGAMfi2E,EAAMsnB,WAAY,MAAQz0G,EAAG4F,EAAGwzG,EAAkBE,EAAO7qG,MAAO6qG,EAAO5qG,OAAQ,EAAG0oG,EAAUC,EAAQiC,EAAO54G,OAQ9G62G,EAAkBP,cAAgBh0D,EAAQvgD,OAAS,MAE7C,CAENugD,EAAU0D,EAAQ1D,QAElB,IAAM,IAAIhjD,EAAI,EAAGA,EAAI,EAAGA,IAEvB,GAAK0kD,EAAgB,CAEpByoC,EAAMsnB,WAAY,MAAQz0G,EAAG,EAAGo5G,EAAkBF,EAAWl5G,GAAIyO,MAAOyqG,EAAWl5G,GAAI0O,OAAQ,EAAG0oG,EAAUC,EAAQ6B,EAAWl5G,GAAIU,MAEnI,IAAM,IAAIkF,EAAI,EAAGA,EAAIo9C,EAAQvgD,OAAQmD,IAAO,CAE3C,MACM2zG,EADSv2D,EAASp9C,GACGia,MAAO7f,GAAI6f,MAEtCstE,EAAMsnB,WAAY,MAAQz0G,EAAG4F,EAAI,EAAGwzG,EAAkBG,EAAY9qG,MAAO8qG,EAAY7qG,OAAQ,EAAG0oG,EAAUC,EAAQkC,EAAY74G,WAIzH,CAENysF,EAAMsnB,WAAY,MAAQz0G,EAAG,EAAGo5G,EAAkBhC,EAAUC,EAAQ6B,EAAWl5G,IAE/E,IAAM,IAAI4F,EAAI,EAAGA,EAAIo9C,EAAQvgD,OAAQmD,IAAO,CAE3C,MAAM0zG,EAASt2D,EAASp9C,GAExBunF,EAAMsnB,WAAY,MAAQz0G,EAAG4F,EAAI,EAAGwzG,EAAkBhC,EAAUC,EAAQiC,EAAOz5F,MAAO7f,KAQzFu3G,EAAkBP,cAAgBh0D,EAAQvgD,OAItCo0G,EAA6BnwD,EAASowD,IAG1CC,EAAgB,MAAOrwD,EAAS7mC,EAAMpR,MAAOoR,EAAMnR,QAIpD6oG,EAAkBoB,UAAYjyD,EAAQlD,QAEjCkD,EAAQjD,UAAWiD,EAAQjD,SAAUiD,GAtbzC8yD,CAAmBjC,EAAmB7wD,EAAS+xD,IAKhDtrB,EAAMooB,cAAe,MAAQkD,GAC7BtrB,EAAMonB,YAAa,MAAOgD,EAAkBG,iBAI7C,MAAM+B,EAAe,CACpB,CAAE/oE,IAAkB,MACpB,CAAEC,IAAuB,MACzB,CAAEC,IAA0B,OAGvB8oE,EAAa,CAClB,CAAE7oE,IAAiB,KACnB,CAAEC,IAA8B,KAChC,CAAEE,IAA6B,KAE/B,CAAEE,IAAgB,KAClB,CAAEC,IAA6B,KAC/B,CAAEE,IAA4B,MAG/B,SAASgoE,EAAsBM,EAAajzD,EAASowD,GAE/CA,GAEJX,EAAI3B,cAAemF,EAAa,MAAOF,EAAc/yD,EAAQlE,QAC7D2zD,EAAI3B,cAAemF,EAAa,MAAOF,EAAc/yD,EAAQjE,QAExC,QAAhBk3D,GAAyC,QAAhBA,GAE7BxD,EAAI3B,cAAemF,EAAa,MAAOF,EAAc/yD,EAAQmyC,QAI9Dsd,EAAI3B,cAAemF,EAAa,MAAOD,EAAYhzD,EAAQhE,YAC3DyzD,EAAI3B,cAAemF,EAAa,MAAOD,EAAYhzD,EAAQ/D,cAI3DwzD,EAAI3B,cAAemF,EAAa,MAAO,OACvCxD,EAAI3B,cAAemF,EAAa,MAAO,OAElB,QAAhBA,GAAyC,QAAhBA,GAE7BxD,EAAI3B,cAAemF,EAAa,MAAO,OAInCjzD,EAAQlE,QAAU7R,IAAuB+V,EAAQjE,QAAU9R,IAE/D7jC,QAAQoK,KAAM,iIAIfi/F,EAAI3B,cAAemF,EAAa,MAAOrC,EAAgB5wD,EAAQhE,YAC/DyzD,EAAI3B,cAAemF,EAAa,MAAOrC,EAAgB5wD,EAAQ/D,YAE1D+D,EAAQ/D,YAAc9R,IAAiB6V,EAAQ/D,YAAczR,IAEjEpkC,QAAQoK,KAAM,oIAMhB,MAAMqwB,EAAY4xC,EAAWp7D,IAAK,kCAElC,GAAKwpB,EAAY,CAEhB,GAAKmf,EAAQzmB,OAAS4R,IAA8D,OAAjDsnC,EAAWp7D,IAAK,4BAAwC,OAC3F,GAAK2oC,EAAQzmB,OAAS6R,IAAuF,QAApE2tC,GAAYtG,EAAWp7D,IAAK,kCAA+C,QAE/G2oC,EAAQ7D,WAAa,GAAKwnC,EAAWtsE,IAAK2oC,GAAUkzD,uBAExDzD,EAAI0D,cAAeF,EAAapyE,EAAUuyE,2BAA4Bt2G,KAAK4B,IAAKshD,EAAQ7D,WAAY28B,EAAauU,qBACjH1J,EAAWtsE,IAAK2oC,GAAUkzD,oBAAsBlzD,EAAQ7D,aAQ3D,SAASi2D,EAAavB,EAAmB7wD,QAEDptC,IAAlCi+F,EAAkBC,cAEtBD,EAAkBC,aAAc,EAEhC9wD,EAAQrmC,iBAAkB,UAAW21E,GAErCuhB,EAAkBG,eAAiBvB,EAAI7B,gBAEvC/hB,EAAKqE,OAAOzyC,YAMd,SAASy0D,EAAerB,EAAmB7wD,EAAS+xD,GAEnD,IAAIkB,EAAc,KAEbjzD,EAAQwyC,uBAAuBygB,EAAc,OAC7CjzD,EAAQyyC,kBAAkBwgB,EAAc,OAE7Cb,EAAavB,EAAmB7wD,GAEhCymC,EAAMooB,cAAe,MAAQkD,GAC7BtrB,EAAMonB,YAAaoF,EAAapC,EAAkBG,gBAElDvB,EAAI4C,YAAa,MAAOryD,EAAQpD,OAChC6yD,EAAI4C,YAAa,MAAOryD,EAAQrD,kBAChC8yD,EAAI4C,YAAa,KAAMryD,EAAQnD,iBAE/B,MAAMmzD,EA7YP,SAAiChwD,GAEhC,OAAK+4B,IAEI/4B,EAAQlE,QAAU7R,IAAuB+V,EAAQjE,QAAU9R,IACjE+V,EAAQ/D,YAAc9R,IAAiB6V,EAAQ/D,YAAczR,IAwYxC6oE,CAAwBrzD,KAA+C,IAAlCpL,EAAcoL,EAAQ7mC,OAC7EA,EAAQ42F,EAAa/vD,EAAQ7mC,MAAO62F,GAAiB,EAAOnjB,GAE5DujB,EAAex7D,EAAcz7B,IAAW4/D,EAC7C23B,EAAW1rG,EAAMytG,QAASzyD,EAAQ9D,QAEnC,IAKI02D,EALAjC,EAAS3rG,EAAMytG,QAASzyD,EAAQzmB,MACnCm5E,EAAmBlC,EAAmBxwD,EAAQzD,eAAgBm0D,EAAUC,GAEzEgC,EAAsBM,EAAajzD,EAASowD,GAG5C,MAAM9zD,EAAU0D,EAAQ1D,QAExB,GAAK0D,EAAQszD,eAIZZ,EAAmB,KAEd35B,EAIH25B,EAFI1yD,EAAQzmB,OAAS4R,GAEF,MAER6U,EAAQzmB,OAAS2R,GAET,MAER8U,EAAQzmB,OAASiS,GAET,MAIA,MAMfwU,EAAQzmB,OAAS4R,IAErB/kC,QAAQu1B,MAAO,gEAQZqkB,EAAQ9D,SAAWnQ,IAAoC,OAArB2mE,GAKjC1yD,EAAQzmB,OAASyR,IAAqBgV,EAAQzmB,OAAS2R,KAE3D9kC,QAAQoK,KAAM,+FAEdwvC,EAAQzmB,KAAOyR,GACf2lE,EAAS3rG,EAAMytG,QAASzyD,EAAQzmB,OAM7BymB,EAAQ9D,SAAWlQ,IAA2C,OAArB0mE,IAI7CA,EAAmB,MAKd1yD,EAAQzmB,OAASiS,KAErBplC,QAAQoK,KAAM,oFAEdwvC,EAAQzmB,KAAOiS,GACfmlE,EAAS3rG,EAAMytG,QAASzyD,EAAQzmB,QAQlCktD,EAAMsnB,WAAY,KAAM,EAAG2E,EAAkBv5F,EAAMpR,MAAOoR,EAAMnR,OAAQ,EAAG0oG,EAAUC,EAAQ,WAEvF,GAAK3wD,EAAQhC,cAMnB,GAAK1B,EAAQvgD,OAAS,GAAKq0G,EAAe,CAEzC,IAAM,IAAI92G,EAAI,EAAG6tD,EAAK7K,EAAQvgD,OAAQzC,EAAI6tD,EAAI7tD,IAE7Cs5G,EAASt2D,EAAShjD,GAClBmtF,EAAMsnB,WAAY,KAAMz0G,EAAGo5G,EAAkBE,EAAO7qG,MAAO6qG,EAAO5qG,OAAQ,EAAG0oG,EAAUC,EAAQiC,EAAO54G,MAIvGgmD,EAAQtD,iBAAkB,EAC1Bm0D,EAAkBP,cAAgBh0D,EAAQvgD,OAAS,OAInD0qF,EAAMsnB,WAAY,KAAM,EAAG2E,EAAkBv5F,EAAMpR,MAAOoR,EAAMnR,OAAQ,EAAG0oG,EAAUC,EAAQx3F,EAAMnf,MACnG62G,EAAkBP,cAAgB,OAI7B,GAAKtwD,EAAQuyD,oBAAsB,CAEzC,IAAM,IAAIj5G,EAAI,EAAG6tD,EAAK7K,EAAQvgD,OAAQzC,EAAI6tD,EAAI7tD,IAE7Cs5G,EAASt2D,EAAShjD,GAEb0mD,EAAQ9D,SAAWvQ,IAAcqU,EAAQ9D,SAAWxQ,GAEtC,OAAbglE,EAEJjqB,EAAM6oB,qBAAsB,KAAMh2G,EAAGo5G,EAAkBE,EAAO7qG,MAAO6qG,EAAO5qG,OAAQ,EAAG4qG,EAAO54G,MAI9FoM,QAAQoK,KAAM,kGAMfi2E,EAAMsnB,WAAY,KAAMz0G,EAAGo5G,EAAkBE,EAAO7qG,MAAO6qG,EAAO5qG,OAAQ,EAAG0oG,EAAUC,EAAQiC,EAAO54G,MAMxG62G,EAAkBP,cAAgBh0D,EAAQvgD,OAAS,OAE7C,GAAKikD,EAAQwyC,qBAEnB/L,EAAM8oB,WAAY,MAAO,EAAGmD,EAAkBv5F,EAAMpR,MAAOoR,EAAMnR,OAAQmR,EAAMi3D,MAAO,EAAGsgC,EAAUC,EAAQx3F,EAAMnf,MACjH62G,EAAkBP,cAAgB,OAE5B,GAAKtwD,EAAQyyC,gBAEnBhM,EAAM8oB,WAAY,MAAO,EAAGmD,EAAkBv5F,EAAMpR,MAAOoR,EAAMnR,OAAQmR,EAAMi3D,MAAO,EAAGsgC,EAAUC,EAAQx3F,EAAMnf,MACjH62G,EAAkBP,cAAgB,OAUlC,GAAKh0D,EAAQvgD,OAAS,GAAKq0G,EAAe,CAEzC,IAAM,IAAI92G,EAAI,EAAG6tD,EAAK7K,EAAQvgD,OAAQzC,EAAI6tD,EAAI7tD,IAE7Cs5G,EAASt2D,EAAShjD,GAClBmtF,EAAMsnB,WAAY,KAAMz0G,EAAGo5G,EAAkBhC,EAAUC,EAAQiC,GAIhE5yD,EAAQtD,iBAAkB,EAC1Bm0D,EAAkBP,cAAgBh0D,EAAQvgD,OAAS,OAInD0qF,EAAMsnB,WAAY,KAAM,EAAG2E,EAAkBhC,EAAUC,EAAQx3F,GAC/D03F,EAAkBP,cAAgB,EAM/BH,EAA6BnwD,EAASowD,IAE1CC,EAAgB4C,EAAajzD,EAAS7mC,EAAMpR,MAAOoR,EAAMnR,QAI1D6oG,EAAkBoB,UAAYjyD,EAAQlD,QAEjCkD,EAAQjD,UAAWiD,EAAQjD,SAAUiD,GAqI3C,SAASuzD,EAAyBC,EAAa9+B,EAAc++B,EAAYC,GAExE,MAAMhD,EAAW1rG,EAAMytG,QAAS/9B,EAAa10B,QAAQ9D,QAC/Cy0D,EAAS3rG,EAAMytG,QAAS/9B,EAAa10B,QAAQzmB,MAC7Cm5E,EAAmBlC,EAAmB97B,EAAa10B,QAAQzD,eAAgBm0D,EAAUC,GAC3FlqB,EAAMsnB,WAAY2F,EAAe,EAAGhB,EAAkBh+B,EAAa3sE,MAAO2sE,EAAa1sE,OAAQ,EAAG0oG,EAAUC,EAAQ,MACpHlB,EAAIkE,gBAAiB,MAAOH,GAC5B/D,EAAImE,qBAAsB,MAAOH,EAAYC,EAAe/vB,EAAWtsE,IAAKq9D,EAAa10B,SAAUgxD,eAAgB,GACnHvB,EAAIkE,gBAAiB,MAAO,MAK7B,SAASE,EAA0BC,EAAcp/B,EAAcq/B,GAI9D,GAFAtE,EAAIuE,iBAAkB,MAAOF,GAExBp/B,EAAaz0B,cAAiBy0B,EAAax0B,cAAgB,CAE/D,IAAIwyD,EAAmB,MAEvB,GAAKqB,EAAgB,CAEpB,MAAM5zD,EAAeu0B,EAAav0B,aAE7BA,GAAgBA,EAAamzD,iBAE5BnzD,EAAa5mB,OAAS4R,GAE1BunE,EAAmB,MAERvyD,EAAa5mB,OAAS2R,KAEjCwnE,EAAmB,QAMrB,MAAMryD,EAAU4zD,EAAwBv/B,GAExC+6B,EAAIyE,+BAAgC,MAAO7zD,EAASqyD,EAAkBh+B,EAAa3sE,MAAO2sE,EAAa1sE,aAIvGynG,EAAI0E,oBAAqB,MAAOzB,EAAkBh+B,EAAa3sE,MAAO2sE,EAAa1sE,QAIpFynG,EAAI2E,wBAAyB,MAAO,MAAO,MAAON,QAE5C,GAAKp/B,EAAaz0B,aAAey0B,EAAax0B,cAAgB,CAEpE,GAAK6zD,EAAgB,CAEpB,MAAM1zD,EAAU4zD,EAAwBv/B,GAExC+6B,EAAIyE,+BAAgC,MAAO7zD,EAAS,MAAOq0B,EAAa3sE,MAAO2sE,EAAa1sE,aAI5FynG,EAAI0E,oBAAqB,MAAO,MAAOz/B,EAAa3sE,MAAO2sE,EAAa1sE,QAKzEynG,EAAI2E,wBAAyB,MAAO,MAAO,MAAON,OAE5C,CAEN,MAAMpD,EAAW1rG,EAAMytG,QAAS/9B,EAAa10B,QAAQ9D,QAC/Cy0D,EAAS3rG,EAAMytG,QAAS/9B,EAAa10B,QAAQzmB,MAC7Cm5E,EAAmBlC,EAAmB97B,EAAa10B,QAAQzD,eAAgBm0D,EAAUC,GAE3F,GAAKoD,EAAgB,CAEpB,MAAM1zD,EAAU4zD,EAAwBv/B,GAExC+6B,EAAIyE,+BAAgC,MAAO7zD,EAASqyD,EAAkBh+B,EAAa3sE,MAAO2sE,EAAa1sE,aAIvGynG,EAAI0E,oBAAqB,MAAOzB,EAAkBh+B,EAAa3sE,MAAO2sE,EAAa1sE,QAMrFynG,EAAIuE,iBAAkB,MAAO,MAkD9B,SAASK,EAAwB3/B,GAEhC,MAAM08B,EAAyBztB,EAAWtsE,IAAKq9D,GAEzC4/B,GAAoD,IAAzC5/B,EAAaC,wBAE9B,GAAKD,EAAav0B,aAAe,CAEhC,GAAKm0D,EAAS,MAAM,IAAI5mG,MAAO,6DArDjC,SAA4B8lG,EAAa9+B,GAGxC,GADiBA,GAAgBA,EAAaC,wBAChC,MAAM,IAAIjnE,MAAO,2DAI/B,GAFA+hG,EAAIkE,gBAAiB,MAAOH,IAEnB9+B,EAAav0B,eAAgBu0B,EAAav0B,aAAamzD,eAE/D,MAAM,IAAI5lG,MAAO,uEAKXi2E,EAAWtsE,IAAKq9D,EAAav0B,cAAe6wD,gBACjDt8B,EAAav0B,aAAahnC,MAAMpR,QAAU2sE,EAAa3sE,OACvD2sE,EAAav0B,aAAahnC,MAAMnR,SAAW0sE,EAAa1sE,SAEzD0sE,EAAav0B,aAAahnC,MAAMpR,MAAQ2sE,EAAa3sE,MACrD2sE,EAAav0B,aAAahnC,MAAMnR,OAAS0sE,EAAa1sE,OACtD0sE,EAAav0B,aAAa6qB,aAAc,GAIzC8mC,EAAcp9B,EAAav0B,aAAc,GAEzC,MAAMo0D,EAAoB5wB,EAAWtsE,IAAKq9D,EAAav0B,cAAe6wD,eAEtE,GAAKt8B,EAAav0B,aAAajE,SAAWnQ,GAEzC0jE,EAAImE,qBAAsB,MAAO,MAAO,KAAMW,EAAmB,OAE3D,IAAK7/B,EAAav0B,aAAajE,SAAWlQ,GAMhD,MAAM,IAAIt+B,MAAO,+BAJjB+hG,EAAImE,qBAAsB,MAAO,MAAO,KAAMW,EAAmB,IAqBjEC,CAAmBpD,EAAuBE,mBAAoB58B,QAI9D,GAAK4/B,EAAS,CAEblD,EAAuBG,mBAAqB,GAE5C,IAAM,IAAIj4G,EAAI,EAAGA,EAAI,EAAGA,IAEvBm2G,EAAIkE,gBAAiB,MAAOvC,EAAuBE,mBAAoBh4G,IACvE83G,EAAuBG,mBAAoBj4G,GAAMm2G,EAAIgF,qBACrDZ,EAA0BzC,EAAuBG,mBAAoBj4G,GAAKo7E,GAAc,QAMzF+6B,EAAIkE,gBAAiB,MAAOvC,EAAuBE,oBACnDF,EAAuBG,mBAAqB9B,EAAIgF,qBAChDZ,EAA0BzC,EAAuBG,mBAAoB78B,GAAc,GAMrF+6B,EAAIkE,gBAAiB,MAAO,MAsL7B,SAASM,EAAwBv/B,GAEhC,OAASqE,GAAYrE,EAAan0B,+BACjCzjD,KAAK4B,IAAK8uF,EAAY9Y,EAAar0B,SAAY,EAqBjD,IAAIq0D,GAAkB,EAClBC,GAAoB,EA2CxBl7G,KAAKg6F,oBA77BL,WAEC,MAAMmhB,EAAc/C,EAUpB,OARK+C,GAAejoB,GAEnBvmF,QAAQoK,KAAM,sCAAwCokG,EAAc,+CAAiDjoB,GAItHklB,GAAgB,EAET+C,GAk7BRn7G,KAAKo7G,kBAp8BL,WAEChD,EAAe,GAo8BhBp4G,KAAKq4G,aAAeA,EACpBr4G,KAAKu7F,kBA/4BL,SAA4Bh1C,EAAS+xD,GAEpC,MAAMlB,EAAoBltB,EAAWtsE,IAAK2oC,GAErCA,EAAQlD,QAAU,GAAK+zD,EAAkBoB,YAAcjyD,EAAQlD,QAEnEo1D,EAAerB,EAAmB7wD,EAAS+xD,IAK5CtrB,EAAMooB,cAAe,MAAQkD,GAC7BtrB,EAAMonB,YAAa,MAAOgD,EAAkBG,kBAo4B7Cv3G,KAAKy7F,aAh4BL,SAAuBl1C,EAAS+xD,GAE/B,MAAMlB,EAAoBltB,EAAWtsE,IAAK2oC,GAErCA,EAAQlD,QAAU,GAAK+zD,EAAkBoB,YAAcjyD,EAAQlD,QAEnEo1D,EAAerB,EAAmB7wD,EAAS+xD,IAK5CtrB,EAAMooB,cAAe,MAAQkD,GAC7BtrB,EAAMonB,YAAa,MAAOgD,EAAkBG,kBAq3B7Cv3G,KAAK04G,eAAiBA,EACtB14G,KAAKq7G,kBA5PL,SAA4BpgC,GAE3B,MAAM08B,EAAyBztB,EAAWtsE,IAAKq9D,GACzCm8B,EAAoBltB,EAAWtsE,IAAKq9D,EAAa10B,SAEvD00B,EAAa/6D,iBAAkB,UAAWw3F,GAE1CN,EAAkBG,eAAiBvB,EAAI7B,gBAEvC/hB,EAAKqE,OAAOzyC,WAEZ,MAAM62D,GAAoD,IAAzC5/B,EAAaC,wBACxBo/B,GAAkE,IAAhDr/B,EAAan0B,+BAC/B6vD,EAAex7D,EAAc8/B,IAAkBqE,EAcrD,IAVKA,GAAYrE,EAAa10B,QAAQ9D,SAAWxQ,IAAegpC,EAAa10B,QAAQzmB,OAAS4R,IAAaupC,EAAa10B,QAAQzmB,OAAS6R,KAExIspC,EAAa10B,QAAQ9D,OAASvQ,GAE9BvlC,QAAQoK,KAAM,4GAMV8jG,EAAS,CAEblD,EAAuBE,mBAAqB,GAE5C,IAAM,IAAIh4G,EAAI,EAAGA,EAAI,EAAGA,IAEvB83G,EAAuBE,mBAAoBh4G,GAAMm2G,EAAIsF,yBAQtD,GAFA3D,EAAuBE,mBAAqB7B,EAAIsF,oBAE3ChB,EAEJ,GAAKh7B,EAAW,CAEfq4B,EAAuBK,+BAAiChC,EAAIsF,oBAC5D3D,EAAuBM,yBAA2BjC,EAAIgF,qBAEtDhF,EAAIuE,iBAAkB,MAAO5C,EAAuBM,0BAEpD,MAAMhB,EAAW1rG,EAAMytG,QAAS/9B,EAAa10B,QAAQ9D,QAC/Cy0D,EAAS3rG,EAAMytG,QAAS/9B,EAAa10B,QAAQzmB,MAC7Cm5E,EAAmBlC,EAAmB97B,EAAa10B,QAAQzD,eAAgBm0D,EAAUC,GACrFtwD,EAAU4zD,EAAwBv/B,GACxC+6B,EAAIyE,+BAAgC,MAAO7zD,EAASqyD,EAAkBh+B,EAAa3sE,MAAO2sE,EAAa1sE,QAEvGynG,EAAIkE,gBAAiB,MAAOvC,EAAuBK,gCACnDhC,EAAI2E,wBAAyB,MAAO,MAAO,MAAOhD,EAAuBM,0BACzEjC,EAAIuE,iBAAkB,MAAO,MAExBt/B,EAAaz0B,cAEjBmxD,EAAuBO,yBAA2BlC,EAAIgF,qBACtDZ,EAA0BzC,EAAuBO,yBAA0Bj9B,GAAc,IAI1F+6B,EAAIkE,gBAAiB,MAAO,WAK5BvtG,QAAQoK,KAAM,mFAUjB,GAAK8jG,EAAS,CAEb7tB,EAAMonB,YAAa,MAAOgD,EAAkBG,gBAC5C2B,EAAsB,MAAOj+B,EAAa10B,QAASowD,GAEnD,IAAM,IAAI92G,EAAI,EAAGA,EAAI,EAAGA,IAEvBi6G,EAAyBnC,EAAuBE,mBAAoBh4G,GAAKo7E,EAAc,MAAO,MAAQp7E,GAIlG62G,EAA6Bz7B,EAAa10B,QAASowD,IAEvDC,EAAgB,MAAO37B,EAAa10B,QAAS00B,EAAa3sE,MAAO2sE,EAAa1sE,QAI/Ey+E,EAAMonB,YAAa,MAAO,WAI1BpnB,EAAMonB,YAAa,KAAMgD,EAAkBG,gBAC3C2B,EAAsB,KAAMj+B,EAAa10B,QAASowD,GAClDmD,EAAyBnC,EAAuBE,mBAAoB58B,EAAc,MAAO,MAEpFy7B,EAA6Bz7B,EAAa10B,QAASowD,IAEvDC,EAAgB,KAAM37B,EAAa10B,QAAS00B,EAAa3sE,MAAO2sE,EAAa1sE,QAI9Ey+E,EAAMonB,YAAa,KAAM,MAMrBn5B,EAAaz0B,aAEjBo0D,EAAwB3/B,IAoI1Bj7E,KAAKu7G,yBA9HL,SAAmCtgC,GAElC,MAAM10B,EAAU00B,EAAa10B,QAG7B,GAAKmwD,EAA6BnwD,EAFbpL,EAAc8/B,IAAkBqE,GAEO,CAE3D,MAAMpmC,EAAS+hC,EAAaC,wBAA0B,MAAQ,KACxDw6B,EAAexrB,EAAWtsE,IAAK2oC,GAAUgxD,eAE/CvqB,EAAMonB,YAAal7D,EAAQw8D,GAC3BkB,EAAgB19D,EAAQqN,EAAS00B,EAAa3sE,MAAO2sE,EAAa1sE,QAClEy+E,EAAMonB,YAAal7D,EAAQ,QAmH7Bl5C,KAAKw7G,8BA7GL,SAAwCvgC,GAEvC,GAAKA,EAAan0B,+BAEjB,GAAKw4B,EAAW,CAEf,MAAMq4B,EAAyBztB,EAAWtsE,IAAKq9D,GAE/C+6B,EAAIkE,gBAAiB,MAAOvC,EAAuBK,gCACnDhC,EAAIkE,gBAAiB,MAAOvC,EAAuBE,oBAEnD,MAAMvpG,EAAQ2sE,EAAa3sE,MACrBC,EAAS0sE,EAAa1sE,OAC5B,IAAI8qD,EAAO,MAEN4hB,EAAaz0B,cAAc6S,GAAQ,KACnC4hB,EAAax0B,gBAAgB4S,GAAQ,MAE1C28C,EAAIyF,gBAAiB,EAAG,EAAGntG,EAAOC,EAAQ,EAAG,EAAGD,EAAOC,EAAQ8qD,EAAM,MAErE28C,EAAIkE,gBAAiB,MAAOvC,EAAuBK,qCAInDrrG,QAAQoK,KAAM,oFAuFjB/W,KAAKq7F,iBApDL,SAA2B90C,EAAS+xD,GAE9B/xD,GAAWA,EAAQM,uBAEE,IAApBo0D,IAEJtuG,QAAQoK,KAAM,oHACdkkG,GAAkB,GAInB10D,EAAUA,EAAQA,SAInB8xD,EAAc9xD,EAAS+xD,IAsCxBt4G,KAAK27F,mBAlCL,SAA6Bp1C,EAAS+xD,GAEhC/xD,GAAWA,EAAQ20B,2BAEI,IAAtBggC,IAEJvuG,QAAQoK,KAAM,2HACdmkG,GAAoB,GAIrB30D,EAAUA,EAAQA,SAKnBmyD,EAAgBnyD,EAAS+xD,IAsB3B,SAASoD,GAAYj2F,EAAIuzD,EAAYqG,GAEpC,MAAMC,EAAWD,EAAaC,SA2L9B,MAAO,CAAE05B,QAzLT,SAAkBn4G,GAEjB,IAAIumC,EAEJ,GAAKvmC,IAAMuwC,GAAmB,OAAO,KACrC,GAAKvwC,IAAM+wC,GAAwB,OAAO,MAC1C,GAAK/wC,IAAMgxC,GAAwB,OAAO,MAC1C,GAAKhxC,IAAMixC,GAAuB,OAAO,MAEzC,GAAKjxC,IAAMwwC,GAAW,OAAO,KAC7B,GAAKxwC,IAAMywC,GAAY,OAAO,KAC9B,GAAKzwC,IAAM0wC,GAAoB,OAAO,KACtC,GAAK1wC,IAAM2wC,GAAU,OAAO,KAC5B,GAAK3wC,IAAM4wC,GAAkB,OAAO,KACpC,GAAK5wC,IAAM6wC,GAAY,OAAO,KAE9B,GAAK7wC,IAAM8wC,GAEV,OAAK2tC,EAAkB,MAEvBl4C,EAAY4xC,EAAWp7D,IAAK,0BAET,OAAdwpB,EAEGA,EAAUu0E,eAIV,MAMT,GAAK96G,IAAMmxC,GAAc,OAAO,KAChC,GAAKnxC,IAAMoxC,GAAY,OAAO,KAC9B,GAAKpxC,IAAMqxC,GAAa,OAAO,KAC/B,GAAKrxC,IAAMsxC,GAAkB,OAAO,KACpC,GAAKtxC,IAAMuxC,GAAuB,OAAO,KACzC,GAAKvxC,IAAMyxC,GAAc,OAAO,KAChC,GAAKzxC,IAAM0xC,GAAqB,OAAO,MACvC,GAAK1xC,IAAM2xC,GAAY,OAAO,KAI9B,GAAK3xC,IAAM4xC,GAAmB,OAAO,MACrC,GAAK5xC,IAAM6xC,GAAW,OAAO,MAC7B,GAAK7xC,IAAM8xC,GAAkB,OAAO,MACpC,GAAK9xC,IAAM+xC,GAAmB,OAAO,MACrC,GAAK/xC,IAAMgyC,GAAoB,OAAO,MAEtC,GAAKhyC,IAAMiyC,IAAwBjyC,IAAMkyC,IACxClyC,IAAMmyC,IAAyBnyC,IAAMoyC,GAAwB,CAI7D,GAFA7L,EAAY4xC,EAAWp7D,IAAK,iCAET,OAAdwpB,EASJ,OAAO,KAPP,GAAKvmC,IAAMiyC,GAAuB,OAAO1L,EAAUw0E,6BACnD,GAAK/6G,IAAMkyC,GAAwB,OAAO3L,EAAUy0E,8BACpD,GAAKh7G,IAAMmyC,GAAwB,OAAO5L,EAAU00E,8BACpD,GAAKj7G,IAAMoyC,GAAwB,OAAO7L,EAAU20E,8BAUtD,GAAKl7G,IAAMqyC,IAA2BryC,IAAMsyC,IAC3CtyC,IAAMuyC,IAA4BvyC,IAAMwyC,GAA2B,CAInE,GAFAjM,EAAY4xC,EAAWp7D,IAAK,kCAET,OAAdwpB,EASJ,OAAO,KAPP,GAAKvmC,IAAMqyC,GAA0B,OAAO9L,EAAU40E,gCACtD,GAAKn7G,IAAMsyC,GAA0B,OAAO/L,EAAU60E,gCACtD,GAAKp7G,IAAMuyC,GAA2B,OAAOhM,EAAU80E,iCACvD,GAAKr7G,IAAMwyC,GAA2B,OAAOjM,EAAU+0E,iCAUzD,GAAKt7G,IAAMyyC,GAIV,OAFAlM,EAAY4xC,EAAWp7D,IAAK,iCAET,OAAdwpB,EAEGA,EAAUg1E,0BAIV,KAMT,IAAKv7G,IAAM0yC,IAAmB1yC,IAAM2yC,MAEnCpM,EAAY4xC,EAAWp7D,IAAK,gCAET,OAAdwpB,GAAqB,CAEzB,GAAKvmC,IAAM0yC,GAAkB,OAAOnM,EAAUi1E,qBAC9C,GAAKx7G,IAAM2yC,GAAuB,OAAOpM,EAAUk1E,0BAMrD,OAAKz7G,IAAM4yC,IAAwB5yC,IAAM6yC,IAAwB7yC,IAAM8yC,IACtE9yC,IAAM+yC,IAAwB/yC,IAAMgzC,IAAwBhzC,IAAMizC,IAClEjzC,IAAMkzC,IAAwBlzC,IAAMmzC,IAAwBnzC,IAAMozC,IAClEpzC,IAAMqzC,IAAyBrzC,IAAMszC,IAAyBtzC,IAAMuzC,IACpEvzC,IAAMwzC,IAA0BxzC,IAAMyzC,IACtCzzC,IAAM2zC,IAAgC3zC,IAAM4zC,IAAgC5zC,IAAM6zC,IAClF7zC,IAAM8zC,IAAgC9zC,IAAM+zC,IAAgC/zC,IAAMg0C,IAClFh0C,IAAMi0C,IAAgCj0C,IAAMk0C,IAAgCl0C,IAAMm0C,IAClFn0C,IAAMo0C,IAAiCp0C,IAAMq0C,IAAiCr0C,IAAMs0C,IACpFt0C,IAAMu0C,IAAkCv0C,IAAMw0C,IAE9CjO,EAAY4xC,EAAWp7D,IAAK,iCAET,OAAdwpB,EAIGvmC,EAIA,MAMJA,IAAM0zC,IAEVnN,EAAY4xC,EAAWp7D,IAAK,gCAET,OAAdwpB,EAIGvmC,EAIA,MAMJA,IAAMkxC,GAELutC,EAAkB,OAEvBl4C,EAAY4xC,EAAWp7D,IAAK,uBAET,OAAdwpB,EAEGA,EAAUm1E,wBAIV,WAZT,IAwBF,SAASC,GAAarjE,EAAQ,IAE7BugC,GAAkBrgC,KAAMr5C,MAExBA,KAAKspG,QAAUnwD,EAYhB,SAASsjE,KAERhiD,GAASphB,KAAMr5C,MAEfA,KAAK8/B,KAAO,QAYb,SAAS48E,KAER18G,KAAK28G,WAAa,KAClB38G,KAAK48G,MAAQ,KACb58G,KAAK68G,MAAQ,KAmPd,SAASC,GAAcrhC,EAAUh2D,GAEhC,MAAMsxD,EAAQ/2E,KAEd,IAAIguF,EAAU,KAEV+uB,EAAyB,EAEzBC,EAAiB,KACjBC,EAAqB,cAErBC,EAAO,KAEX,MAAMC,EAAc,GACdC,EAAkB,IAAI3gG,IAItB4gG,EAAU,IAAI3jC,GACpB2jC,EAAQ1jD,OAAO/xC,OAAQ,GACvBy1F,EAAQj2F,SAAW,IAAIu9B,GAEvB,MAAM24D,EAAU,IAAI5jC,GACpB4jC,EAAQ3jD,OAAO/xC,OAAQ,GACvB01F,EAAQl2F,SAAW,IAAIu9B,GAEvB,MAAM2kD,EAAU,CAAE+T,EAASC,GAErBC,EAAW,IAAIf,GACrBe,EAAS5jD,OAAO/xC,OAAQ,GACxB21F,EAAS5jD,OAAO/xC,OAAQ,GAExB,IAAI41F,EAAoB,KACpBC,EAAmB,KAuDvB,SAASC,EAAgBv9F,GAExB,MAAMw9F,EAAaP,EAAgBx/F,IAAKuC,EAAMy9F,aAEzCD,GAEJA,EAAW1kE,cAAe,CAAEnZ,KAAM3f,EAAM2f,KAAMv/B,KAAM4f,EAAMy9F,cAM5D,SAASC,IAERT,EAAgB5/F,SAAS,SAAWmgG,EAAYC,GAE/CD,EAAWG,WAAYF,MAIxBR,EAAgBp+F,QAIhBy8D,EAASsiC,eAAgB,MACzBtiC,EAASM,gBAAiBN,EAASK,mBACnC7c,EAAU59D,OAEV01E,EAAMinC,cAAe,EAErBjnC,EAAM99B,cAAe,CAAEnZ,KAAM,eAI9B,SAASm+E,EAAyBt+G,GAEjCq9G,EAAiBr9G,EAEjBs/D,EAAUkgB,WAAY6O,GACtB/uB,EAAUz+D,QAEVu2E,EAAMinC,cAAe,EAErBjnC,EAAM99B,cAAe,CAAEnZ,KAAM,iBAqF9B,SAASo+E,EAAoB/9F,GAE5B,MAAMg+F,EAAenwB,EAAQmwB,aAI7B,IAAM,IAAIt+G,EAAI,EAAGA,EAAIs9G,EAAY76G,OAAQzC,IAExCu9G,EAAgBx0G,IAAKu1G,EAAct+G,GAAKs9G,EAAat9G,IAMtD,IAAM,IAAIA,EAAI,EAAGA,EAAIsgB,EAAMi+F,QAAQ97G,OAAQzC,IAAO,CAEjD,MAAM+9G,EAAcz9F,EAAMi+F,QAASv+G,GAC7B89G,EAAaP,EAAgBx/F,IAAKggG,GAEnCD,IAEJA,EAAW1kE,cAAe,CAAEnZ,KAAM,eAAgBv/B,KAAMq9G,IACxDR,EAAgBt/F,OAAQ8/F,IAQ1B,IAAM,IAAI/9G,EAAI,EAAGA,EAAIsgB,EAAMk+F,MAAM/7G,OAAQzC,IAAO,CAE/C,MAAM+9G,EAAcz9F,EAAMk+F,MAAOx+G,GAC3B89G,EAAaP,EAAgBx/F,IAAKggG,GAEnCD,GAEJA,EAAW1kE,cAAe,CAAEnZ,KAAM,YAAav/B,KAAMq9G,KAxNxD59G,KAAK66E,SAAU,EAEf76E,KAAKg+G,cAAe,EAEpBh+G,KAAKs+G,cAAgB,SAAWnyG,GAE/B,IAAIwxG,EAAaR,EAAahxG,GAS9B,YAPoBgN,IAAfwkG,IAEJA,EAAa,IAAIjB,GACjBS,EAAahxG,GAAUwxG,GAIjBA,EAAWY,qBAInBv+G,KAAKw+G,kBAAoB,SAAWryG,GAEnC,IAAIwxG,EAAaR,EAAahxG,GAS9B,YAPoBgN,IAAfwkG,IAEJA,EAAa,IAAIjB,GACjBS,EAAahxG,GAAUwxG,GAIjBA,EAAWc,gBAInBz+G,KAAK0+G,QAAU,SAAWvyG,GAEzB,IAAIwxG,EAAaR,EAAahxG,GAS9B,YAPoBgN,IAAfwkG,IAEJA,EAAa,IAAIjB,GACjBS,EAAahxG,GAAUwxG,GAIjBA,EAAWgB,gBAqDnB3+G,KAAK4+G,0BAA4B,SAAWj/G,GAE3Co9G,EAAyBp9G,GAEG,IAAvBo3E,EAAMinC,cAEVrxG,QAAQoK,KAAM,0EAMhB/W,KAAK6+G,sBAAwB,SAAWl/G,GAEvCs9G,EAAqBt9G,GAEO,IAAvBo3E,EAAMinC,cAEVrxG,QAAQoK,KAAM,6EAMhB/W,KAAK8+G,kBAAoB,WAExB,OAAO9B,GAIRh9G,KAAKiuF,WAAa,WAEjB,OAAOD,GAIRhuF,KAAK++G,WAAa,SAAWp/G,GAI5B,GAFAquF,EAAUruF,EAEO,OAAZquF,EAAmB,CAEvBA,EAAQ9tE,iBAAkB,SAAUw9F,GACpC1vB,EAAQ9tE,iBAAkB,cAAew9F,GACzC1vB,EAAQ9tE,iBAAkB,YAAaw9F,GACvC1vB,EAAQ9tE,iBAAkB,UAAWw9F,GACrC1vB,EAAQ9tE,iBAAkB,eAAgBw9F,GAC1C1vB,EAAQ9tE,iBAAkB,aAAcw9F,GACxC1vB,EAAQ9tE,iBAAkB,MAAO29F,GAEjC,MAAMltC,EAAalrD,EAAGu5F,wBAEW,IAA5BruC,EAAWsuC,cAEfx5F,EAAGy5F,mBAIJ,MAAMC,EAAY,CACjBC,UAAWzuC,EAAWyuC,UACtBh1E,MAAOumC,EAAWvmC,MAClBusC,MAAOhG,EAAWgG,MAClBiG,QAASjM,EAAWiM,QACpBmgC,uBAAwBA,GAInBsC,EAAY,IAAIC,aAActxB,EAASvoE,EAAI05F,GAEjDnxB,EAAQuxB,kBAAmB,CAAEF,UAAWA,IAExCrxB,EAAQwxB,sBAAuBvC,GAAqBwC,KAAMxB,GAI1DjwB,EAAQ9tE,iBAAkB,qBAAsBg+F,KAqDlD,MAAMwB,EAAa,IAAI/0D,GACjBg1D,EAAa,IAAIh1D,GAyDvB,SAASi1D,EAAcl0D,EAAQgP,GAEd,OAAXA,EAEJhP,EAAOK,YAAYjpC,KAAM4oC,EAAOlK,QAIhCkK,EAAOK,YAAY5M,iBAAkBub,EAAO3O,YAAaL,EAAOlK,QAIjEkK,EAAOC,mBAAmB7oC,KAAM4oC,EAAOK,aAActL,SAItDzgD,KAAK6/G,UAAY,SAAWn0D,GAE3B6xD,EAASllD,KAAOilD,EAAQjlD,KAAOglD,EAAQhlD,KAAO3M,EAAO2M,KACrDklD,EAASjlD,IAAMglD,EAAQhlD,IAAM+kD,EAAQ/kD,IAAM5M,EAAO4M,IAE7CklD,IAAsBD,EAASllD,MAAQolD,IAAqBF,EAASjlD,MAIzE01B,EAAQuxB,kBAAmB,CAC1BO,UAAWvC,EAASllD,KACpB0nD,SAAUxC,EAASjlD,MAGpBklD,EAAoBD,EAASllD,KAC7BolD,EAAmBF,EAASjlD,KAI7B,MAAMoC,EAAShP,EAAOgP,OAChB4uC,EAAUiU,EAASjU,QAEzBsW,EAAcrC,EAAU7iD,GAExB,IAAM,IAAI76D,EAAI,EAAGA,EAAIypG,EAAQhnG,OAAQzC,IAEpC+/G,EAActW,EAASzpG,GAAK66D,GAM7BhP,EAAOK,YAAYjpC,KAAMy6F,EAASxxD,aAElC,MAAM8C,EAAWnD,EAAOmD,SAExB,IAAM,IAAIhvD,EAAI,EAAGwO,EAAIwgD,EAASvsD,OAAQzC,EAAIwO,EAAGxO,IAE5CgvD,EAAUhvD,GAAI49D,mBAAmB,GAkBlC,OAZwB,IAAnB6rC,EAAQhnG,OA7Gd,SAAiCopD,EAAQ2xD,EAASC,GAEjDoC,EAAW3yD,sBAAuBswD,EAAQtxD,aAC1C4zD,EAAW5yD,sBAAuBuwD,EAAQvxD,aAE1C,MAAMi0D,EAAMN,EAAWpiE,WAAYqiE,GAE7BM,EAAQ5C,EAAQzxD,iBAAiB/O,SACjCqjE,EAAQ5C,EAAQ1xD,iBAAiB/O,SAKjCwb,EAAO4nD,EAAO,KAASA,EAAO,IAAO,GACrC3nD,EAAM2nD,EAAO,KAASA,EAAO,IAAO,GACpCE,GAAWF,EAAO,GAAM,GAAMA,EAAO,GACrCG,GAAcH,EAAO,GAAM,GAAMA,EAAO,GAExCI,GAAYJ,EAAO,GAAM,GAAMA,EAAO,GACtCK,GAAaJ,EAAO,GAAM,GAAMA,EAAO,GACvC1hF,EAAO65B,EAAOgoD,EACdloD,EAAQE,EAAOioD,EAIfC,EAAUP,IAAUK,EAAUC,GAC9BE,EAAUD,GAAYF,EAG5BhD,EAAQtxD,YAAY8L,UAAWnM,EAAO/rC,SAAU+rC,EAAOpD,WAAYoD,EAAOrhD,OAC1EqhD,EAAO4Q,WAAYkkD,GACnB90D,EAAO8Q,WAAY+jD,GACnB70D,EAAOK,YAAY2J,QAAShK,EAAO/rC,SAAU+rC,EAAOpD,WAAYoD,EAAOrhD,OACvEqhD,EAAOC,mBAAmB7oC,KAAM4oC,EAAOK,aAActL,SAKrD,MAAMggE,EAAQpoD,EAAOkoD,EACfG,EAAOpoD,EAAMioD,EACbI,EAAQniF,EAAOgiF,EACfI,EAASzoD,GAAU6nD,EAAMQ,GACzBK,EAAOV,EAAS7nD,EAAMooD,EAAOD,EAC7BK,EAAUV,EAAY9nD,EAAMooD,EAAOD,EAEzC/0D,EAAOE,iBAAiBsM,gBAAiByoD,EAAOC,EAAQC,EAAMC,EAASL,EAAOC,GAkE7EK,CAAwBxD,EAAUF,EAASC,GAM3CC,EAAS3xD,iBAAiB9oC,KAAMu6F,EAAQzxD,kBAIlC2xD,GAMR,IAAIyD,EAA2B,KAmE/B,MAAM/hD,EAAY,IAAIwf,GACtBxf,EAAUigB,kBAlEV,SAA2BJ,EAAMC,GAIhC,GAFAm+B,EAAOn+B,EAAMkiC,cAAejE,GAEd,OAATE,EAAgB,CAEpB,MAAMgE,EAAQhE,EAAKgE,MACb7B,EAAYrxB,EAAQmf,YAAYkS,UAEtC5jC,EAASsiC,eAAgBsB,EAAUtF,aAEnC,IAAIoH,GAAsB,EAIrBD,EAAM5+G,SAAWi7G,EAASjU,QAAQhnG,SAEtCi7G,EAASjU,QAAQhnG,OAAS,EAC1B6+G,GAAsB,GAIvB,IAAM,IAAIthH,EAAI,EAAGA,EAAIqhH,EAAM5+G,OAAQzC,IAAO,CAEzC,MAAMg6E,EAAOqnC,EAAOrhH,GACdunB,EAAWi4F,EAAUvO,YAAaj3B,GAElCnuB,EAAS49C,EAASzpG,GACxB6rD,EAAOlK,OAAOrzC,UAAW0rE,EAAKtyC,UAAUia,QACxCkK,EAAOE,iBAAiBz9C,UAAW0rE,EAAKjuB,kBACxCF,EAAOtkC,SAASxe,IAAKwe,EAAStnB,EAAGsnB,EAASrnB,EAAGqnB,EAAS9Y,MAAO8Y,EAAS7Y,QAE3D,IAAN1O,GAEJ09G,EAAS/7D,OAAO1+B,KAAM4oC,EAAOlK,SAID,IAAxB2/D,GAEJ5D,EAASjU,QAAQhoG,KAAMoqD,IAU1B,MAAMyyD,EAAenwB,EAAQmwB,aAE7B,IAAM,IAAIt+G,EAAI,EAAGA,EAAIs9G,EAAY76G,OAAQzC,IAAO,CAE/C,MAAM89G,EAAaR,EAAat9G,GAC1B+9G,EAAcO,EAAct+G,GAElC89G,EAAWl1D,OAAQm1D,EAAa7+B,EAAOi+B,GAInCgE,GAA2BA,EAA0BliC,EAAMC,MAOjE/+E,KAAKk/E,iBAAmB,SAAW/tD,GAElC6vF,EAA2B7vF,GAI5BnxB,KAAKwkD,QAAU,aAMhB,SAAS48D,GAAgBl3B,GAyGxB,SAASm3B,EAAuB9oC,EAAUxZ,GAEzCwZ,EAAS3S,QAAQjmE,MAAQo/D,EAAS6G,QAE7B7G,EAAS5hD,OAEbo7D,EAASoQ,QAAQhpF,MAAMmjB,KAAMi8C,EAAS5hD,OAIlC4hD,EAASwK,UAEbgP,EAAShP,SAAS5pE,MAAMmjB,KAAMi8C,EAASwK,UAAW3+D,eAAgBm0D,EAASyK,mBAIvEzK,EAASxlC,MAEbg/C,EAASh/C,IAAI55B,MAAQo/D,EAASxlC,KAI1BwlC,EAASmJ,WAEbqQ,EAASrQ,SAASvoE,MAAQo/D,EAASmJ,UAI/BnJ,EAASkJ,cAEbsQ,EAAStQ,YAAYtoE,MAAQo/D,EAASkJ,aAIvC,MAAME,EAAS+hB,EAAWtsE,IAAKmhD,GAAWoJ,OAE1C,GAAKA,EAAS,CAEboQ,EAASpQ,OAAOxoE,MAAQwoE,EAExBoQ,EAASyQ,WAAWrpF,MAAUwoE,EAAOoU,eAAiBpU,EAAO+T,kBAAuB,EAAI,EAExF3D,EAASlQ,aAAa1oE,MAAQo/D,EAASsJ,aACvCkQ,EAASjQ,gBAAgB3oE,MAAQo/D,EAASuJ,gBAE1C,MAAM2gB,EAAciB,EAAWtsE,IAAKuqD,GAAS0uC,mBAExB19F,IAAhB8vE,IAEJ1Q,EAAS0Q,YAAYtpF,MAAQspF,GAkC/B,IAAIq4B,EA2EAC,EAvGCxiD,EAAS8I,WAEb0Q,EAAS1Q,SAASloE,MAAQo/D,EAAS8I,SACnC0Q,EAASzQ,kBAAkBnoE,MAAQo/D,EAAS+I,mBAIxC/I,EAASgJ,QAEbwQ,EAASxQ,MAAMpoE,MAAQo/D,EAASgJ,MAChCwQ,EAASvQ,eAAeroE,MAAQo/D,EAASiJ,gBAoBrCjJ,EAASxlC,IAEb+nF,EAAaviD,EAASxlC,IAEXwlC,EAASkJ,YAEpBq5C,EAAaviD,EAASkJ,YAEXlJ,EAASwL,gBAEpB+2C,EAAaviD,EAASwL,gBAEXxL,EAASqL,UAEpBk3C,EAAaviD,EAASqL,UAEXrL,EAASmL,QAEpBo3C,EAAaviD,EAASmL,QAEXnL,EAAS2L,aAEpB42C,EAAaviD,EAAS2L,aAEX3L,EAAS4L,aAEpB22C,EAAaviD,EAAS4L,aAEX5L,EAASmJ,SAEpBo5C,EAAaviD,EAASmJ,SAEXnJ,EAAS6L,YAEpB02C,EAAaviD,EAAS6L,YAEX7L,EAAS8K,aAEpBy3C,EAAaviD,EAAS8K,aAEX9K,EAASgL,mBAEpBu3C,EAAaviD,EAASgL,mBAEXhL,EAAS+K,wBAEpBw3C,EAAaviD,EAAS+K,4BAIH3wD,IAAfmoG,IAGCA,EAAWz6D,sBAEfy6D,EAAaA,EAAW/6D,UAIY,IAAhC+6D,EAAWt+D,kBAEfs+D,EAAW19D,eAIZ20B,EAASqQ,YAAYjpF,MAAMmjB,KAAMw+F,EAAW9/D,SAUxCud,EAASgJ,MAEbw5C,EAAcxiD,EAASgJ,MAEZhJ,EAAS8I,WAEpB05C,EAAcxiD,EAAS8I,eAIH1uD,IAAhBooG,IAGCA,EAAY16D,sBAEhB06D,EAAcA,EAAYh7D,UAIW,IAAjCg7D,EAAYv+D,kBAEhBu+D,EAAY39D,eAIb20B,EAASsQ,aAAalpF,MAAMmjB,KAAMy+F,EAAY//D,SA6MhD,SAASggE,EAAyBjpC,EAAUxZ,GAE3CwZ,EAASnP,UAAUzpE,MAAQo/D,EAASqK,UACpCmP,EAASlP,UAAU1pE,MAAQo/D,EAASsK,UAE/BtK,EAAS2L,eAEb6N,EAAS7N,aAAa/qE,MAAQo/D,EAAS2L,cAInC3L,EAAS4L,eAEb4N,EAAS5N,aAAahrE,MAAQo/D,EAAS4L,cAInC5L,EAAS6L,cAEb2N,EAAS3N,YAAYjrE,MAAQo/D,EAAS6L,aAIlC7L,EAASmL,UAEbqO,EAASrO,QAAQvqE,MAAQo/D,EAASmL,QAClCqO,EAASpO,UAAUxqE,MAAQo/D,EAASoL,UAC/BpL,EAAS2G,OAASr4B,IAAWkrC,EAASpO,UAAUxqE,QAAW,IAI5Do/D,EAASqL,YAEbmO,EAASnO,UAAUzqE,MAAQo/D,EAASqL,UACpCmO,EAASjO,YAAY3qE,MAAMmjB,KAAMi8C,EAASuL,aACrCvL,EAAS2G,OAASr4B,GAAWkrC,EAASjO,YAAY3qE,MAAMw9C,UAIzD4hB,EAASwL,kBAEbgO,EAAShO,gBAAgB5qE,MAAQo/D,EAASwL,gBAC1CgO,EAAS/N,kBAAkB7qE,MAAQo/D,EAASyL,kBAC5C+N,EAAS9N,iBAAiB9qE,MAAQo/D,EAAS0L,kBAI7Byf,EAAWtsE,IAAKmhD,GAAWoJ,SAKzCoQ,EAAS1N,gBAAgBlrE,MAAQo/D,EAAS8L,iBA6I5C,MAAO,CACN42C,mBA/qBD,SAA6BlpC,EAAU/S,GAEtC+S,EAASuR,SAASnqF,MAAMmjB,KAAM0iD,EAAIroD,OAE7BqoD,EAAIk8C,OAERnpC,EAASqR,QAAQjqF,MAAQ6lE,EAAInN,KAC7BkgB,EAASsR,OAAOlqF,MAAQ6lE,EAAIlN,KAEjBkN,EAAIiiC,YAEflvB,EAASoR,WAAWhqF,MAAQ6lE,EAAIm8C,UAqqBjCC,wBA/pBD,SAAkCrpC,EAAUxZ,EAAU/+B,EAAYzxB,GAE5DwwD,EAASuM,oBAEb+1C,EAAuB9oC,EAAUxZ,GAEtBA,EAAS8iD,uBAEpBR,EAAuB9oC,EAAUxZ,GA6XnC,SAAiCwZ,EAAUxZ,GAErCA,EAAS6L,cAEb2N,EAAS3N,YAAYjrE,MAAQo/D,EAAS6L,aAhYtCk3C,CAAwBvpC,EAAUxZ,IAEvBA,EAASgjD,oBAEpBV,EAAuB9oC,EAAUxZ,GAuanC,SAA8BwZ,EAAUxZ,GAElCA,EAAS+L,cAEbyN,EAASzN,YAAYnrE,MAAQo/D,EAAS+L,aAIlC/L,EAAS6L,cAEb2N,EAAS3N,YAAYjrE,MAAQo/D,EAAS6L,aAIlC7L,EAASmL,UAEbqO,EAASrO,QAAQvqE,MAAQo/D,EAASmL,QAClCqO,EAASpO,UAAUxqE,MAAQo/D,EAASoL,UAC/BpL,EAAS2G,OAASr4B,IAAWkrC,EAASpO,UAAUxqE,QAAW,IAI5Do/D,EAASqL,YAEbmO,EAASnO,UAAUzqE,MAAQo/D,EAASqL,UACpCmO,EAASjO,YAAY3qE,MAAMmjB,KAAMi8C,EAASuL,aACrCvL,EAAS2G,OAASr4B,GAAWkrC,EAASjO,YAAY3qE,MAAMw9C,UAIzD4hB,EAASwL,kBAEbgO,EAAShO,gBAAgB5qE,MAAQo/D,EAASwL,gBAC1CgO,EAAS/N,kBAAkB7qE,MAAQo/D,EAASyL,kBAC5C+N,EAAS9N,iBAAiB9qE,MAAQo/D,EAAS0L,kBAxc3Cu3C,CAAqBzpC,EAAUxZ,IAEpBA,EAASkjD,qBAEpBZ,EAAuB9oC,EAAUxZ,GA6XnC,SAA+BwZ,EAAUxZ,GAExCwZ,EAAS9O,SAAS9pE,MAAMmjB,KAAMi8C,EAAS0K,UACvC8O,EAAS7O,UAAU/pE,MAAQ0D,KAAK2B,IAAK+5D,EAAS2K,UAAW,MAEpD3K,EAAS6L,cAEb2N,EAAS3N,YAAYjrE,MAAQo/D,EAAS6L,aAIlC7L,EAASmL,UAEbqO,EAASrO,QAAQvqE,MAAQo/D,EAASmL,QAClCqO,EAASpO,UAAUxqE,MAAQo/D,EAASoL,UAC/BpL,EAAS2G,OAASr4B,IAAWkrC,EAASpO,UAAUxqE,QAAW,IAI5Do/D,EAASqL,YAEbmO,EAASnO,UAAUzqE,MAAQo/D,EAASqL,UACpCmO,EAASjO,YAAY3qE,MAAMmjB,KAAMi8C,EAASuL,aACrCvL,EAAS2G,OAASr4B,GAAWkrC,EAASjO,YAAY3qE,MAAMw9C,UAIzD4hB,EAASwL,kBAEbgO,EAAShO,gBAAgB5qE,MAAQo/D,EAASwL,gBAC1CgO,EAAS/N,kBAAkB7qE,MAAQo/D,EAASyL,kBAC5C+N,EAAS9N,iBAAiB9qE,MAAQo/D,EAAS0L,kBA3Z3Cy3C,CAAsB3pC,EAAUxZ,IAErBA,EAASqoC,wBAEpBia,EAAuB9oC,EAAUxZ,GAE5BA,EAASojD,uBA6fhB,SAAkC5pC,EAAUxZ,GAE3CyiD,EAAyBjpC,EAAUxZ,GAEnCwZ,EAASlQ,aAAa1oE,MAAQo/D,EAASsJ,aAEvCkQ,EAAS5O,UAAUhqE,MAAQo/D,EAAS4K,UACpC4O,EAAS3O,mBAAmBjqE,MAAQo/D,EAAS6K,mBACxC7K,EAASuK,OAAQiP,EAASjP,MAAM3pE,MAAMmjB,KAAMi8C,EAASuK,OAErDvK,EAAS8K,eAEb0O,EAAS1O,aAAalqE,MAAQo/D,EAAS8K,cAInC9K,EAAS+K,wBAEbyO,EAASzO,sBAAsBnqE,MAAQo/D,EAAS+K,uBAI5C/K,EAASgL,qBAEbwO,EAASvO,qBAAqBrqE,MAAMmjB,KAAMi8C,EAASiL,sBACnDuO,EAASxO,mBAAmBpqE,MAAQo/D,EAASgL,mBAExChL,EAAS2G,OAASr4B,GAEtBkrC,EAASvO,qBAAqBrqE,MAAMw9C,UAMtCo7B,EAASsgB,aAAal5F,MAAQo/D,EAAS85B,aAElC95B,EAAS+5B,kBAEbvgB,EAASugB,gBAAgBn5F,MAAQo/D,EAAS+5B,iBAliBzCspB,CAAyB7pC,EAAUxZ,GAInCyiD,EAAyBjpC,EAAUxZ,IAIzBA,EAASsjD,sBAEpBhB,EAAuB9oC,EAAUxZ,GA8hBnC,SAAgCwZ,EAAUxZ,GAEpCA,EAASkL,SAEbsO,EAAStO,OAAOtqE,MAAQo/D,EAASkL,QAI7BlL,EAASmL,UAEbqO,EAASrO,QAAQvqE,MAAQo/D,EAASmL,QAClCqO,EAASpO,UAAUxqE,MAAQo/D,EAASoL,UAC/BpL,EAAS2G,OAASr4B,IAAWkrC,EAASpO,UAAUxqE,QAAW,IAI5Do/D,EAASqL,YAEbmO,EAASnO,UAAUzqE,MAAQo/D,EAASqL,UACpCmO,EAASjO,YAAY3qE,MAAMmjB,KAAMi8C,EAASuL,aACrCvL,EAAS2G,OAASr4B,GAAWkrC,EAASjO,YAAY3qE,MAAMw9C,UAIzD4hB,EAASwL,kBAEbgO,EAAShO,gBAAgB5qE,MAAQo/D,EAASwL,gBAC1CgO,EAAS/N,kBAAkB7qE,MAAQo/D,EAASyL,kBAC5C+N,EAAS9N,iBAAiB9qE,MAAQo/D,EAAS0L,kBAzjB3C63C,CAAuB/pC,EAAUxZ,IAEtBA,EAASquC,qBAEpBiU,EAAuB9oC,EAAUxZ,GA2jBnC,SAA+BwZ,EAAUxZ,GAEnCA,EAASwL,kBAEbgO,EAAShO,gBAAgB5qE,MAAQo/D,EAASwL,gBAC1CgO,EAAS/N,kBAAkB7qE,MAAQo/D,EAASyL,kBAC5C+N,EAAS9N,iBAAiB9qE,MAAQo/D,EAAS0L,kBAhkB3C83C,CAAsBhqC,EAAUxZ,IAErBA,EAASsuC,wBAEpBgU,EAAuB9oC,EAAUxZ,GAkkBnC,SAAkCwZ,EAAUxZ,GAEtCA,EAASwL,kBAEbgO,EAAShO,gBAAgB5qE,MAAQo/D,EAASwL,gBAC1CgO,EAAS/N,kBAAkB7qE,MAAQo/D,EAASyL,kBAC5C+N,EAAS9N,iBAAiB9qE,MAAQo/D,EAAS0L,kBAI5C8N,EAASmU,kBAAkB/sF,MAAMmjB,KAAMi8C,EAAS2tB,mBAChDnU,EAASoU,aAAahtF,MAAQo/D,EAAS4tB,aACvCpU,EAASqU,YAAYjtF,MAAQo/D,EAAS6tB,YA7kBrC41B,CAAyBjqC,EAAUxZ,IAExBA,EAAS0jD,sBAEpBpB,EAAuB9oC,EAAUxZ,GA6kBnC,SAAgCwZ,EAAUxZ,GAEpCA,EAASmL,UAEbqO,EAASrO,QAAQvqE,MAAQo/D,EAASmL,QAClCqO,EAASpO,UAAUxqE,MAAQo/D,EAASoL,UAC/BpL,EAAS2G,OAASr4B,IAAWkrC,EAASpO,UAAUxqE,QAAW,IAI5Do/D,EAASqL,YAEbmO,EAASnO,UAAUzqE,MAAQo/D,EAASqL,UACpCmO,EAASjO,YAAY3qE,MAAMmjB,KAAMi8C,EAASuL,aACrCvL,EAAS2G,OAASr4B,GAAWkrC,EAASjO,YAAY3qE,MAAMw9C,UAIzD4hB,EAASwL,kBAEbgO,EAAShO,gBAAgB5qE,MAAQo/D,EAASwL,gBAC1CgO,EAAS/N,kBAAkB7qE,MAAQo/D,EAASyL,kBAC5C+N,EAAS9N,iBAAiB9qE,MAAQo/D,EAAS0L,kBAlmB3Ci4C,CAAuBnqC,EAAUxZ,IAEtBA,EAAS4jD,qBA8NtB,SAA8BpqC,EAAUxZ,GAEvCwZ,EAASoQ,QAAQhpF,MAAMmjB,KAAMi8C,EAAS5hD,OACtCo7D,EAAS3S,QAAQjmE,MAAQo/D,EAAS6G,QA/NjCg9C,CAAqBrqC,EAAUxZ,GAE1BA,EAAS8jD,sBAiOhB,SAA8BtqC,EAAUxZ,GAEvCwZ,EAAStN,SAAStrE,MAAQo/D,EAASkM,SACnCsN,EAAS6T,UAAUzsF,MAAQo/D,EAASkM,SAAWlM,EAASmM,QACxDqN,EAASluE,MAAM1K,MAAQo/D,EAAS10D,MAnO9By4G,CAAqBvqC,EAAUxZ,IAIrBA,EAASgkD,iBAmOtB,SAAgCxqC,EAAUxZ,EAAU/+B,EAAYzxB,GAE/DgqE,EAASoQ,QAAQhpF,MAAMmjB,KAAMi8C,EAAS5hD,OACtCo7D,EAAS3S,QAAQjmE,MAAQo/D,EAAS6G,QAClC2S,EAAS34D,KAAKjgB,MAAQo/D,EAASn/C,KAAOogB,EACtCu4C,EAASluE,MAAM1K,MAAiB,GAAT4O,EAElBwwD,EAASxlC,MAEbg/C,EAASh/C,IAAI55B,MAAQo/D,EAASxlC,KAI1BwlC,EAASmJ,WAEbqQ,EAASrQ,SAASvoE,MAAQo/D,EAASmJ,UAQpC,IAAIo5C,EAECviD,EAASxlC,IAEb+nF,EAAaviD,EAASxlC,IAEXwlC,EAASmJ,WAEpBo5C,EAAaviD,EAASmJ,eAIH/uD,IAAfmoG,KAEiC,IAAhCA,EAAWt+D,kBAEfs+D,EAAW19D,eAIZ20B,EAASqQ,YAAYjpF,MAAMmjB,KAAMw+F,EAAW9/D,SA5Q5CwhE,CAAuBzqC,EAAUxZ,EAAU/+B,EAAYzxB,GAE5CwwD,EAASkkD,iBAgRtB,SAAiC1qC,EAAUxZ,GAE1CwZ,EAASoQ,QAAQhpF,MAAMmjB,KAAMi8C,EAAS5hD,OACtCo7D,EAAS3S,QAAQjmE,MAAQo/D,EAAS6G,QAClC2S,EAASv3D,SAASrhB,MAAQo/D,EAAS/9C,SAE9B+9C,EAASxlC,MAEbg/C,EAASh/C,IAAI55B,MAAQo/D,EAASxlC,KAI1BwlC,EAASmJ,WAEbqQ,EAASrQ,SAASvoE,MAAQo/D,EAASmJ,UAQpC,IAAIo5C,EAECviD,EAASxlC,IAEb+nF,EAAaviD,EAASxlC,IAEXwlC,EAASmJ,WAEpBo5C,EAAaviD,EAASmJ,eAIH/uD,IAAfmoG,KAEiC,IAAhCA,EAAWt+D,kBAEfs+D,EAAW19D,eAIZ20B,EAASqQ,YAAYjpF,MAAMmjB,KAAMw+F,EAAW9/D,SAxT5C0hE,CAAwB3qC,EAAUxZ,GAEvBA,EAASokD,kBAEpB5qC,EAASp7D,MAAMxd,MAAMmjB,KAAMi8C,EAAS5hD,OACpCo7D,EAAS3S,QAAQjmE,MAAQo/D,EAAS6G,SAEvB7G,EAASkb,mBAEpBlb,EAASwa,oBAAqB,KA4lBjC,SAAS6pC,GAAe3kD,GAIvB,MAAMhd,OAAgCtoC,KAFtCslD,EAAaA,GAAc,IAEAn5C,OAAuBm5C,EAAWn5C,OAZ9D,WAEC,MAAMA,EAASvH,SAASC,gBAAiB,+BAAgC,UAEzE,OADAsH,EAAOlH,MAAMykB,QAAU,QAChBvd,EAQ+D+9F,GACrEC,OAAkCnqG,IAAvBslD,EAAWl7C,QAAwBk7C,EAAWl7C,QAAU,KAEnEggG,OAA8BpqG,IAArBslD,EAAWr0B,OAAsBq0B,EAAWr0B,MACrDo5E,OAA8BrqG,IAArBslD,EAAWkY,OAAsBlY,EAAWkY,MACrD8sC,OAAkCtqG,IAAvBslD,EAAWme,SAAwBne,EAAWme,QACzD8mC,OAAsCvqG,IAAzBslD,EAAW2gD,WAA0B3gD,EAAW2gD,UAC7DuE,OAAwDxqG,IAAlCslD,EAAWiJ,oBAAmCjJ,EAAWiJ,mBAC/Ek8C,OAA8DzqG,IAArCslD,EAAWolD,uBAAsCplD,EAAWolD,sBACrFC,OAAkD3qG,IAA/BslD,EAAWslD,gBAAgCtlD,EAAWslD,gBAAkB,UAC3FC,OAA4E7qG,IAA5CslD,EAAWwlD,8BAA6CxlD,EAAWwlD,6BAEpG,IAAIjuB,EAAoB,KACpBkuB,EAAqB,KAKzB,MAAMC,EAAmB,GAIzBnkH,KAAKokH,WAAa3iE,EAGlBzhD,KAAK6kG,MAAQ,CAMZC,mBAAmB,GAKpB9kG,KAAKmuF,WAAY,EACjBnuF,KAAKouF,gBAAiB,EACtBpuF,KAAKquF,gBAAiB,EACtBruF,KAAKsuF,kBAAmB,EAIxBtuF,KAAKqkH,aAAc,EAInBrkH,KAAK+mE,eAAiB,GACtB/mE,KAAKm0F,sBAAuB,EAI5Bn0F,KAAK8jE,YAAc,EACnB9jE,KAAKukG,eAAiBnuD,GAItBp2C,KAAKikG,yBAA0B,EAI/BjkG,KAAKuuF,YAAc7+C,EACnB1vC,KAAKskH,oBAAsB,EAI3BtkH,KAAK0nG,gBAAkB,EACvB1nG,KAAK2nG,gBAAkB,EAIvB,MAAM4c,EAAQvkH,KAEd,IAAIwkH,GAAiB,EAIjBC,EAAe,KAEfC,EAAyB,EACzBC,EAA4B,EAC5BC,EAAuB,KACvBC,EAAsB,KACtBC,GAAuB,EAEvBC,EAAiB,KAErB,MAAMC,EAAmB,IAAIrgE,GACvBsgE,EAAkB,IAAItgE,GAC5B,IAAIugE,EAAsB,KAItBC,EAAS1jE,EAAQnzC,MACjB82G,EAAU3jE,EAAQlzC,OAElB82G,EAAc,EACdC,EAAc,KACdC,EAAmB,KAEvB,MAAM3X,EAAY,IAAIjpD,GAAS,EAAG,EAAGwgE,EAAQC,GACvCI,EAAW,IAAI7gE,GAAS,EAAG,EAAGwgE,EAAQC,GAC5C,IAAIK,GAAe,EAInB,MAAMhY,EAAW,IAAI1wB,GAIrB,IAAI2oC,GAAmB,EACnBC,GAAwB,EAI5B,MAAMC,EAAoB,IAAI1xD,GAExB2xD,EAAW,IAAIl7D,GAEfm7D,EAAc,CAAEz5B,WAAY,KAAM7mB,IAAK,KAAM2hC,YAAa,KAAM4e,iBAAkB,KAAMh4B,SAAS,GAEvG,SAASi4B,IAER,OAAgC,OAAzBpB,EAAgCS,EAAc,EAMtD,IAiFIrsC,EAAYqG,EAAc2N,EAAOoF,EACjClI,EAAYlmC,EAAU+oC,EAAUpc,EAAY9S,EAAYovB,EACxDg5B,EAAcnoD,EAAWooD,GAAajZ,GAAcl0B,GAEpDsT,GAAY85B,GAAcC,GAAgBC,GAE1C96G,GAAOqjF,GAvFPonB,GAAMsN,EAEV,SAASllF,GAAYkoF,EAAcC,GAElC,IAAM,IAAI1mH,EAAI,EAAGA,EAAIymH,EAAahkH,OAAQzC,IAAO,CAEhD,MAAM2mH,EAAcF,EAAczmH,GAC5B0jB,EAAUk+B,EAAQrjB,WAAYooF,EAAaD,GACjD,GAAiB,OAAZhjG,EAAmB,OAAOA,EAIhC,OAAO,KAIR,IAEC,MAAMgjG,EAAoB,CACzBn8E,MAAOm5E,EACP5sC,MAAO6sC,EACP5mC,QAAS6mC,EACTrE,UAAWsE,EACXh8C,mBAAoBi8C,EACpBE,sBAAuBD,EACvBG,gBAAiBD,EACjBG,6BAA8BD,GAQ/B,GAHAviE,EAAQvhC,iBAAkB,mBAAoBumG,IAAe,GAC7DhlE,EAAQvhC,iBAAkB,uBAAwBwmG,IAAkB,GAEvD,OAAR1Q,GAAe,CAEnB,MAAMsQ,EAAe,CAAE,SAAU,QAAS,sBAU1C,IARgC,IAA3B/B,EAAMoC,kBAEVL,EAAaM,QAId5Q,GAAM53E,GAAYkoF,EAAcC,GAEnB,OAARvQ,GAEJ,MAAK53E,GAAYkoF,GAEV,IAAIryG,MAAO,+DAIX,IAAIA,MAAO,sCAUkBkF,IAAjC68F,GAAInjB,2BAERmjB,GAAInjB,yBAA2B,WAE9B,MAAO,CAAE,SAAY,EAAG,SAAY,EAAG,UAAa,KAMrD,MAAQ3wD,GAGT,MADAv1B,QAAQu1B,MAAO,wBAA0BA,EAAM2kF,SACzC3kF,EAYP,SAAS4kF,KAER9tC,EAAa,IAAImd,GAAiB6f,IAElC32B,EAAe,IAAIqT,GAAmBsjB,GAAKh9B,EAAYva,IAExB,IAA1B4gB,EAAaC,WAEjBtG,EAAWp7D,IAAK,uBAChBo7D,EAAWp7D,IAAK,qBAChBo7D,EAAWp7D,IAAK,0BAChBo7D,EAAWp7D,IAAK,iCAChBo7D,EAAWp7D,IAAK,4BAChBo7D,EAAWp7D,IAAK,0BAChBo7D,EAAWp7D,IAAK,2BAChBo7D,EAAWp7D,IAAK,2BAIjBo7D,EAAWp7D,IAAK,4BAEhBrS,GAAQ,IAAImwG,GAAY1F,GAAKh9B,EAAYqG,GAEzC2N,EAAQ,IAAIikB,GAAY+E,GAAKh9B,EAAYqG,GACzC2N,EAAM3mC,QAAS4+D,EAAgBniG,KAAM0iG,GAAW56G,eAAgBy6G,GAAcj4F,SAC9E4/D,EAAM5lE,SAAU49F,EAAiBliG,KAAM8qF,GAAYhjG,eAAgBy6G,GAAcj4F,SAEjFglE,EAAO,IAAI+E,GAAW6e,IACtB9rB,EAAa,IAAIoe,GACjBtkD,EAAW,IAAI+xD,GAAeC,GAAKh9B,EAAYgU,EAAO9C,EAAY7K,EAAc9zE,GAAO6mF,GACvFrF,EAAW,IAAI4I,GAAe4uB,GAC9B5zC,EAAa,IAAIyO,GAAiB42B,GAAK32B,GACvCuP,GAAgB,IAAIH,GAAoBunB,GAAKh9B,EAAYrI,EAAY0O,GACrExhB,EAAa,IAAIw4B,GAAiB2f,GAAKrlC,EAAYyhB,EAAMxD,IACzD3B,EAAU,IAAIoL,GAAc2d,GAAKn4C,EAAY8S,EAAYyhB,GACzD+zB,GAAe,IAAIxuB,GAAmBqe,IACtCj9B,GAAW,IAAIib,GAAe9J,GAC9B+7B,EAAe,IAAIlgB,GAAewe,EAAOx3B,EAAU/T,EAAYqG,EAAcuP,GAAe7V,IAC5Fjb,EAAY,IAAIsjD,GAAgBl3B,GAChCg8B,GAAc,IAAI9c,GAAkBlf,GACpC+iB,GAAe,IAAID,GAAmBh0B,EAAYqG,GAClDgN,GAAa,IAAIS,GAAiBy3B,EAAOx3B,EAAUC,EAAOC,EAAS02B,GAEnEyC,GAAiB,IAAIj0B,GAAqB6jB,GAAKh9B,EAAYoZ,EAAM/S,GACjEgnC,GAAwB,IAAIpvB,GAA4B+e,GAAKh9B,EAAYoZ,EAAM/S,GAE/E+S,EAAKkF,SAAW2uB,EAAa3uB,SAE7BitB,EAAMllC,aAAeA,EACrBklC,EAAMvrC,WAAaA,EACnBurC,EAAMr6B,WAAaA,EACnBq6B,EAAM2B,YAAcA,GACpB3B,EAAMv3B,MAAQA,EACdu3B,EAAMnyB,KAAOA,EAId00B,KAIA,MAAMlrC,GAAK,IAAIkhC,GAAcyH,EAAOvO,IAEpCh2G,KAAK47E,GAAKA,GAIV,MAAMosB,GAAY,IAAIsF,GAAgBiX,EAAOt3B,EAAS5N,EAAa+T,gBA4RnE,SAASqzB,GAAetmG,GAEvBA,EAAMiW,iBAENzpB,QAAQC,IAAK,sCAEb43G,GAAiB,EAIlB,SAASkC,KAER/5G,QAAQC,IAAK,0CAEb43G,GAAiB,EAEjBsC,KAID,SAASC,GAAmB5mG,GAE3B,MAAM4+C,EAAW5+C,EAAM+4B,OAEvB6lB,EAASnwC,oBAAqB,UAAWm4F,IAQ1C,SAA6BhoD,GAE5BioD,GAAiCjoD,GAEjCmrB,EAAWppD,OAAQi+B,GAVnBkoD,CAAoBloD,GAerB,SAASioD,GAAiCjoD,GAEzC,MAAMmoD,EAAch9B,EAAWtsE,IAAKmhD,GAAWl2C,aAE1B1P,IAAhB+tG,GAEJjB,EAAa7d,eAAgB8e,GAzU/BlnH,KAAKgoG,UAAYA,GAIjBhoG,KAAKo+B,WAAa,WAEjB,OAAO43E,IAIRh2G,KAAKg/G,qBAAuB,WAE3B,OAAOhJ,GAAIgJ,wBAIZh/G,KAAKmnH,iBAAmB,WAEvB,MAAM//E,EAAY4xC,EAAWp7D,IAAK,sBAC7BwpB,GAAYA,EAAUggF,eAI5BpnH,KAAKqnH,oBAAsB,WAE1B,MAAMjgF,EAAY4xC,EAAWp7D,IAAK,sBAC7BwpB,GAAYA,EAAUkgF,kBAI5BtnH,KAAKunH,cAAgB,WAEpB,OAAOlC,GAIRrlH,KAAKwnH,cAAgB,SAAW7nH,QAEhBwZ,IAAVxZ,IAEL0lH,EAAc1lH,EAEdK,KAAK0c,QAASyoG,EAAQC,GAAS,KAIhCplH,KAAKouD,QAAU,SAAWlV,GAUzB,YARgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,mEAEdmiC,EAAS,IAAI8C,IAIP9C,EAAOtwC,IAAKu8G,EAAQC,IAI5BplH,KAAK0c,QAAU,SAAWpO,EAAOC,EAAQk5G,GAEnC7rC,GAAGoiC,aAEPrxG,QAAQoK,KAAM,0EAKfouG,EAAS72G,EACT82G,EAAU72G,EAEVkzC,EAAQnzC,MAAQjL,KAAK+pB,MAAO9e,EAAQ+2G,GACpC5jE,EAAQlzC,OAASlL,KAAK+pB,MAAO7e,EAAS82G,IAEjB,IAAhBoC,IAEJhmE,EAAQrjC,MAAM9P,MAAQA,EAAQ,KAC9BmzC,EAAQrjC,MAAM7P,OAASA,EAAS,MAIjCvO,KAAK0nH,YAAa,EAAG,EAAGp5G,EAAOC,KAIhCvO,KAAK2nH,qBAAuB,SAAWzuE,GAUtC,YARgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,gFAEdmiC,EAAS,IAAI8C,IAIP9C,EAAOtwC,IAAKu8G,EAASE,EAAaD,EAAUC,GAAcj4F,SAIlEptB,KAAK4nH,qBAAuB,SAAWt5G,EAAOC,EAAQyxB,GAErDmlF,EAAS72G,EACT82G,EAAU72G,EAEV82G,EAAcrlF,EAEdyhB,EAAQnzC,MAAQjL,KAAK+pB,MAAO9e,EAAQ0xB,GACpCyhB,EAAQlzC,OAASlL,KAAK+pB,MAAO7e,EAASyxB,GAEtChgC,KAAK0nH,YAAa,EAAG,EAAGp5G,EAAOC,IAIhCvO,KAAK6nH,mBAAqB,SAAW3uE,GAUpC,YARgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,8EAEdmiC,EAAS,IAAIyL,IAIPzL,EAAOp2B,KAAMkiG,IAIrBhlH,KAAK8wG,YAAc,SAAW53D,GAE7B,OAAOA,EAAOp2B,KAAM8qF,IAIrB5tG,KAAK0nH,YAAc,SAAW5nH,EAAGC,EAAGuO,EAAOC,GAErCzO,EAAEu4E,UAENu1B,EAAUhlG,IAAK9I,EAAEA,EAAGA,EAAEC,EAAGD,EAAEK,EAAGL,EAAEwQ,GAIhCs9F,EAAUhlG,IAAK9I,EAAGC,EAAGuO,EAAOC,GAI7By+E,EAAM5lE,SAAU49F,EAAiBliG,KAAM8qF,GAAYhjG,eAAgBy6G,GAAcj4F,UAIlFptB,KAAK8nH,WAAa,SAAW5uE,GAE5B,OAAOA,EAAOp2B,KAAM0iG,IAIrBxlH,KAAK+nH,WAAa,SAAWjoH,EAAGC,EAAGuO,EAAOC,GAEpCzO,EAAEu4E,UAENmtC,EAAS58G,IAAK9I,EAAEA,EAAGA,EAAEC,EAAGD,EAAEK,EAAGL,EAAEwQ,GAI/Bk1G,EAAS58G,IAAK9I,EAAGC,EAAGuO,EAAOC,GAI5By+E,EAAM3mC,QAAS4+D,EAAgBniG,KAAM0iG,GAAW56G,eAAgBy6G,GAAcj4F,UAI/EptB,KAAKgoH,eAAiB,WAErB,OAAOvC,GAIRzlH,KAAKswG,eAAiB,SAAW2X,GAEhCj7B,EAAMsjB,eAAgBmV,EAAewC,IAItCjoH,KAAKkoH,cAAgB,SAAWC,GAE/B7C,EAAc6C,GAIfnoH,KAAKooH,mBAAqB,SAAWD,GAEpC5C,EAAmB4C,GAMpBnoH,KAAKytF,cAAgB,SAAWv0C,GAU/B,YARgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,uEAEdmiC,EAAS,IAAIrQ,IAIPqQ,EAAOp2B,KAAMupE,GAAWoB,kBAIhCztF,KAAK0tF,cAAgB,WAEpBrB,GAAWqB,cAAcp7D,MAAO+5D,GAAY95D,YAI7CvyB,KAAK2tF,cAAgB,WAEpB,OAAOtB,GAAWsB,iBAInB3tF,KAAK4tF,cAAgB,WAEpBvB,GAAWuB,cAAct7D,MAAO+5D,GAAY95D,YAI7CvyB,KAAKgf,MAAQ,SAAW7B,EAAOw5D,EAAOiG,GAErC,IAAIyrC,EAAO,QAEIlvG,IAAVgE,GAAuBA,KAAQkrG,GAAQ,aAC7BlvG,IAAVw9D,GAAuBA,KAAQ0xC,GAAQ,WAC3BlvG,IAAZyjE,GAAyBA,KAAUyrC,GAAQ,MAEhDrS,GAAIh3F,MAAOqpG,IAIZroH,KAAK2nB,WAAa,WAEjB3nB,KAAKgf,OAAO,GAAM,GAAO,IAI1Bhf,KAAK+xG,WAAa,WAEjB/xG,KAAKgf,OAAO,GAAO,GAAM,IAI1Bhf,KAAK4yG,aAAe,WAEnB5yG,KAAKgf,OAAO,GAAO,GAAO,IAM3Bhf,KAAKwkD,QAAU,WAEd/C,EAAQ7yB,oBAAqB,mBAAoB63F,IAAe,GAChEhlE,EAAQ7yB,oBAAqB,uBAAwB83F,IAAkB,GAEvER,GAAY1hE,UACZyoD,GAAazoD,UACb0lC,EAAW1lC,UACXuoC,EAASvoC,UACTyoC,EAAQzoC,UACRoqC,GAAcpqC,UAEdo3B,GAAGp3B,UAEHya,GAAU59D,QAuEXrB,KAAKsoH,sBAAwB,SAAWt6D,EAAQnlC,GAE/C+lE,GAAcc,iBAEd,MAAMnQ,EAAU2K,EAAWtsE,IAAKowC,GAE3BA,EAAOu6D,eAAkBhpC,EAAQ5/D,WAAW4/D,EAAQ5/D,SAAWq2F,GAAIzvF,gBACnEynC,EAAOw6D,aAAgBjpC,EAAQ/nD,SAAS+nD,EAAQ/nD,OAASw+E,GAAIzvF,gBAC7DynC,EAAOy6D,SAAYlpC,EAAQ76B,KAAK66B,EAAQ76B,GAAKsxD,GAAIzvF,gBACjDynC,EAAO06D,YAAenpC,EAAQpiE,QAAQoiE,EAAQpiE,MAAQ64F,GAAIzvF,gBAE/D,MAAM2qE,EAAoBroE,EAAQsoE,gBAE7BnjC,EAAOu6D,eAEXvS,GAAIrvF,WAAY,MAAO44D,EAAQ5/D,UAC/Bq2F,GAAInvF,WAAY,MAAOmnC,EAAO26D,cAAe,OAE7C/5B,GAAce,gBAAiBuB,EAAkBvxE,UACjDq2F,GAAI/uF,oBAAqBiqE,EAAkBvxE,SAAU,EAAG,MAAM,EAAO,EAAG,IAIpEquC,EAAOw6D,aAEXxS,GAAIrvF,WAAY,MAAO44D,EAAQ/nD,QAC/Bw+E,GAAInvF,WAAY,MAAOmnC,EAAO46D,YAAa,OAE3Ch6B,GAAce,gBAAiBuB,EAAkB15D,QACjDw+E,GAAI/uF,oBAAqBiqE,EAAkB15D,OAAQ,EAAG,MAAM,EAAO,EAAG,IAIlEw2B,EAAOy6D,SAEXzS,GAAIrvF,WAAY,MAAO44D,EAAQ76B,IAC/BsxD,GAAInvF,WAAY,MAAOmnC,EAAO66D,QAAS,OAEvCj6B,GAAce,gBAAiBuB,EAAkBxsC,IACjDsxD,GAAI/uF,oBAAqBiqE,EAAkBxsC,GAAI,EAAG,MAAM,EAAO,EAAG,IAI9DsJ,EAAO06D,YAEX1S,GAAIrvF,WAAY,MAAO44D,EAAQpiE,OAC/B64F,GAAInvF,WAAY,MAAOmnC,EAAO86D,WAAY,OAE1Cl6B,GAAce,gBAAiBuB,EAAkB/zE,OACjD64F,GAAI/uF,oBAAqBiqE,EAAkB/zE,MAAO,EAAG,MAAM,EAAO,EAAG,IAItEyxE,GAAckB,0BAEdkmB,GAAIxuF,WAAY,EAAG,EAAGwmC,EAAOV,OAE7BU,EAAOV,MAAQ,GAIhBttD,KAAK2uG,mBAAqB,SAAWjjD,EAAQgwB,EAAOltB,EAAUuQ,EAAU/Q,EAAQghB,GAEhE,OAAV0M,IAAiBA,EAAQoqC,GAE9B,MAAMvQ,EAAgBvnD,EAAOsQ,QAAUtQ,EAAOjC,YAAYlhC,cAAgB,EAEpEhC,EAAUkgG,GAAYr9D,EAAQgwB,EAAO3c,EAAU/Q,GAErDg/B,EAAMsoB,YAAav2C,EAAUw2C,GAI7B,IAAIppG,EAAQqiD,EAASriD,MACrB,MAAMwT,EAAW6uC,EAASmiB,WAAWhxD,SAIrC,GAAe,OAAVxT,GAEJ,QAAkBgN,IAAbwG,GAA6C,IAAnBA,EAAS2tC,MAAc,YAEhD,GAAqB,IAAhBnhD,EAAMmhD,MAEjB,OAMD,IAiBI1P,EAjBAorE,EAAc,GAEU,IAAvBjqD,EAASwJ,YAEbp8D,EAAQ0xD,EAAWk5B,sBAAuBvoC,GAC1Cw6D,EAAc,IAIVjqD,EAAS6J,cAAgB7J,EAASoM,eAEtCg7C,GAAa19D,OAAQuF,EAAQQ,EAAUuQ,EAAUl2C,GAIlD+lE,GAAcwB,MAAOpiC,EAAQ+Q,EAAUl2C,EAAS2lC,EAAUriD,GAG1D,IAAIsvE,EAAW2qC,GAEA,OAAVj6G,IAEJyxC,EAAY+yB,EAAW/yD,IAAKzR,GAE5BsvE,EAAW4qC,GACX5qC,EAASxK,SAAUrzB,IAMpB,MAAMqrE,EAAwB,OAAV98G,EAAmBA,EAAMmhD,MAAQ3tC,EAAS2tC,MAExD47D,EAAa16D,EAASsiB,UAAUtwE,MAAQwoH,EACxCG,EAAa36D,EAASsiB,UAAUxjB,MAAQ07D,EAExC/xC,EAAuB,OAAVjI,EAAiBA,EAAMxuE,MAAQwoH,EAAc,EAC1DjxC,EAAuB,OAAV/I,EAAiBA,EAAM1hB,MAAQ07D,EAAc5lH,EAAAA,EAE1DgmH,EAAY/lH,KAAK2B,IAAKkkH,EAAYjyC,GAClCoyC,EAAUhmH,KAAK4B,IAAKgkH,EAAWC,EAAaC,EAAYlyC,EAAac,GAAe,EAEpFuxC,EAAYjmH,KAAK2B,IAAK,EAAGqkH,EAAUD,EAAY,GAErD,GAAmB,IAAdE,EAAL,CAIA,GAAKt7D,EAAOsQ,QAEiB,IAAvBS,EAASwJ,WAEbykB,EAAMwoB,aAAcz2C,EAASyJ,mBAAqBw9C,KAClDvqC,EAAS6W,QAAS,IAIlB7W,EAAS6W,QAAS,QAIb,GAAKtkC,EAAOuQ,OAAS,CAE3B,IAAInhD,EAAY2hD,EAASiM,eAEN7xD,IAAdiE,IAA0BA,EAAY,GAE3C4vE,EAAMwoB,aAAcp4F,EAAY4oG,KAE3Bh4D,EAAOu7D,eAEX9tC,EAAS6W,QAAS,GAEPtkC,EAAOw7D,WAElB/tC,EAAS6W,QAAS,GAIlB7W,EAAS6W,QAAS,QAIRtkC,EAAOwQ,SAElBid,EAAS6W,QAAS,GAEPtkC,EAAOy7D,UAElBhuC,EAAS6W,QAAS,GAInB,GAAKtkC,EAAOoQ,gBAEXqd,EAAS8W,gBAAiB62B,EAAWE,EAAWt7D,EAAOV,YAEjD,GAAKkB,EAASyiC,0BAA4B,CAEhD,MAAMuG,EAAgBn0F,KAAK4B,IAAKupD,EAASgpC,cAAehpC,EAAS+iC,mBAEjE9V,EAAS8W,gBAAiB62B,EAAWE,EAAW9xB,QAIhD/b,EAASO,OAAQotC,EAAWE,KAQ9BtpH,KAAK0pH,QAAU,SAAWhuC,EAAOhwB,GAEhCw4D,EAAqBjX,GAAarvF,IAAK89D,GACvCwoC,EAAmBjvB,OAEnBvZ,EAAMne,iBAAiB,SAAWvP,GAE5BA,EAAO4O,SAAW5O,EAAO2L,OAAO/X,KAAM8J,EAAOiO,UAEjDuqD,EAAmBrX,UAAW7+C,GAEzBA,EAAOmN,YAEX+oD,EAAmBpX,WAAY9+C,OAQlCk2D,EAAmBvX,cAEnB,MAAMgd,EAAW,IAAInqC,QAErB9D,EAAMpe,UAAU,SAAWtP,GAE1B,MAAM+Q,EAAW/Q,EAAO+Q,SAExB,GAAKA,EAEJ,GAAKnpD,MAAMC,QAASkpD,GAEnB,IAAM,IAAIl/D,EAAI,EAAGA,EAAIk/D,EAASz8D,OAAQzC,IAAO,CAE5C,MAAM+pH,EAAY7qD,EAAUl/D,IAEO,IAA9B8pH,EAAS5zB,IAAK6zB,KAElBC,GAAcD,EAAWluC,EAAO1tB,GAChC27D,EAAS/gH,IAAKghH,SAMwB,IAA7BD,EAAS5zB,IAAKh3B,KAEzB8qD,GAAc9qD,EAAU2c,EAAO1tB,GAC/B27D,EAAS/gH,IAAKm2D,QAYlB,IAAIiiD,GAA2B,KAS/B,MAAM/hD,GAAY,IAAIwf,GAwKtB,SAASqrC,GAAe97D,EAAQtC,EAAQ88C,EAAY6b,GAEnD,IAAwB,IAAnBr2D,EAAOznD,QAAoB,OAIhC,GAFgBynD,EAAO2L,OAAO/X,KAAM8J,EAAOiO,QAI1C,GAAK3L,EAAO+7D,QAEXvhB,EAAax6C,EAAOsN,iBAEd,GAAKtN,EAAOg8D,OAES,IAAtBh8D,EAAO8hD,YAAsB9hD,EAAOvF,OAAQiD,QAE3C,GAAKsC,EAAO4O,QAElBsnD,EAAmBrX,UAAW7+C,GAEzBA,EAAOmN,YAEX+oD,EAAmBpX,WAAY9+C,QAI1B,GAAKA,EAAOy7D,UAElB,IAAOz7D,EAAOqN,eAAiBoyC,EAASnvB,iBAAkBtwB,GAAW,CAE/Dq2D,GAEJwB,EAAS94D,sBAAuBiB,EAAOjC,aACrCjH,aAAc8gE,GAIjB,MAAMp3D,EAAWy+B,EAAQxkC,OAAQuF,GAC3B+Q,EAAW/Q,EAAO+Q,SAEnBA,EAASx4D,SAEbyvF,EAAkB10F,KAAM0sD,EAAQQ,EAAUuQ,EAAUypC,EAAYqd,EAAS1lH,EAAG,YAMxE,GAAK6tD,EAAOi8D,wBAEb5F,GAEJwB,EAAS94D,sBAAuBiB,EAAOjC,aACrCjH,aAAc8gE,GAIjB5vB,EAAkB10F,KAAM0sD,EAAQ,KAAMA,EAAO+Q,SAAUypC,EAAYqd,EAAS1lH,EAAG,WAEzE,IAAK6tD,EAAOsQ,QAAUtQ,EAAOuQ,QAAUvQ,EAAOwQ,YAE/CxQ,EAAO2Q,eAIN3Q,EAAO8Q,SAASigB,QAAUqT,EAAKpW,OAAO+C,QAE1C/wB,EAAO8Q,SAASrW,SAChBuF,EAAO8Q,SAASigB,MAAQqT,EAAKpW,OAAO+C,QAM/B/wB,EAAOqN,eAAiBoyC,EAASpvB,iBAAkBrwB,IAAW,CAE/Dq2D,GAEJwB,EAAS94D,sBAAuBiB,EAAOjC,aACrCjH,aAAc8gE,GAIjB,MAAMp3D,EAAWy+B,EAAQxkC,OAAQuF,GAC3B+Q,EAAW/Q,EAAO+Q,SAExB,GAAKnpD,MAAMC,QAASkpD,GAAa,CAEhC,MAAMuP,EAAS9f,EAAS8f,OAExB,IAAM,IAAIzuE,EAAI,EAAGwO,EAAIigE,EAAOhsE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAMmvE,EAAQV,EAAQzuE,GAChBo2E,EAAgBlX,EAAUiQ,EAAM7J,eAEjC8Q,GAAiBA,EAAc1vE,SAEnCyvF,EAAkB10F,KAAM0sD,EAAQQ,EAAUynB,EAAeuyB,EAAYqd,EAAS1lH,EAAG6uE,SAMxEjQ,EAASx4D,SAEpByvF,EAAkB10F,KAAM0sD,EAAQQ,EAAUuQ,EAAUypC,EAAYqd,EAAS1lH,EAAG,MAUhF,MAAM0uD,EAAWb,EAAOa,SAExB,IAAM,IAAIhvD,EAAI,EAAGwO,EAAIwgD,EAASvsD,OAAQzC,EAAIwO,EAAGxO,IAE5CiqH,GAAej7D,EAAUhvD,GAAK6rD,EAAQ88C,EAAY6b,GAMpD,SAAS6F,GAAer8B,EAAYnS,EAAOhwB,GAE1C,MAAMq6D,GAAqC,IAAlBrqC,EAAMqS,QAAmBrS,EAAMqqC,iBAAmB,KAE3E,IAAM,IAAIlmH,EAAI,EAAGwO,EAAIw/E,EAAWvrF,OAAQzC,EAAIwO,EAAGxO,IAAO,CAErD,MAAMmpG,EAAanb,EAAYhuF,GAEzBmuD,EAASg7C,EAAWh7C,OACpBQ,EAAWw6C,EAAWx6C,SACtBuQ,EAAgC,OAArBgnD,EAA4B/c,EAAWjqC,SAAWgnD,EAC7D/2C,EAAQg6B,EAAWh6B,MAEzB,GAAKtjB,EAAOy+D,cAAgB,CAE3B,MAAM7gB,EAAU59C,EAAO49C,QAEvB,IAAM,IAAI7jG,EAAI,EAAG6sE,EAAKg3B,EAAQhnG,OAAQmD,EAAI6sE,EAAI7sE,IAAO,CAEpD,MAAM2kH,EAAU9gB,EAAS7jG,GAEpBuoD,EAAO2L,OAAO/X,KAAMwoE,EAAQzwD,UAEhCqzB,EAAM5lE,SAAU49F,EAAiBliG,KAAMsnG,EAAQhjG,WAE/C88F,EAAmBtX,gBAAiBwd,GAEpC1a,GAAc1hD,EAAQ0tB,EAAO0uC,EAAS57D,EAAUuQ,EAAUiQ,UAQ5D0gC,GAAc1hD,EAAQ0tB,EAAOhwB,EAAQ8C,EAAUuQ,EAAUiQ,IAQ5D,SAAS0gC,GAAc1hD,EAAQ0tB,EAAOhwB,EAAQ8C,EAAUuQ,EAAUiQ,GAOjE,GALAhhB,EAAO0N,eAAgB6oD,EAAO7oC,EAAOhwB,EAAQ8C,EAAUuQ,EAAUiQ,GAEjEhhB,EAAO+M,gBAAgB5b,iBAAkBuM,EAAOC,mBAAoBqC,EAAOjC,aAC3EiC,EAAOgN,aAAaha,gBAAiBgN,EAAO+M,iBAEvC/M,EAAOi8D,wBAA0B,CAErC,MAAMphG,EAAUkgG,GAAYr9D,EAAQgwB,EAAO3c,EAAU/Q,GAErDg/B,EAAMsoB,YAAav2C,GAEnB6vB,GAAcsB,QAxnBhB,SAAgCliC,EAAQnlC,GAEvCmlC,EAAOguB,QAAQ,SAAWhuB,GAEzBu2D,EAAM+D,sBAAuBt6D,EAAQnlC,MAsnBrCwhG,CAAuBr8D,EAAQnlC,QAI/B07F,EAAM5V,mBAAoBjjD,EAAQgwB,EAAOltB,EAAUuQ,EAAU/Q,EAAQghB,GAItEhhB,EAAO2N,cAAe4oD,EAAO7oC,EAAOhwB,EAAQ8C,EAAUuQ,EAAUiQ,GAIjE,SAAS66C,GAAc9qD,EAAU2c,EAAO1tB,IAEhB,IAAlB0tB,EAAMqS,UAAmBrS,EAAQoqC,GAEtC,MAAMvwB,EAAqBrL,EAAWtsE,IAAKmhD,GAErC+Z,EAASorC,EAAmBl3B,MAAMlU,OAClC4zB,EAAewX,EAAmBl3B,MAAM0f,aAExC4d,EAAqBxxC,EAAOkU,MAAM3pC,QAElCob,EAAawnD,EAAahf,cAAeloC,EAAU+Z,EAAOkU,MAAO0f,EAAchxB,EAAO1tB,GACtFu8D,EAAkBtE,EAAahe,mBAAoBxpC,GAEzD,IAAI51C,EAAU0sE,EAAmB1sE,QAC7B2hG,GAAgB,EAEpB,QAAiBrxG,IAAZ0P,EAGJk2C,EAAS7+C,iBAAkB,UAAW6mG,SAEhC,GAAKl+F,EAAQu4E,WAAampB,EAGhCvD,GAAiCjoD,QAE3B,GAAKw2B,EAAmB+0B,qBAAuBA,EAErDE,GAAgB,MAEV,SAA6BrxG,IAAxBslD,EAAW2jC,SAAyB,CAI/C,MAAM+E,EAAcpoC,EAASqoC,uBAAyB1rB,EAAMyrB,YAAc,KAG1E,YAFA5R,EAAmBptB,OAAS4kB,EAASnvE,IAAKmhD,EAASoJ,QAAUg/B,IAO7DqjB,GAAgB,EAIZA,IAEJ/rD,EAAW8Z,SAAW0tC,EAAa9tB,YAAap5B,GAEhDA,EAASgK,gBAAiBtK,EAAY8lD,GAEtC17F,EAAUo9F,EAAa/d,eAAgBzpC,EAAY8rD,GAEnDh1B,EAAmB1sE,QAAUA,EAC7B0sE,EAAmBhd,SAAW9Z,EAAW8Z,SACzCgd,EAAmBgP,eAAiB9lC,EAAW8lC,gBAIhD,MAAMhsB,EAAWgd,EAAmBhd,UAE7BxZ,EAASkb,kBACblb,EAASmkC,uBACW,IAAtBnkC,EAASga,WAETwc,EAAmB8K,kBAAoBtnB,GAASyb,UAChDe,EAAmBd,gBAAkB1b,GAAS0b,gBAC9Clc,EAASxR,eAAiBgS,GAASub,SAIpCiB,EAAmB4R,YAAcpoC,EAASqoC,uBAAyB1rB,EAAMyrB,YAAc,KACvF5R,EAAmB/vB,IAAMkW,EAAMlW,IAC/B+vB,EAAmBptB,OAAS4kB,EAASnvE,IAAKmhD,EAASoJ,QAAUotB,EAAmB4R,aAIhF5R,EAAmBk1B,YA+UpB,SAA8B1rD,GAE7B,OAAOA,EAAS8iD,uBAAyB9iD,EAASgjD,oBAAsBhjD,EAASkjD,qBAChFljD,EAASqoC,wBAA0BroC,EAASokD,kBAC1CpkD,EAASkb,mBAAwC,IAApBlb,EAAS+Z,OAnVR4xC,CAAqB3rD,GACtDw2B,EAAmB+0B,mBAAqBA,EAEnC/0B,EAAmBk1B,cAIvBlyC,EAASwR,kBAAkBpqF,MAAQm5E,EAAOkU,MAAM2d,QAChDpyB,EAASyR,WAAWrqF,MAAQm5E,EAAOkU,MAAM4d,MACzCryB,EAAS0R,kBAAkBtqF,MAAQm5E,EAAOkU,MAAM4a,YAChDrvB,EAAS4R,wBAAwBxqF,MAAQm5E,EAAOkU,MAAM6d,kBACtDtyB,EAASmS,WAAW/qF,MAAQm5E,EAAOkU,MAAM6a,KACzCtvB,EAASuS,iBAAiBnrF,MAAQm5E,EAAOkU,MAAM8d,WAC/CvyB,EAASmT,eAAe/rF,MAAQm5E,EAAOkU,MAAM8a,SAC7CvvB,EAASoT,MAAMhsF,MAAQm5E,EAAOkU,MAAM+d,aACpCxyB,EAASqT,MAAMjsF,MAAQm5E,EAAOkU,MAAMge,aACpCzyB,EAAS0S,YAAYtrF,MAAQm5E,EAAOkU,MAAM/8E,MAC1CsoE,EAAS2S,kBAAkBvrF,MAAQm5E,EAAOkU,MAAMie,YAChD1yB,EAASgT,iBAAiB5rF,MAAQm5E,EAAOkU,MAAM+a,KAE/CxvB,EAASiS,qBAAqB7qF,MAAQm5E,EAAOkU,MAAMxC,qBACnDjS,EAASkS,wBAAwB9qF,MAAQm5E,EAAOkU,MAAMvC,wBACtDlS,EAASwS,cAAcprF,MAAQm5E,EAAOkU,MAAMjC,cAC5CxS,EAASyS,iBAAiBrrF,MAAQm5E,EAAOkU,MAAMhC,iBAC/CzS,EAAS8S,eAAe1rF,MAAQm5E,EAAOkU,MAAM3B,eAC7C9S,EAAS+S,kBAAkB3rF,MAAQm5E,EAAOkU,MAAM1B,mBAKjD,MAAMq/B,EAAep1B,EAAmB1sE,QAAQsvE,cAC1CyyB,EAAetsB,GAAcM,aAAc+rB,EAAahtB,IAAKplB,GAEnEgd,EAAmBq1B,aAAeA,EAInC,SAAS7B,GAAYr9D,EAAQgwB,EAAO3c,EAAU/Q,IAEtB,IAAlB0tB,EAAMqS,UAAmBrS,EAAQoqC,GAEtC9hE,EAASo3D,oBAET,MAAM51C,EAAMkW,EAAMlW,IACZ2hC,EAAcpoC,EAASqoC,uBAAyB1rB,EAAMyrB,YAAc,KACpExkD,EAAsC,OAAzBiiE,EAAkCL,EAAMhgB,eAAiBqgB,EAAqBr+D,QAAQ5D,SACnGwlB,EAAS4kB,EAASnvE,IAAKmhD,EAASoJ,QAAUg/B,GAE1C5R,EAAqBrL,EAAWtsE,IAAKmhD,GACrC+Z,EAASorC,EAAmBl3B,MAAMlU,OAExC,IAA0B,IAArB4sC,KAE2B,IAA1BC,GAAkCj6D,IAAWq5D,GAAiB,CAElE,MAAMzvB,EACL5pC,IAAWq5D,GACXhmD,EAAS/qD,KAAO8wG,EAKjB/rC,GAASsc,SAAUt2B,EAAUrT,EAAQ4pC,GAMlCv2B,EAAS1b,UAAYkyC,EAAmBijB,UAEvCz5C,EAASyG,KAAO+vB,EAAmB/vB,MAAQA,GAIpC+vB,EAAmB4R,cAAgBA,GAInC5R,EAAmBk1B,aAAiBl1B,EAAmB+0B,qBAAuBxxC,EAAOkU,MAAM3pC,QANtGwmE,GAAc9qD,EAAU2c,EAAO1tB,QAUqB70C,IAAzCo8E,EAAmB8K,mBAC5B9K,EAAmB8K,oBAAsBtnB,GAASyb,WACpDe,EAAmBd,kBAAoB1b,GAAS0b,iBAIrCc,EAAmBgP,iBAAmB5hD,GAItC4yC,EAAmBptB,SAAWA,IAFzC0hD,GAAc9qD,EAAU2c,EAAO1tB,GAJ/B67D,GAAc9qD,EAAU2c,EAAO1tB,IAchC67D,GAAc9qD,EAAU2c,EAAO1tB,GAC/BunC,EAAmBijB,UAAYz5C,EAAS1b,SAIzC,IAAIwnE,GAAiB,EACjBC,GAAkB,EAClBC,GAAgB,EAEpB,MAAMliG,EAAU0sE,EAAmB1sE,QAClCmiG,EAAaniG,EAAQsvE,cACrB8yB,EAAa11B,EAAmBhd,SAkBjC,GAhBKyU,EAAM/jE,WAAYJ,EAAQA,WAE9BgiG,GAAiB,EACjBC,GAAkB,EAClBC,GAAgB,GAIZhsD,EAAS/qD,KAAO8wG,IAEpBA,EAAqB/lD,EAAS/qD,GAE9B82G,GAAkB,GAIdD,GAAkB9F,IAAmBr5D,EAAS,CA2BlD,GAzBAs/D,EAAW5yB,SAAU4d,GAAK,mBAAoBtqD,EAAOE,kBAEhDyzB,EAAa4T,wBAEjB+3B,EAAW5yB,SAAU4d,GAAK,gBACzB,GAAQ3yG,KAAKuJ,IAAK8+C,EAAO4M,IAAM,GAAQj1D,KAAKg4C,MAIzC0pE,IAAmBr5D,IAEvBq5D,EAAiBr5D,EAMjBo/D,GAAkB,EAClBC,GAAgB,GAOZhsD,EAASkb,kBACblb,EAASkjD,qBACTljD,EAASgjD,oBACThjD,EAASqoC,wBACTroC,EAASoJ,OAAS,CAElB,MAAM+iD,EAAUF,EAAWzxF,IAAI4xF,oBAEdhyG,IAAZ+xG,GAEJA,EAAQ9yB,SAAU4d,GACjB6P,EAAS94D,sBAAuBrB,EAAOK,eAMrCgT,EAASkjD,qBACbljD,EAASgjD,oBACThjD,EAAS8iD,uBACT9iD,EAASuM,qBACTvM,EAASqoC,wBACTroC,EAASkb,mBAET+wC,EAAW5yB,SAAU4d,GAAK,kBAAkD,IAAhCtqD,EAAO0/D,uBAI/CrsD,EAASkjD,qBACbljD,EAASgjD,oBACThjD,EAAS8iD,uBACT9iD,EAASuM,qBACTvM,EAASqoC,wBACTroC,EAASkb,kBACTlb,EAASokD,kBACTpkD,EAAS4J,WAETqiD,EAAW5yB,SAAU4d,GAAK,aAActqD,EAAOC,oBAUjD,GAAKoT,EAAS4J,SAAW,CAExBqiD,EAAWtsB,YAAasX,GAAKhoD,EAAQ,cACrCg9D,EAAWtsB,YAAasX,GAAKhoD,EAAQ,qBAErC,MAAM8Q,EAAW9Q,EAAO8Q,SAExB,GAAKA,EAAW,CAEf,MAAMuoC,EAAQvoC,EAASuoC,MAEvB,GAAKhoB,EAAayU,oBAAsB,CAEvC,GAA8B,OAAzBh1B,EAASusD,YAAuB,CAUpC,IAAIzrG,EAAOvc,KAAKyG,KAAqB,EAAfu9F,EAAM/kG,QAC5Bsd,EAAO45B,GAAU4B,eAAgBx7B,GACjCA,EAAOvc,KAAK2B,IAAK4a,EAAM,GAEvB,MAAM0rG,EAAe,IAAI5kG,aAAc9G,EAAOA,EAAO,GACrD0rG,EAAa1iH,IAAKk2D,EAASwsD,cAE3B,MAAMD,EAAc,IAAI/uC,GAAagvC,EAAc1rG,EAAMA,EAAMsyB,GAAYR,IAE3EotB,EAASwsD,aAAeA,EACxBxsD,EAASusD,YAAcA,EACvBvsD,EAASysD,gBAAkB3rG,EAI5BorG,EAAW5yB,SAAU4d,GAAK,cAAel3C,EAASusD,YAAarnE,GAC/DgnE,EAAW5yB,SAAU4d,GAAK,kBAAmBl3C,EAASysD,sBAItDP,EAAWtsB,YAAasX,GAAKl3C,EAAU,iBAyE3C,IAAwCyZ,EAAU54E,EANjD,OA3DKmrH,GAAmBv1B,EAAmBn6B,gBAAkBpN,EAAOoN,iBAEnEm6B,EAAmBn6B,cAAgBpN,EAAOoN,cAC1C4vD,EAAW5yB,SAAU4d,GAAK,gBAAiBhoD,EAAOoN,gBAI9C0vD,IAEJE,EAAW5yB,SAAU4d,GAAK,sBAAuBuO,EAAMD,qBAElD/uB,EAAmBk1B,cAsDwB9qH,EA3CJorH,GA2CNxyC,EA3CN0yC,GA6CxBlhC,kBAAkBxY,YAAc5xE,EACzC44E,EAASyR,WAAWzY,YAAc5xE,EAElC44E,EAAS0R,kBAAkB1Y,YAAc5xE,EACzC44E,EAAS4R,wBAAwB5Y,YAAc5xE,EAC/C44E,EAAS0S,YAAY1Z,YAAc5xE,EACnC44E,EAAS2S,kBAAkB3Z,YAAc5xE,EACzC44E,EAASmS,WAAWnZ,YAAc5xE,EAClC44E,EAASuS,iBAAiBvZ,YAAc5xE,EACxC44E,EAASmT,eAAena,YAAc5xE,EACtC44E,EAASgT,iBAAiBha,YAAc5xE,GAjDlC6lE,GAAOzG,EAASyG,KAEpB1H,EAAU2jD,mBAAoBwJ,EAAYzlD,GAI3C1H,EAAU8jD,wBAAyBqJ,EAAYlsD,EAAUsmD,EAAaD,GAEtE9mB,GAAcK,OAAQqX,GAAKzgB,EAAmBq1B,aAAcK,EAAYjnE,IAIpE+a,EAASkb,mBAAoD,IAAhClb,EAASwa,qBAE1C+kB,GAAcK,OAAQqX,GAAKzgB,EAAmBq1B,aAAcK,EAAYjnE,GACxE+a,EAASwa,oBAAqB,GAI1Bxa,EAASkkD,kBAEb+H,EAAW5yB,SAAU4d,GAAK,SAAUhoD,EAAOzjD,QAM5CygH,EAAW5yB,SAAU4d,GAAK,kBAAmBhoD,EAAO+M,iBACpDiwD,EAAW5yB,SAAU4d,GAAK,eAAgBhoD,EAAOgN,cACjDgwD,EAAW5yB,SAAU4d,GAAK,cAAehoD,EAAOjC,aAEzCljC,EAlvBRo2C,GAAUigB,kBARV,SAA2BJ,GAErBlD,GAAGoiC,cACHgD,IAA2BA,GAA0BliC,MAOpC,oBAAX/3C,QAAyBk4B,GAAUkgB,WAAYp4C,QAE3D/mC,KAAKk/E,iBAAmB,SAAW/tD,GAElC6vF,GAA2B7vF,EAC3ByqD,GAAGsD,iBAAkB/tD,GAEN,OAAbA,EAAsB8tC,GAAU59D,OAAS49D,GAAUz+D,SAMtDR,KAAKg8E,OAAS,SAAWN,EAAOhwB,GAE/B,IAAIuvB,EAAc6S,EAgBlB,QAdwB30E,IAAnBoZ,UAAW,KAEf5lB,QAAQoK,KAAM,6GACdkkE,EAAe1oD,UAAW,SAIHpZ,IAAnBoZ,UAAW,KAEf5lB,QAAQoK,KAAM,iGACd+2E,EAAav7D,UAAW,SAITpZ,IAAXuyC,IAA4C,IAApBA,EAAOiR,SAGnC,YADAhwD,QAAQu1B,MAAO,0EAKhB,IAAwB,IAAnBsiF,EAA0B,OAI/B51B,GAAcuB,oBACd20B,GAAuB,EACvBC,EAAiB,MAIS,IAArBrpC,EAAMo0B,YAAsBp0B,EAAMje,oBAIhB,OAAlB/R,EAAOgP,QAAkBhP,EAAO+R,qBAEjB,IAAfme,GAAGf,UAAwC,IAApBe,GAAGoiC,eAE9BtyD,EAASkwB,GAAGikC,UAAWn0D,KAKD,IAAlBgwB,EAAMqS,SAAmBrS,EAAMhgB,eAAgB6oD,EAAO7oC,EAAOhwB,EAAQuvB,GAAgB2pC,GAE1FV,EAAqBjX,GAAarvF,IAAK89D,EAAOyoC,EAAiB7hH,QAC/D4hH,EAAmBjvB,OAEnBkvB,EAAiB7iH,KAAM4iH,GAEvB0B,EAAkBzmE,iBAAkBuM,EAAOE,iBAAkBF,EAAOC,oBACpE8hD,EAASrwB,wBAAyBwoC,GAElCD,EAAwB3lH,KAAKm0F,qBAC7BuxB,EAAmB3sC,GAASkc,KAAMj1F,KAAK+mE,eAAgB4+C,EAAuBj6D,GAE9EsqC,EAAoBkwB,GAAYtoG,IAAK89D,EAAOhwB,GAC5CsqC,EAAkBf,OAElB60B,GAAepuC,EAAOhwB,EAAQ,EAAG64D,EAAMF,aAEvCruB,EAAkBiT,UAES,IAAtBsb,EAAMF,aAEVruB,EAAkBzzF,KAAM+iH,EAAaC,IAMZ,IAArBG,GAA4B3sC,GAASoc,eAE1C,MAAMuX,EAAewX,EAAmBl3B,MAAM0f,aAE9C1E,GAAUhsB,OAAQ0wB,EAAchxB,EAAOhwB,GAEvCw4D,EAAmBvX,cACnBuX,EAAmBtX,gBAAiBlhD,IAEV,IAArBg6D,GAA4B3sC,GAASqc,cAIb,IAAxBp1F,KAAKoyF,KAAKmF,WAAqBv3F,KAAKoyF,KAAKlC,aAExB/2E,IAAjB8hE,GAEJj7E,KAAK+7E,gBAAiBd,GAMvBoR,GAAWrQ,OAAQga,EAAmBta,EAAOhwB,EAAQoiC,GAIrD,MAAM09B,EAAgBx1B,EAAkB6S,OAClC4iB,EAAqBz1B,EAAkBnwB,YAExC2lD,EAAclpH,OAAS,GAAI4nH,GAAesB,EAAe9vC,EAAOhwB,GAChE+/D,EAAmBnpH,OAAS,GAAI4nH,GAAeuB,EAAoB/vC,EAAOhwB,IAIxD,IAAlBgwB,EAAMqS,SAAmBrS,EAAM/f,cAAe4oD,EAAO7oC,EAAOhwB,GAInC,OAAzBk5D,IAIJ5gE,EAASu3D,yBAA0BqJ,GAInC5gE,EAASw3D,8BAA+BoJ,IAMzC53B,EAAMzN,QAAQ5I,MAAM05B,SAAS,GAC7BrjB,EAAMzN,QAAQ5I,MAAM26B,SAAS,GAC7BtkB,EAAMzN,QAAQpiE,MAAMm0F,SAAS,GAE7BtkB,EAAMmoB,kBAAkB,GAIxBgP,EAAiB9b,MAGhB6b,EAFIC,EAAiB7hH,OAAS,EAET6hH,EAAkBA,EAAiB7hH,OAAS,GAI5C,KAItB0zF,EAAoB,MA8mBrBh2F,KAAK+9G,eAAiB,SAAWp+G,GAE3B8kH,IAAiB9kH,GAAkC,OAAzBilH,GAAgC5O,GAAIkE,gBAAiB,MAAOv6G,GAE3F8kH,EAAe9kH,GAIhBK,KAAKgwG,kBAAoB,WAExB,OAAO0U,GAIR1kH,KAAKkwG,qBAAuB,WAE3B,OAAOyU,GAIR3kH,KAAKi2F,cAAgB,WAEpB,OAAOD,GAIRh2F,KAAKk2F,cAAgB,SAAWrI,GAE/BmI,EAAoBnI,GAIrB7tF,KAAK87E,gBAAkB,WAEtB,OAAO8oC,GAIR5kH,KAAK+7E,gBAAkB,SAAWd,EAAc80B,EAAiB,EAAGE,EAAoB,GAEvF2U,EAAuB3pC,EACvBypC,EAAyB3U,EACzB4U,EAA4B1U,EAEvBh1B,QAAsE9hE,IAAtD+wE,EAAWtsE,IAAKq9D,GAAe48B,oBAEnD7zD,EAASq3D,kBAAmBpgC,GAI7B,IAAI8+B,EAAc0K,EACd5J,GAAS,EAEb,GAAK5/B,EAAe,CAEnB,MAAM48B,EAAqB3tB,EAAWtsE,IAAKq9D,GAAe48B,mBAErD58B,EAAaC,yBAEjB6+B,EAAclC,EAAoB9H,GAClC8K,GAAS,GAITd,EAFW9+B,EAAan0B,+BAEVojC,EAAWtsE,IAAKq9D,GAAe+8B,+BAI/BH,EAIfmN,EAAiBliG,KAAMm4D,EAAa7zD,UACpC69F,EAAgBniG,KAAMm4D,EAAa50B,SACnC6+D,EAAsBjqC,EAAa30B,iBAInC0+D,EAAiBliG,KAAM8qF,GAAYhjG,eAAgBy6G,GAAcj4F,QACjE63F,EAAgBniG,KAAM0iG,GAAW56G,eAAgBy6G,GAAcj4F,QAC/D83F,EAAsBO,EAevB,GAXKZ,IAAwB9K,IAE5B/D,GAAIkE,gBAAiB,MAAOH,GAC5B8K,EAAsB9K,GAIvB/sB,EAAM5lE,SAAU49F,GAChBh4B,EAAM3mC,QAAS4+D,GACfj4B,EAAMsjB,eAAgB4U,GAEjBrK,EAAS,CAEb,MAAMzD,EAAoBltB,EAAWtsE,IAAKq9D,EAAa10B,SACvDyvD,GAAImE,qBAAsB,MAAO,MAAO,MAAQpK,EAAgBqH,EAAkBG,eAAgBtH,KAMpGjwG,KAAK0rH,uBAAyB,SAAWzwC,EAAcn7E,EAAGC,EAAGuO,EAAOC,EAAQpD,EAAQwgH,GAEnF,IAAS1wC,IAAgBA,EAAap0B,oBAGrC,YADAl6C,QAAQu1B,MAAO,4FAKhB,IAAI63E,EAAc7vB,EAAWtsE,IAAKq9D,GAAe48B,mBAQjD,GANK58B,EAAaC,8BAAmD/hE,IAAxBwyG,IAE5C5R,EAAcA,EAAa4R,IAIvB5R,EAAc,CAElB,IAAIh2F,GAAU,EAETg2F,IAAgB8K,IAEpB7O,GAAIkE,gBAAiB,MAAOH,GAE5Bh2F,GAAU,GAIX,IAEC,MAAMwiC,EAAU00B,EAAa10B,QACvBqlE,EAAgBrlE,EAAQ9D,OACxB+2D,EAAcjzD,EAAQzmB,KAE5B,GAAK8rF,IAAkB15E,IAAc3mC,GAAMytG,QAAS4S,KAAoB5V,GAAIjnD,aAAc,OAGzF,YADApiD,QAAQu1B,MAAO,6GAKhB,KAAKs3E,IAAgBpoE,IAAoB7lC,GAAMytG,QAASQ,KAAkBxD,GAAIjnD,aAAc,QACvFyqD,IAAgB9nE,KAAe2tC,EAAaC,UAAYtG,EAAWp7D,IAAK,sBAAyBo7D,EAAWp7D,IAAK,8BACjH47F,IAAgB7nE,KAAmB0tC,EAAaC,SAAWtG,EAAWp7D,IAAK,0BAA6Bo7D,EAAWp7D,IAAK,iCAG5H,YADAjR,QAAQu1B,MAAO,uHAK6B,QAAxC8zE,GAAI6V,uBAAwB,OAIzB/rH,GAAK,GAAKA,GAAOm7E,EAAa3sE,MAAQA,GAAevO,GAAK,GAAKA,GAAOk7E,EAAa1sE,OAASA,GAElGynG,GAAI8V,WAAYhsH,EAAGC,EAAGuO,EAAOC,EAAQhD,GAAMytG,QAAS4S,GAAiBrgH,GAAMytG,QAASQ,GAAeruG,GAMpGwB,QAAQu1B,MAAO,8GAIf,QAEIne,GAEJiyF,GAAIkE,gBAAiB,MAAO2K,MAUhC7kH,KAAK+rH,yBAA2B,SAAWpsG,EAAU4mC,EAASylE,EAAQ,GAErE,MAAMC,EAAa5oH,KAAK0G,IAAK,GAAKiiH,GAC5B19G,EAAQjL,KAAK+pB,MAAOm5B,EAAQ7mC,MAAMpR,MAAQ29G,GAC1C19G,EAASlL,KAAK+pB,MAAOm5B,EAAQ7mC,MAAMnR,OAAS09G,GAC5ChV,EAAW1rG,GAAMytG,QAASzyD,EAAQ9D,QAExCuB,EAASq0D,aAAc9xD,EAAS,GAEhCyvD,GAAIkW,eAAgB,KAAMF,EAAO/U,EAAUt3F,EAAS7f,EAAG6f,EAAS5f,EAAGuO,EAAOC,EAAQ,GAElFy+E,EAAM4oB,iBAIP51G,KAAKmsH,qBAAuB,SAAWxsG,EAAUysG,EAAYC,EAAYL,EAAQ,GAEhF,MAAM19G,EAAQ89G,EAAW1sG,MAAMpR,MACzBC,EAAS69G,EAAW1sG,MAAMnR,OAC1B0oG,EAAW1rG,GAAMytG,QAASqT,EAAW5pE,QACrCy0D,EAAS3rG,GAAMytG,QAASqT,EAAWvsF,MAEzCkkB,EAASq0D,aAAcgU,EAAY,GAInCrW,GAAI4C,YAAa,MAAOyT,EAAWlpE,OACnC6yD,GAAI4C,YAAa,MAAOyT,EAAWnpE,kBACnC8yD,GAAI4C,YAAa,KAAMyT,EAAWjpE,iBAE7BgpE,EAAW7nE,cAEfyxD,GAAIsW,cAAe,KAAMN,EAAOrsG,EAAS7f,EAAG6f,EAAS5f,EAAGuO,EAAOC,EAAQ0oG,EAAUC,EAAQkV,EAAW1sG,MAAMnf,MAIrG6rH,EAAWtT,oBAEf9C,GAAIuW,wBAAyB,KAAMP,EAAOrsG,EAAS7f,EAAG6f,EAAS5f,EAAGqsH,EAAWvpE,QAAS,GAAIv0C,MAAO89G,EAAWvpE,QAAS,GAAIt0C,OAAQ0oG,EAAUmV,EAAWvpE,QAAS,GAAItiD,MAInKy1G,GAAIsW,cAAe,KAAMN,EAAOrsG,EAAS7f,EAAG6f,EAAS5f,EAAGk3G,EAAUC,EAAQkV,EAAW1sG,OAOxE,IAAVssG,GAAeK,EAAWppE,iBAAkB+yD,GAAIY,eAAgB,MAErE5pB,EAAM4oB,iBAIP51G,KAAK24G,YAAc,SAAWpyD,GAE7BvC,EAASq0D,aAAc9xD,EAAS,GAEhCymC,EAAM4oB,iBAIP51G,KAAKwsH,WAAa,WAEjBx/B,EAAMkD,QACNtB,GAAcsB,SAIoB,oBAAvBu8B,oBAEXA,mBAAmBxzE,cAAe,IAAIyzE,YAAa,UAAW,CAAEC,OAAQ3sH,QAM1E,SAAS4sH,GAAgBnuD,GAExB2kD,GAAc/pE,KAAMr5C,KAAMy+D,GAz1G3B+9C,GAAY3jE,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQg2B,GAAkB7gC,WAAa,CAEpF3yC,YAAas2G,GAEb2N,eAAe,IAYhB1N,GAAM5jE,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+W,GAAS5hB,WAAa,CAErE3yC,YAAau2G,GAEbsN,SAAS,IAYVvqH,OAAOo5C,OAAQ8jE,GAAgB7jE,UAAW,CAEzC3yC,YAAaw2G,GAEbiC,aAAc,WAEb,GAAoB,OAAf3+G,KAAK68G,QAET78G,KAAK68G,MAAQ,IAAIJ,GACjBz8G,KAAK68G,MAAM75D,kBAAmB,EAC9BhjD,KAAK68G,MAAMt2G,SAAU,EAErBvG,KAAK68G,MAAMgQ,OAAS,GACpB7sH,KAAK68G,MAAMiQ,WAAa,CAAEC,UAAU,GAE/BhmF,OAAOimF,QAEX,IAAM,IAAIntH,EAAI,EAAGA,GAAKknC,OAAOimF,OAAOC,mBAAoBptH,IAAO,CAG9D,MAAMqtH,EAAQ,IAAIzQ,GAClByQ,EAAMlqE,kBAAmB,EACzBkqE,EAAM3mH,SAAU,EAChBvG,KAAK68G,MAAMgQ,OAAOvrH,KAAM4rH,GAExBltH,KAAK68G,MAAM5zG,IAAKikH,GAQnB,OAAOltH,KAAK68G,OAIb0B,kBAAmB,WAUlB,OARyB,OAApBv+G,KAAK28G,aAET38G,KAAK28G,WAAa,IAAIF,GACtBz8G,KAAK28G,WAAW35D,kBAAmB,EACnChjD,KAAK28G,WAAWp2G,SAAU,GAIpBvG,KAAK28G,YAIb8B,aAAc,WAUb,OARoB,OAAfz+G,KAAK48G,QAET58G,KAAK48G,MAAQ,IAAIH,GACjBz8G,KAAK48G,MAAM55D,kBAAmB,EAC9BhjD,KAAK48G,MAAMr2G,SAAU,GAIfvG,KAAK48G,OAIb3jE,cAAe,SAAW94B,GAoBzB,OAlByB,OAApBngB,KAAK28G,YAET38G,KAAK28G,WAAW1jE,cAAe94B,GAIZ,OAAfngB,KAAK48G,OAET58G,KAAK48G,MAAM3jE,cAAe94B,GAIP,OAAfngB,KAAK68G,OAET78G,KAAK68G,MAAM5jE,cAAe94B,GAIpBngB,MAIR89G,WAAY,SAAWF,GAsBtB,OApBA59G,KAAKi5C,cAAe,CAAEnZ,KAAM,eAAgBv/B,KAAMq9G,IAEzB,OAApB59G,KAAK28G,aAET38G,KAAK28G,WAAWp2G,SAAU,GAIP,OAAfvG,KAAK48G,QAET58G,KAAK48G,MAAMr2G,SAAU,GAIF,OAAfvG,KAAK68G,QAET78G,KAAK68G,MAAMt2G,SAAU,GAIfvG,MAIRyoD,OAAQ,SAAWm1D,EAAa7+B,EAAOi+B,GAEtC,IAAImQ,EAAY,KACZC,EAAW,KACXC,EAAW,KAEf,MAAMC,EAAYttH,KAAK28G,WACjB4Q,EAAOvtH,KAAK48G,MACZ4Q,EAAOxtH,KAAK68G,MAElB,GAAKe,GAAiD,oBAAlC7+B,EAAMiP,QAAQy/B,gBAEjC,GAAKD,GAAQ5P,EAAY4P,KAAO,CAE/BH,GAAW,EAEX,IAAM,IAAIxtH,EAAI,EAAGA,GAAKknC,OAAOimF,OAAOC,mBAAoBptH,IAEvD,GAAK+9G,EAAY4P,KAAM3tH,GAAM,CAG5B,MAAM6tH,EAAY3uC,EAAM4uC,aAAc/P,EAAY4P,KAAM3tH,GAAKm9G,GACvDkQ,EAAQM,EAAKX,OAAQhtH,GAER,OAAd6tH,IAEJR,EAAM1rE,OAAOrzC,UAAWu/G,EAAUnmF,UAAUia,QAC5C0rE,EAAM1rE,OAAOqW,UAAWq1D,EAAMvtG,SAAUutG,EAAMlsG,SAAUksG,EAAM7iH,OAC9D6iH,EAAMU,YAAcF,EAAUzzG,QAI/BizG,EAAM3mH,QAAwB,OAAdmnH,EAKhB,MAAMG,EAAWL,EAAKX,OAAQ9lF,OAAOimF,OAAOc,mBACtCC,EAAWP,EAAKX,OAAQ9lF,OAAOimF,OAAOgB,mBACtCpkH,EAAWikH,EAASluG,SAAS29B,WAAYywE,EAASpuG,UAElDsuG,EAAkB,IAClBvgH,EAAY,KAEb8/G,EAAKV,WAAWC,UAAYnjH,EAAWqkH,EAAkBvgH,GAE7D8/G,EAAKV,WAAWC,UAAW,EAC3B/sH,KAAKi5C,cAAe,CACnBnZ,KAAM,WACNouF,WAAYtQ,EAAYsQ,WACxBh1E,OAAQl5C,SAGIwtH,EAAKV,WAAWC,UAAYnjH,GAAYqkH,EAAkBvgH,IAEvE8/G,EAAKV,WAAWC,UAAW,EAC3B/sH,KAAKi5C,cAAe,CACnBnZ,KAAM,aACNouF,WAAYtQ,EAAYsQ,WACxBh1E,OAAQl5C,cAWO,OAAdstH,IAEJH,EAAYpuC,EAAMovC,QAASvQ,EAAYwQ,eAAgBpR,GAEpC,OAAdmQ,IAEJG,EAAU9rE,OAAOrzC,UAAWg/G,EAAU5lF,UAAUia,QAChD8rE,EAAU9rE,OAAOqW,UAAWy1D,EAAU3tG,SAAU2tG,EAAUtsG,SAAUssG,EAAUjjH,SAMlE,OAATkjH,GAAiB3P,EAAYyQ,YAEjCjB,EAAWruC,EAAMovC,QAASvQ,EAAYyQ,UAAWrR,GAE/B,OAAboQ,IAEJG,EAAK/rE,OAAOrzC,UAAWi/G,EAAS7lF,UAAUia,QAC1C+rE,EAAK/rE,OAAOqW,UAAW01D,EAAK5tG,SAAU4tG,EAAKvsG,SAAUusG,EAAKljH,SA4B9D,OAlBmB,OAAdijH,IAEJA,EAAU/mH,QAA0B,OAAd4mH,GAIT,OAATI,IAEJA,EAAKhnH,QAAyB,OAAb6mH,GAIJ,OAATI,IAEJA,EAAKjnH,QAAyB,OAAb8mH,GAIXrtH,QAqeTR,OAAOo5C,OAAQkkE,GAAajkE,UAAWF,GAAgBE,WA+mFvD+zE,GAAe/zE,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ0/D,GAAcvqE,WAAa,CAEnF3yC,YAAa0mH,GAEbjG,kBAAkB,IAInB,MAAM2H,GAELpoH,YAAaiX,EAAOwkG,GAEnBniH,OAAOC,eAAgBO,KAAM,YAAa,CAAEL,OAAO,IAEnDK,KAAKuvB,KAAO,GAEZvvB,KAAKmd,MAAQ,IAAI0rB,GAAO1rB,GACxBnd,KAAK2hH,aAAwBxoG,IAAZwoG,EAA0BA,EAAU,MAItDh4G,QAEC,OAAO,IAAI2kH,GAAStuH,KAAKmd,MAAOnd,KAAK2hH,SAItCtsG,SAEC,MAAO,CACNyqB,KAAM,UACN3iB,MAAOnd,KAAKmd,MAAMonD,SAClBo9C,QAAS3hH,KAAK2hH,UAOjB,MAAM4M,GAELroH,YAAaiX,EAAOk7C,EAAMC,GAEzB94D,OAAOC,eAAgBO,KAAM,QAAS,CAAEL,OAAO,IAE/CK,KAAKuvB,KAAO,GAEZvvB,KAAKmd,MAAQ,IAAI0rB,GAAO1rB,GAExBnd,KAAKq4D,UAAkBl/C,IAATk/C,EAAuBA,EAAO,EAC5Cr4D,KAAKs4D,SAAgBn/C,IAARm/C,EAAsBA,EAAM,IAI1C3uD,QAEC,OAAO,IAAI4kH,GAAKvuH,KAAKmd,MAAOnd,KAAKq4D,KAAMr4D,KAAKs4D,KAI7CjjD,SAEC,MAAO,CACNyqB,KAAM,MACN3iB,MAAOnd,KAAKmd,MAAMonD,SAClBlM,KAAMr4D,KAAKq4D,KACXC,IAAKt4D,KAAKs4D,MAOb,MAAMk2D,WAAc/zD,GAEnBv0D,cAECwK,QAEAlR,OAAOC,eAAgBO,KAAM,UAAW,CAAEL,OAAO,IAEjDK,KAAK8/B,KAAO,QAEZ9/B,KAAKqsF,WAAa,KAClBrsF,KAAKmnG,YAAc,KACnBnnG,KAAKwlE,IAAM,KAEXxlE,KAAK+lH,iBAAmB,KAExB/lH,KAAK8vG,YAAa,EAEiB,oBAAvB2c,oBAEXA,mBAAmBxzE,cAAe,IAAIyzE,YAAa,UAAW,CAAEC,OAAQ3sH,QAM1E8iB,KAAM+gC,EAAQub,GAab,OAXA1uD,MAAMoS,KAAM+gC,EAAQub,GAEO,OAAtBvb,EAAOwoC,aAAsBrsF,KAAKqsF,WAAaxoC,EAAOwoC,WAAW1iF,SAC1C,OAAvBk6C,EAAOsjD,cAAuBnnG,KAAKmnG,YAActjD,EAAOsjD,YAAYx9F,SACrD,OAAfk6C,EAAO2hB,MAAexlE,KAAKwlE,IAAM3hB,EAAO2hB,IAAI77D,SAEhB,OAA5Bk6C,EAAOkiE,mBAA4B/lH,KAAK+lH,iBAAmBliE,EAAOkiE,iBAAiBp8G,SAExF3J,KAAK8vG,WAAajsD,EAAOisD,WACzB9vG,KAAKgjD,iBAAmBa,EAAOb,iBAExBhjD,KAIRqV,OAAQyuC,GAEP,MAAMvjD,EAAOmQ,MAAM2E,OAAQyuC,GAM3B,OAJyB,OAApB9jD,KAAKqsF,aAAsB9rF,EAAKytD,OAAOq+B,WAAarsF,KAAKqsF,WAAWh3E,OAAQyuC,IACvD,OAArB9jD,KAAKmnG,cAAuB5mG,EAAKytD,OAAOm5C,YAAcnnG,KAAKmnG,YAAY9xF,OAAQyuC,IAClE,OAAb9jD,KAAKwlE,MAAejlE,EAAKytD,OAAOwX,IAAMxlE,KAAKwlE,IAAInwD,UAE7C9U,GAMT,SAASkuH,GAAmBt1E,EAAO62C,GAElChwF,KAAKm5C,MAAQA,EACbn5C,KAAKgwF,OAASA,EACdhwF,KAAKstD,WAAkBn0C,IAAVggC,EAAsBA,EAAM72C,OAAS0tF,EAAS,EAE3DhwF,KAAK4rE,MAAQ5zB,GACbh4C,KAAK6rE,YAAc,CAAE7vD,OAAQ,EAAGsxC,OAAS,GAEzCttD,KAAKqjD,QAAU,EAEfrjD,KAAK4iD,KAAOpJ,GAAUG,eAIvBn6C,OAAOC,eAAgBgvH,GAAkB51E,UAAW,cAAe,CAElEjwC,IAAK,SAAWjJ,IAEA,IAAVA,GAAiBK,KAAKqjD,aAM7B7jD,OAAOo5C,OAAQ61E,GAAkB51E,UAAW,CAE3C61E,qBAAqB,EAErBzhD,iBAAkB,aAElBC,SAAU,SAAWvtE,GAIpB,OAFAK,KAAK4rE,MAAQjsE,EAENK,MAIR8iB,KAAM,SAAW+gC,GAOhB,OALA7jD,KAAKm5C,MAAQ,IAAI0K,EAAO1K,MAAMjzC,YAAa29C,EAAO1K,OAClDn5C,KAAKstD,MAAQzJ,EAAOyJ,MACpBttD,KAAKgwF,OAASnsC,EAAOmsC,OACrBhwF,KAAK4rE,MAAQ/nB,EAAO+nB,MAEb5rE,MAIRmtE,OAAQ,SAAWC,EAAQxvB,EAAWyvB,GAErCD,GAAUptE,KAAKgwF,OACf3iB,GAAUzvB,EAAUoyC,OAEpB,IAAM,IAAInwF,EAAI,EAAGwO,EAAIrO,KAAKgwF,OAAQnwF,EAAIwO,EAAGxO,IAExCG,KAAKm5C,MAAOi0B,EAASvtE,GAAM+9C,EAAUzE,MAAOk0B,EAASxtE,GAItD,OAAOG,MAIR4I,IAAK,SAAWjJ,EAAOqc,EAAS,GAI/B,OAFAhc,KAAKm5C,MAAMvwC,IAAKjJ,EAAOqc,GAEhBhc,MAIR2J,MAAO,SAAWpJ,QAEU4Y,IAAtB5Y,EAAKouH,eAETpuH,EAAKouH,aAAe,SAIYx1G,IAA5BnZ,KAAKm5C,MAAMhuC,OAAOyjH,QAEtB5uH,KAAKm5C,MAAMhuC,OAAOyjH,MAAQp1E,GAAUG,qBAIiBxgC,IAAjD5Y,EAAKouH,aAAc3uH,KAAKm5C,MAAMhuC,OAAOyjH,SAEzCruH,EAAKouH,aAAc3uH,KAAKm5C,MAAMhuC,OAAOyjH,OAAU5uH,KAAKm5C,MAAMC,MAAO,GAAIjuC,QAItE,MAEM0jH,EAAK,IAAIJ,GAFD,IAAIzuH,KAAKm5C,MAAMjzC,YAAa3F,EAAKouH,aAAc3uH,KAAKm5C,MAAMhuC,OAAOyjH,QAEtC5uH,KAAKgwF,QAG9C,OAFA6+B,EAAG3hD,SAAUltE,KAAK4rE,OAEXijD,GAIR7gD,SAAU,SAAW78C,GAIpB,OAFAnxB,KAAKitE,iBAAmB97C,EAEjBnxB,MAIRqV,OAAQ,SAAW9U,GAwBlB,YAtB2B4Y,IAAtB5Y,EAAKouH,eAETpuH,EAAKouH,aAAe,SAMYx1G,IAA5BnZ,KAAKm5C,MAAMhuC,OAAOyjH,QAEtB5uH,KAAKm5C,MAAMhuC,OAAOyjH,MAAQp1E,GAAUG,qBAIiBxgC,IAAjD5Y,EAAKouH,aAAc3uH,KAAKm5C,MAAMhuC,OAAOyjH,SAEzCruH,EAAKouH,aAAc3uH,KAAKm5C,MAAMhuC,OAAOyjH,OAAUh5G,MAAMijC,UAAUO,MAAMC,KAAM,IAAIszB,YAAa3sE,KAAKm5C,MAAMhuC,UAMjG,CACNy3C,KAAM5iD,KAAK4iD,KACXz3C,OAAQnL,KAAKm5C,MAAMhuC,OAAOyjH,MAC1B9uF,KAAM9/B,KAAKm5C,MAAMjzC,YAAYqpB,KAC7BygE,OAAQhwF,KAAKgwF,WAOhB,MAAM8+B,GAAY,IAAInkE,GAEtB,SAASokE,GAA4BC,EAAmBtjD,EAAU1vD,EAAQgpD,GAEzEhlE,KAAKuvB,KAAO,GAEZvvB,KAAKO,KAAOyuH,EACZhvH,KAAK0rE,SAAWA,EAChB1rE,KAAKgc,OAASA,EAEdhc,KAAKglE,YAA4B,IAAfA,EAuQnB,SAAS8hC,GAAgBroC,GAExB8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,iBAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO,UAExB7oC,KAAKu5B,IAAM,KAEXv5B,KAAKkoE,SAAW,KAEhBloE,KAAKghB,SAAW,EAEhBhhB,KAAK+qE,iBAAkB,EAEvB/qE,KAAK6lE,aAAc,EAEnB7lE,KAAK6oE,UAAWpK,GA0BjB,IAAIwwD,GA/SJzvH,OAAOo7D,iBAAkBm0D,GAA2Bl2E,UAAW,CAE9DyU,MAAO,CAEN1vC,IAAK,WAEJ,OAAO5d,KAAKO,KAAK+sD,QAMnBnU,MAAO,CAENv7B,IAAK,WAEJ,OAAO5d,KAAKO,KAAK44C,QAMnBo4B,YAAa,CAEZ3oE,IAAK,SAAWjJ,GAEfK,KAAKO,KAAKgxE,YAAc5xE,MAQ3BH,OAAOo5C,OAAQm2E,GAA2Bl2E,UAAW,CAEpD4mC,8BAA8B,EAE9B36B,aAAc,SAAWliD,GAExB,IAAM,IAAI/C,EAAI,EAAGwO,EAAIrO,KAAKO,KAAK+sD,MAAOztD,EAAIwO,EAAGxO,IAE5CivH,GAAUhvH,EAAIE,KAAK69C,KAAMh+C,GACzBivH,GAAU/uH,EAAIC,KAAK89C,KAAMj+C,GACzBivH,GAAU3uH,EAAIH,KAAKkmD,KAAMrmD,GAEzBivH,GAAUhqE,aAAcliD,GAExB5C,KAAK8tE,OAAQjuE,EAAGivH,GAAUhvH,EAAGgvH,GAAU/uH,EAAG+uH,GAAU3uH,GAIrD,OAAOH,MAIR6I,KAAM,SAAWsD,EAAOrM,GAIvB,OAFAE,KAAKO,KAAK44C,MAAOhtC,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,QAAWlc,EAErDE,MAIR8I,KAAM,SAAWqD,EAAOpM,GAIvB,OAFAC,KAAKO,KAAK44C,MAAOhtC,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAAS,GAAMjc,EAEzDC,MAIR4kD,KAAM,SAAWz4C,EAAOhM,GAIvB,OAFAH,KAAKO,KAAK44C,MAAOhtC,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAAS,GAAM7b,EAEzDH,MAIR6kD,KAAM,SAAW14C,EAAOmE,GAIvB,OAFAtQ,KAAKO,KAAK44C,MAAOhtC,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAAS,GAAM1L,EAEzDtQ,MAIR69C,KAAM,SAAW1xC,GAEhB,OAAOnM,KAAKO,KAAK44C,MAAOhtC,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,SAIzD8hC,KAAM,SAAW3xC,GAEhB,OAAOnM,KAAKO,KAAK44C,MAAOhtC,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAAS,IAIlEkqC,KAAM,SAAW/5C,GAEhB,OAAOnM,KAAKO,KAAK44C,MAAOhtC,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAAS,IAIlEmqC,KAAM,SAAWh6C,GAEhB,OAAOnM,KAAKO,KAAK44C,MAAOhtC,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAAS,IAIlE6xD,MAAO,SAAW1hE,EAAOrM,EAAGC,GAO3B,OALAoM,EAAQA,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAExChc,KAAKO,KAAK44C,MAAOhtC,EAAQ,GAAMrM,EAC/BE,KAAKO,KAAK44C,MAAOhtC,EAAQ,GAAMpM,EAExBC,MAIR8tE,OAAQ,SAAW3hE,EAAOrM,EAAGC,EAAGI,GAQ/B,OANAgM,EAAQA,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAExChc,KAAKO,KAAK44C,MAAOhtC,EAAQ,GAAMrM,EAC/BE,KAAKO,KAAK44C,MAAOhtC,EAAQ,GAAMpM,EAC/BC,KAAKO,KAAK44C,MAAOhtC,EAAQ,GAAMhM,EAExBH,MAIR+tE,QAAS,SAAW5hE,EAAOrM,EAAGC,EAAGI,EAAGmQ,GASnC,OAPAnE,EAAQA,EAAQnM,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAExChc,KAAKO,KAAK44C,MAAOhtC,EAAQ,GAAMrM,EAC/BE,KAAKO,KAAK44C,MAAOhtC,EAAQ,GAAMpM,EAC/BC,KAAKO,KAAK44C,MAAOhtC,EAAQ,GAAMhM,EAC/BH,KAAKO,KAAK44C,MAAOhtC,EAAQ,GAAMmE,EAExBtQ,MAIR2J,MAAO,SAAWpJ,GAEjB,QAAc4Y,IAAT5Y,EAAqB,CAEzBoM,QAAQC,IAAK,mHAEb,MAAMusC,EAAQ,GAEd,IAAM,IAAIt5C,EAAI,EAAGA,EAAIG,KAAKstD,MAAOztD,IAAO,CAEvC,MAAMsM,EAAQtM,EAAIG,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAE1C,IAAM,IAAIvW,EAAI,EAAGA,EAAIzF,KAAK0rE,SAAUjmE,IAEnC0zC,EAAM73C,KAAMtB,KAAKO,KAAK44C,MAAOhtC,EAAQ1G,IAMvC,OAAO,IAAIgmE,GAAiB,IAAIzrE,KAAKm5C,MAAMjzC,YAAaizC,GAASn5C,KAAK0rE,SAAU1rE,KAAKglE,YAgBrF,YAZiC7rD,IAA5B5Y,EAAK2uH,qBAET3uH,EAAK2uH,mBAAqB,SAIwB/1G,IAA9C5Y,EAAK2uH,mBAAoBlvH,KAAKO,KAAKqiD,QAEvCriD,EAAK2uH,mBAAoBlvH,KAAKO,KAAKqiD,MAAS5iD,KAAKO,KAAKoJ,MAAOpJ,IAIvD,IAAIwuH,GAA4BxuH,EAAK2uH,mBAAoBlvH,KAAKO,KAAKqiD,MAAQ5iD,KAAK0rE,SAAU1rE,KAAKgc,OAAQhc,KAAKglE,aAMrH3vD,OAAQ,SAAW9U,GAElB,QAAc4Y,IAAT5Y,EAAqB,CAEzBoM,QAAQC,IAAK,wHAEb,MAAMusC,EAAQ,GAEd,IAAM,IAAIt5C,EAAI,EAAGA,EAAIG,KAAKstD,MAAOztD,IAAO,CAEvC,MAAMsM,EAAQtM,EAAIG,KAAKO,KAAKyvF,OAAShwF,KAAKgc,OAE1C,IAAM,IAAIvW,EAAI,EAAGA,EAAIzF,KAAK0rE,SAAUjmE,IAEnC0zC,EAAM73C,KAAMtB,KAAKO,KAAK44C,MAAOhtC,EAAQ1G,IAQvC,MAAO,CACNimE,SAAU1rE,KAAK0rE,SACf5rC,KAAM9/B,KAAKm5C,MAAMjzC,YAAYqpB,KAC7B4pB,MAAOA,EACP6rB,WAAYhlE,KAAKglE,YAmBlB,YAZiC7rD,IAA5B5Y,EAAK2uH,qBAET3uH,EAAK2uH,mBAAqB,SAIwB/1G,IAA9C5Y,EAAK2uH,mBAAoBlvH,KAAKO,KAAKqiD,QAEvCriD,EAAK2uH,mBAAoBlvH,KAAKO,KAAKqiD,MAAS5iD,KAAKO,KAAK8U,OAAQ9U,IAIxD,CACNk/E,8BAA8B,EAC9B/T,SAAU1rE,KAAK0rE,SACfnrE,KAAMP,KAAKO,KAAKqiD,KAChB5mC,OAAQhc,KAAKgc,OACbgpD,WAAYhlE,KAAKglE,eAyCrB8hC,GAAejuD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACnDiuD,GAAejuD,UAAU3yC,YAAc4gG,GACvCA,GAAejuD,UAAUoqE,kBAAmB,EAE5Cnc,GAAejuD,UAAU/1B,KAAO,SAAW+gC,GAc1C,OAZA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OAExBnd,KAAKu5B,IAAMsqB,EAAOtqB,IAElBv5B,KAAKkoE,SAAWrkB,EAAOqkB,SAEvBloE,KAAKghB,SAAW6iC,EAAO7iC,SAEvBhhB,KAAK+qE,gBAAkBlnB,EAAOknB,gBAEvB/qE,MAMR,MAAMmvH,GAAkB,IAAIxkE,GACtBykE,GAAc,IAAIzkE,GAClB0kE,GAAc,IAAI1kE,GAElB2kE,GAAmB,IAAItzE,GACvBuzE,GAAmB,IAAIvzE,GACvBwzE,GAAmB,IAAIt7D,GAEvBu7D,GAAQ,IAAI9kE,GACZ+kE,GAAQ,IAAI/kE,GACZglE,GAAQ,IAAIhlE,GAEZilE,GAAS,IAAI5zE,GACb6zE,GAAS,IAAI7zE,GACb8zE,GAAS,IAAI9zE,GAEnB,SAAS+zE,GAAQhxD,GAMhB,GAJAtE,GAASphB,KAAMr5C,MAEfA,KAAK8/B,KAAO,cAEO3mB,IAAd81G,GAA0B,CAE9BA,GAAY,IAAIv+C,GAEhB,MAOMs+C,EAAoB,IAAIP,GAPT,IAAI/nG,aAAc,EACpC,IAAO,GAAK,EAAG,EAAG,EACpB,IAAO,GAAK,EAAG,EAAG,EAClB,GAAK,GAAK,EAAG,EAAG,GACd,GAAK,GAAK,EAAG,EAAG,IAG4C,GAE/DuoG,GAAUh+C,SAAU,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,IACrCg+C,GAAU1wG,aAAc,WAAY,IAAIwwG,GAA4BC,EAAmB,EAAG,GAAG,IAC7FC,GAAU1wG,aAAc,KAAM,IAAIwwG,GAA4BC,EAAmB,EAAG,GAAG,IAIxFhvH,KAAKwuD,SAAWygE,GAChBjvH,KAAK++D,cAA0B5lD,IAAb4lD,EAA2BA,EAAW,IAAI+nC,GAE5D9mG,KAAKuK,OAAS,IAAIyxC,GAAS,GAAK,IAmGjC,SAASg0E,GAAiBC,EAAgBC,EAAY3lH,EAAQF,EAAOM,EAAKD,GAGzE4kH,GAAiB/yE,WAAY0zE,EAAgB1lH,GAAS8xC,UAAW,IAAMI,SAAUpyC,QAGpE8O,IAARxO,GAEJ4kH,GAAiBzvH,EAAM4K,EAAM4kH,GAAiBxvH,EAAQ6K,EAAM2kH,GAAiBvvH,EAC7EwvH,GAAiBxvH,EAAM4K,EAAM2kH,GAAiBxvH,EAAQ4K,EAAM4kH,GAAiBvvH,GAI7EwvH,GAAiBzsG,KAAMwsG,IAKxBW,EAAentG,KAAMotG,GACrBD,EAAenwH,GAAKyvH,GAAiBzvH,EACrCmwH,EAAelwH,GAAKwvH,GAAiBxvH,EAGrCkwH,EAAenrE,aAAc0qE,IAtH9BO,GAAOl3E,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+W,GAAS5hB,WAAa,CAEtE3yC,YAAa6pH,GAEbtG,UAAU,EAEVpsD,QAAS,SAAWkY,EAAWz2E,GAEJ,OAArBy2E,EAAU7pB,QAEd/+C,QAAQu1B,MAAO,yFAIhBktF,GAAYpiE,mBAAoBhtD,KAAK+rD,aAErCyjE,GAAiB1sG,KAAMyyD,EAAU7pB,OAAOK,aACxC/rD,KAAK+6D,gBAAgB5b,iBAAkBo2B,EAAU7pB,OAAOC,mBAAoB3rD,KAAK+rD,aAEjFsjE,GAAYtiE,sBAAuB/sD,KAAK+6D,iBAEnCwa,EAAU7pB,OAAOwuB,sBAAyD,IAAlCl6E,KAAK++D,SAASgM,iBAE1DqkD,GAAYxkH,gBAAkBykH,GAAYlvH,GAI3C,MAAM6gB,EAAWhhB,KAAK++D,SAAS/9C,SAC/B,IAAIrW,EAAKD,EAES,IAAbsW,IAEJtW,EAAMrH,KAAKqH,IAAKsW,GAChBrW,EAAMtH,KAAKsH,IAAKqW,IAIjB,MAAMzW,EAASvK,KAAKuK,OAEpBylH,GAAiBP,GAAM7mH,KAAO,IAAO,GAAK,GAAKymH,GAAa9kH,EAAQ6kH,GAAazkH,EAAKD,GACtFslH,GAAiBN,GAAM9mH,IAAK,IAAO,GAAK,GAAKymH,GAAa9kH,EAAQ6kH,GAAazkH,EAAKD,GACpFslH,GAAiBL,GAAM/mH,IAAK,GAAK,GAAK,GAAKymH,GAAa9kH,EAAQ6kH,GAAazkH,EAAKD,GAElFklH,GAAOhnH,IAAK,EAAG,GACfinH,GAAOjnH,IAAK,EAAG,GACfknH,GAAOlnH,IAAK,EAAG,GAGf,IAAIynD,EAAYklB,EAAU9jB,IAAImC,kBAAmB67D,GAAOC,GAAOC,IAAO,EAAOR,IAE7E,GAAmB,OAAd9+D,IAGJ2/D,GAAiBN,GAAM9mH,KAAO,GAAK,GAAK,GAAKymH,GAAa9kH,EAAQ6kH,GAAazkH,EAAKD,GACpFmlH,GAAOjnH,IAAK,EAAG,GAEfynD,EAAYklB,EAAU9jB,IAAImC,kBAAmB67D,GAAOE,GAAOD,IAAO,EAAOP,IACtD,OAAd9+D,GAEJ,OAMF,MAAMzmD,EAAW2rE,EAAU9jB,IAAIxnD,OAAOqzC,WAAY6xE,IAE7CvlH,EAAW2rE,EAAUld,MAAQzuD,EAAW2rE,EAAUjd,KAEvDx5D,EAAWwC,KAAM,CAEhBsI,SAAUA,EACVqG,MAAOk/G,GAAgBxlH,QACvB+6C,GAAIv7B,GAASi5C,MAAO+sD,GAAiBM,GAAOC,GAAOC,GAAOC,GAAQC,GAAQC,GAAQ,IAAI9zE,IACtFkzB,KAAM,KACNlhB,OAAQhuD,QAMV8iB,KAAM,SAAW+gC,GAQhB,OANA4W,GAAS5hB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,QAEb1qC,IAAlB0qC,EAAOt5C,QAAuBvK,KAAKuK,OAAOuY,KAAM+gC,EAAOt5C,QAE5DvK,KAAK++D,SAAWlb,EAAOkb,SAEhB/+D,QAiCT,MAAMmwH,GAAQ,IAAIxlE,GACZylE,GAAQ,IAAIzlE,GAElB,SAAS0lE,KAER51D,GAASphB,KAAMr5C,MAEfA,KAAKswH,cAAgB,EAErBtwH,KAAK8/B,KAAO,MAEZtgC,OAAOo7D,iBAAkB56D,KAAM,CAC9BuwH,OAAQ,CACPz1D,YAAY,EACZn7D,MAAO,MAITK,KAAK8vG,YAAa,EAInBugB,GAAIx3E,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+W,GAAS5hB,WAAa,CAEnE3yC,YAAamqH,GAEbrG,OAAO,EAEPlnG,KAAM,SAAW+gC,GAEhB4W,GAAS5hB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAAQ,GAE5C,MAAM0sE,EAAS1sE,EAAO0sE,OAEtB,IAAM,IAAI1wH,EAAI,EAAGwO,EAAIkiH,EAAOjuH,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAMmsH,EAAQuE,EAAQ1wH,GAEtBG,KAAKwwH,SAAUxE,EAAMh+D,OAAOrkD,QAASqiH,EAAMpiH,UAM5C,OAFA5J,KAAK8vG,WAAajsD,EAAOisD,WAElB9vG,MAIRwwH,SAAU,SAAWxiE,EAAQpkD,EAAW,GAEvCA,EAAWvG,KAAKC,IAAKsG,GAErB,MAAM2mH,EAASvwH,KAAKuwH,OAEpB,IAAIliH,EAEJ,IAAMA,EAAI,EAAGA,EAAIkiH,EAAOjuH,UAElBsH,EAAW2mH,EAAQliH,GAAIzE,UAFGyE,KAchC,OAJAkiH,EAAOloH,OAAQgG,EAAG,EAAG,CAAEzE,SAAUA,EAAUokD,OAAQA,IAEnDhuD,KAAKiJ,IAAK+kD,GAEHhuD,MAIRywH,gBAAiB,WAEhB,OAAOzwH,KAAKswH,eAIbI,qBAAsB,SAAW9mH,GAEhC,MAAM2mH,EAASvwH,KAAKuwH,OAEpB,GAAKA,EAAOjuH,OAAS,EAAI,CAExB,IAAIzC,EAAGwO,EAEP,IAAMxO,EAAI,EAAGwO,EAAIkiH,EAAOjuH,OAAQzC,EAAIwO,KAE9BzE,EAAW2mH,EAAQ1wH,GAAI+J,UAFU/J,KAUvC,OAAO0wH,EAAQ1wH,EAAI,GAAImuD,OAIxB,OAAO,MAIRqP,QAAS,SAAWkY,EAAWz2E,GAI9B,GAFekB,KAAKuwH,OAERjuH,OAAS,EAAI,CAExB6tH,GAAMpjE,sBAAuB/sD,KAAK+rD,aAElC,MAAMniD,EAAW2rE,EAAU9jB,IAAIxnD,OAAOqzC,WAAY6yE,IAElDnwH,KAAK0wH,qBAAsB9mH,GAAWyzD,QAASkY,EAAWz2E,KAM5D2pD,OAAQ,SAAWiD,GAElB,MAAM6kE,EAASvwH,KAAKuwH,OAEpB,GAAKA,EAAOjuH,OAAS,EAAI,CAExB6tH,GAAMpjE,sBAAuBrB,EAAOK,aACpCqkE,GAAMrjE,sBAAuB/sD,KAAK+rD,aAElC,MAAMniD,EAAWumH,GAAM7yE,WAAY8yE,IAAU1kE,EAAOz4B,KAIpD,IAAIpzB,EAAGwO,EAEP,IAJAkiH,EAAQ,GAAIviE,OAAOznD,SAAU,EAIvB1G,EAAI,EAAGwO,EAAIkiH,EAAOjuH,OAAQzC,EAAIwO,GAE9BzE,GAAY2mH,EAAQ1wH,GAAI+J,SAFS/J,IAIrC0wH,EAAQ1wH,EAAI,GAAImuD,OAAOznD,SAAU,EACjCgqH,EAAQ1wH,GAAImuD,OAAOznD,SAAU,EAY/B,IAFAvG,KAAKswH,cAAgBzwH,EAAI,EAEjBA,EAAIwO,EAAGxO,IAEd0wH,EAAQ1wH,GAAImuD,OAAOznD,SAAU,IAQhC8O,OAAQ,SAAWyuC,GAElB,MAAMvjD,EAAOk6D,GAAS5hB,UAAUxjC,OAAOgkC,KAAMr5C,KAAM8jD,IAE1B,IAApB9jD,KAAK8vG,aAAuBvvG,EAAKytD,OAAO8hD,YAAa,GAE1DvvG,EAAKytD,OAAOuiE,OAAS,GAErB,MAAMA,EAASvwH,KAAKuwH,OAEpB,IAAM,IAAI1wH,EAAI,EAAGwO,EAAIkiH,EAAOjuH,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAMmsH,EAAQuE,EAAQ1wH,GAEtBU,EAAKytD,OAAOuiE,OAAOjvH,KAAM,CACxB0sD,OAAQg+D,EAAMh+D,OAAOpL,KACrBh5C,SAAUoiH,EAAMpiH,WAKlB,OAAOrJ,KAMT,MAAMowH,GAAgB,IAAIhmE,GAEpBimE,GAAa,IAAIjsE,GACjBksE,GAAc,IAAIlsE,GAElBmsE,GAAY,IAAInmE,GAChBomE,GAAY,IAAI78D,GAEtB,SAAS88D,GAAaxiE,EAAUuQ,GAE1BvQ,GAAYA,EAASojB,YAEzBjlE,QAAQu1B,MAAO,0FAIhBkzC,GAAK/7B,KAAMr5C,KAAMwuD,EAAUuQ,GAE3B/+D,KAAK8/B,KAAO,cAEZ9/B,KAAK4+D,SAAW,WAChB5+D,KAAK6+D,WAAa,IAAI3K,GACtBl0D,KAAKixH,kBAAoB,IAAI/8D,GAsI9B,SAASg9D,KAERz2D,GAASphB,KAAMr5C,MAEfA,KAAK8/B,KAAO,OAtIbkxF,GAAYn4E,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ0xB,GAAKv8B,WAAa,CAEvE3yC,YAAa8qH,GAEbryD,eAAe,EAEf77C,KAAM,SAAW+gC,GAUhB,OARAuxB,GAAKv8B,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEhC7jD,KAAK4+D,SAAW/a,EAAO+a,SACvB5+D,KAAK6+D,WAAW/7C,KAAM+gC,EAAOgb,YAC7B7+D,KAAKixH,kBAAkBnuG,KAAM+gC,EAAOotE,mBAEpCjxH,KAAK8+D,SAAWjb,EAAOib,SAEhB9+D,MAIR6yB,KAAM,SAAWisC,EAAUD,GAE1B7+D,KAAK8+D,SAAWA,OAEI3lD,IAAf0lD,IAEJ7+D,KAAKy9D,mBAAmB,GAExBz9D,KAAK8+D,SAASqyD,oBAEdtyD,EAAa7+D,KAAK+rD,aAInB/rD,KAAK6+D,WAAW/7C,KAAM+7C,GACtB7+D,KAAKixH,kBAAkBnuG,KAAM+7C,GAAape,UAI3Cy8D,KAAM,WAELl9G,KAAK8+D,SAASo+C,QAIfkU,qBAAsB,WAErB,MAAMrzF,EAAS,IAAI4mB,GAEb0sE,EAAarxH,KAAKwuD,SAASmiB,WAAW0gD,WAE5C,IAAM,IAAIxxH,EAAI,EAAGwO,EAAIgjH,EAAW/jE,MAAOztD,EAAIwO,EAAGxO,IAAO,CAEpDk+B,EAAOj+B,EAAIuxH,EAAWxzE,KAAMh+C,GAC5Bk+B,EAAOh+B,EAAIsxH,EAAWvzE,KAAMj+C,GAC5Bk+B,EAAO59B,EAAIkxH,EAAWnrE,KAAMrmD,GAC5Bk+B,EAAOztB,EAAI+gH,EAAWlrE,KAAMtmD,GAE5B,MAAMwK,EAAQ,EAAM0zB,EAAOsf,kBAEtBhzC,IAAUjH,EAAAA,EAEd26B,EAAOnzB,eAAgBP,GAIvB0zB,EAAOn1B,IAAK,EAAG,EAAG,EAAG,GAItByoH,EAAWtjD,QAASluE,EAAGk+B,EAAOj+B,EAAGi+B,EAAOh+B,EAAGg+B,EAAO59B,EAAG49B,EAAOztB,KAM9DmtD,kBAAmB,SAAWC,GAE7B0X,GAAKv8B,UAAU4kB,kBAAkBpkB,KAAMr5C,KAAM09D,GAEtB,aAAlB19D,KAAK4+D,SAET5+D,KAAKixH,kBAAkBnuG,KAAM9iB,KAAK+rD,aAActL,SAEnB,aAAlBzgD,KAAK4+D,SAEhB5+D,KAAKixH,kBAAkBnuG,KAAM9iB,KAAK6+D,YAAape,SAI/C9zC,QAAQoK,KAAM,6CAA+C/W,KAAK4+D,WAMpEiX,cAAe,SAAW1pE,EAAO+sC,GAEhC,MAAM4lB,EAAW9+D,KAAK8+D,SAChBtQ,EAAWxuD,KAAKwuD,SAEtBoiE,GAAWjzE,oBAAqB6Q,EAASmiB,WAAW2gD,UAAWnlH,GAC/D0kH,GAAYlzE,oBAAqB6Q,EAASmiB,WAAW0gD,WAAYllH,GAEjEwkH,GAAchzE,oBAAqB6Q,EAASmiB,WAAWhxD,SAAUxT,GAAQ24C,aAAc9kD,KAAK6+D,YAE5F3lB,EAAOtwC,IAAK,EAAG,EAAG,GAElB,IAAM,IAAI/I,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B,MAAM0xH,EAASV,GAAY10E,aAAct8C,GAEzC,GAAgB,IAAX0xH,EAAe,CAEnB,MAAMC,EAAYZ,GAAWz0E,aAAct8C,GAE3CkxH,GAAU5xE,iBAAkB2f,EAASuoC,MAAOmqB,GAAYzlE,YAAa+S,EAAS2yD,aAAcD,IAE5Ft4E,EAAOoD,gBAAiBw0E,GAAUhuG,KAAM6tG,IAAgB7rE,aAAcisE,IAAaQ,IAMrF,OAAOr4E,EAAO4L,aAAc9kD,KAAKixH,sBAcnCC,GAAKr4E,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+W,GAAS5hB,WAAa,CAEpE3yC,YAAagrH,GAEbQ,QAAQ,IAIT,MAAMC,GAAgB,IAAIz9D,GACpB09D,GAAkB,IAAI19D,GAE5B,SAAS29D,GAAUxqB,EAAQ,GAAIoqB,EAAe,IAE7CzxH,KAAK4iD,KAAOpJ,GAAUG,eAEtB35C,KAAKqnG,MAAQA,EAAMjuD,MAAO,GAC1Bp5C,KAAKyxH,aAAeA,EACpBzxH,KAAKsrH,aAAe,KAEpBtrH,KAAKqrH,YAAc,KACnBrrH,KAAKurH,gBAAkB,EAEvBvrH,KAAK++E,OAAU,EAEf/+E,KAAKi1F,OAINz1F,OAAOo5C,OAAQi5E,GAASh5E,UAAW,CAElCo8C,KAAM,WAEL,MAAMoS,EAAQrnG,KAAKqnG,MACboqB,EAAezxH,KAAKyxH,aAM1B,GAJAzxH,KAAKsrH,aAAe,IAAI5kG,aAA6B,GAAf2gF,EAAM/kG,QAIf,IAAxBmvH,EAAanvH,OAEjBtC,KAAKmxH,yBAML,GAAK9pB,EAAM/kG,SAAWmvH,EAAanvH,OAAS,CAE3CqK,QAAQoK,KAAM,mFAEd/W,KAAKyxH,aAAe,GAEpB,IAAM,IAAI5xH,EAAI,EAAG6tD,EAAK1tD,KAAKqnG,MAAM/kG,OAAQzC,EAAI6tD,EAAI7tD,IAEhDG,KAAKyxH,aAAanwH,KAAM,IAAI4yD,MAUhCi9D,kBAAmB,WAElBnxH,KAAKyxH,aAAanvH,OAAS,EAE3B,IAAM,IAAIzC,EAAI,EAAG6tD,EAAK1tD,KAAKqnG,MAAM/kG,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEvD,MAAM+Q,EAAU,IAAIsjD,GAEfl0D,KAAKqnG,MAAOxnG,IAEhB+Q,EAAQkS,KAAM9iB,KAAKqnG,MAAOxnG,GAAIksD,aAActL,SAI7CzgD,KAAKyxH,aAAanwH,KAAMsP,KAM1BssG,KAAM,WAIL,IAAM,IAAIr9G,EAAI,EAAG6tD,EAAK1tD,KAAKqnG,MAAM/kG,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEvD,MAAMiyH,EAAO9xH,KAAKqnG,MAAOxnG,GAEpBiyH,GAEJA,EAAK/lE,YAAYjpC,KAAM9iB,KAAKyxH,aAAc5xH,IAAM4gD,SAQlD,IAAM,IAAI5gD,EAAI,EAAG6tD,EAAK1tD,KAAKqnG,MAAM/kG,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEvD,MAAMiyH,EAAO9xH,KAAKqnG,MAAOxnG,GAEpBiyH,IAECA,EAAKp3D,QAAUo3D,EAAKp3D,OAAOg3D,QAE/BI,EAAKtwE,OAAO1+B,KAAMgvG,EAAKp3D,OAAO3O,aAActL,SAC5CqxE,EAAKtwE,OAAO/E,SAAUq1E,EAAK/lE,cAI3B+lE,EAAKtwE,OAAO1+B,KAAMgvG,EAAK/lE,aAIxB+lE,EAAKtwE,OAAOqW,UAAWi6D,EAAKnyG,SAAUmyG,EAAKxpE,WAAYwpE,EAAKznH,UAQ/Do+C,OAAQ,WAEP,MAAM4+C,EAAQrnG,KAAKqnG,MACboqB,EAAezxH,KAAKyxH,aACpBnG,EAAetrH,KAAKsrH,aACpBD,EAAcrrH,KAAKqrH,YAIzB,IAAM,IAAIxrH,EAAI,EAAG6tD,EAAK25C,EAAM/kG,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAIlD,MAAM2hD,EAAS6lD,EAAOxnG,GAAMwnG,EAAOxnG,GAAIksD,YAAc6lE,GAErDD,GAAcxyE,iBAAkBqC,EAAQiwE,EAAc5xH,IACtD8xH,GAAcj0E,QAAS4tE,EAAkB,GAAJzrH,GAIjB,OAAhBwrH,IAEJA,EAAY95C,aAAc,IAM5B5nE,MAAO,WAEN,OAAO,IAAIkoH,GAAU7xH,KAAKqnG,MAAOrnG,KAAKyxH,eAIvCM,cAAe,SAAWxiG,GAEzB,IAAM,IAAI1vB,EAAI,EAAG6tD,EAAK1tD,KAAKqnG,MAAM/kG,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEvD,MAAMiyH,EAAO9xH,KAAKqnG,MAAOxnG,GAEzB,GAAKiyH,EAAKviG,OAASA,EAElB,OAAOuiG,IAUVttE,QAAS,WAEkB,OAArBxkD,KAAKqrH,cAETrrH,KAAKqrH,YAAY7mE,UAEjBxkD,KAAKqrH,YAAc,OAMrB2G,SAAU,SAAWC,EAAM5qB,GAE1BrnG,KAAK4iD,KAAOqvE,EAAKrvE,KAEjB,IAAM,IAAI/iD,EAAI,EAAGwO,EAAI4jH,EAAK5qB,MAAM/kG,OAAQzC,EAAIwO,EAAGxO,IAAO,CAErD,MAAM+iD,EAAOqvE,EAAK5qB,MAAOxnG,GACzB,IAAIiyH,EAAOzqB,EAAOzkD,QAEJzpC,IAAT24G,IAEJnlH,QAAQoK,KAAM,2CAA4C6rC,GAC1DkvE,EAAO,IAAIZ,IAIZlxH,KAAKqnG,MAAM/lG,KAAMwwH,GACjB9xH,KAAKyxH,aAAanwH,MAAM,IAAI4yD,IAAU/lD,UAAW8jH,EAAKR,aAAc5xH,KAMrE,OAFAG,KAAKi1F,OAEEj1F,MAIRqV,OAAQ,WAEP,MAAM9U,EAAO,CACZ2jD,SAAU,CACTb,QAAS,IACTvjB,KAAM,WACNqkB,UAAW,mBAEZkjD,MAAO,GACPoqB,aAAc,IAGflxH,EAAKqiD,KAAO5iD,KAAK4iD,KAEjB,MAAMykD,EAAQrnG,KAAKqnG,MACboqB,EAAezxH,KAAKyxH,aAE1B,IAAM,IAAI5xH,EAAI,EAAGwO,EAAIg5F,EAAM/kG,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEhD,MAAMiyH,EAAOzqB,EAAOxnG,GACpBU,EAAK8mG,MAAM/lG,KAAMwwH,EAAKlvE,MAEtB,MAAMsvE,EAAcT,EAAc5xH,GAClCU,EAAKkxH,aAAanwH,KAAM4wH,EAAYx0E,WAIrC,OAAOn9C,KAMT,MAAM4xH,GAAuB,IAAIj+D,GAC3Bk+D,GAAuB,IAAIl+D,GAE3Bm+D,GAAsB,GAEtBC,GAAQ,IAAIl9C,GAElB,SAASm9C,GAAe/jE,EAAUuQ,EAAUzR,GAE3C8nB,GAAK/7B,KAAMr5C,KAAMwuD,EAAUuQ,GAE3B/+D,KAAKq+D,eAAiB,IAAIoN,GAAiB,IAAI/kD,aAAsB,GAAR4mC,GAAc,IAC3EttD,KAAKyxF,cAAgB,KAErBzxF,KAAKstD,MAAQA,EAEbttD,KAAKq7D,eAAgB,EAmHtB,SAASqrC,GAAmBjoC,GAE3B8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,oBAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO,UAExB7oC,KAAKgrE,UAAY,EACjBhrE,KAAKwyH,QAAU,QACfxyH,KAAKyyH,SAAW,QAEhBzyH,KAAK4oE,cAAe,EAEpB5oE,KAAK6oE,UAAWpK,GA7HjB8zD,GAAc15E,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ0xB,GAAKv8B,WAAa,CAEzE3yC,YAAaqsH,GAEbn0D,iBAAiB,EAEjBt7C,KAAM,SAAW+gC,GAOhB,OALAuxB,GAAKv8B,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEhC7jD,KAAKq+D,eAAev7C,KAAM+gC,EAAOwa,gBACjCr+D,KAAKstD,MAAQzJ,EAAOyJ,MAEbttD,MAIR0yH,WAAY,SAAWvmH,EAAOgR,GAE7BA,EAAMhP,UAAWnO,KAAKyxF,cAAct4C,MAAe,EAARhtC,IAI5CwmH,YAAa,SAAWxmH,EAAOq1C,GAE9BA,EAAOrzC,UAAWnO,KAAKq+D,eAAellB,MAAe,GAARhtC,IAI9CkxD,QAAS,SAAWkY,EAAWz2E,GAE9B,MAAMitD,EAAc/rD,KAAK+rD,YACnB6mE,EAAe5yH,KAAKstD,MAK1B,GAHAglE,GAAM9jE,SAAWxuD,KAAKwuD,SACtB8jE,GAAMvzD,SAAW/+D,KAAK++D,cAEE5lD,IAAnBm5G,GAAMvzD,SAEX,IAAM,IAAI8zD,EAAa,EAAGA,EAAaD,EAAcC,IAAgB,CAIpE7yH,KAAK2yH,YAAaE,EAAYV,IAE9BC,GAAqBjzE,iBAAkB4M,EAAaomE,IAIpDG,GAAMvmE,YAAcqmE,GAEpBE,GAAMj1D,QAASkY,EAAW88C,IAI1B,IAAM,IAAIxyH,EAAI,EAAGwO,EAAIgkH,GAAoB/vH,OAAQzC,EAAIwO,EAAGxO,IAAO,CAE9D,MAAMwwD,EAAYgiE,GAAqBxyH,GACvCwwD,EAAUwiE,WAAaA,EACvBxiE,EAAUrC,OAAShuD,KACnBlB,EAAWwC,KAAM+uD,GAIlBgiE,GAAoB/vH,OAAS,IAM/BwwH,WAAY,SAAW3mH,EAAOgR,GAED,OAAvBnd,KAAKyxF,gBAETzxF,KAAKyxF,cAAgB,IAAIhmB,GAAiB,IAAI/kD,aAA2B,EAAb1mB,KAAKstD,OAAa,IAI/EnwC,EAAMugC,QAAS19C,KAAKyxF,cAAct4C,MAAe,EAARhtC,IAI1C4mH,YAAa,SAAW5mH,EAAOq1C,GAE9BA,EAAO9D,QAAS19C,KAAKq+D,eAAellB,MAAe,GAARhtC,IAI5CkpE,mBAAoB,aAIpB7wB,QAAS,WAERxkD,KAAKi5C,cAAe,CAAEnZ,KAAM,eAmC9B4mE,GAAkB7tD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACtD6tD,GAAkB7tD,UAAU3yC,YAAcwgG,GAE1CA,GAAkB7tD,UAAU8pE,qBAAsB,EAElDjc,GAAkB7tD,UAAU/1B,KAAO,SAAW+gC,GAY7C,OAVA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OAExBnd,KAAKgrE,UAAYnnB,EAAOmnB,UACxBhrE,KAAKwyH,QAAU3uE,EAAO2uE,QACtBxyH,KAAKyyH,SAAW5uE,EAAO4uE,SAEvBzyH,KAAK4oE,aAAe/kB,EAAO+kB,aAEpB5oE,MAIR,MAAMgzH,GAAS,IAAIroE,GACbsoE,GAAO,IAAItoE,GACXuoE,GAAmB,IAAIh/D,GACvBi/D,GAAS,IAAI3hE,GACb4hE,GAAY,IAAI1iE,GAEtB,SAAS52C,GAAM00C,EAAW,IAAIkiB,GAAkB3R,EAAW,IAAI2nC,IAE9DjsC,GAASphB,KAAMr5C,MAEfA,KAAK8/B,KAAO,OAEZ9/B,KAAKwuD,SAAWA,EAChBxuD,KAAK++D,SAAWA,EAEhB/+D,KAAKq1E,qBAINv7D,GAAK++B,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+W,GAAS5hB,WAAa,CAEpE3yC,YAAa4T,GAEbykD,QAAQ,EAERz7C,KAAM,SAAW+gC,GAOhB,OALA4W,GAAS5hB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAK++D,SAAWlb,EAAOkb,SACvB/+D,KAAKwuD,SAAW3K,EAAO2K,SAEhBxuD,MAIRqzH,qBAAsB,WAErB,MAAM7kE,EAAWxuD,KAAKwuD,SAEtB,GAAKA,EAASuiB,iBAIb,GAAwB,OAAnBviB,EAASriD,MAAiB,CAE9B,MAAMsmE,EAAoBjkB,EAASmiB,WAAWhxD,SACxCgyD,EAAgB,CAAE,GAExB,IAAM,IAAI9xE,EAAI,EAAGwO,EAAIokE,EAAkBnlB,MAAOztD,EAAIwO,EAAGxO,IAEpDmzH,GAAOr1E,oBAAqB80B,EAAmB5yE,EAAI,GACnDozH,GAAKt1E,oBAAqB80B,EAAmB5yE,GAE7C8xE,EAAe9xE,GAAM8xE,EAAe9xE,EAAI,GACxC8xE,EAAe9xE,IAAOmzH,GAAO11E,WAAY21E,IAI1CzkE,EAASjwC,aAAc,eAAgB,IAAIsuD,GAAwB8E,EAAe,SAIlFhlE,QAAQoK,KAAM,sGAIT,GAAKy3C,EAASojB,WAAa,CAEjC,MAAM9lE,EAAW0iD,EAAS1iD,SACpB6lE,EAAgBnjB,EAASmjB,cAE/BA,EAAe,GAAM,EAErB,IAAM,IAAI9xE,EAAI,EAAGwO,EAAIvC,EAASxJ,OAAQzC,EAAIwO,EAAGxO,IAE5C8xE,EAAe9xE,GAAM8xE,EAAe9xE,EAAI,GACxC8xE,EAAe9xE,IAAOiM,EAAUjM,EAAI,GAAIy9C,WAAYxxC,EAAUjM,IAMhE,OAAOG,MAIRq9D,QAAS,SAAWkY,EAAWz2E,GAE9B,MAAM0vD,EAAWxuD,KAAKwuD,SAChBzC,EAAc/rD,KAAK+rD,YACnBr+C,EAAY6nE,EAAUrtE,OAAO4R,KAAKpM,UAUxC,GANiC,OAA5B8gD,EAASigB,gBAA0BjgB,EAASijB,wBAEjD2hD,GAAUtwG,KAAM0rC,EAASigB,gBACzB2kD,GAAUtuE,aAAciH,GACxBqnE,GAAUn5G,QAAUvM,GAEiC,IAAhD6nE,EAAU9jB,IAAIxC,iBAAkBmkE,IAAwB,OAI7DF,GAAiBpwG,KAAMipC,GAActL,SACrC0yE,GAAOrwG,KAAMyyD,EAAU9jB,KAAM3M,aAAcouE,IAE3C,MAAMI,EAAiB5lH,IAAgB1N,KAAKqK,MAAMvK,EAAIE,KAAKqK,MAAMtK,EAAIC,KAAKqK,MAAMlK,GAAM,GAChFozH,EAAmBD,EAAiBA,EAEpCE,EAAS,IAAI7oE,GACb8oE,EAAO,IAAI9oE,GACX+oE,EAAe,IAAI/oE,GACnBgpE,EAAW,IAAIhpE,GACflB,EAAOzpD,KAAKupH,eAAiB,EAAI,EAEvC,GAAK/6D,EAASuiB,iBAAmB,CAEhC,MAAM5kE,EAAQqiD,EAASriD,MAEjBsmE,EADajkB,EAASmiB,WACShxD,SAErC,GAAe,OAAVxT,EAAiB,CAErB,MAAMwnE,EAAUxnE,EAAMgtC,MAEtB,IAAM,IAAIt5C,EAAI,EAAGwO,EAAIslE,EAAQrxE,OAAS,EAAGzC,EAAIwO,EAAGxO,GAAK4pD,EAAO,CAE3D,MAAMloD,EAAIoyE,EAAS9zE,GACb2B,EAAImyE,EAAS9zE,EAAI,GAEvB2zH,EAAO71E,oBAAqB80B,EAAmBlxE,GAC/CkyH,EAAK91E,oBAAqB80B,EAAmBjxE,GAI7C,GAFe2xH,GAAOnhE,oBAAqBwhE,EAAQC,EAAME,EAAUD,GAErDH,EAAmB,SAEjCI,EAAS7uE,aAAc9kD,KAAK+rD,aAE5B,MAAMniD,EAAW2rE,EAAU9jB,IAAIxnD,OAAOqzC,WAAYq2E,GAE7C/pH,EAAW2rE,EAAUld,MAAQzuD,EAAW2rE,EAAUjd,KAEvDx5D,EAAWwC,KAAM,CAEhBsI,SAAUA,EAGVqG,MAAOyjH,EAAa/pH,QAAQm7C,aAAc9kD,KAAK+rD,aAC/C5/C,MAAOtM,EACPqvE,KAAM,KACNgH,UAAW,KACXloB,OAAQhuD,aAQV,IAAM,IAAIH,EAAI,EAAGwO,EAAIokE,EAAkBnlB,MAAQ,EAAGztD,EAAIwO,EAAGxO,GAAK4pD,EAAO,CAEpE+pE,EAAO71E,oBAAqB80B,EAAmB5yE,GAC/C4zH,EAAK91E,oBAAqB80B,EAAmB5yE,EAAI,GAIjD,GAFeszH,GAAOnhE,oBAAqBwhE,EAAQC,EAAME,EAAUD,GAErDH,EAAmB,SAEjCI,EAAS7uE,aAAc9kD,KAAK+rD,aAE5B,MAAMniD,EAAW2rE,EAAU9jB,IAAIxnD,OAAOqzC,WAAYq2E,GAE7C/pH,EAAW2rE,EAAUld,MAAQzuD,EAAW2rE,EAAUjd,KAEvDx5D,EAAWwC,KAAM,CAEhBsI,SAAUA,EAGVqG,MAAOyjH,EAAa/pH,QAAQm7C,aAAc9kD,KAAK+rD,aAC/C5/C,MAAOtM,EACPqvE,KAAM,KACNgH,UAAW,KACXloB,OAAQhuD,aAQL,GAAKwuD,EAASojB,WAAa,CAEjC,MAAM9lE,EAAW0iD,EAAS1iD,SACpB8nH,EAAa9nH,EAASxJ,OAE5B,IAAM,IAAIzC,EAAI,EAAGA,EAAI+zH,EAAa,EAAG/zH,GAAK4pD,EAAO,CAIhD,GAFe0pE,GAAOnhE,oBAAqBlmD,EAAUjM,GAAKiM,EAAUjM,EAAI,GAAK8zH,EAAUD,GAEzEH,EAAmB,SAEjCI,EAAS7uE,aAAc9kD,KAAK+rD,aAE5B,MAAMniD,EAAW2rE,EAAU9jB,IAAIxnD,OAAOqzC,WAAYq2E,GAE7C/pH,EAAW2rE,EAAUld,MAAQzuD,EAAW2rE,EAAUjd,KAEvDx5D,EAAWwC,KAAM,CAEhBsI,SAAUA,EAGVqG,MAAOyjH,EAAa/pH,QAAQm7C,aAAc9kD,KAAK+rD,aAC/C5/C,MAAOtM,EACPqvE,KAAM,KACNgH,UAAW,KACXloB,OAAQhuD,UAUZq1E,mBAAoB,WAEnB,MAAM7mB,EAAWxuD,KAAKwuD,SAEtB,GAAKA,EAASuiB,iBAAmB,CAEhC,MAAMH,EAAkBpiB,EAASoiB,gBAC3B7zD,EAAOvd,OAAOud,KAAM6zD,GAE1B,GAAK7zD,EAAKza,OAAS,EAAI,CAEtB,MAAM+vE,EAAiBzB,EAAiB7zD,EAAM,IAE9C,QAAwB5D,IAAnBk5D,EAA+B,CAEnCryE,KAAK21E,sBAAwB,GAC7B31E,KAAK81E,sBAAwB,GAE7B,IAAM,IAAIlzE,EAAI,EAAGmzE,EAAK1D,EAAe/vE,OAAQM,EAAImzE,EAAInzE,IAAO,CAE3D,MAAM2sB,EAAO8iD,EAAgBzvE,GAAI2sB,MAAQymD,OAAQpzE,GAEjD5C,KAAK21E,sBAAsBr0E,KAAM,GACjCtB,KAAK81E,sBAAuBvmD,GAAS3sB,SAQlC,CAEN,MAAMgmE,EAAepa,EAASoa,kBAERzvD,IAAjByvD,GAA8BA,EAAatmE,OAAS,GAExDqK,QAAQu1B,MAAO,0GAUnB,MAAM2xF,GAAW,IAAIlpE,GACfmpE,GAAS,IAAInpE,GAEnB,SAASopE,GAAcvlE,EAAUuQ,GAEhCjlD,GAAKu/B,KAAMr5C,KAAMwuD,EAAUuQ,GAE3B/+D,KAAK8/B,KAAO,eAgEb,SAASk0F,GAAUxlE,EAAUuQ,GAE5BjlD,GAAKu/B,KAAMr5C,KAAMwuD,EAAUuQ,GAE3B/+D,KAAK8/B,KAAO,WA0Bb,SAAS8mE,GAAgBnoC,GAExB8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,iBAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO,UAExB7oC,KAAKu5B,IAAM,KAEXv5B,KAAKkoE,SAAW,KAEhBloE,KAAK4f,KAAO,EACZ5f,KAAK+qE,iBAAkB,EAEvB/qE,KAAK4oE,cAAe,EAEpB5oE,KAAK6oE,UAAWpK,GA3GjBs1D,GAAal7E,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ5pC,GAAK++B,WAAa,CAExE3yC,YAAa6tH,GAEbxK,gBAAgB,EAEhB8J,qBAAsB,WAErB,MAAM7kE,EAAWxuD,KAAKwuD,SAEtB,GAAKA,EAASuiB,iBAIb,GAAwB,OAAnBviB,EAASriD,MAAiB,CAE9B,MAAMsmE,EAAoBjkB,EAASmiB,WAAWhxD,SACxCgyD,EAAgB,GAEtB,IAAM,IAAI9xE,EAAI,EAAGwO,EAAIokE,EAAkBnlB,MAAOztD,EAAIwO,EAAGxO,GAAK,EAEzDg0H,GAASl2E,oBAAqB80B,EAAmB5yE,GACjDi0H,GAAOn2E,oBAAqB80B,EAAmB5yE,EAAI,GAEnD8xE,EAAe9xE,GAAc,IAANA,EAAY,EAAI8xE,EAAe9xE,EAAI,GAC1D8xE,EAAe9xE,EAAI,GAAM8xE,EAAe9xE,GAAMg0H,GAASv2E,WAAYw2E,IAIpEtlE,EAASjwC,aAAc,eAAgB,IAAIsuD,GAAwB8E,EAAe,SAIlFhlE,QAAQoK,KAAM,8GAIT,GAAKy3C,EAASojB,WAAa,CAEjC,MAAM9lE,EAAW0iD,EAAS1iD,SACpB6lE,EAAgBnjB,EAASmjB,cAE/B,IAAM,IAAI9xE,EAAI,EAAGwO,EAAIvC,EAASxJ,OAAQzC,EAAIwO,EAAGxO,GAAK,EAEjDg0H,GAAS/wG,KAAMhX,EAAUjM,IACzBi0H,GAAOhxG,KAAMhX,EAAUjM,EAAI,IAE3B8xE,EAAe9xE,GAAc,IAANA,EAAY,EAAI8xE,EAAe9xE,EAAI,GAC1D8xE,EAAe9xE,EAAI,GAAM8xE,EAAe9xE,GAAMg0H,GAASv2E,WAAYw2E,IAMrE,OAAO9zH,QAcTg0H,GAASn7E,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ5pC,GAAK++B,WAAa,CAEpE3yC,YAAa8tH,GAEbxK,YAAY,IAuCb5iB,GAAe/tD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACnD+tD,GAAe/tD,UAAU3yC,YAAc0gG,GAEvCA,GAAe/tD,UAAUkqE,kBAAmB,EAE5Cnc,GAAe/tD,UAAU/1B,KAAO,SAAW+gC,GAe1C,OAbA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OAExBnd,KAAKu5B,IAAMsqB,EAAOtqB,IAElBv5B,KAAKkoE,SAAWrkB,EAAOqkB,SAEvBloE,KAAK4f,KAAOikC,EAAOjkC,KACnB5f,KAAK+qE,gBAAkBlnB,EAAOknB,gBAE9B/qE,KAAK4oE,aAAe/kB,EAAO+kB,aAEpB5oE,MAIR,MAAMi0H,GAAmB,IAAI//D,GACvBggE,GAAS,IAAI1iE,GACb2iE,GAAY,IAAIzjE,GAChB0jE,GAAc,IAAIzpE,GAExB,SAAS0pE,GAAQ7lE,EAAW,IAAIkiB,GAAkB3R,EAAW,IAAI6nC,IAEhEnsC,GAASphB,KAAMr5C,MAEfA,KAAK8/B,KAAO,SAEZ9/B,KAAKwuD,SAAWA,EAChBxuD,KAAK++D,SAAWA,EAEhB/+D,KAAKq1E,qBA0IN,SAASi/C,GAAWrkH,EAAO9D,EAAOonH,EAAkBxnE,EAAawpB,EAAWz2E,EAAYkvD,GAEvF,MAAMumE,EAAqBL,GAAOniE,kBAAmB9hD,GAErD,GAAKskH,EAAqBhB,EAAmB,CAE5C,MAAMiB,EAAiB,IAAI7pE,GAE3BupE,GAAOriE,oBAAqB5hD,EAAOukH,GACnCA,EAAe1vE,aAAciH,GAE7B,MAAMniD,EAAW2rE,EAAU9jB,IAAIxnD,OAAOqzC,WAAYk3E,GAElD,GAAK5qH,EAAW2rE,EAAUld,MAAQzuD,EAAW2rE,EAAUjd,IAAM,OAE7Dx5D,EAAWwC,KAAM,CAEhBsI,SAAUA,EACV6qH,cAAepxH,KAAKyG,KAAMyqH,GAC1BtkH,MAAOukH,EACProH,MAAOA,EACP+iE,KAAM,KACNlhB,OAAQA,KAQX,SAAS0mE,GAAcC,EAAOxyE,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQ3iB,EAAM4iB,GAExFT,GAAQ5I,KAAMr5C,KAAM20H,EAAOxyE,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQ3iB,EAAM4iB,GAEtF1iD,KAAKyiD,YAAoBtpC,IAAXspC,EAAuBA,EAASxQ,GAE9CjyC,KAAKwiD,eAA0BrpC,IAAdqpC,EAA0BA,EAAYzR,GACvD/wC,KAAKuiD,eAA0BppC,IAAdopC,EAA0BA,EAAYxR,GAEvD/wC,KAAKijD,iBAAkB,EAEvB,MAAM8zB,EAAQ/2E,KAST,8BAA+B20H,GAEnCA,EAAMC,2BATP,SAASC,IAER99C,EAAMxF,aAAc,EACpBojD,EAAMC,0BAA2BC,MAuCnC,SAASC,GAAmBjyE,EAASv0C,EAAOC,EAAQk0C,EAAQ3iB,EAAMqiB,EAASE,EAAOC,EAAOC,EAAWC,EAAWE,EAAYC,GAE1HV,GAAQ5I,KAAMr5C,KAAM,KAAMmiD,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQ3iB,EAAM4iB,EAAYC,GAEjG3iD,KAAK0f,MAAQ,CAAEpR,MAAOA,EAAOC,OAAQA,GACrCvO,KAAK6iD,QAAUA,EAKf7iD,KAAKmjD,OAAQ,EAKbnjD,KAAKijD,iBAAkB,EASxB,SAAS8xE,GAAezvG,EAAQ68B,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQ3iB,EAAM4iB,GAE1FT,GAAQ5I,KAAMr5C,KAAMslB,EAAQ68B,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQ3iB,EAAM4iB,GAEvF1iD,KAAKuxE,aAAc,EAQpB,SAASyjD,GAAc1mH,EAAOC,EAAQuxB,EAAMqiB,EAASE,EAAOC,EAAOC,EAAWC,EAAWE,EAAYD,GAIpG,IAFAA,OAAoBtpC,IAAXspC,EAAuBA,EAASnQ,MAEzBA,IAAemQ,IAAWlQ,GAEzC,MAAM,IAAIt+B,MAAO,yFAIJkF,IAAT2mB,GAAsB2iB,IAAWnQ,KAAcxS,EAAOyR,SAC7Cp4B,IAAT2mB,GAAsB2iB,IAAWlQ,KAAqBzS,EAAOiS,IAElEkQ,GAAQ5I,KAAMr5C,KAAM,KAAMmiD,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQ3iB,EAAM4iB,GAErF1iD,KAAK0f,MAAQ,CAAEpR,MAAOA,EAAOC,OAAQA,GAErCvO,KAAKuiD,eAA0BppC,IAAdopC,EAA0BA,EAAY7R,GACvD1wC,KAAKwiD,eAA0BrpC,IAAdqpC,EAA0BA,EAAY9R,GAEvD1wC,KAAKmjD,OAAQ,EACbnjD,KAAKijD,iBAAkB,EApRxBoxE,GAAOx7E,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+W,GAAS5hB,WAAa,CAEtE3yC,YAAamuH,GAEb71D,UAAU,EAEV17C,KAAM,SAAW+gC,GAOhB,OALA4W,GAAS5hB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAK++D,SAAWlb,EAAOkb,SACvB/+D,KAAKwuD,SAAW3K,EAAO2K,SAEhBxuD,MAIRq9D,QAAS,SAAWkY,EAAWz2E,GAE9B,MAAM0vD,EAAWxuD,KAAKwuD,SAChBzC,EAAc/rD,KAAK+rD,YACnBr+C,EAAY6nE,EAAUrtE,OAAOmsH,OAAO3mH,UAU1C,GANiC,OAA5B8gD,EAASigB,gBAA0BjgB,EAASijB,wBAEjD0iD,GAAUrxG,KAAM0rC,EAASigB,gBACzB0lD,GAAUrvE,aAAciH,GACxBooE,GAAUl6G,QAAUvM,GAEiC,IAAhD6nE,EAAU9jB,IAAIxC,iBAAkBklE,IAAwB,OAI7DF,GAAiBnxG,KAAMipC,GAActL,SACrCyzE,GAAOpxG,KAAMyyD,EAAU9jB,KAAM3M,aAAcmvE,IAE3C,MAAMX,EAAiB5lH,IAAgB1N,KAAKqK,MAAMvK,EAAIE,KAAKqK,MAAMtK,EAAIC,KAAKqK,MAAMlK,GAAM,GAChFozH,EAAmBD,EAAiBA,EAE1C,GAAK9kE,EAASuiB,iBAAmB,CAEhC,MAAM5kE,EAAQqiD,EAASriD,MAEjBsmE,EADajkB,EAASmiB,WACShxD,SAErC,GAAe,OAAVxT,EAAiB,CAErB,MAAMwnE,EAAUxnE,EAAMgtC,MAEtB,IAAM,IAAIt5C,EAAI,EAAG6tD,EAAKimB,EAAQrxE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEpD,MAAM0B,EAAIoyE,EAAS9zE,GAEnBu0H,GAAYz2E,oBAAqB80B,EAAmBlxE,GAEpD+yH,GAAWF,GAAa7yH,EAAGgyH,EAAkBxnE,EAAawpB,EAAWz2E,EAAYkB,YAMlF,IAAM,IAAIH,EAAI,EAAGwO,EAAIokE,EAAkBnlB,MAAOztD,EAAIwO,EAAGxO,IAEpDu0H,GAAYz2E,oBAAqB80B,EAAmB5yE,GAEpDy0H,GAAWF,GAAav0H,EAAG0zH,EAAkBxnE,EAAawpB,EAAWz2E,EAAYkB,UAM7E,CAEN,MAAM8L,EAAW0iD,EAAS1iD,SAE1B,IAAM,IAAIjM,EAAI,EAAGwO,EAAIvC,EAASxJ,OAAQzC,EAAIwO,EAAGxO,IAE5Cy0H,GAAWxoH,EAAUjM,GAAKA,EAAG0zH,EAAkBxnE,EAAawpB,EAAWz2E,EAAYkB,QAQtFq1E,mBAAoB,WAEnB,MAAM7mB,EAAWxuD,KAAKwuD,SAEtB,GAAKA,EAASuiB,iBAAmB,CAEhC,MAAMH,EAAkBpiB,EAASoiB,gBAC3B7zD,EAAOvd,OAAOud,KAAM6zD,GAE1B,GAAK7zD,EAAKza,OAAS,EAAI,CAEtB,MAAM+vE,EAAiBzB,EAAiB7zD,EAAM,IAE9C,QAAwB5D,IAAnBk5D,EAA+B,CAEnCryE,KAAK21E,sBAAwB,GAC7B31E,KAAK81E,sBAAwB,GAE7B,IAAM,IAAIlzE,EAAI,EAAGmzE,EAAK1D,EAAe/vE,OAAQM,EAAImzE,EAAInzE,IAAO,CAE3D,MAAM2sB,EAAO8iD,EAAgBzvE,GAAI2sB,MAAQymD,OAAQpzE,GAEjD5C,KAAK21E,sBAAsBr0E,KAAM,GACjCtB,KAAK81E,sBAAuBvmD,GAAS3sB,SAQlC,CAEN,MAAMgmE,EAAepa,EAASoa,kBAERzvD,IAAjByvD,GAA8BA,EAAatmE,OAAS,GAExDqK,QAAQu1B,MAAO,4GAoEnBwyF,GAAa77E,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQzB,GAAQpJ,WAAa,CAE3E3yC,YAAawuH,GAEb/qH,MAAO,WAEN,OAAO,IAAI3J,KAAKkG,YAAalG,KAAK0f,OAAQoD,KAAM9iB,OAIjDy3G,gBAAgB,EAEhBhvD,OAAQ,WAEP,MAAMksE,EAAQ30H,KAAK0f,OAGY,IAFD,8BAA+Bi1G,GAErBA,EAAMM,YAAcN,EAAMO,oBAEjEl1H,KAAKuxE,aAAc,MA2BtBujD,GAAkBj8E,UAAYr5C,OAAOkkD,OAAQzB,GAAQpJ,WACrDi8E,GAAkBj8E,UAAU3yC,YAAc4uH,GAE1CA,GAAkBj8E,UAAUigE,qBAAsB,EAUlDic,GAAcl8E,UAAYr5C,OAAOkkD,OAAQzB,GAAQpJ,WACjDk8E,GAAcl8E,UAAU3yC,YAAc6uH,GACtCA,GAAcl8E,UAAUs8E,iBAAkB,EA2B1CH,GAAan8E,UAAYr5C,OAAOkkD,OAAQzB,GAAQpJ,WAChDm8E,GAAan8E,UAAU3yC,YAAc8uH,GACrCA,GAAan8E,UAAUghE,gBAAiB,EAExC,IAAIub,GAAc,EAClB,MAAMC,GAAQ,IAAInhE,GACZohE,GAAS,IAAI76D,GACb86D,GAAY,IAAI5qE,GAEtB,SAAS6qE,KAERh2H,OAAOC,eAAgBO,KAAM,KAAM,CAAEL,MAAOy1H,IAAe,IAE3Dp1H,KAAK4iD,KAAOpJ,GAAUG,eAEtB35C,KAAKuvB,KAAO,GACZvvB,KAAK8/B,KAAO,WAEZ9/B,KAAK8L,SAAW,GAChB9L,KAAKwtE,OAAS,GACdxtE,KAAKivE,MAAQ,GACbjvE,KAAKovE,cAAgB,CAAC,IAEtBpvE,KAAK4oE,aAAe,GACpB5oE,KAAKmrE,aAAe,GAEpBnrE,KAAKuuE,YAAc,GACnBvuE,KAAKwuE,YAAc,GAEnBxuE,KAAK2xE,cAAgB,GAErB3xE,KAAKyuD,YAAc,KACnBzuD,KAAKyuE,eAAiB,KAItBzuE,KAAKgyE,oBAAqB,EAC1BhyE,KAAK0uE,oBAAqB,EAC1B1uE,KAAK6uE,eAAgB,EACrB7uE,KAAK2uE,mBAAoB,EACzB3uE,KAAK4uE,kBAAmB,EACxB5uE,KAAKiyE,yBAA0B,EAC/BjyE,KAAK8uE,kBAAmB,EAIzB0mD,GAAS38E,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ/K,GAAgBE,WAAa,CAE/E3yC,YAAasvH,GAEb5jD,YAAY,EAEZ9sB,aAAc,SAAWtD,GAExB,MAAMwZ,GAAe,IAAIhd,IAAUgD,gBAAiBQ,GAEpD,IAAM,IAAI3hD,EAAI,EAAG6tD,EAAK1tD,KAAK8L,SAASxJ,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAE3CG,KAAK8L,SAAUjM,GACvBilD,aAActD,GAItB,IAAM,IAAI3hD,EAAI,EAAG6tD,EAAK1tD,KAAKivE,MAAM3sE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEvD,MAAMqvE,EAAOlvE,KAAKivE,MAAOpvE,GACzBqvE,EAAK13C,OAAOolB,aAAcoe,GAAe9rD,YAEzC,IAAM,IAAIzJ,EAAI,EAAG6sE,EAAKpD,EAAK9J,cAAc9iE,OAAQmD,EAAI6sE,EAAI7sE,IAExDypE,EAAK9J,cAAe3/D,GAAIm3C,aAAcoe,GAAe9rD,YAqBvD,OAf0B,OAArBlP,KAAKyuD,aAETzuD,KAAK0uD,qBAIuB,OAAxB1uD,KAAKyuE,gBAETzuE,KAAKyxE,wBAINzxE,KAAK0uE,oBAAqB,EAC1B1uE,KAAK2uE,mBAAoB,EAElB3uE,MAIRk8D,QAAS,SAAWlyD,GAQnB,OAJAqrH,GAAMl+D,cAAentD,GAErBhK,KAAK8kD,aAAcuwE,IAEZr1H,MAIRm8D,QAAS,SAAWnyD,GAQnB,OAJAqrH,GAAMj+D,cAAeptD,GAErBhK,KAAK8kD,aAAcuwE,IAEZr1H,MAIRo8D,QAAS,SAAWpyD,GAQnB,OAJAqrH,GAAMh+D,cAAertD,GAErBhK,KAAK8kD,aAAcuwE,IAEZr1H,MAIRuS,UAAW,SAAWzS,EAAGC,EAAGI,GAQ3B,OAJAk1H,GAAMn+D,gBAAiBp3D,EAAGC,EAAGI,GAE7BH,KAAK8kD,aAAcuwE,IAEZr1H,MAIRqK,MAAO,SAAWvK,EAAGC,EAAGI,GAQvB,OAJAk1H,GAAM99D,UAAWz3D,EAAGC,EAAGI,GAEvBH,KAAK8kD,aAAcuwE,IAEZr1H,MAIR2xD,OAAQ,SAAW5zB,GAQlB,OANAu3F,GAAO3jE,OAAQ5zB,GAEfu3F,GAAO1xE,eAEP5jD,KAAK8kD,aAAcwwE,GAAO9zE,QAEnBxhD,MAIRy1H,mBAAoB,SAAWjnE,GAE9B,MAAMuoB,EAAQ/2E,KAERmM,EAA2B,OAAnBqiD,EAASriD,MAAiBqiD,EAASriD,WAAQgN,EACnDw3D,EAAaniB,EAASmiB,WAE5B,QAA6Bx3D,IAAxBw3D,EAAWhxD,SAGf,OADAhT,QAAQu1B,MAAO,oFACRliC,KAIR,MAAM2f,EAAWgxD,EAAWhxD,SACtB6X,EAASm5C,EAAWn5C,OACpBra,EAAQwzD,EAAWxzD,MACnBunC,EAAKisB,EAAWjsB,GAChBid,EAAMgP,EAAWhP,SAEVxoD,IAARwoD,IAAoB3hE,KAAKovE,cAAe,GAAM,IAEnD,IAAM,IAAIvvE,EAAI,EAAGA,EAAI8f,EAAS2tC,MAAOztD,IAEpCk3E,EAAMjrE,SAASxK,MAAM,IAAIqpD,IAAUhN,oBAAqBh+B,EAAU9f,SAEnDsZ,IAAVgE,GAEJ45D,EAAMvJ,OAAOlsE,MAAM,IAAIunC,IAAQ8U,oBAAqBxgC,EAAOtd,IAM7D,SAAS61H,EAASn0H,EAAGC,EAAGC,EAAG0jE,GAE1B,MAAME,OAA2BlsD,IAAVgE,EAAwB,GAAK,CACnD45D,EAAMvJ,OAAQjsE,GAAIoI,QAClBotE,EAAMvJ,OAAQhsE,GAAImI,QAClBotE,EAAMvJ,OAAQ/rE,GAAIkI,SAGby7D,OAA6BjsD,IAAXqe,EAAyB,GAAK,EACrD,IAAImzB,IAAUhN,oBAAqBnmB,EAAQj2B,IAC3C,IAAIopD,IAAUhN,oBAAqBnmB,EAAQh2B,IAC3C,IAAImpD,IAAUhN,oBAAqBnmB,EAAQ/1B,IAGtCytE,EAAO,IAAIhK,GAAO3jE,EAAGC,EAAGC,EAAG2jE,EAAeC,EAAcF,GAE9D4R,EAAM9H,MAAM3tE,KAAM4tE,QAEN/1D,IAAPurC,GAEJqyB,EAAM3H,cAAe,GAAI9tE,KAAM,EAC9B,IAAI06C,IAAU2B,oBAAqB+G,EAAInjD,IACvC,IAAIy6C,IAAU2B,oBAAqB+G,EAAIljD,IACvC,IAAIw6C,IAAU2B,oBAAqB+G,EAAIjjD,UAK5B0X,IAARwoD,GAEJoV,EAAM3H,cAAe,GAAI9tE,KAAM,EAC9B,IAAI06C,IAAU2B,oBAAqBgkB,EAAKpgE,IACxC,IAAIy6C,IAAU2B,oBAAqBgkB,EAAKngE,IACxC,IAAIw6C,IAAU2B,oBAAqBgkB,EAAKlgE,KAO3C,MAAM6sE,EAAS9f,EAAS8f,OAExB,GAAKA,EAAOhsE,OAAS,EAEpB,IAAM,IAAIzC,EAAI,EAAGA,EAAIyuE,EAAOhsE,OAAQzC,IAAO,CAE1C,MAAMmvE,EAAQV,EAAQzuE,GAEhBW,EAAQwuE,EAAMxuE,MAGpB,IAAM,IAAIiF,EAAIjF,EAAO8xE,EAAK9xE,EAFZwuE,EAAM1hB,MAEqB7nD,EAAI6sE,EAAI7sE,GAAK,OAEtC0T,IAAVhN,EAEJupH,EAASvpH,EAAM0xC,KAAMp4C,GAAK0G,EAAM0xC,KAAMp4C,EAAI,GAAK0G,EAAM0xC,KAAMp4C,EAAI,GAAKupE,EAAM7J,eAI1EuwD,EAASjwH,EAAGA,EAAI,EAAGA,EAAI,EAAGupE,EAAM7J,oBAUnC,QAAehsD,IAAVhN,EAEJ,IAAM,IAAItM,EAAI,EAAGA,EAAIsM,EAAMmhD,MAAOztD,GAAK,EAEtC61H,EAASvpH,EAAM0xC,KAAMh+C,GAAKsM,EAAM0xC,KAAMh+C,EAAI,GAAKsM,EAAM0xC,KAAMh+C,EAAI,SAMhE,IAAM,IAAIA,EAAI,EAAGA,EAAI8f,EAAS2tC,MAAOztD,GAAK,EAEzC61H,EAAS71H,EAAGA,EAAI,EAAGA,EAAI,GAsB1B,OAdAG,KAAKuyE,qBAEyB,OAAzB/jB,EAASC,cAEbzuD,KAAKyuD,YAAcD,EAASC,YAAY9kD,SAIR,OAA5B6kD,EAASigB,iBAEbzuE,KAAKyuE,eAAiBjgB,EAASigB,eAAe9kE,SAIxC3J,MAIRuK,OAAQ,WAQP,OANAvK,KAAK0uD,qBAEL1uD,KAAKyuD,YAAYhgD,UAAW8mH,IAAYp4E,SAExCn9C,KAAKuS,UAAWgjH,GAAUz1H,EAAGy1H,GAAUx1H,EAAGw1H,GAAUp1H,GAE7CH,MAIRkP,UAAW,WAEVlP,KAAKyxE,wBAEL,MAAMlnE,EAASvK,KAAKyuE,eAAelkE,OAC7B0P,EAASja,KAAKyuE,eAAex0D,OAE7BkS,EAAe,IAAXlS,EAAe,EAAI,EAAMA,EAE7BunC,EAAS,IAAI0S,GAUnB,OATA1S,EAAO54C,IACNujB,EAAG,EAAG,GAAKA,EAAI5hB,EAAOzK,EACtB,EAAGqsB,EAAG,GAAKA,EAAI5hB,EAAOxK,EACtB,EAAG,EAAGosB,GAAKA,EAAI5hB,EAAOpK,EACtB,EAAG,EAAG,EAAG,GAGVH,KAAK8kD,aAActD,GAEZxhD,MAIRuyE,mBAAoB,WAEnB,MAAMO,EAAK,IAAInoB,GAAWooB,EAAK,IAAIpoB,GAEnC,IAAM,IAAI9yB,EAAI,EAAGu+C,EAAKp2E,KAAKivE,MAAM3sE,OAAQu1B,EAAIu+C,EAAIv+C,IAAO,CAEvD,MAAMq3C,EAAOlvE,KAAKivE,MAAOp3C,GAEnBm7C,EAAKhzE,KAAK8L,SAAUojE,EAAK3tE,GACzB0xE,EAAKjzE,KAAK8L,SAAUojE,EAAK1tE,GACzB0xE,EAAKlzE,KAAK8L,SAAUojE,EAAKztE,GAE/BqxE,EAAGv2B,WAAY22B,EAAID,GACnBF,EAAGx2B,WAAYy2B,EAAIC,GACnBH,EAAG9gD,MAAO+gD,GAEVD,EAAG5jE,YAEHggE,EAAK13C,OAAO1U,KAAMgwD,KAMpBN,qBAAsB,SAAWmjD,GAAe,GAE/C,MAAM7pH,EAAW,IAAI8J,MAAO5V,KAAK8L,SAASxJ,QAE1C,IAAM,IAAI+N,EAAI,EAAGulH,EAAK51H,KAAK8L,SAASxJ,OAAQ+N,EAAIulH,EAAIvlH,IAEnDvE,EAAUuE,GAAM,IAAIs6C,GAIrB,GAAKgrE,EAAe,CAKnB,MAAM7iD,EAAK,IAAInoB,GAAWooB,EAAK,IAAIpoB,GAEnC,IAAM,IAAI9yB,EAAI,EAAGu+C,EAAKp2E,KAAKivE,MAAM3sE,OAAQu1B,EAAIu+C,EAAIv+C,IAAO,CAEvD,MAAMq3C,EAAOlvE,KAAKivE,MAAOp3C,GAEnBm7C,EAAKhzE,KAAK8L,SAAUojE,EAAK3tE,GACzB0xE,EAAKjzE,KAAK8L,SAAUojE,EAAK1tE,GACzB0xE,EAAKlzE,KAAK8L,SAAUojE,EAAKztE,GAE/BqxE,EAAGv2B,WAAY22B,EAAID,GACnBF,EAAGx2B,WAAYy2B,EAAIC,GACnBH,EAAG9gD,MAAO+gD,GAEVjnE,EAAUojE,EAAK3tE,GAAI0H,IAAK6pE,GACxBhnE,EAAUojE,EAAK1tE,GAAIyH,IAAK6pE,GACxBhnE,EAAUojE,EAAKztE,GAAIwH,IAAK6pE,QAInB,CAEN9yE,KAAKuyE,qBAEL,IAAM,IAAI16C,EAAI,EAAGu+C,EAAKp2E,KAAKivE,MAAM3sE,OAAQu1B,EAAIu+C,EAAIv+C,IAAO,CAEvD,MAAMq3C,EAAOlvE,KAAKivE,MAAOp3C,GAEzB/rB,EAAUojE,EAAK3tE,GAAI0H,IAAKimE,EAAK13C,QAC7B1rB,EAAUojE,EAAK1tE,GAAIyH,IAAKimE,EAAK13C,QAC7B1rB,EAAUojE,EAAKztE,GAAIwH,IAAKimE,EAAK13C,SAM/B,IAAM,IAAInnB,EAAI,EAAGulH,EAAK51H,KAAK8L,SAASxJ,OAAQ+N,EAAIulH,EAAIvlH,IAEnDvE,EAAUuE,GAAInB,YAIf,IAAM,IAAI2oB,EAAI,EAAGu+C,EAAKp2E,KAAKivE,MAAM3sE,OAAQu1B,EAAIu+C,EAAIv+C,IAAO,CAEvD,MAAMq3C,EAAOlvE,KAAKivE,MAAOp3C,GAEnButC,EAAgB8J,EAAK9J,cAEG,IAAzBA,EAAc9iE,QAElB8iE,EAAe,GAAItiD,KAAMhX,EAAUojE,EAAK3tE,IACxC6jE,EAAe,GAAItiD,KAAMhX,EAAUojE,EAAK1tE,IACxC4jE,EAAe,GAAItiD,KAAMhX,EAAUojE,EAAKztE,MAIxC2jE,EAAe,GAAMt5D,EAAUojE,EAAK3tE,GAAIoI,QACxCy7D,EAAe,GAAMt5D,EAAUojE,EAAK1tE,GAAImI,QACxCy7D,EAAe,GAAMt5D,EAAUojE,EAAKztE,GAAIkI,SAMrC3J,KAAKivE,MAAM3sE,OAAS,IAExBtC,KAAK2uE,mBAAoB,IAM3BknD,yBAA0B,WAEzB71H,KAAKuyE,qBAEL,IAAM,IAAI16C,EAAI,EAAGu+C,EAAKp2E,KAAKivE,MAAM3sE,OAAQu1B,EAAIu+C,EAAIv+C,IAAO,CAEvD,MAAMq3C,EAAOlvE,KAAKivE,MAAOp3C,GAEnButC,EAAgB8J,EAAK9J,cAEG,IAAzBA,EAAc9iE,QAElB8iE,EAAe,GAAItiD,KAAMosD,EAAK13C,QAC9B4tC,EAAe,GAAItiD,KAAMosD,EAAK13C,QAC9B4tC,EAAe,GAAItiD,KAAMosD,EAAK13C,UAI9B4tC,EAAe,GAAM8J,EAAK13C,OAAO7tB,QACjCy7D,EAAe,GAAM8J,EAAK13C,OAAO7tB,QACjCy7D,EAAe,GAAM8J,EAAK13C,OAAO7tB,SAM9B3J,KAAKivE,MAAM3sE,OAAS,IAExBtC,KAAK2uE,mBAAoB,IAM3BmnD,oBAAqB,WAMpB,IAAM,IAAIj+F,EAAI,EAAGu+C,EAAKp2E,KAAKivE,MAAM3sE,OAAQu1B,EAAIu+C,EAAIv+C,IAAO,CAEvD,MAAMq3C,EAAOlvE,KAAKivE,MAAOp3C,GAElBq3C,EAAK6mD,qBAMX7mD,EAAK6mD,qBAAqBjzG,KAAMosD,EAAK13C,QAJrC03C,EAAK6mD,qBAAuB7mD,EAAK13C,OAAO7tB,QAQlCulE,EAAK8mD,0BAA0B9mD,EAAK8mD,wBAA0B,IAErE,IAAM,IAAIn2H,EAAI,EAAG6tD,EAAKwhB,EAAK9J,cAAc9iE,OAAQzC,EAAI6tD,EAAI7tD,IAEjDqvE,EAAK8mD,wBAAyBn2H,GAMpCqvE,EAAK8mD,wBAAyBn2H,GAAIijB,KAAMosD,EAAK9J,cAAevlE,IAJ5DqvE,EAAK8mD,wBAAyBn2H,GAAMqvE,EAAK9J,cAAevlE,GAAI8J,QAc/D,MAAMssH,EAAS,IAAIT,GACnBS,EAAOhnD,MAAQjvE,KAAKivE,MAEpB,IAAM,IAAIpvE,EAAI,EAAG6tD,EAAK1tD,KAAK4oE,aAAatmE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAI9D,IAAOG,KAAKmrE,aAActrE,GAAM,CAE/BG,KAAKmrE,aAActrE,GAAM,GACzBG,KAAKmrE,aAActrE,GAAIq2H,YAAc,GACrCl2H,KAAKmrE,aAActrE,GAAIulE,cAAgB,GAEvC,MAAM+wD,EAAiBn2H,KAAKmrE,aAActrE,GAAIq2H,YACxCE,EAAmBp2H,KAAKmrE,aAActrE,GAAIulE,cAEhD,IAAM,IAAIvtC,EAAI,EAAGu+C,EAAKp2E,KAAKivE,MAAM3sE,OAAQu1B,EAAIu+C,EAAIv+C,IAAO,CAEvD,MAAMw+F,EAAa,IAAI1rE,GACjBya,EAAgB,CAAE7jE,EAAG,IAAIopD,GAAWnpD,EAAG,IAAImpD,GAAWlpD,EAAG,IAAIkpD,IAEnEwrE,EAAe70H,KAAM+0H,GACrBD,EAAiB90H,KAAM8jE,IAMzB,MAAM+F,EAAenrE,KAAKmrE,aAActrE,GAIxCo2H,EAAOnqH,SAAW9L,KAAK4oE,aAAc/oE,GAAIiM,SAIzCmqH,EAAO1jD,qBACP0jD,EAAOzjD,uBAIP,IAAM,IAAI36C,EAAI,EAAGu+C,EAAKp2E,KAAKivE,MAAM3sE,OAAQu1B,EAAIu+C,EAAIv+C,IAAO,CAEvD,MAAMq3C,EAAOlvE,KAAKivE,MAAOp3C,GAEnBw+F,EAAalrD,EAAa+qD,YAAar+F,GACvCutC,EAAgB+F,EAAa/F,cAAevtC,GAElDw+F,EAAWvzG,KAAMosD,EAAK13C,QAEtB4tC,EAAc7jE,EAAEuhB,KAAMosD,EAAK9J,cAAe,IAC1CA,EAAc5jE,EAAEshB,KAAMosD,EAAK9J,cAAe,IAC1CA,EAAc3jE,EAAEqhB,KAAMosD,EAAK9J,cAAe,KAQ5C,IAAM,IAAIvtC,EAAI,EAAGu+C,EAAKp2E,KAAKivE,MAAM3sE,OAAQu1B,EAAIu+C,EAAIv+C,IAAO,CAEvD,MAAMq3C,EAAOlvE,KAAKivE,MAAOp3C,GAEzBq3C,EAAK13C,OAAS03C,EAAK6mD,qBACnB7mD,EAAK9J,cAAgB8J,EAAK8mD,0BAM5BtnE,mBAAoB,WAEO,OAArB1uD,KAAKyuD,cAETzuD,KAAKyuD,YAAc,IAAItB,IAIxBntD,KAAKyuD,YAAYlB,cAAevtD,KAAK8L,WAItC2lE,sBAAuB,WAEO,OAAxBzxE,KAAKyuE,iBAETzuE,KAAKyuE,eAAiB,IAAI/d,IAI3B1wD,KAAKyuE,eAAelhB,cAAevtD,KAAK8L,WAIzCsnE,MAAO,SAAW5kB,EAAUhN,EAAQ80E,EAAsB,GAEzD,IAAS9nE,IAAYA,EAASojB,WAG7B,YADAjlE,QAAQu1B,MAAO,sEAAuEssB,GAKvF,IAAIwM,EACJ,MAAMu7D,EAAev2H,KAAK8L,SAASxJ,OAClCk0H,EAAYx2H,KAAK8L,SACjB2qH,EAAYjoE,EAAS1iD,SACrB4qH,EAAS12H,KAAKivE,MACd0nD,EAASnoE,EAASygB,MAClB2nD,EAAU52H,KAAKwtE,OACfqpD,EAAUroE,EAASgf,YAEJr0D,IAAXqoC,IAEJwZ,GAAe,IAAIhd,IAAUgD,gBAAiBQ,IAM/C,IAAM,IAAI3hD,EAAI,EAAG6tD,EAAK+oE,EAAUn0H,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEtD,MAEMi3H,EAFSL,EAAW52H,GAEA8J,aAEVwP,IAAXqoC,GAAuBs1E,EAAWhyE,aAActD,GAErDg1E,EAAUl1H,KAAMw1H,GAMjB,IAAM,IAAIj3H,EAAI,EAAG6tD,EAAKmpE,EAAQv0H,OAAQzC,EAAI6tD,EAAI7tD,IAE7C+2H,EAAQt1H,KAAMu1H,EAASh3H,GAAI8J,SAM5B,IAAM,IAAI9J,EAAI,EAAG6tD,EAAKipE,EAAOr0H,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEnD,MAAMqvE,EAAOynD,EAAQ92H,GACrB,IAAI23B,EAAQra,EACZ,MAAM45G,EAAoB7nD,EAAK9J,cAC9B4xD,EAAmB9nD,EAAK7J,aAEnB4xD,EAAW,IAAI/xD,GAAOgK,EAAK3tE,EAAIg1H,EAAcrnD,EAAK1tE,EAAI+0H,EAAcrnD,EAAKztE,EAAI80H,GACnFU,EAASz/F,OAAO1U,KAAMosD,EAAK13C,aAELre,IAAjB6hD,GAEJi8D,EAASz/F,OAAOolB,aAAcoe,GAAe9rD,YAI9C,IAAM,IAAIzJ,EAAI,EAAG6sE,EAAKykD,EAAkBz0H,OAAQmD,EAAI6sE,EAAI7sE,IAEvD+xB,EAASu/F,EAAmBtxH,GAAIkE,aAEVwP,IAAjB6hD,GAEJxjC,EAAOolB,aAAcoe,GAAe9rD,YAIrC+nH,EAAS7xD,cAAc9jE,KAAMk2B,GAI9By/F,EAAS95G,MAAM2F,KAAMosD,EAAK/xD,OAE1B,IAAM,IAAI1X,EAAI,EAAG6sE,EAAK0kD,EAAiB10H,OAAQmD,EAAI6sE,EAAI7sE,IAEtD0X,EAAQ65G,EAAkBvxH,GAC1BwxH,EAAS5xD,aAAa/jE,KAAM6b,EAAMxT,SAInCstH,EAAS9xD,cAAgB+J,EAAK/J,cAAgBmxD,EAE9CI,EAAOp1H,KAAM21H,GAMd,IAAM,IAAIp3H,EAAI,EAAG6tD,EAAKc,EAAS4gB,cAAc9sE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEnE,MAAMq3H,EAAiB1oE,EAAS4gB,cAAevvE,QAEdsZ,IAA5BnZ,KAAKovE,cAAevvE,KAAoBG,KAAKovE,cAAevvE,GAAM,IAEvE,IAAM,IAAI4F,EAAI,EAAG6sE,EAAK4kD,EAAe50H,OAAQmD,EAAI6sE,EAAI7sE,IAAO,CAE3D,MAAM4oE,EAAO6oD,EAAgBzxH,GAAK0xH,EAAU,GAE5C,IAAM,IAAIl6G,EAAI,EAAG2yF,EAAKvhC,EAAK/rE,OAAQ2a,EAAI2yF,EAAI3yF,IAE1Ck6G,EAAQ71H,KAAM+sE,EAAMpxD,GAAItT,SAIzB3J,KAAKovE,cAAevvE,GAAIyB,KAAM61H,MAQjCC,UAAW,SAAW16C,GAEZA,GAAQA,EAAKpe,QAOjBoe,EAAK15B,kBAAmB05B,EAAK94B,eAElC5jD,KAAKozE,MAAOsJ,EAAKluB,SAAUkuB,EAAKl7B,SAP/B70C,QAAQu1B,MAAO,kEAAmEw6C,IAiBpF26C,cAAe,SAAWC,EAAkB,GAE3C,MAAMC,EAAc,GACdC,EAAS,GAAIC,EAAU,GAEvBrwD,EAAY/jE,KAAK0G,IAAK,GAAIutH,GAEhC,IAAM,IAAIz3H,EAAI,EAAG6tD,EAAK1tD,KAAK8L,SAASxJ,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAE1D,MAAMwQ,EAAIrQ,KAAK8L,SAAUjM,GACnBsG,EAAM9C,KAAKyH,MAAOuF,EAAEvQ,EAAIsnE,GAAc,IAAM/jE,KAAKyH,MAAOuF,EAAEtQ,EAAIqnE,GAAc,IAAM/jE,KAAKyH,MAAOuF,EAAElQ,EAAIinE,QAE9EjuD,IAAvBo+G,EAAapxH,IAEjBoxH,EAAapxH,GAAQtG,EACrB23H,EAAOl2H,KAAMtB,KAAK8L,SAAUjM,IAC5B43H,EAAS53H,GAAM23H,EAAOl1H,OAAS,GAK/Bm1H,EAAS53H,GAAM43H,EAASF,EAAapxH,IASvC,MAAMuxH,EAAsB,GAE5B,IAAM,IAAI73H,EAAI,EAAG6tD,EAAK1tD,KAAKivE,MAAM3sE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEvD,MAAMqvE,EAAOlvE,KAAKivE,MAAOpvE,GAEzBqvE,EAAK3tE,EAAIk2H,EAASvoD,EAAK3tE,GACvB2tE,EAAK1tE,EAAIi2H,EAASvoD,EAAK1tE,GACvB0tE,EAAKztE,EAAIg2H,EAASvoD,EAAKztE,GAEvB,MAAMkyE,EAAU,CAAEzE,EAAK3tE,EAAG2tE,EAAK1tE,EAAG0tE,EAAKztE,GAIvC,IAAM,IAAIO,EAAI,EAAGA,EAAI,EAAGA,IAEvB,GAAK2xE,EAAS3xE,KAAQ2xE,GAAW3xE,EAAI,GAAM,GAAM,CAEhD01H,EAAoBp2H,KAAMzB,GAC1B,OAQH,IAAM,IAAIA,EAAI63H,EAAoBp1H,OAAS,EAAGzC,GAAK,EAAGA,IAAO,CAE5D,MAAM83H,EAAMD,EAAqB73H,GAEjCG,KAAKivE,MAAM5mE,OAAQsvH,EAAK,GAExB,IAAM,IAAIlyH,EAAI,EAAG6sE,EAAKtyE,KAAKovE,cAAc9sE,OAAQmD,EAAI6sE,EAAI7sE,IAExDzF,KAAKovE,cAAe3pE,GAAI4C,OAAQsvH,EAAK,GAQvC,MAAMtoH,EAAOrP,KAAK8L,SAASxJ,OAASk1H,EAAOl1H,OAE3C,OADAtC,KAAK8L,SAAW0rH,EACTnoH,GAIRk+C,cAAe,SAAWC,GAEzBxtD,KAAK8L,SAAW,GAEhB,IAAM,IAAIjM,EAAI,EAAGwO,EAAIm/C,EAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAMoQ,EAAQu9C,EAAQ3tD,GACtBG,KAAK8L,SAASxK,KAAM,IAAIqpD,GAAS16C,EAAMnQ,EAAGmQ,EAAMlQ,EAAGkQ,EAAM9P,GAAK,IAI/D,OAAOH,MAIR43H,yBAA0B,WAEzB,MAAM3oD,EAAQjvE,KAAKivE,MACb3sE,EAAS2sE,EAAM3sE,OAIrB,IAAM,IAAIzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAE5BovE,EAAOpvE,GAAIg4H,IAAMh4H,EAYlBovE,EAAM1sE,MANN,SAA4BhB,EAAGC,GAE9B,OAAOD,EAAE4jE,cAAgB3jE,EAAE2jE,iBAQ5B,MAAM2yD,EAAO93H,KAAKovE,cAAe,GAC3Bf,EAAOruE,KAAKovE,cAAe,GAEjC,IAAI2oD,EAASC,EAERF,GAAQA,EAAKx1H,SAAWA,IAASy1H,EAAU,IAC3C1pD,GAAQA,EAAK/rE,SAAWA,IAAS01H,EAAU,IAEhD,IAAM,IAAIn4H,EAAI,EAAGA,EAAIyC,EAAQzC,IAAO,CAEnC,MAAMmU,EAAKi7D,EAAOpvE,GAAIg4H,IAEjBE,GAAUA,EAAQz2H,KAAMw2H,EAAM9jH,IAC9BgkH,GAAUA,EAAQ12H,KAAM+sE,EAAMr6D,IAI/B+jH,IAAU/3H,KAAKovE,cAAe,GAAM2oD,GACpCC,IAAUh4H,KAAKovE,cAAe,GAAM4oD,IAI1C3iH,OAAQ,WAEP,MAAM9U,EAAO,CACZ2jD,SAAU,CACTb,QAAS,IACTvjB,KAAM,WACNqkB,UAAW,oBAUb,GAJA5jD,EAAKqiD,KAAO5iD,KAAK4iD,KACjBriD,EAAKu/B,KAAO9/B,KAAK8/B,KACE,KAAd9/B,KAAKuvB,OAAchvB,EAAKgvB,KAAOvvB,KAAKuvB,WAEhBpW,IAApBnZ,KAAKy+D,WAA2B,CAEpC,MAAMA,EAAaz+D,KAAKy+D,WAExB,IAAM,MAAMt4D,KAAOs4D,OAEStlD,IAAtBslD,EAAYt4D,KAAsB5F,EAAM4F,GAAQs4D,EAAYt4D,IAIlE,OAAO5F,EAIR,MAAMuL,EAAW,GAEjB,IAAM,IAAIjM,EAAI,EAAGA,EAAIG,KAAK8L,SAASxJ,OAAQzC,IAAO,CAEjD,MAAM6G,EAAS1G,KAAK8L,SAAUjM,GAC9BiM,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAI3C,MAAM8uE,EAAQ,GACRd,EAAU,GACV8pD,EAAc,GACdzqD,EAAS,GACT0qD,EAAa,GACb9pD,EAAM,GACN+pD,EAAU,GAEhB,IAAM,IAAIt4H,EAAI,EAAGA,EAAIG,KAAKivE,MAAM3sE,OAAQzC,IAAO,CAE9C,MAAMqvE,EAAOlvE,KAAKivE,MAAOpvE,GAEnBu4H,GAAc,EACdC,GAAY,EACZhpD,OAAmDl2D,IAAjCnZ,KAAKovE,cAAe,GAAKvvE,GAC3Cy4H,EAAgBppD,EAAK13C,OAAOl1B,SAAW,EACvCi2H,EAAsBrpD,EAAK9J,cAAc9iE,OAAS,EAClDk2H,EAAgC,IAAjBtpD,EAAK/xD,MAAM5Y,GAA4B,IAAjB2qE,EAAK/xD,MAAM2rB,GAA4B,IAAjBomC,EAAK/xD,MAAM3b,EACtEi3H,EAAqBvpD,EAAK7J,aAAa/iE,OAAS,EAEtD,IAAIo2H,EAAW,EAef,GAbAA,EAAWC,EAAQD,EAAU,EAAG,GAChCA,EAAWC,EAAQD,EAAU,EAAGN,GAChCM,EAAWC,EAAQD,EAAU,EAAGL,GAChCK,EAAWC,EAAQD,EAAU,EAAGrpD,GAChCqpD,EAAWC,EAAQD,EAAU,EAAGJ,GAChCI,EAAWC,EAAQD,EAAU,EAAGH,GAChCG,EAAWC,EAAQD,EAAU,EAAGF,GAChCE,EAAWC,EAAQD,EAAU,EAAGD,GAEhCxpD,EAAM3tE,KAAMo3H,GACZzpD,EAAM3tE,KAAM4tE,EAAK3tE,EAAG2tE,EAAK1tE,EAAG0tE,EAAKztE,GACjCwtE,EAAM3tE,KAAM4tE,EAAK/J,eAEZkK,EAAkB,CAEtB,MAAMD,EAAgBpvE,KAAKovE,cAAe,GAAKvvE,GAE/CovE,EAAM3tE,KACLs3H,EAAYxpD,EAAe,IAC3BwpD,EAAYxpD,EAAe,IAC3BwpD,EAAYxpD,EAAe,KAW7B,GANKkpD,GAEJrpD,EAAM3tE,KAAMu3H,EAAgB3pD,EAAK13C,SAI7B+gG,EAAsB,CAE1B,MAAMnzD,EAAgB8J,EAAK9J,cAE3B6J,EAAM3tE,KACLu3H,EAAgBzzD,EAAe,IAC/ByzD,EAAgBzzD,EAAe,IAC/ByzD,EAAgBzzD,EAAe,KAWjC,GANKozD,GAEJvpD,EAAM3tE,KAAMw3H,EAAe5pD,EAAK/xD,QAI5Bs7G,EAAqB,CAEzB,MAAMpzD,EAAe6J,EAAK7J,aAE1B4J,EAAM3tE,KACLw3H,EAAezzD,EAAc,IAC7ByzD,EAAezzD,EAAc,IAC7ByzD,EAAezzD,EAAc,MAOhC,SAASszD,EAAQh5H,EAAOggB,EAAUk7D,GAEjC,OAAOA,EAAUl7E,EAAU,GAAKggB,EAAahgB,IAAc,GAAKggB,GAIjE,SAASk5G,EAAgBrhG,GAExB,MAAM0yE,EAAO1yE,EAAO13B,EAAEkL,WAAawsB,EAAOz3B,EAAEiL,WAAawsB,EAAOr3B,EAAE6K,WAElE,YAA6BmO,IAAxB8+G,EAAa/tB,KAMlB+tB,EAAa/tB,GAAS/7B,EAAQ7rE,OAAS,EACvC6rE,EAAQ7sE,KAAMk2B,EAAO13B,EAAG03B,EAAOz3B,EAAGy3B,EAAOr3B,IALjC83H,EAAa/tB,GAWtB,SAAS4uB,EAAe37G,GAEvB,MAAM+sF,EAAO/sF,EAAM5Y,EAAEyG,WAAamS,EAAM2rB,EAAE99B,WAAamS,EAAM3b,EAAEwJ,WAE/D,YAA4BmO,IAAvB++G,EAAYhuB,KAMjBguB,EAAYhuB,GAAS18B,EAAOlrE,OAC5BkrE,EAAOlsE,KAAM6b,EAAMonD,WALX2zD,EAAYhuB,GAWrB,SAAS0uB,EAAYl0E,GAEpB,MAAMwlD,EAAOxlD,EAAG5kD,EAAEkL,WAAa05C,EAAG3kD,EAAEiL,WAEpC,YAAyBmO,IAApBg/G,EAASjuB,KAMdiuB,EAASjuB,GAAS97B,EAAI9rE,OAAS,EAC/B8rE,EAAI9sE,KAAMojD,EAAG5kD,EAAG4kD,EAAG3kD,IALXo4H,EAASjuB,GAmBlB,OARA3pG,EAAKA,KAAO,GAEZA,EAAKA,KAAKuL,SAAWA,EACrBvL,EAAKA,KAAK4tE,QAAUA,EACfX,EAAOlrE,OAAS,IAAI/B,EAAKA,KAAKitE,OAASA,GACvCY,EAAI9rE,OAAS,IAAI/B,EAAKA,KAAK6tE,IAAM,CAAEA,IACxC7tE,EAAKA,KAAK0uE,MAAQA,EAEX1uE,GAIRoJ,MAAO,WA0BN,OAAO,IAAI6rH,IAAW1yG,KAAM9iB,OAI7B8iB,KAAM,SAAW+gC,GAIhB7jD,KAAK8L,SAAW,GAChB9L,KAAKwtE,OAAS,GACdxtE,KAAKivE,MAAQ,GACbjvE,KAAKovE,cAAgB,CAAC,IACtBpvE,KAAK4oE,aAAe,GACpB5oE,KAAKmrE,aAAe,GACpBnrE,KAAKuuE,YAAc,GACnBvuE,KAAKwuE,YAAc,GACnBxuE,KAAK2xE,cAAgB,GACrB3xE,KAAKyuD,YAAc,KACnBzuD,KAAKyuE,eAAiB,KAItBzuE,KAAKuvB,KAAOs0B,EAAOt0B,KAInB,MAAMzjB,EAAW+3C,EAAO/3C,SAExB,IAAM,IAAIjM,EAAI,EAAG6tD,EAAK5hD,EAASxJ,OAAQzC,EAAI6tD,EAAI7tD,IAE9CG,KAAK8L,SAASxK,KAAMwK,EAAUjM,GAAI8J,SAMnC,MAAM6jE,EAAS3pB,EAAO2pB,OAEtB,IAAM,IAAI3tE,EAAI,EAAG6tD,EAAK8f,EAAOlrE,OAAQzC,EAAI6tD,EAAI7tD,IAE5CG,KAAKwtE,OAAOlsE,KAAMksE,EAAQ3tE,GAAI8J,SAM/B,MAAMslE,EAAQprB,EAAOorB,MAErB,IAAM,IAAIpvE,EAAI,EAAG6tD,EAAKuhB,EAAM3sE,OAAQzC,EAAI6tD,EAAI7tD,IAE3CG,KAAKivE,MAAM3tE,KAAM2tE,EAAOpvE,GAAI8J,SAM7B,IAAM,IAAI9J,EAAI,EAAG6tD,EAAK7J,EAAOurB,cAAc9sE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEjE,MAAMuvE,EAAgBvrB,EAAOurB,cAAevvE,QAEXsZ,IAA5BnZ,KAAKovE,cAAevvE,KAExBG,KAAKovE,cAAevvE,GAAM,IAI3B,IAAM,IAAI4F,EAAI,EAAG6sE,EAAKlD,EAAc9sE,OAAQmD,EAAI6sE,EAAI7sE,IAAO,CAE1D,MAAM2oE,EAAMgB,EAAe3pE,GAAK0xH,EAAU,GAE1C,IAAM,IAAIl6G,EAAI,EAAG2yF,EAAKxhC,EAAI9rE,OAAQ2a,EAAI2yF,EAAI3yF,IAAO,CAEhD,MAAMynC,EAAK0pB,EAAKnxD,GAEhBk6G,EAAQ71H,KAAMojD,EAAG/6C,SAIlB3J,KAAKovE,cAAevvE,GAAIyB,KAAM61H,IAQhC,MAAMvuD,EAAe/kB,EAAO+kB,aAE5B,IAAM,IAAI/oE,EAAI,EAAG6tD,EAAKkb,EAAatmE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEzD,MAAMiwE,EAAc,GAKpB,GAJAA,EAAYvgD,KAAOq5C,EAAc/oE,GAAI0vB,UAIDpW,IAA/ByvD,EAAc/oE,GAAIiM,SAAyB,CAE/CgkE,EAAYhkE,SAAW,GAEvB,IAAM,IAAIrG,EAAI,EAAG6sE,EAAK1J,EAAc/oE,GAAIiM,SAASxJ,OAAQmD,EAAI6sE,EAAI7sE,IAEhEqqE,EAAYhkE,SAASxK,KAAMsnE,EAAc/oE,GAAIiM,SAAUrG,GAAIkE,SAQ7D,QAAmCwP,IAA9ByvD,EAAc/oE,GAAIsuE,QAAwB,CAE9C2B,EAAY3B,QAAU,GAEtB,IAAM,IAAI1oE,EAAI,EAAG6sE,EAAK1J,EAAc/oE,GAAIsuE,QAAQ7rE,OAAQmD,EAAI6sE,EAAI7sE,IAE/DqqE,EAAY3B,QAAQ7sE,KAAMsnE,EAAc/oE,GAAIsuE,QAAS1oE,GAAIkE,SAM3D3J,KAAK4oE,aAAatnE,KAAMwuE,GAMzB,MAAM3E,EAAetnB,EAAOsnB,aAE5B,IAAM,IAAItrE,EAAI,EAAG6tD,EAAKyd,EAAa7oE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEzD,MAAMkwE,EAAc,GAIpB,QAAyC52D,IAApCgyD,EAActrE,GAAIulE,cAA8B,CAEpD2K,EAAY3K,cAAgB,GAE5B,IAAM,IAAI3/D,EAAI,EAAG6sE,EAAKnH,EAActrE,GAAIulE,cAAc9iE,OAAQmD,EAAI6sE,EAAI7sE,IAAO,CAE5E,MAAMszH,EAAkB5tD,EAActrE,GAAIulE,cAAe3/D,GACnDuzH,EAAmB,GAEzBA,EAAiBz3H,EAAIw3H,EAAgBx3H,EAAEoI,QACvCqvH,EAAiBx3H,EAAIu3H,EAAgBv3H,EAAEmI,QACvCqvH,EAAiBv3H,EAAIs3H,EAAgBt3H,EAAEkI,QAEvComE,EAAY3K,cAAc9jE,KAAM03H,IAQlC,QAAuC7/G,IAAlCgyD,EAActrE,GAAIq2H,YAA4B,CAElDnmD,EAAYmmD,YAAc,GAE1B,IAAM,IAAIzwH,EAAI,EAAG6sE,EAAKnH,EAActrE,GAAIq2H,YAAY5zH,OAAQmD,EAAI6sE,EAAI7sE,IAEnEsqE,EAAYmmD,YAAY50H,KAAM6pE,EAActrE,GAAIq2H,YAAazwH,GAAIkE,SAMnE3J,KAAKmrE,aAAa7pE,KAAMyuE,GAMzB,MAAMxB,EAAc1qB,EAAO0qB,YAE3B,IAAM,IAAI1uE,EAAI,EAAG6tD,EAAK6gB,EAAYjsE,OAAQzC,EAAI6tD,EAAI7tD,IAEjDG,KAAKuuE,YAAYjtE,KAAMitE,EAAa1uE,GAAI8J,SAMzC,MAAM6kE,EAAc3qB,EAAO2qB,YAE3B,IAAM,IAAI3uE,EAAI,EAAG6tD,EAAK8gB,EAAYlsE,OAAQzC,EAAI6tD,EAAI7tD,IAEjDG,KAAKwuE,YAAYltE,KAAMktE,EAAa3uE,GAAI8J,SAMzC,MAAMgoE,EAAgB9tB,EAAO8tB,cAE7B,IAAM,IAAI9xE,EAAI,EAAG6tD,EAAKikB,EAAcrvE,OAAQzC,EAAI6tD,EAAI7tD,IAEnDG,KAAK2xE,cAAcrwE,KAAMqwE,EAAe9xE,IAMzC,MAAM4uD,EAAc5K,EAAO4K,YAEN,OAAhBA,IAEJzuD,KAAKyuD,YAAcA,EAAY9kD,SAMhC,MAAM8kE,EAAiB5qB,EAAO4qB,eAkB9B,OAhBwB,OAAnBA,IAEJzuE,KAAKyuE,eAAiBA,EAAe9kE,SAMtC3J,KAAKgyE,mBAAqBnuB,EAAOmuB,mBACjChyE,KAAK0uE,mBAAqB7qB,EAAO6qB,mBACjC1uE,KAAK6uE,cAAgBhrB,EAAOgrB,cAC5B7uE,KAAK2uE,kBAAoB9qB,EAAO8qB,kBAChC3uE,KAAK4uE,iBAAmB/qB,EAAO+qB,iBAC/B5uE,KAAKiyE,wBAA0BpuB,EAAOouB,wBACtCjyE,KAAK8uE,iBAAmBjrB,EAAOirB,iBAExB9uE,MAIRwkD,QAAS,WAERxkD,KAAKi5C,cAAe,CAAEnZ,KAAM,eAM9B,MAAMm5F,WAAoBzD,GAEzBtvH,YAAaoI,EAAOC,EAAQooE,EAAOC,EAAeC,EAAgBC,GAEjEpmE,QAEA1Q,KAAK8/B,KAAO,cAEZ9/B,KAAKy+D,WAAa,CACjBnwD,MAAOA,EACPC,OAAQA,EACRooE,MAAOA,EACPC,cAAeA,EACfC,eAAgBA,EAChBC,cAAeA,GAGhB92E,KAAKy1H,mBAAoB,IAAI/+C,GAAmBpoE,EAAOC,EAAQooE,EAAOC,EAAeC,EAAgBC,IACrG92E,KAAKq3H,iBAMP,MAAM6B,WAA6BxoD,GAElCxqE,YAAa+T,EAAS,EAAGk/G,EAAW,EAAGC,EAAa,EAAGC,EAAwB,EAAVh2H,KAAK6G,IAEzEwG,QAEA1Q,KAAK8/B,KAAO,uBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACRk/G,SAAUA,EACVC,WAAYA,EACZC,YAAaA,GAGdF,EAAW91H,KAAK2B,IAAK,EAAGm0H,GAIxB,MAAMxlD,EAAU,GACV7nE,EAAW,GACXqiE,EAAU,GACVC,EAAM,GAIN1nE,EAAS,IAAIikD,GACbjG,EAAK,IAAI1I,GAIflwC,EAASxK,KAAM,EAAG,EAAG,GACrB6sE,EAAQ7sE,KAAM,EAAG,EAAG,GACpB8sE,EAAI9sE,KAAM,GAAK,IAEf,IAAM,IAAI6qB,EAAI,EAAGtsB,EAAI,EAAGssB,GAAKgtG,EAAUhtG,IAAMtsB,GAAK,EAAI,CAErD,MAAMy5H,EAAUF,EAAajtG,EAAIgtG,EAAWE,EAI5C3yH,EAAO5G,EAAIma,EAAS5W,KAAKqH,IAAK4uH,GAC9B5yH,EAAO3G,EAAIka,EAAS5W,KAAKsH,IAAK2uH,GAE9BxtH,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAI1CguE,EAAQ7sE,KAAM,EAAG,EAAG,GAIpBojD,EAAG5kD,GAAMgM,EAAUjM,GAAMoa,EAAS,GAAM,EACxCyqC,EAAG3kD,GAAM+L,EAAUjM,EAAI,GAAMoa,EAAS,GAAM,EAE5Cm0D,EAAI9sE,KAAMojD,EAAG5kD,EAAG4kD,EAAG3kD,GAMpB,IAAM,IAAIF,EAAI,EAAGA,GAAKs5H,EAAUt5H,IAE/B8zE,EAAQryE,KAAMzB,EAAGA,EAAI,EAAG,GAMzBG,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,KAM5D,MAAMmrD,WAAuB/D,GAE5BtvH,YAAa+T,EAAQk/G,EAAUC,EAAYC,GAE1C3oH,QACA1Q,KAAK8/B,KAAO,iBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACRk/G,SAAUA,EACVC,WAAYA,EACZC,YAAaA,GAGdr5H,KAAKy1H,mBAAoB,IAAIyD,GAAsBj/G,EAAQk/G,EAAUC,EAAYC,IACjFr5H,KAAKq3H,iBAMP,MAAMmC,WAA+B9oD,GAEpCxqE,YAAauzH,EAAY,EAAGC,EAAe,EAAGnrH,EAAS,EAAGorH,EAAiB,EAAG9iD,EAAiB,EAAG+iD,GAAY,EAAOR,EAAa,EAAGC,EAAwB,EAAVh2H,KAAK6G,IAEvJwG,QACA1Q,KAAK8/B,KAAO,yBAEZ9/B,KAAKy+D,WAAa,CACjBg7D,UAAWA,EACXC,aAAcA,EACdnrH,OAAQA,EACRorH,eAAgBA,EAChB9iD,eAAgBA,EAChB+iD,UAAWA,EACXR,WAAYA,EACZC,YAAaA,GAGd,MAAMtiD,EAAQ/2E,KAEd25H,EAAiBt2H,KAAK+pB,MAAOusG,GAC7B9iD,EAAiBxzE,KAAK+pB,MAAOypD,GAI7B,MAAMlD,EAAU,GACV7nE,EAAW,GACXqiE,EAAU,GACVC,EAAM,GAIZ,IAAIjiE,EAAQ,EACZ,MAAM0tH,EAAa,GACbnwB,EAAan7F,EAAS,EAC5B,IAAI0oE,EAAa,EAmHjB,SAAS6iD,EAAar7F,GAGrB,MAAMs7F,EAAmB5tH,EAEnBu4C,EAAK,IAAI1I,GACTt1C,EAAS,IAAIikD,GAEnB,IAAIotB,EAAa,EAEjB,MAAM99D,GAAmB,IAARwkB,EAAiBg7F,EAAYC,EACxC16H,GAAiB,IAARy/B,EAAiB,GAAM,EAMtC,IAAM,IAAI3+B,EAAI,EAAGA,GAAK65H,EAAgB75H,IAIrCgM,EAASxK,KAAM,EAAGooG,EAAa1qG,EAAM,GAIrCmvE,EAAQ7sE,KAAM,EAAGtC,EAAM,GAIvBovE,EAAI9sE,KAAM,GAAK,IAIf6K,IAKD,MAAM6tH,EAAiB7tH,EAIvB,IAAM,IAAIrM,EAAI,EAAGA,GAAK65H,EAAgB75H,IAAO,CAE5C,MACMk5B,EADIl5B,EAAI65H,EACIN,EAAcD,EAE1Ba,EAAW52H,KAAKqH,IAAKsuB,GACrBkhG,EAAW72H,KAAKsH,IAAKquB,GAI3BtyB,EAAO5G,EAAIma,EAASigH,EACpBxzH,EAAO3G,EAAI2pG,EAAa1qG,EACxB0H,EAAOvG,EAAI8Z,EAASggH,EACpBnuH,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAI1CguE,EAAQ7sE,KAAM,EAAGtC,EAAM,GAIvB0lD,EAAG5kD,EAAiB,GAAXm6H,EAAmB,GAC5Bv1E,EAAG3kD,EAAiB,GAAXm6H,EAAiBl7H,EAAS,GACnCovE,EAAI9sE,KAAMojD,EAAG5kD,EAAG4kD,EAAG3kD,GAInBoM,IAMD,IAAM,IAAIrM,EAAI,EAAGA,EAAI65H,EAAgB75H,IAAO,CAE3C,MAAM2B,EAAIs4H,EAAmBj6H,EACvBD,EAAIm6H,EAAiBl6H,GAEd,IAAR2+B,EAIJk1C,EAAQryE,KAAMzB,EAAGA,EAAI,EAAG4B,GAMxBkyE,EAAQryE,KAAMzB,EAAI,EAAGA,EAAG4B,GAIzBs2E,GAAc,EAMfhB,EAAM3F,SAAU6F,EAAYc,GAAoB,IAARt5C,EAAe,EAAI,GAI3Dw4C,GAAcc,GAvMf,WAEC,MAAMvgD,EAAS,IAAImzB,GACbjkD,EAAS,IAAIikD,GAEnB,IAAIotB,EAAa,EAGjB,MAAMoiD,GAAUT,EAAeD,GAAclrH,EAI7C,IAAM,IAAIxO,EAAI,EAAGA,GAAK82E,EAAgB92E,IAAO,CAE5C,MAAMq6H,EAAW,GAEX/pH,EAAItQ,EAAI82E,EAIR58D,EAAS5J,GAAMqpH,EAAeD,GAAcA,EAElD,IAAM,IAAI35H,EAAI,EAAGA,GAAK65H,EAAgB75H,IAAO,CAE5C,MAAMqU,EAAIrU,EAAI65H,EAER3gG,EAAQ7kB,EAAIklH,EAAcD,EAE1Bc,EAAW72H,KAAKsH,IAAKquB,GACrBihG,EAAW52H,KAAKqH,IAAKsuB,GAI3BtyB,EAAO5G,EAAIma,EAASigH,EACpBxzH,EAAO3G,GAAMsQ,EAAI9B,EAASm7F,EAC1BhjG,EAAOvG,EAAI8Z,EAASggH,EACpBnuH,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAI1Cq3B,EAAO5uB,IAAKsxH,EAAUC,EAAOF,GAAW/qH,YACxCi/D,EAAQ7sE,KAAMk2B,EAAO13B,EAAG03B,EAAOz3B,EAAGy3B,EAAOr3B,GAIzCiuE,EAAI9sE,KAAM6S,EAAG,EAAI9D,GAIjB+pH,EAAS94H,KAAM6K,KAMhB0tH,EAAWv4H,KAAM84H,GAMlB,IAAM,IAAIt6H,EAAI,EAAGA,EAAI65H,EAAgB75H,IAEpC,IAAM,IAAIC,EAAI,EAAGA,EAAI82E,EAAgB92E,IAAO,CAI3C,MAAMwB,EAAIs4H,EAAY95H,GAAKD,GACrB0B,EAAIq4H,EAAY95H,EAAI,GAAKD,GACzB2B,EAAIo4H,EAAY95H,EAAI,GAAKD,EAAI,GAC7BuU,EAAIwlH,EAAY95H,GAAKD,EAAI,GAI/B6zE,EAAQryE,KAAMC,EAAGC,EAAG6S,GACpBs/D,EAAQryE,KAAME,EAAGC,EAAG4S,GAIpB0jE,GAAc,EAQhBhB,EAAM3F,SAAU6F,EAAYc,EAAY,GAIxCd,GAAcc,EA3GfsiD,IAEmB,IAAdT,IAECH,EAAY,GAAIK,GAAa,GAC7BJ,EAAe,GAAII,GAAa,IAMtC95H,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,KAiN5D,MAAMksD,WAAyB9E,GAE9BtvH,YAAauzH,EAAWC,EAAcnrH,EAAQorH,EAAgB9iD,EAAgB+iD,EAAWR,EAAYC,GAEpG3oH,QACA1Q,KAAK8/B,KAAO,mBAEZ9/B,KAAKy+D,WAAa,CACjBg7D,UAAWA,EACXC,aAAcA,EACdnrH,OAAQA,EACRorH,eAAgBA,EAChB9iD,eAAgBA,EAChB+iD,UAAWA,EACXR,WAAYA,EACZC,YAAaA,GAGdr5H,KAAKy1H,mBAAoB,IAAI+D,GAAwBC,EAAWC,EAAcnrH,EAAQorH,EAAgB9iD,EAAgB+iD,EAAWR,EAAYC,IAC7Ir5H,KAAKq3H,iBAMP,MAAMkD,WAAqBD,GAE1Bp0H,YAAa+T,EAAQ1L,EAAQorH,EAAgB9iD,EAAgB+iD,EAAWR,EAAYC,GAEnF3oH,MAAO,EAAGuJ,EAAQ1L,EAAQorH,EAAgB9iD,EAAgB+iD,EAAWR,EAAYC,GACjFr5H,KAAK8/B,KAAO,eAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR1L,OAAQA,EACRorH,eAAgBA,EAChB9iD,eAAgBA,EAChB+iD,UAAWA,EACXR,WAAYA,EACZC,YAAaA,IAOhB,MAAMmB,WAA2BhB,GAEhCtzH,YAAa+T,EAAS,EAAG1L,EAAS,EAAGorH,EAAiB,EAAG9iD,EAAiB,EAAG+iD,GAAY,EAAOR,EAAa,EAAGC,EAAwB,EAAVh2H,KAAK6G,IAElIwG,MAAO,EAAGuJ,EAAQ1L,EAAQorH,EAAgB9iD,EAAgB+iD,EAAWR,EAAYC,GAEjFr5H,KAAK8/B,KAAO,qBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR1L,OAAQA,EACRorH,eAAgBA,EAChB9iD,eAAgBA,EAChB+iD,UAAWA,EACXR,WAAYA,EACZC,YAAaA,IAOhB,MAAMoB,WAAiC/pD,GAEtCxqE,YAAa4F,EAAU6nE,EAAS15D,EAAS,EAAG0yG,EAAS,GAEpDj8G,QAEA1Q,KAAK8/B,KAAO,2BAEZ9/B,KAAKy+D,WAAa,CACjB3yD,SAAUA,EACV6nE,QAASA,EACT15D,OAAQA,EACR0yG,OAAQA,GAKT,MAAM+N,EAAe,GACfC,EAAW,GAwDjB,SAASC,EAAer5H,EAAGC,EAAGC,EAAGkrH,GAEhC,MAAMkO,EAAOlO,EAAS,EAIhBt8G,EAAI,GAIV,IAAM,IAAIxQ,EAAI,EAAGA,GAAKg7H,EAAMh7H,IAAO,CAElCwQ,EAAGxQ,GAAM,GAET,MAAMi7H,EAAKv5H,EAAEoI,QAAQ0wC,KAAM54C,EAAG5B,EAAIg7H,GAC5BE,EAAKv5H,EAAEmI,QAAQ0wC,KAAM54C,EAAG5B,EAAIg7H,GAE5BG,EAAOH,EAAOh7H,EAEpB,IAAM,IAAI4F,EAAI,EAAGA,GAAKu1H,EAAMv1H,IAI1B4K,EAAGxQ,GAAK4F,GAFE,IAANA,GAAW5F,IAAMg7H,EAEPC,EAIAA,EAAGnxH,QAAQ0wC,KAAM0gF,EAAIt1H,EAAIu1H,GAU1C,IAAM,IAAIn7H,EAAI,EAAGA,EAAIg7H,EAAMh7H,IAE1B,IAAM,IAAI4F,EAAI,EAAGA,EAAI,GAAMo1H,EAAOh7H,GAAM,EAAG4F,IAAO,CAEjD,MAAMwX,EAAI5Z,KAAK+pB,MAAO3nB,EAAI,GAErBA,EAAI,GAAM,GAEdw1H,EAAY5qH,EAAGxQ,GAAKod,EAAI,IACxBg+G,EAAY5qH,EAAGxQ,EAAI,GAAKod,IACxBg+G,EAAY5qH,EAAGxQ,GAAKod,MAIpBg+G,EAAY5qH,EAAGxQ,GAAKod,EAAI,IACxBg+G,EAAY5qH,EAAGxQ,EAAI,GAAKod,EAAI,IAC5Bg+G,EAAY5qH,EAAGxQ,EAAI,GAAKod,MAmF5B,SAASg+G,EAAYv0H,GAEpBg0H,EAAap5H,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAI/C,SAAS+6H,EAAkB/uH,EAAOzF,GAEjC,MAAMspF,EAAiB,EAAR7jF,EAEfzF,EAAO5G,EAAIgM,EAAUkkF,EAAS,GAC9BtpF,EAAO3G,EAAI+L,EAAUkkF,EAAS,GAC9BtpF,EAAOvG,EAAI2L,EAAUkkF,EAAS,GAsC/B,SAASmrC,EAAWz2E,EAAIsrC,EAAQjyD,EAAQq9F,GAEhCA,EAAU,GAAkB,IAAT12E,EAAG5kD,IAE5B66H,EAAU3qC,GAAWtrC,EAAG5kD,EAAI,GAIT,IAAbi+B,EAAOj+B,GAA4B,IAAbi+B,EAAO59B,IAEnCw6H,EAAU3qC,GAAWorC,EAAU,EAAI/3H,KAAK6G,GAAK,IAQ/C,SAASkxH,EAASr9F,GAEjB,OAAO16B,KAAK8G,MAAO4zB,EAAO59B,GAAK49B,EAAOj+B,IAtOvC,SAAoB6sH,GAEnB,MAAMprH,EAAI,IAAIopD,GACRnpD,EAAI,IAAImpD,GACRlpD,EAAI,IAAIkpD,GAId,IAAM,IAAI9qD,EAAI,EAAGA,EAAI8zE,EAAQrxE,OAAQzC,GAAK,EAIzCq7H,EAAkBvnD,EAAS9zE,EAAI,GAAK0B,GACpC25H,EAAkBvnD,EAAS9zE,EAAI,GAAK2B,GACpC05H,EAAkBvnD,EAAS9zE,EAAI,GAAK4B,GAIpCm5H,EAAer5H,EAAGC,EAAGC,EAAGkrH,GA9C1B0O,CAAW1O,GAmHX,SAAsB1yG,GAErB,MAAMvT,EAAS,IAAIikD,GAInB,IAAM,IAAI9qD,EAAI,EAAGA,EAAI66H,EAAap4H,OAAQzC,GAAK,EAE9C6G,EAAO5G,EAAI46H,EAAc76H,EAAI,GAC7B6G,EAAO3G,EAAI26H,EAAc76H,EAAI,GAC7B6G,EAAOvG,EAAIu6H,EAAc76H,EAAI,GAE7B6G,EAAOwI,YAAYtE,eAAgBqP,GAEnCygH,EAAc76H,EAAI,GAAM6G,EAAO5G,EAC/B46H,EAAc76H,EAAI,GAAM6G,EAAO3G,EAC/B26H,EAAc76H,EAAI,GAAM6G,EAAOvG,EA/HjCm7H,CAAarhH,GAqIb,WAEC,MAAMvT,EAAS,IAAIikD,GAEnB,IAAM,IAAI9qD,EAAI,EAAGA,EAAI66H,EAAap4H,OAAQzC,GAAK,EAAI,CAElD6G,EAAO5G,EAAI46H,EAAc76H,EAAI,GAC7B6G,EAAO3G,EAAI26H,EAAc76H,EAAI,GAC7B6G,EAAOvG,EAAIu6H,EAAc76H,EAAI,GAE7B,MAAMsU,EAAIinH,EAAS10H,GAAW,EAAIrD,KAAK6G,GAAK,GACtCmG,GAqHc0tB,EArHGr3B,EAuHjBrD,KAAK8G,OAAS4zB,EAAOh+B,EAAGsD,KAAKyG,KAAQi0B,EAAOj+B,EAAIi+B,EAAOj+B,EAAQi+B,EAAO59B,EAAI49B,EAAO59B,IAvHrDkD,KAAK6G,GAAK,IAC5CywH,EAASr5H,KAAM6S,EAAG,EAAI9D,GAoHxB,IAAsB0tB,GA7DtB,WAEC,MAAMx8B,EAAI,IAAIopD,GACRnpD,EAAI,IAAImpD,GACRlpD,EAAI,IAAIkpD,GAERnhC,EAAW,IAAImhC,GAEf4wE,EAAM,IAAIv/E,GACVw/E,EAAM,IAAIx/E,GACVy/E,EAAM,IAAIz/E,GAEhB,IAAM,IAAIn8C,EAAI,EAAG4F,EAAI,EAAG5F,EAAI66H,EAAap4H,OAAQzC,GAAK,EAAG4F,GAAK,EAAI,CAEjElE,EAAEqH,IAAK8xH,EAAc76H,EAAI,GAAK66H,EAAc76H,EAAI,GAAK66H,EAAc76H,EAAI,IACvE2B,EAAEoH,IAAK8xH,EAAc76H,EAAI,GAAK66H,EAAc76H,EAAI,GAAK66H,EAAc76H,EAAI,IACvE4B,EAAEmH,IAAK8xH,EAAc76H,EAAI,GAAK66H,EAAc76H,EAAI,GAAK66H,EAAc76H,EAAI,IAEvE07H,EAAI3yH,IAAK+xH,EAAUl1H,EAAI,GAAKk1H,EAAUl1H,EAAI,IAC1C+1H,EAAI5yH,IAAK+xH,EAAUl1H,EAAI,GAAKk1H,EAAUl1H,EAAI,IAC1Cg2H,EAAI7yH,IAAK+xH,EAAUl1H,EAAI,GAAKk1H,EAAUl1H,EAAI,IAE1C+jB,EAAS1G,KAAMvhB,GAAI0H,IAAKzH,GAAIyH,IAAKxH,GAAIk7C,aAAc,GAEnD,MAAM++E,EAAMN,EAAS5xG,GAErB2xG,EAAWI,EAAK91H,EAAI,EAAGlE,EAAGm6H,GAC1BP,EAAWK,EAAK/1H,EAAI,EAAGjE,EAAGk6H,GAC1BP,EAAWM,EAAKh2H,EAAI,EAAGhE,EAAGi6H,KA/E3BC,GAMD,WAIC,IAAM,IAAI97H,EAAI,EAAGA,EAAI86H,EAASr4H,OAAQzC,GAAK,EAAI,CAI9C,MAAM+nD,EAAK+yE,EAAU96H,EAAI,GACnB60B,EAAKimG,EAAU96H,EAAI,GACnB80B,EAAKgmG,EAAU96H,EAAI,GAEnBmF,EAAM3B,KAAK2B,IAAK4iD,EAAIlzB,EAAIC,GACxB1vB,EAAM5B,KAAK4B,IAAK2iD,EAAIlzB,EAAIC,GAIzB3vB,EAAM,IAAOC,EAAM,KAElB2iD,EAAK,KAAM+yE,EAAU96H,EAAI,IAAO,GAChC60B,EAAK,KAAMimG,EAAU96H,EAAI,IAAO,GAChC80B,EAAK,KAAMgmG,EAAU96H,EAAI,IAAO,KAzBvC+7H,GAnJDC,GAIA77H,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB6tD,EAAc,IACzE16H,KAAKue,aAAc,SAAU,IAAIsuD,GAAwB6tD,EAAathF,QAAS,IAC/Ep5C,KAAKue,aAAc,KAAM,IAAIsuD,GAAwB8tD,EAAU,IAE/C,IAAXhO,EAEJ3sH,KAAKwyE,uBAILxyE,KAAKmzE,oBA6PR,MAAM2oD,WAAmCrB,GAExCv0H,YAAa+T,EAAS,EAAG0yG,EAAS,GAEjC,MAAMr/G,GAAM,EAAIjK,KAAKyG,KAAM,IAAQ,EAC7BvF,EAAI,EAAI+I,EAsCdoD,MApCiB,EAGd,GAAK,GAAK,GAAK,GAAK,EAAG,GACvB,EAAG,GAAK,GAAK,EAAG,EAAG,EACrB,GAAK,GAAK,EAAG,GAAK,EAAG,EACrB,EAAG,GAAK,EAAG,EAAG,EAAG,EAGjB,GAAKnM,GAAK+I,EAAG,GAAK/I,EAAG+I,EACrB,EAAG/I,GAAK+I,EAAG,EAAG/I,EAAG+I,GAGf/I,GAAK+I,EAAG,GAAK/I,EAAG+I,EAAG,EACrB/I,GAAK+I,EAAG,EAAG/I,EAAG+I,EAAG,GAGfA,EAAG,GAAK/I,EAAG+I,EAAG,GAAK/I,GACnB+I,EAAG,EAAG/I,EAAG+I,EAAG,EAAG/I,GAGF,CACf,EAAG,GAAI,EAAI,EAAG,EAAG,GAAK,EAAG,GAAI,GAC7B,EAAG,GAAI,GAAK,EAAG,GAAI,EAAI,EAAG,EAAG,GAC7B,GAAI,EAAG,EAAI,GAAI,EAAG,GAAK,GAAI,GAAI,EAC/B,EAAG,EAAG,GAAK,EAAG,GAAI,EAAI,EAAG,EAAG,GAC5B,EAAG,GAAI,EAAI,EAAG,EAAG,GAAK,EAAG,GAAI,GAC7B,EAAG,GAAI,EAAI,EAAG,EAAG,GAAK,EAAG,GAAI,GAC7B,EAAG,GAAI,GAAK,EAAG,GAAI,EAAI,EAAG,EAAG,GAC7B,GAAI,EAAG,EAAI,GAAI,EAAG,GAAK,GAAI,GAAI,EAC/B,EAAG,GAAI,GAAK,EAAG,GAAI,EAAI,EAAG,EAAG,EAC7B,GAAI,EAAG,EAAI,GAAI,EAAG,GAAK,GAAI,GAAI,EAC/B,GAAI,EAAG,GAAK,GAAI,GAAI,EAAI,GAAI,EAAG,GAC/B,EAAG,GAAI,GAAK,EAAG,GAAI,EAAI,EAAG,EAAG,GAGJ0V,EAAQ0yG,GAElC3sH,KAAK8/B,KAAO,6BAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR0yG,OAAQA,IAOX,MAAMoP,WAA6BvG,GAElCtvH,YAAa+T,EAAQ0yG,GAEpBj8G,QACA1Q,KAAK8/B,KAAO,uBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR0yG,OAAQA,GAGT3sH,KAAKy1H,mBAAoB,IAAIqG,GAA4B7hH,EAAQ0yG,IACjE3sH,KAAKq3H,iBAMP,MAAM2E,GAAQ,IAAIrxE,GACZsxE,GAAQ,IAAItxE,GACZuxE,GAAY,IAAIvxE,GAChBwxE,GAAY,IAAIhzG,GAEtB,MAAMizG,WAAsB1rD,GAE3BxqE,YAAasoD,EAAU6tE,GAEtB3rH,QAEA1Q,KAAK8/B,KAAO,gBAEZ9/B,KAAKy+D,WAAa,CACjB49D,eAAgBA,GAGjBA,OAAsCljH,IAAnBkjH,EAAiCA,EAAiB,EAEhE7tE,EAASojB,aAEbpjB,GAAW,IAAIkiB,IAAiBvB,aAAc3gB,IAI/C,MACM4Y,EAAY/jE,KAAK0G,IAAK,GADJ,GAElBuyH,EAAej5H,KAAKqH,IAAK8uC,GAAUC,QAAU4iF,GAE7CE,EAAY/tE,EAASwiB,WACrBwrD,EAAehuE,EAASrvC,aAAc,YACtCs9G,EAAaF,EAAYA,EAAUjvE,MAAQkvE,EAAalvE,MAExDovE,EAAW,CAAE,EAAG,EAAG,GACnBC,EAAW,CAAE,IAAK,IAAK,KACvBC,EAAS,IAAIhnH,MAAO,GAEpBinH,EAAW,GACX/wH,EAAW,GACjB,IAAM,IAAIjM,EAAI,EAAGA,EAAI48H,EAAY58H,GAAK,EAAI,CAEpC08H,GAEJG,EAAU,GAAMH,EAAU1+E,KAAMh+C,GAChC68H,EAAU,GAAMH,EAAU1+E,KAAMh+C,EAAI,GACpC68H,EAAU,GAAMH,EAAU1+E,KAAMh+C,EAAI,KAIpC68H,EAAU,GAAM78H,EAChB68H,EAAU,GAAM78H,EAAI,EACpB68H,EAAU,GAAM78H,EAAI,GAIrB,MAAM,EAAE0B,EAAC,EAAEC,EAAC,EAAEC,GAAM06H,GAYpB,GAXA56H,EAAEo8C,oBAAqB6+E,EAAcE,EAAU,IAC/Cl7H,EAAEm8C,oBAAqB6+E,EAAcE,EAAU,IAC/Cj7H,EAAEk8C,oBAAqB6+E,EAAcE,EAAU,IAC/CP,GAAUj6D,UAAWg6D,IAGrBU,EAAQ,GAAM,GAAIv5H,KAAKyH,MAAOvJ,EAAEzB,EAAIsnE,MAAiB/jE,KAAKyH,MAAOvJ,EAAExB,EAAIqnE,MAAiB/jE,KAAKyH,MAAOvJ,EAAEpB,EAAIinE,KAC1Gw1D,EAAQ,GAAM,GAAIv5H,KAAKyH,MAAOtJ,EAAE1B,EAAIsnE,MAAiB/jE,KAAKyH,MAAOtJ,EAAEzB,EAAIqnE,MAAiB/jE,KAAKyH,MAAOtJ,EAAErB,EAAIinE,KAC1Gw1D,EAAQ,GAAM,GAAIv5H,KAAKyH,MAAOrJ,EAAE3B,EAAIsnE,MAAiB/jE,KAAKyH,MAAOrJ,EAAE1B,EAAIqnE,MAAiB/jE,KAAKyH,MAAOrJ,EAAEtB,EAAIinE,KAGrGw1D,EAAQ,KAAQA,EAAQ,IAAOA,EAAQ,KAAQA,EAAQ,IAAOA,EAAQ,KAAQA,EAAQ,GAO3F,IAAM,IAAIn3H,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAG9B,MAAMq3H,GAAUr3H,EAAI,GAAM,EACpBs3H,EAAWH,EAAQn3H,GACnBu3H,EAAWJ,EAAQE,GACnBvtH,EAAK4sH,GAAWQ,EAAUl3H,IAC1B+J,EAAK2sH,GAAWQ,EAAUG,IAE1B5yB,EAAO,GAAI6yB,KAAcC,IACzBC,EAAc,GAAID,KAAcD,IAEjCE,KAAeJ,GAAYA,EAAUI,IAIpCf,GAAUx7G,IAAKm8G,EAAUI,GAAczlG,SAAY8kG,IAEvDxwH,EAASxK,KAAMiO,EAAGzP,EAAGyP,EAAGxP,EAAGwP,EAAGpP,GAC9B2L,EAASxK,KAAMkO,EAAG1P,EAAG0P,EAAGzP,EAAGyP,EAAGrP,IAI/B08H,EAAUI,GAAgB,MAEX/yB,KAAQ2yB,IAGvBA,EAAU3yB,GAAS,CAElBgzB,OAAQR,EAAUj3H,GAClB2nE,OAAQsvD,EAAUI,GAClBtlG,OAAQ0kG,GAAUvyH,WAWtB,IAAM,MAAMxD,KAAO02H,EAElB,GAAKA,EAAU12H,GAAQ,CAEtB,MAAM,OAAE+2H,EAAM,OAAE9vD,GAAWyvD,EAAU12H,GACrC61H,GAAMr+E,oBAAqB6+E,EAAcU,GACzCjB,GAAMt+E,oBAAqB6+E,EAAcpvD,GAEzCthE,EAASxK,KAAM06H,GAAMl8H,EAAGk8H,GAAMj8H,EAAGi8H,GAAM77H,GACvC2L,EAASxK,KAAM26H,GAAMn8H,EAAGm8H,GAAMl8H,EAAGk8H,GAAM97H,GAMzCH,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,KAUvE,MAAMqxH,GAEQ,SAAW58H,EAAM0B,EAAavB,GAE1CA,EAAMA,GAAO,EAEb,MAAMkF,EAAW3D,GAAeA,EAAYK,OACtCuD,EAAWD,EAAW3D,EAAa,GAAMvB,EAAMH,EAAK+B,OAC1D,IAAIJ,EAAYxE,GAAY6C,EAAM,EAAGsF,EAAUnF,GAAK,GACpD,MAAMM,EAAY,GAElB,IAAOkB,GAAaA,EAAUhC,OAASgC,EAAUjC,KAAO,OAAOe,EAE/D,IAAIC,EAAMC,EAAMwE,EAAMC,EAAM7F,EAAGC,EAAGoB,EAKlC,GAHKyE,IAAW1D,EAqTlB,SAAyB3B,EAAM0B,EAAaC,EAAWxB,GAEtD,MAAM0B,EAAQ,GACd,IAAIvC,EAAGwC,EAAK7B,EAAOC,EAAK0B,EAExB,IAAMtC,EAAI,EAAGwC,EAAMJ,EAAYK,OAAQzC,EAAIwC,EAAKxC,IAE/CW,EAAQyB,EAAapC,GAAMa,EAC3BD,EAAMZ,EAAIwC,EAAM,EAAIJ,EAAapC,EAAI,GAAMa,EAAMH,EAAK+B,OACtDH,EAAOzE,GAAY6C,EAAMC,EAAOC,EAAKC,GAAK,GACrCyB,IAASA,EAAKjC,OAAOiC,EAAK7B,SAAU,GACzC8B,EAAMd,KAAM7C,GAAa0D,IAO1B,IAHAC,EAAMG,KAAMrE,IAGN2B,EAAI,EAAGA,EAAIuC,EAAME,OAAQzC,IAE9B1B,GAAeiE,EAAOvC,GAAKqC,GAC3BA,EAAYvE,GAAcuE,EAAWA,EAAUhC,MAIhD,OAAOgC,EA9UsBjE,CAAgBsC,EAAM0B,EAAaC,EAAWxB,IAGrEH,EAAK+B,OAAS,GAAK5B,EAAM,CAE7BO,EAAOyE,EAAOnF,EAAM,GACpBW,EAAOyE,EAAOpF,EAAM,GAEpB,IAAM,IAAIV,EAAIa,EAAKb,EAAIgG,EAAUhG,GAAKa,EAErCZ,EAAIS,EAAMV,GACVE,EAAIQ,EAAMV,EAAI,GACTC,EAAImB,IAAOA,EAAOnB,GAClBC,EAAImB,IAAOA,EAAOnB,GAClBD,EAAI4F,IAAOA,EAAO5F,GAClBC,EAAI4F,IAAOA,EAAO5F,GAKxBoB,EAAUkC,KAAK2B,IAAKU,EAAOzE,EAAM0E,EAAOzE,GACxCC,EAAsB,IAAZA,EAAgB,EAAIA,EAAU,EAMzC,OAFAvD,GAAcsE,EAAWlB,EAAWN,EAAKO,EAAMC,EAAMC,GAE9CH,GAOT,SAAStD,GAAY6C,EAAMC,EAAOC,EAAKC,EAAKC,GAE3C,IAAId,EAAGe,EAEP,GAAKD,IA+sBN,SAAqBJ,EAAMC,EAAOC,EAAKC,GAEtC,IAAI8E,EAAM,EACV,IAAM,IAAI3F,EAAIW,EAAOiF,EAAIhF,EAAMC,EAAKb,EAAIY,EAAKZ,GAAKa,EAEjD8E,IAASjF,EAAMkF,GAAMlF,EAAMV,KAAUU,EAAMV,EAAI,GAAMU,EAAMkF,EAAI,IAC/DA,EAAI5F,EAIL,OAAO2F,EAztBcjG,CAAYgB,EAAMC,EAAOC,EAAKC,GAAQ,EAE1D,IAAMb,EAAIW,EAAOX,EAAIY,EAAKZ,GAAKa,EAAME,EAAOvB,GAAYQ,EAAGU,EAAMV,GAAKU,EAAMV,EAAI,GAAKe,QAIrF,IAAMf,EAAIY,EAAMC,EAAKb,GAAKW,EAAOX,GAAKa,EAAME,EAAOvB,GAAYQ,EAAGU,EAAMV,GAAKU,EAAMV,EAAI,GAAKe,GAW7F,OAPKA,GAAQ/B,GAAQ+B,EAAMA,EAAKV,QAE/BZ,GAAYsB,GACZA,EAAOA,EAAKV,MAINU,EAKR,SAASjD,GAAc6C,EAAOC,GAE7B,IAAOD,EAAQ,OAAOA,EACfC,IAAMA,EAAMD,GAEnB,IACCM,EADGD,EAAIL,EAER,GAIC,GAFAM,GAAQ,EAEDD,EAAEP,UAAazB,GAAQgC,EAAGA,EAAEX,OAAwC,IAA9BtB,GAAMiC,EAAEZ,KAAMY,EAAGA,EAAEX,MAS/DW,EAAIA,EAAEX,SAT0E,CAIhF,GAFAZ,GAAYuB,GACZA,EAAIJ,EAAMI,EAAEZ,KACPY,IAAMA,EAAEX,KAAO,MACpBY,GAAQ,SAQAA,GAASD,IAAMJ,GAEzB,OAAOA,EAKR,SAAS7C,GAAcmD,EAAKC,EAAWN,EAAKO,EAAMC,EAAMC,EAASC,GAEhE,IAAOL,EAAM,QAGNK,GAAQD,GA0VhB,SAAqBX,EAAOS,EAAMC,EAAMC,GAEvC,IAAIN,EAAIL,EACR,GAEc,OAARK,EAAEV,IAAaU,EAAEV,EAAI3B,GAAQqC,EAAEf,EAAGe,EAAEd,EAAGkB,EAAMC,EAAMC,IACxDN,EAAET,MAAQS,EAAEZ,KACZY,EAAER,MAAQQ,EAAEX,KACZW,EAAIA,EAAEX,WAEGW,IAAML,GAEhBK,EAAET,MAAMC,MAAQ,KAChBQ,EAAET,MAAQ,KAQX,SAAqB+B,GAEpB,IAAItC,EAAGgB,EAAG0C,EAAGC,EAAGC,EAAMC,EAAWC,EAAOC,EACvCC,EAAS,EAEV,EAAG,CAOF,IALAhD,EAAIsB,EACJA,EAAO,KACPsB,EAAO,KACPC,EAAY,EAEJ7C,GAAI,CAKX,IAHA6C,IACAH,EAAI1C,EACJ8C,EAAQ,EACF9D,EAAI,EAAGA,EAAIgE,IAEhBF,IACAJ,EAAIA,EAAElD,MACCkD,GAJiB1D,KAUzB,IAFA+D,EAAQC,EAEAF,EAAQ,GAAOC,EAAQ,GAAKL,GAEpB,IAAVI,IAA2B,IAAVC,IAAiBL,GAAK1C,EAAEV,GAAKoD,EAAEpD,IAEpDqD,EAAI3C,EACJA,EAAIA,EAAER,MACNsD,MAIAH,EAAID,EACJA,EAAIA,EAAElD,MACNuD,KAIIH,EAAOA,EAAKpD,MAAQmD,EACpBrB,EAAOqB,EAEZA,EAAEpD,MAAQqD,EACVA,EAAOD,EAIR3C,EAAI0C,EAILE,EAAKpD,MAAQ,KACbwD,GAAU,QAEDH,EAAY,GAhEtBnF,CAAYsC,GAzWavC,CAAYyC,EAAKE,EAAMC,EAAMC,GAEtD,IACClB,EAAMC,EADHmB,EAAON,EAIX,KAAQA,EAAId,OAASc,EAAIb,MAKxB,GAHAD,EAAOc,EAAId,KACXC,EAAOa,EAAIb,KAENiB,EAAUrD,GAAaiD,EAAKE,EAAMC,EAAMC,GAAYtD,GAAOkD,GAG/DC,EAAUM,KAAMrB,EAAKJ,EAAIa,GACzBM,EAAUM,KAAMP,EAAIlB,EAAIa,GACxBM,EAAUM,KAAMpB,EAAKL,EAAIa,GAEzBpB,GAAYyB,GAGZA,EAAMb,EAAKA,KACXmB,EAAOnB,EAAKA,UASb,IAHAa,EAAMb,KAGOmB,EAAO,CAGZD,EAMc,IAATA,EAGXxD,GADAmD,EAAMhD,GAAwBJ,GAAcoD,GAAOC,EAAWN,GAC3CM,EAAWN,EAAKO,EAAMC,EAAMC,EAAS,GAIpC,IAATC,GAEXpD,GAAa+C,EAAKC,EAAWN,EAAKO,EAAMC,EAAMC,GAb9CvD,GAAcD,GAAcoD,GAAOC,EAAWN,EAAKO,EAAMC,EAAMC,EAAS,GAiBzE,OASH,SAAStD,GAAOkD,GAEf,MAAMQ,EAAIR,EAAId,KACbuB,EAAIT,EACJU,EAAIV,EAAIb,KAET,GAAKtB,GAAM2C,EAAGC,EAAGC,IAAO,EAAI,OAAO,EAGnC,IAAIZ,EAAIE,EAAIb,KAAKA,KAEjB,KAAQW,IAAME,EAAId,MAAO,CAExB,GAAKvB,GAAiB6C,EAAEzB,EAAGyB,EAAExB,EAAGyB,EAAE1B,EAAG0B,EAAEzB,EAAG0B,EAAE3B,EAAG2B,EAAE1B,EAAGc,EAAEf,EAAGe,EAAEd,IAC1DnB,GAAMiC,EAAEZ,KAAMY,EAAGA,EAAEX,OAAU,EAAI,OAAO,EACzCW,EAAIA,EAAEX,KAIP,OAAO,EAIR,SAASpC,GAAaiD,EAAKE,EAAMC,EAAMC,GAEtC,MAAMI,EAAIR,EAAId,KACbuB,EAAIT,EACJU,EAAIV,EAAIb,KAET,GAAKtB,GAAM2C,EAAGC,EAAGC,IAAO,EAAI,OAAO,EAGnC,MAAMC,EAAQH,EAAEzB,EAAI0B,EAAE1B,EAAMyB,EAAEzB,EAAI2B,EAAE3B,EAAIyB,EAAEzB,EAAI2B,EAAE3B,EAAQ0B,EAAE1B,EAAI2B,EAAE3B,EAAI0B,EAAE1B,EAAI2B,EAAE3B,EAC3E6B,EAAQJ,EAAExB,EAAIyB,EAAEzB,EAAMwB,EAAExB,EAAI0B,EAAE1B,EAAIwB,EAAExB,EAAI0B,EAAE1B,EAAQyB,EAAEzB,EAAI0B,EAAE1B,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EACtE6B,EAAQL,EAAEzB,EAAI0B,EAAE1B,EAAMyB,EAAEzB,EAAI2B,EAAE3B,EAAIyB,EAAEzB,EAAI2B,EAAE3B,EAAQ0B,EAAE1B,EAAI2B,EAAE3B,EAAI0B,EAAE1B,EAAI2B,EAAE3B,EACtE+B,EAAQN,EAAExB,EAAIyB,EAAEzB,EAAMwB,EAAExB,EAAI0B,EAAE1B,EAAIwB,EAAExB,EAAI0B,EAAE1B,EAAQyB,EAAEzB,EAAI0B,EAAE1B,EAAIyB,EAAEzB,EAAI0B,EAAE1B,EAGjE+B,EAAOtD,GAAQkD,EAAOC,EAAOV,EAAMC,EAAMC,GAC9CY,EAAOvD,GAAQoD,EAAOC,EAAOZ,EAAMC,EAAMC,GAE1C,IAAIN,EAAIE,EAAIX,MACX4B,EAAIjB,EAAIV,MAGT,KAAQQ,GAAKA,EAAEV,GAAK2B,GAAQE,GAAKA,EAAE7B,GAAK4B,GAAO,CAE9C,GAAKlB,IAAME,EAAId,MAAQY,IAAME,EAAIb,MAChCxB,GAAiB6C,EAAEzB,EAAGyB,EAAExB,EAAGyB,EAAE1B,EAAG0B,EAAEzB,EAAG0B,EAAE3B,EAAG2B,EAAE1B,EAAGc,EAAEf,EAAGe,EAAEd,IACtDnB,GAAMiC,EAAEZ,KAAMY,EAAGA,EAAEX,OAAU,EAAI,OAAO,EAGzC,GAFAW,EAAIA,EAAET,MAED4B,IAAMjB,EAAId,MAAQ+B,IAAMjB,EAAIb,MAChCxB,GAAiB6C,EAAEzB,EAAGyB,EAAExB,EAAGyB,EAAE1B,EAAG0B,EAAEzB,EAAG0B,EAAE3B,EAAG2B,EAAE1B,EAAGiC,EAAElC,EAAGkC,EAAEjC,IACtDnB,GAAMoD,EAAE/B,KAAM+B,EAAGA,EAAE9B,OAAU,EAAI,OAAO,EACzC8B,EAAIA,EAAE3B,MAKP,KAAQQ,GAAKA,EAAEV,GAAK2B,GAAO,CAE1B,GAAKjB,IAAME,EAAId,MAAQY,IAAME,EAAIb,MAChCxB,GAAiB6C,EAAEzB,EAAGyB,EAAExB,EAAGyB,EAAE1B,EAAG0B,EAAEzB,EAAG0B,EAAE3B,EAAG2B,EAAE1B,EAAGc,EAAEf,EAAGe,EAAEd,IACtDnB,GAAMiC,EAAEZ,KAAMY,EAAGA,EAAEX,OAAU,EAAI,OAAO,EACzCW,EAAIA,EAAET,MAKP,KAAQ4B,GAAKA,EAAE7B,GAAK4B,GAAO,CAE1B,GAAKC,IAAMjB,EAAId,MAAQ+B,IAAMjB,EAAIb,MAChCxB,GAAiB6C,EAAEzB,EAAGyB,EAAExB,EAAGyB,EAAE1B,EAAG0B,EAAEzB,EAAG0B,EAAE3B,EAAG2B,EAAE1B,EAAGiC,EAAElC,EAAGkC,EAAEjC,IACtDnB,GAAMoD,EAAE/B,KAAM+B,EAAGA,EAAE9B,OAAU,EAAI,OAAO,EACzC8B,EAAIA,EAAE3B,MAIP,OAAO,EAKR,SAAStC,GAAwByC,EAAOQ,EAAWN,GAElD,IAAIG,EAAIL,EACR,EAAG,CAEF,MAAMe,EAAIV,EAAEZ,KACXuB,EAAIX,EAAEX,KAAKA,MAELrB,GAAQ0C,EAAGC,IAAO1C,GAAYyC,EAAGV,EAAGA,EAAEX,KAAMsB,IAAOtC,GAAeqC,EAAGC,IAAOtC,GAAesC,EAAGD,KAEpGP,EAAUM,KAAMC,EAAE1B,EAAIa,GACtBM,EAAUM,KAAMT,EAAEhB,EAAIa,GACtBM,EAAUM,KAAME,EAAE3B,EAAIa,GAGtBpB,GAAYuB,GACZvB,GAAYuB,EAAEX,MAEdW,EAAIL,EAAQgB,GAIbX,EAAIA,EAAEX,WAEGW,IAAML,GAEhB,OAAO7C,GAAckD,GAKtB,SAAS7C,GAAawC,EAAOQ,EAAWN,EAAKO,EAAMC,EAAMC,GAGxD,IAAII,EAAIf,EACR,EAAG,CAEF,IAAIgB,EAAID,EAAErB,KAAKA,KACf,KAAQsB,IAAMD,EAAEtB,MAAO,CAEtB,GAAKsB,EAAE1B,IAAM2B,EAAE3B,GAAKlB,GAAiB4C,EAAGC,GAAM,CAG7C,IAAIC,EAAIrC,GAAcmC,EAAGC,GASzB,OANAD,EAAI5D,GAAc4D,EAAGA,EAAErB,MACvBuB,EAAI9D,GAAc8D,EAAGA,EAAEvB,MAGvBtC,GAAc2D,EAAGP,EAAWN,EAAKO,EAAMC,EAAMC,QAC7CvD,GAAc6D,EAAGT,EAAWN,EAAKO,EAAMC,EAAMC,GAK9CK,EAAIA,EAAEtB,KAIPqB,EAAIA,EAAErB,WAEGqB,IAAMf,GAkCjB,SAAStC,GAAUqD,EAAGC,GAErB,OAAOD,EAAEzB,EAAI0B,EAAE1B,EAKhB,SAAS3B,GAAeqE,EAAMN,GAG7B,GADAA,EAcD,SAAyBM,EAAMN,GAE9B,IAAIrB,EAAIqB,EACR,MAAMW,EAAKL,EAAK1C,EACVgD,EAAKN,EAAKzC,EAChB,IAAqB6C,EAAjBG,GAAOK,EAAAA,EAIX,EAAG,CAEF,GAAKN,GAAMjC,EAAEd,GAAK+C,GAAMjC,EAAEX,KAAKH,GAAKc,EAAEX,KAAKH,IAAMc,EAAEd,EAAI,CAEtD,MAAMD,EAAIe,EAAEf,GAAMgD,EAAKjC,EAAEd,IAAQc,EAAEX,KAAKJ,EAAIe,EAAEf,IAAQe,EAAEX,KAAKH,EAAIc,EAAEd,GACnE,GAAKD,GAAK+C,GAAM/C,EAAIiD,EAAK,CAGxB,GADAA,EAAKjD,EACAA,IAAM+C,EAAK,CAEf,GAAKC,IAAOjC,EAAEd,EAAI,OAAOc,EACzB,GAAKiC,IAAOjC,EAAEX,KAAKH,EAAI,OAAOc,EAAEX,KAIjC0C,EAAI/B,EAAEf,EAAIe,EAAEX,KAAKJ,EAAIe,EAAIA,EAAEX,MAM7BW,EAAIA,EAAEX,WAEGW,IAAMqB,GAEhB,IAAOU,EAAI,OAAO,KAElB,GAAKC,IAAOE,EAAK,OAAOH,EAMxB,MAAMvB,EAAOuB,EACZK,EAAKL,EAAE9C,EACPoD,EAAKN,EAAE7C,EACR,IAAuBiD,EAAnBG,EAASC,EAAAA,EAEbvC,EAAI+B,EAEJ,GAEMC,GAAMhC,EAAEf,GAAKe,EAAEf,GAAKmD,GAAMJ,IAAOhC,EAAEf,GACtCpB,GAAiBoE,EAAKI,EAAKL,EAAKE,EAAID,EAAIG,EAAIC,EAAIJ,EAAKI,EAAKH,EAAKF,EAAIC,EAAIjC,EAAEf,EAAGe,EAAEd,KAE/EiD,EAAMK,KAAKC,IAAKR,EAAKjC,EAAEd,IAAQ8C,EAAKhC,EAAEf,GAEjCZ,GAAe2B,EAAG2B,KAAYQ,EAAMG,GAAYH,IAAQG,IAAYtC,EAAEf,EAAI8C,EAAE9C,GAAOe,EAAEf,IAAM8C,EAAE9C,GAAKzB,GAAsBuE,EAAG/B,OAE/H+B,EAAI/B,EACJsC,EAASH,IAMXnC,EAAIA,EAAEX,WAEGW,IAAMQ,GAEhB,OAAOuB,EAnFKxE,CAAgBoE,EAAMN,GAC7BA,EAAY,CAEhB,MAAMV,EAAIpC,GAAc8C,EAAWM,GAGnC7E,GAAcuE,EAAWA,EAAUhC,MACnCvC,GAAc6D,EAAGA,EAAEtB,OAiFrB,SAAS7B,GAAsBuE,EAAG/B,GAEjC,OAAOjC,GAAMgE,EAAE3C,KAAM2C,EAAG/B,EAAEZ,MAAS,GAAKrB,GAAMiC,EAAEX,KAAM0C,EAAGA,EAAE1C,MAAS,EA2FrE,SAAS1B,GAAQsB,EAAGC,EAAGkB,EAAMC,EAAMC,GAgBlC,OAPArB,EAAyB,aADzBA,EAAyB,YADzBA,EAAyB,YADzBA,EAAyB,WAHzBA,EAAI,OAAUA,EAAImB,GAASE,GAGfrB,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAKjBC,EAAyB,aADzBA,EAAyB,YADzBA,EAAyB,YADzBA,EAAyB,WAPzBA,EAAI,OAAUA,EAAImB,GAASC,GAOfpB,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAEC,EAKnB,SAAStB,GAAa+B,GAErB,IAAIK,EAAIL,EACPsD,EAAWtD,EACZ,IAEMK,EAAEf,EAAIgE,EAAShE,GAAOe,EAAEf,IAAMgE,EAAShE,GAAKe,EAAEd,EAAI+D,EAAS/D,KAAM+D,EAAWjD,GACjFA,EAAIA,EAAEX,WAEGW,IAAML,GAEhB,OAAOsD,EAKR,SAASpF,GAAiBqF,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAErD,OAASH,EAAKE,IAASL,EAAKM,IAASP,EAAKM,IAASD,EAAKE,IAAQ,IAC5DP,EAAKM,IAASH,EAAKI,IAASL,EAAKI,IAASL,EAAKM,IAAQ,IACvDL,EAAKI,IAASD,EAAKE,IAASH,EAAKE,IAASH,EAAKI,IAAQ,EAK5D,SAAS3F,GAAiB4C,EAAGC,GAE5B,OAAOD,EAAErB,KAAKL,IAAM2B,EAAE3B,GAAK0B,EAAEtB,KAAKJ,IAAM2B,EAAE3B,IAsD3C,SAA4B0B,EAAGC,GAE9B,IAAIX,EAAIU,EACR,EAAG,CAEF,GAAKV,EAAEhB,IAAM0B,EAAE1B,GAAKgB,EAAEX,KAAKL,IAAM0B,EAAE1B,GAAKgB,EAAEhB,IAAM2B,EAAE3B,GAAKgB,EAAEX,KAAKL,IAAM2B,EAAE3B,GACpEf,GAAY+B,EAAGA,EAAEX,KAAMqB,EAAGC,GAAM,OAAO,EACzCX,EAAIA,EAAEX,WAEGW,IAAMU,GAEhB,OAAO,EAjE0CtC,CAAmBsC,EAAGC,KACpEtC,GAAeqC,EAAGC,IAAOtC,GAAesC,EAAGD,IA8E/C,SAAuBA,EAAGC,GAEzB,IAAIX,EAAIU,EACP4D,GAAS,EACV,MAAMd,GAAO9C,EAAEzB,EAAI0B,EAAE1B,GAAM,EAC1BwE,GAAO/C,EAAExB,EAAIyB,EAAEzB,GAAM,EACtB,GAEUc,EAAEd,EAAIuE,GAAWzD,EAAEX,KAAKH,EAAIuE,GAAUzD,EAAEX,KAAKH,IAAMc,EAAEd,GAC1DsE,GAAOxD,EAAEX,KAAKJ,EAAIe,EAAEf,IAAQwE,EAAKzD,EAAEd,IAAQc,EAAEX,KAAKH,EAAIc,EAAEd,GAAMc,EAAEf,IACnEqF,GAAWA,GACZtE,EAAIA,EAAEX,WAEGW,IAAMU,GAEhB,OAAO4D,EA7F8ChG,CAAcoC,EAAGC,KACnE5C,GAAM2C,EAAEtB,KAAMsB,EAAGC,EAAEvB,OAAUrB,GAAM2C,EAAGC,EAAEvB,KAAMuB,KAChD3C,GAAQ0C,EAAGC,IAAO5C,GAAM2C,EAAEtB,KAAMsB,EAAGA,EAAErB,MAAS,GAAKtB,GAAM4C,EAAEvB,KAAMuB,EAAGA,EAAEtB,MAAS,GAKjF,SAAStB,GAAMiC,EAAG0C,EAAGgB,GAEpB,OAAShB,EAAExD,EAAIc,EAAEd,IAAQwE,EAAEzE,EAAIyD,EAAEzD,IAAQyD,EAAEzD,EAAIe,EAAEf,IAAQyE,EAAExE,EAAIwD,EAAExD,GAKlE,SAASlB,GAAQ2F,EAAIC,GAEpB,OAAOD,EAAG1E,IAAM2E,EAAG3E,GAAK0E,EAAGzE,IAAM0E,EAAG1E,EAKrC,SAASjB,GAAY0F,EAAIE,EAAID,EAAIE,GAEhC,MAAMC,EAAK5F,GAAMJ,GAAM4F,EAAIE,EAAID,IACzBI,EAAK7F,GAAMJ,GAAM4F,EAAIE,EAAIC,IACzBG,EAAK9F,GAAMJ,GAAM6F,EAAIE,EAAIH,IACzBO,EAAK/F,GAAMJ,GAAM6F,EAAIE,EAAID,IAE/B,OAAKE,IAAOC,GAAMC,IAAOC,MAEb,IAAPH,IAAY7F,GAAWyF,EAAIC,EAAIC,QACxB,IAAPG,IAAY9F,GAAWyF,EAAIG,EAAID,QACxB,IAAPI,IAAY/F,GAAW0F,EAAID,EAAIG,OACxB,IAAPI,IAAYhG,GAAW0F,EAAIC,EAAIC,OAOrC,SAAS5F,GAAW8B,EAAG0C,EAAGgB,GAEzB,OAAOhB,EAAEzD,GAAKuD,KAAK2B,IAAKnE,EAAEf,EAAGyE,EAAEzE,IAAOyD,EAAEzD,GAAKuD,KAAK4B,IAAKpE,EAAEf,EAAGyE,EAAEzE,IAAOyD,EAAExD,GAAKsD,KAAK2B,IAAKnE,EAAEd,EAAGwE,EAAExE,IAAOwD,EAAExD,GAAKsD,KAAK4B,IAAKpE,EAAEd,EAAGwE,EAAExE,GAI7H,SAASf,GAAMkG,GAEd,OAAOA,EAAM,EAAI,EAAIA,EAAM,GAAM,EAAI,EAqBtC,SAAShG,GAAeqC,EAAGC,GAE1B,OAAO5C,GAAM2C,EAAEtB,KAAMsB,EAAGA,EAAErB,MAAS,EAClCtB,GAAM2C,EAAGC,EAAGD,EAAErB,OAAU,GAAKtB,GAAM2C,EAAGA,EAAEtB,KAAMuB,IAAO,EACrD5C,GAAM2C,EAAGC,EAAGD,EAAEtB,MAAS,GAAKrB,GAAM2C,EAAGA,EAAErB,KAAMsB,GAAM,EA0BrD,SAASpC,GAAcmC,EAAGC,GAEzB,MAAM4D,EAAK,IAAI3H,GAAM8D,EAAE1B,EAAG0B,EAAEzB,EAAGyB,EAAExB,GAChCsF,EAAK,IAAI5H,GAAM+D,EAAE3B,EAAG2B,EAAE1B,EAAG0B,EAAEzB,GAC3BuF,EAAK/D,EAAErB,KACPqF,EAAK/D,EAAEvB,KAcR,OAZAsB,EAAErB,KAAOsB,EACTA,EAAEvB,KAAOsB,EAET6D,EAAGlF,KAAOoF,EACVA,EAAGrF,KAAOmF,EAEVC,EAAGnF,KAAOkF,EACVA,EAAGnF,KAAOoF,EAEVE,EAAGrF,KAAOmF,EACVA,EAAGpF,KAAOsF,EAEHF,EAKR,SAAShG,GAAYQ,EAAGC,EAAGC,EAAGa,GAE7B,MAAMC,EAAI,IAAIpD,GAAMoC,EAAGC,EAAGC,GAgB1B,OAdOa,GAONC,EAAEX,KAAOU,EAAKV,KACdW,EAAEZ,KAAOW,EACTA,EAAKV,KAAKD,KAAOY,EACjBD,EAAKV,KAAOW,IARZA,EAAEZ,KAAOY,EACTA,EAAEX,KAAOW,GAWHA,EAIR,SAASvB,GAAYuB,GAEpBA,EAAEX,KAAKD,KAAOY,EAAEZ,KAChBY,EAAEZ,KAAKC,KAAOW,EAAEX,KAEXW,EAAET,QAAQS,EAAET,MAAMC,MAAQQ,EAAER,OAC5BQ,EAAER,QAAQQ,EAAER,MAAMD,MAAQS,EAAET,OAIlC,SAAS3C,GAAMoC,EAAGC,EAAGC,GAGpBC,KAAKH,EAAIA,EAGTG,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAGTC,KAAKC,KAAO,KACZD,KAAKE,KAAO,KAGZF,KAAKG,EAAI,KAGTH,KAAKI,MAAQ,KACbJ,KAAKK,MAAQ,KAGbL,KAAKM,SAAU,EAkBhB,MAAM88H,GAAa,CAIlBx+H,KAAM,SAAWy+H,GAEhB,MAAMr7H,EAAIq7H,EAAQ/6H,OAClB,IAAIf,EAAI,EAER,IAAM,IAAIV,EAAImB,EAAI,EAAGuB,EAAI,EAAGA,EAAIvB,EAAGnB,EAAI0C,IAEtChC,GAAK87H,EAASx8H,GAAIf,EAAIu9H,EAAS95H,GAAIxD,EAAIs9H,EAAS95H,GAAIzD,EAAIu9H,EAASx8H,GAAId,EAItE,MAAW,GAAJwB,GAIR+7H,YAAa,SAAWC,GAEvB,OAAOH,GAAWx+H,KAAM2+H,GAAQ,GAIjCC,iBAAkB,SAAWH,EAASI,GAErC,MAAM3xH,EAAW,GACX7J,EAAc,GACdgtE,EAAQ,GAEdyuD,GAAiBL,GACjBM,GAAY7xH,EAAUuxH,GAItB,IAAIO,EAAYP,EAAQ/6H,OAExBm7H,EAAMjgH,QAASkgH,IAEf,IAAM,IAAI79H,EAAI,EAAGA,EAAI49H,EAAMn7H,OAAQzC,IAElCoC,EAAYX,KAAMs8H,GAClBA,GAAaH,EAAO59H,GAAIyC,OACxBq7H,GAAY7xH,EAAU2xH,EAAO59H,IAM9B,MAAMmB,EAAYm8H,GAAoBrxH,EAAU7J,GAIhD,IAAM,IAAIpC,EAAI,EAAGA,EAAImB,EAAUsB,OAAQzC,GAAK,EAE3CovE,EAAM3tE,KAAMN,EAAUo4C,MAAOv5C,EAAGA,EAAI,IAIrC,OAAOovE,IAMT,SAASyuD,GAAiBlwE,GAEzB,MAAMn/C,EAAIm/C,EAAOlrD,OAEZ+L,EAAI,GAAKm/C,EAAQn/C,EAAI,GAAIxP,OAAQ2uD,EAAQ,KAE7CA,EAAO66C,MAMT,SAASs1B,GAAY7xH,EAAUuxH,GAE9B,IAAM,IAAIx9H,EAAI,EAAGA,EAAIw9H,EAAQ/6H,OAAQzC,IAEpCiM,EAASxK,KAAM+7H,EAASx9H,GAAIC,GAC5BgM,EAASxK,KAAM+7H,EAASx9H,GAAIE,GA4B9B,MAAM89H,WAA8BntD,GAEnCxqE,YAAa63D,EAAQ7yD,GAEpBwF,QAEA1Q,KAAK8/B,KAAO,wBAEZ9/B,KAAKy+D,WAAa,CACjBV,OAAQA,EACR7yD,QAASA,GAGV6yD,EAASnoD,MAAMC,QAASkoD,GAAWA,EAAS,CAAEA,GAE9C,MAAMgZ,EAAQ/2E,KAER89H,EAAgB,GAChBjV,EAAU,GAEhB,IAAM,IAAIhpH,EAAI,EAAGwO,EAAI0vD,EAAOz7D,OAAQzC,EAAIwO,EAAGxO,IAAO,CAGjDk+H,EADchgE,EAAQl+D,IAcvB,SAASk+H,EAAUr/D,GAElB,MAAMs/D,EAAc,GAIdC,OAA0C9kH,IAA1BjO,EAAQ+yH,cAA8B/yH,EAAQ+yH,cAAgB,GAC9EC,OAA0B/kH,IAAlBjO,EAAQgzH,MAAsBhzH,EAAQgzH,MAAQ,EAC5D,IAAIvnD,OAA0Bx9D,IAAlBjO,EAAQyrE,MAAsBzrE,EAAQyrE,MAAQ,IAEtDwnD,OAAwChlH,IAAzBjO,EAAQizH,cAA6BjzH,EAAQizH,aAC5DC,OAA4CjlH,IAA3BjO,EAAQkzH,eAA+BlzH,EAAQkzH,eAAiB,EACjFC,OAAkCllH,IAAtBjO,EAAQmzH,UAA0BnzH,EAAQmzH,UAAYD,EAAiB,EACnFE,OAAsCnlH,IAAxBjO,EAAQozH,YAA4BpzH,EAAQozH,YAAc,EACxEC,OAA0CplH,IAA1BjO,EAAQqzH,cAA8BrzH,EAAQqzH,cAAgB,EAElF,MAAMC,EAActzH,EAAQszH,YAEtBC,OAAgCtlH,IAAxBjO,EAAQwzH,YAA4BxzH,EAAQwzH,YAAcC,QAIhDxlH,IAAnBjO,EAAQ+D,SAEZtC,QAAQoK,KAAM,kEACd4/D,EAAQzrE,EAAQ+D,QAMjB,IAAI2vH,EACAC,EAAYC,EAAUtnG,EAAQunG,EADlBC,GAAgB,EAG3BR,IAEJI,EAAaJ,EAAYS,gBAAiBf,GAE1Cc,GAAgB,EAChBb,GAAe,EAMfU,EAAaL,EAAYU,oBAAqBhB,GAAO,GAIrDY,EAAW,IAAIn0E,GACfnzB,EAAS,IAAImzB,GACbo0E,EAAY,IAAIp0E,IAMVwzE,IAENI,EAAgB,EAChBH,EAAiB,EACjBC,EAAY,EACZC,EAAc,GAMf,MAAMa,EAAczgE,EAAM0gE,cAAenB,GAEzC,IAAInyH,EAAWqzH,EAAYzgE,MAC3B,MAAM++D,EAAQ0B,EAAY1B,MAI1B,IAFkBL,GAAWE,YAAaxxH,GAE3B,CAEdA,EAAWA,EAAS0G,UAIpB,IAAM,IAAIiI,EAAI,EAAG4kH,EAAK5B,EAAMn7H,OAAQmY,EAAI4kH,EAAI5kH,IAAO,CAElD,MAAM6kH,EAAQ7B,EAAOhjH,GAEhB2iH,GAAWE,YAAagC,KAE5B7B,EAAOhjH,GAAM6kH,EAAM9sH,YAStB,MAAMy8D,EAAQmuD,GAAWI,iBAAkB1xH,EAAU2xH,GAI/CJ,EAAUvxH,EAEhB,IAAM,IAAI2O,EAAI,EAAG4kH,EAAK5B,EAAMn7H,OAAQmY,EAAI4kH,EAAI5kH,IAAO,CAElD,MAAM6kH,EAAQ7B,EAAOhjH,GAErB3O,EAAWA,EAAS2P,OAAQ6jH,GAK7B,SAASC,EAAUr8F,EAAIs8F,EAAK5/G,GAI3B,OAFO4/G,GAAM7yH,QAAQu1B,MAAO,6CAErBs9F,EAAI71H,QAAQiB,eAAgBgV,GAAO3W,IAAKi6B,GAIhD,MAAMu8F,EAAO3zH,EAASxJ,OAAQo9H,EAAOzwD,EAAM3sE,OAM3C,SAASq9H,EAAaC,EAAMC,EAAQC,GASnC,IAAIC,EAAWC,EAAWC,EAK1B,MAAMC,EAAWN,EAAK9/H,EAAI+/H,EAAO//H,EAChCqgI,EAAWP,EAAK7/H,EAAI8/H,EAAO9/H,EACtBqgI,EAAWN,EAAOhgI,EAAI8/H,EAAK9/H,EAChCugI,EAAWP,EAAO//H,EAAI6/H,EAAK7/H,EAEtBugI,EAAiBJ,EAAWA,EAAWC,EAAWA,EAGlDI,EAAeL,EAAWG,EAAWF,EAAWC,EAEtD,GAAK/8H,KAAKC,IAAKi9H,GAAe3sH,OAAOnK,QAAU,CAM9C,MAAM+2H,EAAan9H,KAAKyG,KAAMw2H,GACxBG,EAAap9H,KAAKyG,KAAMs2H,EAAWA,EAAWC,EAAWA,GAIzDK,EAAkBb,EAAO//H,EAAIqgI,EAAWK,EACxCG,EAAkBd,EAAO9/H,EAAImgI,EAAWM,EAOxCI,IALkBd,EAAOhgI,EAAIugI,EAAWI,EAKfC,GAAkBL,GAJzBP,EAAO//H,EAAIqgI,EAAWK,EAK1BE,GAAkBP,IACnCF,EAAWG,EAAWF,EAAWC,GAIpCL,EAAcW,EAAgBR,EAAWU,EAAKhB,EAAK9/H,EACnDkgI,EAAcW,EAAgBR,EAAWS,EAAKhB,EAAK7/H,EAInD,MAAM8gI,EAAkBd,EAAYA,EAAYC,EAAYA,EAC5D,GAAKa,GAAiB,EAErB,OAAO,IAAI7kF,GAAS+jF,EAAWC,GAI/BC,EAAY58H,KAAKyG,KAAM+2H,EAAgB,OAIlC,CAIN,IAAIC,GAAe,EAEdZ,EAAWtsH,OAAOnK,QAEjB22H,EAAWxsH,OAAOnK,UAEtBq3H,GAAe,GAMXZ,GAAatsH,OAAOnK,QAEnB22H,GAAaxsH,OAAOnK,UAExBq3H,GAAe,GAMXz9H,KAAKrE,KAAMmhI,KAAe98H,KAAKrE,KAAMqhI,KAEzCS,GAAe,GAQbA,GAGJf,GAAcI,EACdH,EAAYE,EACZD,EAAY58H,KAAKyG,KAAMw2H,KAKvBP,EAAYG,EACZF,EAAYG,EACZF,EAAY58H,KAAKyG,KAAMw2H,EAAe,IAMxC,OAAO,IAAItkF,GAAS+jF,EAAYE,EAAWD,EAAYC,GAKxD,MAAMc,EAAmB,GAEzB,IAAM,IAAIlhI,EAAI,EAAG6tD,EAAK2vE,EAAQ/6H,OAAQmD,EAAIioD,EAAK,EAAGzwC,EAAIpd,EAAI,EAAGA,EAAI6tD,EAAI7tD,IAAM4F,IAAMwX,IAE3ExX,IAAMioD,IAAKjoD,EAAI,GACfwX,IAAMywC,IAAKzwC,EAAI,GAKpB8jH,EAAkBlhI,GAAM8/H,EAAatC,EAASx9H,GAAKw9H,EAAS53H,GAAK43H,EAASpgH,IAI3E,MAAM+jH,EAAiB,GACvB,IAAIC,EAAkBC,EAAoBH,EAAiBtlH,SAE3D,IAAM,IAAIhB,EAAI,EAAG4kH,EAAK5B,EAAMn7H,OAAQmY,EAAI4kH,EAAI5kH,IAAO,CAElD,MAAM6kH,EAAQ7B,EAAOhjH,GAErBwmH,EAAmB,GAEnB,IAAM,IAAIphI,EAAI,EAAG6tD,EAAK4xE,EAAMh9H,OAAQmD,EAAIioD,EAAK,EAAGzwC,EAAIpd,EAAI,EAAGA,EAAI6tD,EAAI7tD,IAAM4F,IAAMwX,IAEzExX,IAAMioD,IAAKjoD,EAAI,GACfwX,IAAMywC,IAAKzwC,EAAI,GAGpBgkH,EAAkBphI,GAAM8/H,EAAaL,EAAOz/H,GAAKy/H,EAAO75H,GAAK65H,EAAOriH,IAIrE+jH,EAAe1/H,KAAM2/H,GACrBC,EAAoBA,EAAkBzlH,OAAQwlH,GAO/C,IAAM,IAAIz/H,EAAI,EAAGA,EAAI+8H,EAAe/8H,IAAO,CAI1C,MAAM8L,EAAI9L,EAAI+8H,EACRp+H,EAAIi+H,EAAiB/6H,KAAKqH,IAAK4C,EAAIjK,KAAK6G,GAAK,GAC7Ci3H,EAAK9C,EAAYh7H,KAAKsH,IAAK2C,EAAIjK,KAAK6G,GAAK,GAAMo0H,EAIrD,IAAM,IAAIz+H,EAAI,EAAG6tD,EAAK2vE,EAAQ/6H,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEpD,MAAMgK,EAAO01H,EAAUlC,EAASx9H,GAAKkhI,EAAkBlhI,GAAKshI,GAE5D9wH,EAAGxG,EAAK/J,EAAG+J,EAAK9J,GAAKI,GAMtB,IAAM,IAAIsa,EAAI,EAAG4kH,EAAK5B,EAAMn7H,OAAQmY,EAAI4kH,EAAI5kH,IAAO,CAElD,MAAM6kH,EAAQ7B,EAAOhjH,GACrBwmH,EAAmBD,EAAgBvmH,GAEnC,IAAM,IAAI5a,EAAI,EAAG6tD,EAAK4xE,EAAMh9H,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAElD,MAAMgK,EAAO01H,EAAUD,EAAOz/H,GAAKohI,EAAkBphI,GAAKshI,GAE1D9wH,EAAGxG,EAAK/J,EAAG+J,EAAK9J,GAAKI,KAQxB,MAAMghI,EAAK9C,EAAYC,EAIvB,IAAM,IAAIz+H,EAAI,EAAGA,EAAI4/H,EAAM5/H,IAAO,CAEjC,MAAMgK,EAAOs0H,EAAeoB,EAAUzzH,EAAUjM,GAAKqhI,EAAmBrhI,GAAKshI,GAAOr1H,EAAUjM,GAEvFm/H,GAQNxnG,EAAO1U,KAAM+7G,EAAW1wD,QAAS,IAAMvjE,eAAgBf,EAAK/J,GAC5Dg/H,EAASh8G,KAAM+7G,EAAWuC,UAAW,IAAMx2H,eAAgBf,EAAK9J,GAEhEg/H,EAAUj8G,KAAM87G,EAAY,IAAM31H,IAAKuuB,GAASvuB,IAAK61H,GAErDzuH,EAAG0uH,EAAUj/H,EAAGi/H,EAAUh/H,EAAGg/H,EAAU5+H,IAXvCkQ,EAAGxG,EAAK/J,EAAG+J,EAAK9J,EAAG,GAoBrB,IAAM,IAAIosB,EAAI,EAAGA,GAAK+xG,EAAO/xG,IAE5B,IAAM,IAAItsB,EAAI,EAAGA,EAAI4/H,EAAM5/H,IAAO,CAEjC,MAAMgK,EAAOs0H,EAAeoB,EAAUzzH,EAAUjM,GAAKqhI,EAAmBrhI,GAAKshI,GAAOr1H,EAAUjM,GAEvFm/H,GAQNxnG,EAAO1U,KAAM+7G,EAAW1wD,QAAShiD,IAAMvhB,eAAgBf,EAAK/J,GAC5Dg/H,EAASh8G,KAAM+7G,EAAWuC,UAAWj1G,IAAMvhB,eAAgBf,EAAK9J,GAEhEg/H,EAAUj8G,KAAM87G,EAAYzyG,IAAMljB,IAAKuuB,GAASvuB,IAAK61H,GAErDzuH,EAAG0uH,EAAUj/H,EAAGi/H,EAAUh/H,EAAGg/H,EAAU5+H,IAXvCkQ,EAAGxG,EAAK/J,EAAG+J,EAAK9J,EAAG42E,EAAQunD,EAAQ/xG,GAuBtC,IAAM,IAAI3qB,EAAI+8H,EAAgB,EAAG/8H,GAAK,EAAGA,IAAO,CAE/C,MAAM8L,EAAI9L,EAAI+8H,EACRp+H,EAAIi+H,EAAiB/6H,KAAKqH,IAAK4C,EAAIjK,KAAK6G,GAAK,GAC7Ci3H,EAAK9C,EAAYh7H,KAAKsH,IAAK2C,EAAIjK,KAAK6G,GAAK,GAAMo0H,EAIrD,IAAM,IAAIz+H,EAAI,EAAG6tD,EAAK2vE,EAAQ/6H,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEpD,MAAMgK,EAAO01H,EAAUlC,EAASx9H,GAAKkhI,EAAkBlhI,GAAKshI,GAC5D9wH,EAAGxG,EAAK/J,EAAG+J,EAAK9J,EAAG42E,EAAQx2E,GAM5B,IAAM,IAAIsa,EAAI,EAAG4kH,EAAK5B,EAAMn7H,OAAQmY,EAAI4kH,EAAI5kH,IAAO,CAElD,MAAM6kH,EAAQ7B,EAAOhjH,GACrBwmH,EAAmBD,EAAgBvmH,GAEnC,IAAM,IAAI5a,EAAI,EAAG6tD,EAAK4xE,EAAMh9H,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAElD,MAAMgK,EAAO01H,EAAUD,EAAOz/H,GAAKohI,EAAkBphI,GAAKshI,GAEnDnC,EAMN3uH,EAAGxG,EAAK/J,EAAG+J,EAAK9J,EAAI6+H,EAAYV,EAAQ,GAAIn+H,EAAG6+H,EAAYV,EAAQ,GAAIp+H,EAAIK,GAJ3EkQ,EAAGxG,EAAK/J,EAAG+J,EAAK9J,EAAG42E,EAAQx2E,KA4G/B,SAASkhI,EAAWhE,EAASiE,GAE5B,IAAIzhI,EAAIw9H,EAAQ/6H,OAEhB,OAAWzC,GAAK,GAAI,CAEnB,MAAM4F,EAAI5F,EACV,IAAIod,EAAIpd,EAAI,EACPod,EAAI,IAAIA,EAAIogH,EAAQ/6H,OAAS,GAIlC,IAAM,IAAI6pB,EAAI,EAAGo1G,EAAOrD,EAAwB,EAAhBK,EAAqBpyG,EAAIo1G,EAAIp1G,IAAO,CAEnE,MAAMq1G,EAAQ/B,EAAOtzG,EACfs1G,EAAQhC,GAAStzG,EAAI,GAO3Bu1G,EALUJ,EAAc77H,EAAI+7H,EACvBF,EAAcrkH,EAAIukH,EAClBF,EAAcrkH,EAAIwkH,EAClBH,EAAc77H,EAAIg8H,KAU1B,SAASpxH,EAAGvQ,EAAGC,EAAGI,GAEjB69H,EAAY18H,KAAMxB,GAClBk+H,EAAY18H,KAAMvB,GAClBi+H,EAAY18H,KAAMnB,GAKnB,SAASwhI,EAAIpgI,EAAGC,EAAGC,GAElBwK,EAAW1K,GACX0K,EAAWzK,GACXyK,EAAWxK,GAEX,MAAMmgI,EAAY9D,EAAcx7H,OAAS,EACnC8rE,EAAMqwD,EAAMoD,cAAe9qD,EAAO+mD,EAAe8D,EAAY,EAAGA,EAAY,EAAGA,EAAY,GAEjGE,EAAO1zD,EAAK,IACZ0zD,EAAO1zD,EAAK,IACZ0zD,EAAO1zD,EAAK,IAIb,SAASszD,EAAIngI,EAAGC,EAAGC,EAAG4S,GAErBpI,EAAW1K,GACX0K,EAAWzK,GACXyK,EAAWoI,GAEXpI,EAAWzK,GACXyK,EAAWxK,GACXwK,EAAWoI,GAGX,MAAMutH,EAAY9D,EAAcx7H,OAAS,EACnC8rE,EAAMqwD,EAAMsD,mBAAoBhrD,EAAO+mD,EAAe8D,EAAY,EAAGA,EAAY,EAAGA,EAAY,EAAGA,EAAY,GAErHE,EAAO1zD,EAAK,IACZ0zD,EAAO1zD,EAAK,IACZ0zD,EAAO1zD,EAAK,IAEZ0zD,EAAO1zD,EAAK,IACZ0zD,EAAO1zD,EAAK,IACZ0zD,EAAO1zD,EAAK,IAIb,SAASniE,EAAWE,GAEnB2xH,EAAcx8H,KAAM08H,EAAqB,EAAR7xH,EAAY,IAC7C2xH,EAAcx8H,KAAM08H,EAAqB,EAAR7xH,EAAY,IAC7C2xH,EAAcx8H,KAAM08H,EAAqB,EAAR7xH,EAAY,IAK9C,SAAS21H,EAAOE,GAEfnZ,EAAQvnH,KAAM0gI,EAAQliI,GACtB+oH,EAAQvnH,KAAM0gI,EAAQjiI,IA3KvB,WAEC,MAAMS,EAAQs9H,EAAcx7H,OAAS,EAErC,GAAK67H,EAAe,CAEnB,IAAI8D,EAAQ,EACRjmH,EAASyjH,EAAOwC,EAIpB,IAAM,IAAIpiI,EAAI,EAAGA,EAAI6/H,EAAM7/H,IAAO,CAEjC,MAAMqvE,EAAOD,EAAOpvE,GACpB8hI,EAAIzyD,EAAM,GAAMlzD,EAAQkzD,EAAM,GAAMlzD,EAAQkzD,EAAM,GAAMlzD,GAIzDimH,EAAQ/D,EAAwB,EAAhBK,EAChBviH,EAASyjH,EAAOwC,EAIhB,IAAM,IAAIpiI,EAAI,EAAGA,EAAI6/H,EAAM7/H,IAAO,CAEjC,MAAMqvE,EAAOD,EAAOpvE,GACpB8hI,EAAIzyD,EAAM,GAAMlzD,EAAQkzD,EAAM,GAAMlzD,EAAQkzD,EAAM,GAAMlzD,QAInD,CAIN,IAAM,IAAInc,EAAI,EAAGA,EAAI6/H,EAAM7/H,IAAO,CAEjC,MAAMqvE,EAAOD,EAAOpvE,GACpB8hI,EAAIzyD,EAAM,GAAKA,EAAM,GAAKA,EAAM,IAMjC,IAAM,IAAIrvE,EAAI,EAAGA,EAAI6/H,EAAM7/H,IAAO,CAEjC,MAAMqvE,EAAOD,EAAOpvE,GACpB8hI,EAAIzyD,EAAM,GAAMuwD,EAAOvB,EAAOhvD,EAAM,GAAMuwD,EAAOvB,EAAOhvD,EAAM,GAAMuwD,EAAOvB,IAM7EnnD,EAAM3F,SAAU5wE,EAAOs9H,EAAcx7H,OAAS,EAAI9B,EAAO,GA7D1D0hI,GAmEA,WAEC,MAAM1hI,EAAQs9H,EAAcx7H,OAAS,EACrC,IAAIg/H,EAAc,EAClBD,EAAWhE,EAASiE,GACpBA,GAAejE,EAAQ/6H,OAEvB,IAAM,IAAImY,EAAI,EAAG4kH,EAAK5B,EAAMn7H,OAAQmY,EAAI4kH,EAAI5kH,IAAO,CAElD,MAAM6kH,EAAQ7B,EAAOhjH,GACrB4mH,EAAW/B,EAAOgC,GAGlBA,GAAehC,EAAMh9H,OAKtBy0E,EAAM3F,SAAU5wE,EAAOs9H,EAAcx7H,OAAS,EAAI9B,EAAO,GAjF1D2hI,GA7bDniI,KAAKue,aAAc,WAAY,IAAIsuD,GAAwBixD,EAAe,IAC1E99H,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBg8C,EAAS,IAE9D7oH,KAAKwyE,uBAknBNn9D,SAEC,MAAM9U,EAAOmwE,GAAe73B,UAAUxjC,OAAOgkC,KAAMr5C,MAKnD,OAgEF,SAAiB+9D,EAAQ7yD,EAAS3K,GAIjC,GAFAA,EAAKw9D,OAAS,GAETnoD,MAAMC,QAASkoD,GAEnB,IAAM,IAAIl+D,EAAI,EAAGwO,EAAI0vD,EAAOz7D,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAM6+D,EAAQX,EAAQl+D,GAEtBU,EAAKw9D,OAAOz8D,KAAMo9D,EAAM9b,WAMzBriD,EAAKw9D,OAAOz8D,KAAMy8D,EAAOnb,WAIGzpC,IAAxBjO,EAAQszH,cAA4Bj+H,EAAK2K,QAAQszH,YAActzH,EAAQszH,YAAYnpH,UAExF,OAAO9U,EAtFC8U,CAHQrV,KAAKy+D,WAAWV,OACf/9D,KAAKy+D,WAAWvzD,QAEA3K,IAMlC,MAAMo+H,GAAmB,CAExBkD,cAAe,SAAWrzE,EAAU1iD,EAAUs2H,EAAQC,EAAQC,GAE7D,MAAMC,EAAMz2H,EAAmB,EAATs2H,GAChBI,EAAM12H,EAAmB,EAATs2H,EAAa,GAC7BK,EAAM32H,EAAmB,EAATu2H,GAChBK,EAAM52H,EAAmB,EAATu2H,EAAa,GAC7BM,EAAM72H,EAAmB,EAATw2H,GAChBM,EAAM92H,EAAmB,EAATw2H,EAAa,GAEnC,MAAO,CACN,IAAItmF,GAASumF,EAAKC,GAClB,IAAIxmF,GAASymF,EAAKC,GAClB,IAAI1mF,GAAS2mF,EAAKC,KAKpBb,mBAAoB,SAAWvzE,EAAU1iD,EAAUs2H,EAAQC,EAAQC,EAAQO,GAE1E,MAAMN,EAAMz2H,EAAmB,EAATs2H,GAChBI,EAAM12H,EAAmB,EAATs2H,EAAa,GAC7BU,EAAMh3H,EAAmB,EAATs2H,EAAa,GAC7BK,EAAM32H,EAAmB,EAATu2H,GAChBK,EAAM52H,EAAmB,EAATu2H,EAAa,GAC7BU,EAAMj3H,EAAmB,EAATu2H,EAAa,GAC7BM,EAAM72H,EAAmB,EAATw2H,GAChBM,EAAM92H,EAAmB,EAATw2H,EAAa,GAC7BU,EAAMl3H,EAAmB,EAATw2H,EAAa,GAC7BW,EAAMn3H,EAAmB,EAAT+2H,GAChBK,EAAMp3H,EAAmB,EAAT+2H,EAAa,GAC7BM,EAAMr3H,EAAmB,EAAT+2H,EAAa,GAEnC,OAAKx/H,KAAKC,IAAKk/H,EAAME,GAAQ,IAErB,CACN,IAAI1mF,GAASumF,EAAK,EAAIO,GACtB,IAAI9mF,GAASymF,EAAK,EAAIM,GACtB,IAAI/mF,GAAS2mF,EAAK,EAAIK,GACtB,IAAIhnF,GAASinF,EAAK,EAAIE,IAKhB,CACN,IAAInnF,GAASwmF,EAAK,EAAIM,GACtB,IAAI9mF,GAAS0mF,EAAK,EAAIK,GACtB,IAAI/mF,GAAS4mF,EAAK,EAAII,GACtB,IAAIhnF,GAASknF,EAAK,EAAIC,MAyD1B,MAAMC,WAAwB5N,GAE7BtvH,YAAa63D,EAAQ7yD,GAEpBwF,QAEA1Q,KAAK8/B,KAAO,kBAEZ9/B,KAAKy+D,WAAa,CACjBV,OAAQA,EACR7yD,QAASA,GAGVlL,KAAKy1H,mBAAoB,IAAIoI,GAAuB9/D,EAAQ7yD,IAC5DlL,KAAKq3H,gBAINhiH,SAEC,MAAM9U,EAAOmQ,MAAM2E,SAKnB,OAMF,SAAmB0oD,EAAQ7yD,EAAS3K,GAInC,GAFAA,EAAKw9D,OAAS,GAETnoD,MAAMC,QAASkoD,GAEnB,IAAM,IAAIl+D,EAAI,EAAGwO,EAAI0vD,EAAOz7D,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAM6+D,EAAQX,EAAQl+D,GAEtBU,EAAKw9D,OAAOz8D,KAAMo9D,EAAM9b,WAMzBriD,EAAKw9D,OAAOz8D,KAAMy8D,EAAOnb,WAIGzpC,IAAxBjO,EAAQszH,cAA4Bj+H,EAAK2K,QAAQszH,YAActzH,EAAQszH,YAAYnpH,UAExF,OAAO9U,EA5BC8iI,CAHQrjI,KAAKy+D,WAAWV,OACf/9D,KAAKy+D,WAAWvzD,QAEE3K,IAgCpC,MAAM+iI,WAAkC7I,GAEvCv0H,YAAa+T,EAAS,EAAG0yG,EAAS,GAEjC,MAAMr/G,GAAM,EAAIjK,KAAKyG,KAAM,IAAQ,EAenC4G,MAbiB,EACd,EAAGpD,EAAG,EAAI,EAAGA,EAAG,GAAM,GAAKA,EAAG,EAAI,GAAKA,EAAG,EAC5C,GAAK,EAAGA,EAAI,EAAG,EAAGA,EAAG,GAAK,GAAKA,EAAI,EAAG,GAAKA,EAC3CA,EAAG,GAAK,EAAIA,EAAG,EAAG,GAAMA,EAAG,GAAK,GAAMA,EAAG,EAAG,GAG7B,CACf,EAAG,GAAI,EAAI,EAAG,EAAG,EAAI,EAAG,EAAG,EAAI,EAAG,EAAG,GAAK,EAAG,GAAI,GACjD,EAAG,EAAG,EAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAC/C,EAAG,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3C,EAAG,EAAG,EAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAGpB2M,EAAQ0yG,GAElC3sH,KAAK8/B,KAAO,4BAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR0yG,OAAQA,IAOX,MAAM4W,WAA4B/N,GAEjCtvH,YAAa+T,EAAQ0yG,GAEpBj8G,QAEA1Q,KAAK8/B,KAAO,sBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR0yG,OAAQA,GAGT3sH,KAAKy1H,mBAAoB,IAAI6N,GAA2BrpH,EAAQ0yG,IAChE3sH,KAAKq3H,iBAMP,MAAMmM,WAA4B9yD,GAEjCxqE,YAAasnD,EAAQ2rE,EAAW,GAAIsK,EAAW,EAAGC,EAAsB,EAAVrgI,KAAK6G,IAElEwG,QAEA1Q,KAAK8/B,KAAO,sBAEZ9/B,KAAKy+D,WAAa,CACjBjR,OAAQA,EACR2rE,SAAUA,EACVsK,SAAUA,EACVC,UAAWA,GAGZvK,EAAW91H,KAAK+pB,MAAO+rG,GAIvBuK,EAAYlqF,GAAUQ,MAAO0pF,EAAW,EAAa,EAAVrgI,KAAK6G,IAIhD,MAAMypE,EAAU,GACV7nE,EAAW,GACXsiE,EAAM,GAINu1D,EAAkB,EAAMxK,EACxBzyH,EAAS,IAAIikD,GACbjG,EAAK,IAAI1I,GAIf,IAAM,IAAIn8C,EAAI,EAAGA,GAAKs5H,EAAUt5H,IAAO,CAEtC,MAAM+4B,EAAM6qG,EAAW5jI,EAAI8jI,EAAkBD,EAEvC/4H,EAAMtH,KAAKsH,IAAKiuB,GAChBluB,EAAMrH,KAAKqH,IAAKkuB,GAEtB,IAAM,IAAInzB,EAAI,EAAGA,GAAO+nD,EAAOlrD,OAAS,EAAKmD,IAI5CiB,EAAO5G,EAAI0tD,EAAQ/nD,GAAI3F,EAAI6K,EAC3BjE,EAAO3G,EAAIytD,EAAQ/nD,GAAI1F,EACvB2G,EAAOvG,EAAIqtD,EAAQ/nD,GAAI3F,EAAI4K,EAE3BoB,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAI1CukD,EAAG5kD,EAAID,EAAIs5H,EACXz0E,EAAG3kD,EAAI0F,GAAM+nD,EAAOlrD,OAAS,GAE7B8rE,EAAI9sE,KAAMojD,EAAG5kD,EAAG4kD,EAAG3kD,GASrB,IAAM,IAAIF,EAAI,EAAGA,EAAIs5H,EAAUt5H,IAE9B,IAAM,IAAI4F,EAAI,EAAGA,EAAM+nD,EAAOlrD,OAAS,EAAKmD,IAAO,CAElD,MAAMunB,EAAOvnB,EAAI5F,EAAI2tD,EAAOlrD,OAEtBf,EAAIyrB,EACJxrB,EAAIwrB,EAAOwgC,EAAOlrD,OAClBb,EAAIurB,EAAOwgC,EAAOlrD,OAAS,EAC3B+R,EAAI2Y,EAAO,EAIjB2mD,EAAQryE,KAAMC,EAAGC,EAAG6S,GACpBs/D,EAAQryE,KAAME,EAAGC,EAAG4S,GAmBtB,GAXArU,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,IAI1DpuE,KAAKwyE,uBAKAkxD,IAAwB,EAAVrgI,KAAK6G,GAAS,CAEhC,MAAMikE,EAAUnuE,KAAK2wE,WAAWn5C,OAAO2hB,MACjCyqF,EAAK,IAAIj5E,GACTk5E,EAAK,IAAIl5E,GACT3oD,EAAI,IAAI2oD,GAIR39B,EAAOmsG,EAAW3rE,EAAOlrD,OAAS,EAExC,IAAM,IAAIzC,EAAI,EAAG4F,EAAI,EAAG5F,EAAI2tD,EAAOlrD,OAAQzC,IAAM4F,GAAK,EAIrDm+H,EAAG9jI,EAAIquE,EAAS1oE,EAAI,GACpBm+H,EAAG7jI,EAAIouE,EAAS1oE,EAAI,GACpBm+H,EAAGzjI,EAAIguE,EAAS1oE,EAAI,GAIpBo+H,EAAG/jI,EAAIquE,EAASnhD,EAAOvnB,EAAI,GAC3Bo+H,EAAG9jI,EAAIouE,EAASnhD,EAAOvnB,EAAI,GAC3Bo+H,EAAG1jI,EAAIguE,EAASnhD,EAAOvnB,EAAI,GAI3BzD,EAAEo6C,WAAYwnF,EAAIC,GAAK30H,YAIvBi/D,EAAS1oE,EAAI,GAAM0oE,EAASnhD,EAAOvnB,EAAI,GAAMzD,EAAElC,EAC/CquE,EAAS1oE,EAAI,GAAM0oE,EAASnhD,EAAOvnB,EAAI,GAAMzD,EAAEjC,EAC/CouE,EAAS1oE,EAAI,GAAM0oE,EAASnhD,EAAOvnB,EAAI,GAAMzD,EAAE7B,IAUnD,MAAM2jI,WAAsBtO,GAE3BtvH,YAAasnD,EAAQ2rE,EAAUsK,EAAUC,GAExChzH,QAEA1Q,KAAK8/B,KAAO,gBAEZ9/B,KAAKy+D,WAAa,CACjBjR,OAAQA,EACR2rE,SAAUA,EACVsK,SAAUA,EACVC,UAAWA,GAGZ1jI,KAAKy1H,mBAAoB,IAAI+N,GAAqBh2E,EAAQ2rE,EAAUsK,EAAUC,IAC9E1jI,KAAKq3H,iBAMP,MAAM0M,WAAiCtJ,GAEtCv0H,YAAa+T,EAAS,EAAG0yG,EAAS,GAajCj8G,MAXiB,CAChB,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,GAAK,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,GAAK,GAGd,CACf,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,GAGUuJ,EAAQ0yG,GAElC3sH,KAAK8/B,KAAO,2BAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR0yG,OAAQA,IAOX,MAAMqX,WAA2BxO,GAEhCtvH,YAAa+T,EAAQ0yG,GAEpBj8G,QAEA1Q,KAAK8/B,KAAO,qBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR0yG,OAAQA,GAGT3sH,KAAKy1H,mBAAoB,IAAIsO,GAA0B9pH,EAAQ0yG,IAC/D3sH,KAAKq3H,iBAWP,SAAS4M,GAA0BtnG,EAAMunG,EAAQC,GAEhDzzD,GAAer3B,KAAMr5C,MAErBA,KAAK8/B,KAAO,2BAEZ9/B,KAAKy+D,WAAa,CACjB9hC,KAAMA,EACNunG,OAAQA,EACRC,OAAQA,GAKT,MAAMxwD,EAAU,GACV7nE,EAAW,GACXqiE,EAAU,GACVC,EAAM,GAENg2D,EAAM,KAEN5sG,EAAS,IAAImzB,GAEbnwC,EAAK,IAAImwC,GAAWnmD,EAAK,IAAImmD,GAC7B05E,EAAK,IAAI15E,GAAW25E,EAAK,IAAI35E,GAE9BhuB,EAAKr6B,OAAS,GAElBqK,QAAQu1B,MAAO,oFAMhB,MAAMqiG,EAAaL,EAAS,EAE5B,IAAM,IAAIrkI,EAAI,EAAGA,GAAKskI,EAAQtkI,IAAO,CAEpC,MAAMwQ,EAAIxQ,EAAIskI,EAEd,IAAM,IAAI1+H,EAAI,EAAGA,GAAKy+H,EAAQz+H,IAAO,CAEpC,MAAM0O,EAAI1O,EAAIy+H,EAIdvnG,EAAMxoB,EAAG9D,EAAGmK,GACZ1O,EAASxK,KAAMkZ,EAAG1a,EAAG0a,EAAGza,EAAGya,EAAGra,GAMzBgU,EAAIiwH,GAAO,GAEfznG,EAAMxoB,EAAIiwH,EAAK/zH,EAAG7L,GAClB6/H,EAAG9nF,WAAY/hC,EAAIhW,KAInBm4B,EAAMxoB,EAAIiwH,EAAK/zH,EAAG7L,GAClB6/H,EAAG9nF,WAAY/3C,EAAIgW,IAIfnK,EAAI+zH,GAAO,GAEfznG,EAAMxoB,EAAG9D,EAAI+zH,EAAK5/H,GAClB8/H,EAAG/nF,WAAY/hC,EAAIhW,KAInBm4B,EAAMxoB,EAAG9D,EAAI+zH,EAAK5/H,GAClB8/H,EAAG/nF,WAAY/3C,EAAIgW,IAMpBgd,EAAOy0B,aAAco4E,EAAIC,GAAKp1H,YAC9Bi/D,EAAQ7sE,KAAMk2B,EAAO13B,EAAG03B,EAAOz3B,EAAGy3B,EAAOr3B,GAIzCiuE,EAAI9sE,KAAM6S,EAAG9D,IAQf,IAAM,IAAIxQ,EAAI,EAAGA,EAAIskI,EAAQtkI,IAE5B,IAAM,IAAI4F,EAAI,EAAGA,EAAIy+H,EAAQz+H,IAAO,CAEnC,MAAMlE,EAAI1B,EAAI0kI,EAAa9+H,EACrBjE,EAAI3B,EAAI0kI,EAAa9+H,EAAI,EACzBhE,GAAM5B,EAAI,GAAM0kI,EAAa9+H,EAAI,EACjC4O,GAAMxU,EAAI,GAAM0kI,EAAa9+H,EAInCkuE,EAAQryE,KAAMC,EAAGC,EAAG6S,GACpBs/D,EAAQryE,KAAME,EAAGC,EAAG4S,GAQtBrU,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,IAY3D,SAASo2D,GAAoB7nG,EAAMunG,EAAQC,GAE1C3O,GAASn8E,KAAMr5C,MAEfA,KAAK8/B,KAAO,qBAEZ9/B,KAAKy+D,WAAa,CACjB9hC,KAAMA,EACNunG,OAAQA,EACRC,OAAQA,GAGTnkI,KAAKy1H,mBAAoB,IAAIwO,GAA0BtnG,EAAMunG,EAAQC,IACrEnkI,KAAKq3H,gBArBN4M,GAAyBprF,UAAYr5C,OAAOkkD,OAAQgtB,GAAe73B,WACnEorF,GAAyBprF,UAAU3yC,YAAc+9H,GAwBjDO,GAAmB3rF,UAAYr5C,OAAOkkD,OAAQ8xE,GAAS38E,WACvD2rF,GAAmB3rF,UAAU3yC,YAAcs+H,GAE3C,MAAMC,WAAsBjP,GAE3BtvH,YAAaoI,EAAOC,EAAQqoE,EAAeC,GAE1CnmE,QAEA1Q,KAAK8/B,KAAO,gBAEZ9/B,KAAKy+D,WAAa,CACjBnwD,MAAOA,EACPC,OAAQA,EACRqoE,cAAeA,EACfC,eAAgBA,GAGjB72E,KAAKy1H,mBAAoB,IAAIt1C,GAAqB7xE,EAAOC,EAAQqoE,EAAeC,IAChF72E,KAAKq3H,iBAMP,MAAMqN,WAA2BlP,GAEhCtvH,YAAa4F,EAAU6nE,EAAS15D,EAAQ0yG,GAEvCj8G,QAEA1Q,KAAK8/B,KAAO,qBAEZ9/B,KAAKy+D,WAAa,CACjB3yD,SAAUA,EACV6nE,QAASA,EACT15D,OAAQA,EACR0yG,OAAQA,GAGT3sH,KAAKy1H,mBAAoB,IAAIgF,GAA0B3uH,EAAU6nE,EAAS15D,EAAQ0yG,IAClF3sH,KAAKq3H,iBAMP,MAAMsN,WAA2Bj0D,GAEhCxqE,YAAa0+H,EAAc,GAAKC,EAAc,EAAGC,EAAgB,EAAGC,EAAc,EAAG3L,EAAa,EAAGC,EAAwB,EAAVh2H,KAAK6G,IAEvHwG,QAEA1Q,KAAK8/B,KAAO,qBAEZ9/B,KAAKy+D,WAAa,CACjBmmE,YAAaA,EACbC,YAAaA,EACbC,cAAeA,EACfC,YAAaA,EACb3L,WAAYA,EACZC,YAAaA,GAGdyL,EAAgBzhI,KAAK2B,IAAK,EAAG8/H,GAK7B,MAAMnxD,EAAU,GACV7nE,EAAW,GACXqiE,EAAU,GACVC,EAAM,GAIZ,IAAIn0D,EAAS2qH,EACb,MAAMI,GAAiBH,EAAcD,IAZrCG,EAAc1hI,KAAK2B,IAAK,EAAG+/H,IAarBr+H,EAAS,IAAIikD,GACbjG,EAAK,IAAI1I,GAIf,IAAM,IAAIv2C,EAAI,EAAGA,GAAKs/H,EAAat/H,IAAO,CAEzC,IAAM,IAAI5F,EAAI,EAAGA,GAAKilI,EAAejlI,IAAO,CAI3C,MAAMy5H,EAAUF,EAAav5H,EAAIilI,EAAgBzL,EAIjD3yH,EAAO5G,EAAIma,EAAS5W,KAAKqH,IAAK4uH,GAC9B5yH,EAAO3G,EAAIka,EAAS5W,KAAKsH,IAAK2uH,GAE9BxtH,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAI1CguE,EAAQ7sE,KAAM,EAAG,EAAG,GAIpBojD,EAAG5kD,GAAM4G,EAAO5G,EAAI+kI,EAAc,GAAM,EACxCngF,EAAG3kD,GAAM2G,EAAO3G,EAAI8kI,EAAc,GAAM,EAExCz2D,EAAI9sE,KAAMojD,EAAG5kD,EAAG4kD,EAAG3kD,GAMpBka,GAAU+qH,EAMX,IAAM,IAAIv/H,EAAI,EAAGA,EAAIs/H,EAAat/H,IAAO,CAExC,MAAMw/H,EAAoBx/H,GAAMq/H,EAAgB,GAEhD,IAAM,IAAIjlI,EAAI,EAAGA,EAAIilI,EAAejlI,IAAO,CAE1C,MAAMy5H,EAAUz5H,EAAIolI,EAEd1jI,EAAI+3H,EACJ93H,EAAI83H,EAAUwL,EAAgB,EAC9BrjI,EAAI63H,EAAUwL,EAAgB,EAC9BzwH,EAAIilH,EAAU,EAIpB3lD,EAAQryE,KAAMC,EAAGC,EAAG6S,GACpBs/D,EAAQryE,KAAME,EAAGC,EAAG4S,IAQtBrU,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,KAM5D,MAAM82D,WAAqB1P,GAE1BtvH,YAAa0+H,EAAaC,EAAaC,EAAeC,EAAa3L,EAAYC,GAE9E3oH,QAEA1Q,KAAK8/B,KAAO,eAEZ9/B,KAAKy+D,WAAa,CACjBmmE,YAAaA,EACbC,YAAaA,EACbC,cAAeA,EACfC,YAAaA,EACb3L,WAAYA,EACZC,YAAaA,GAGdr5H,KAAKy1H,mBAAoB,IAAIkP,GAAoBC,EAAaC,EAAaC,EAAeC,EAAa3L,EAAYC,IACnHr5H,KAAKq3H,iBAMP,MAAM8N,WAA4Bz0D,GAEjCxqE,YAAa63D,EAAQkgE,EAAgB,IAEpCvtH,QACA1Q,KAAK8/B,KAAO,sBAEZ9/B,KAAKy+D,WAAa,CACjBV,OAAQA,EACRkgE,cAAeA,GAKhB,MAAMtqD,EAAU,GACV7nE,EAAW,GACXqiE,EAAU,GACVC,EAAM,GAIZ,IAAI6I,EAAa,EACbc,EAAa,EAIjB,IAAiC,IAA5BniE,MAAMC,QAASkoD,GAEnBggE,EAAUhgE,QAIV,IAAM,IAAIl+D,EAAI,EAAGA,EAAIk+D,EAAOz7D,OAAQzC,IAEnCk+H,EAAUhgE,EAAQl+D,IAElBG,KAAKoxE,SAAU6F,EAAYc,EAAYl4E,GAEvCo3E,GAAcc,EACdA,EAAa,EAgBf,SAASgmD,EAAUr/D,GAElB,MAAM0mE,EAAct5H,EAASxJ,OAAS,EAChCkrD,EAASkR,EAAM0gE,cAAenB,GAEpC,IAAIoH,EAAgB73E,EAAOkR,MAC3B,MAAM4mE,EAAa93E,EAAOiwE,OAIuB,IAA5CL,GAAWE,YAAa+H,KAE5BA,EAAgBA,EAAc7yH,WAI/B,IAAM,IAAI3S,EAAI,EAAGwO,EAAIi3H,EAAWhjI,OAAQzC,EAAIwO,EAAGxO,IAAO,CAErD,MAAM0lI,EAAYD,EAAYzlI,IAEe,IAAxCu9H,GAAWE,YAAaiI,KAE5BD,EAAYzlI,GAAM0lI,EAAU/yH,WAM9B,MAAMy8D,EAAQmuD,GAAWI,iBAAkB6H,EAAeC,GAI1D,IAAM,IAAIzlI,EAAI,EAAGwO,EAAIi3H,EAAWhjI,OAAQzC,EAAIwO,EAAGxO,IAAO,CAErD,MAAM0lI,EAAYD,EAAYzlI,GAC9BwlI,EAAgBA,EAAc5pH,OAAQ8pH,GAMvC,IAAM,IAAI1lI,EAAI,EAAGwO,EAAIg3H,EAAc/iI,OAAQzC,EAAIwO,EAAGxO,IAAO,CAExD,MAAM6G,EAAS2+H,EAAexlI,GAE9BiM,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG,GACnCouE,EAAQ7sE,KAAM,EAAG,EAAG,GACpB8sE,EAAI9sE,KAAMoF,EAAO5G,EAAG4G,EAAO3G,GAM5B,IAAM,IAAIF,EAAI,EAAGwO,EAAI4gE,EAAM3sE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEhD,MAAMqvE,EAAOD,EAAOpvE,GAEd0B,EAAI2tE,EAAM,GAAMk2D,EAChB5jI,EAAI0tE,EAAM,GAAMk2D,EAChB3jI,EAAIytE,EAAM,GAAMk2D,EAEtBzxD,EAAQryE,KAAMC,EAAGC,EAAGC,GACpBs2E,GAAc,GAtEhB/3E,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,IA2E3D/4D,SAEC,MAAM9U,EAAOmwE,GAAe73B,UAAUxjC,OAAOgkC,KAAMr5C,MAInD,OAMF,SAAmB+9D,EAAQx9D,GAI1B,GAFAA,EAAKw9D,OAAS,GAETnoD,MAAMC,QAASkoD,GAEnB,IAAM,IAAIl+D,EAAI,EAAGwO,EAAI0vD,EAAOz7D,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAM6+D,EAAQX,EAAQl+D,GAEtBU,EAAKw9D,OAAOz8D,KAAMo9D,EAAM9b,WAMzBriD,EAAKw9D,OAAOz8D,KAAMy8D,EAAOnb,MAI1B,OAAOriD,EA1BCilI,CAFQxlI,KAAKy+D,WAAWV,OAENx9D,IA8B3B,MAAMklI,WAAsBjQ,GAE3BtvH,YAAa63D,EAAQkgE,GAEpBvtH,QACA1Q,KAAK8/B,KAAO,gBAEkB,iBAAlBm+F,IAEXtxH,QAAQoK,KAAM,4DAEdknH,EAAgBA,EAAcA,eAI/Bj+H,KAAKy+D,WAAa,CACjBV,OAAQA,EACRkgE,cAAeA,GAGhBj+H,KAAKy1H,mBAAoB,IAAI0P,GAAqBpnE,EAAQkgE,IAC1Dj+H,KAAKq3H,gBAINhiH,SAEC,MAAM9U,EAAOi1H,GAAS38E,UAAUxjC,OAAOgkC,KAAMr5C,MAI7C,OAMF,SAAmB+9D,EAAQx9D,GAI1B,GAFAA,EAAKw9D,OAAS,GAETnoD,MAAMC,QAASkoD,GAEnB,IAAM,IAAIl+D,EAAI,EAAGwO,EAAI0vD,EAAOz7D,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAM6+D,EAAQX,EAAQl+D,GAEtBU,EAAKw9D,OAAOz8D,KAAMo9D,EAAM9b,WAMzBriD,EAAKw9D,OAAOz8D,KAAMy8D,EAAOnb,MAI1B,OAAOriD,EA1BCmlI,CAFQ1lI,KAAKy+D,WAAWV,OAENx9D,IA8B3B,MAAMolI,WAA6Bj1D,GAElCxqE,YAAa+T,EAAS,EAAG28D,EAAgB,EAAGC,EAAiB,EAAG4sD,EAAW,EAAGC,EAAsB,EAAVrgI,KAAK6G,GAAQkvH,EAAa,EAAGC,EAAch2H,KAAK6G,IAEzIwG,QACA1Q,KAAK8/B,KAAO,uBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR28D,cAAeA,EACfC,eAAgBA,EAChB4sD,SAAUA,EACVC,UAAWA,EACXtK,WAAYA,EACZC,YAAaA,GAGdziD,EAAgBvzE,KAAK2B,IAAK,EAAG3B,KAAK+pB,MAAOwpD,IACzCC,EAAiBxzE,KAAK2B,IAAK,EAAG3B,KAAK+pB,MAAOypD,IAE1C,MAAM+uD,EAAWviI,KAAK4B,IAAKm0H,EAAaC,EAAah2H,KAAK6G,IAE1D,IAAIiC,EAAQ,EACZ,MAAM+U,EAAO,GAEPxa,EAAS,IAAIikD,GACbnzB,EAAS,IAAImzB,GAIbgpB,EAAU,GACV7nE,EAAW,GACXqiE,EAAU,GACVC,EAAM,GAIZ,IAAM,IAAI9iB,EAAK,EAAGA,GAAMurB,EAAgBvrB,IAAQ,CAE/C,MAAMu6E,EAAc,GAEdx1H,EAAIi7C,EAAKurB,EAIf,IAAIivD,EAAU,EAEH,GAANx6E,GAAyB,GAAd8tE,EAEf0M,EAAU,GAAMlvD,EAELtrB,GAAMurB,GAAkB+uD,GAAYviI,KAAK6G,KAEpD47H,GAAY,GAAMlvD,GAInB,IAAM,IAAIvrB,EAAK,EAAGA,GAAMurB,EAAevrB,IAAQ,CAE9C,MAAMl3C,EAAIk3C,EAAKurB,EAIflwE,EAAO5G,GAAMma,EAAS5W,KAAKqH,IAAK+4H,EAAWtvH,EAAIuvH,GAAcrgI,KAAKsH,IAAKyuH,EAAa/oH,EAAIgpH,GACxF3yH,EAAO3G,EAAIka,EAAS5W,KAAKqH,IAAK0uH,EAAa/oH,EAAIgpH,GAC/C3yH,EAAOvG,EAAI8Z,EAAS5W,KAAKsH,IAAK84H,EAAWtvH,EAAIuvH,GAAcrgI,KAAKsH,IAAKyuH,EAAa/oH,EAAIgpH,GAEtFvtH,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAI1Cq3B,EAAO1U,KAAMpc,GAASwI,YACtBi/D,EAAQ7sE,KAAMk2B,EAAO13B,EAAG03B,EAAOz3B,EAAGy3B,EAAOr3B,GAIzCiuE,EAAI9sE,KAAM6S,EAAI2xH,EAAS,EAAIz1H,GAE3Bw1H,EAAYvkI,KAAM6K,KAInB+U,EAAK5f,KAAMukI,GAMZ,IAAM,IAAIv6E,EAAK,EAAGA,EAAKurB,EAAgBvrB,IAEtC,IAAM,IAAID,EAAK,EAAGA,EAAKurB,EAAevrB,IAAQ,CAE7C,MAAM9pD,EAAI2f,EAAMoqC,GAAMD,EAAK,GACrB7pD,EAAI0f,EAAMoqC,GAAMD,GAChB5pD,EAAIyf,EAAMoqC,EAAK,GAAKD,GACpBh3C,EAAI6M,EAAMoqC,EAAK,GAAKD,EAAK,IAEnB,IAAPC,GAAY8tE,EAAa,IAAIzlD,EAAQryE,KAAMC,EAAGC,EAAG6S,IACjDi3C,IAAOurB,EAAiB,GAAK+uD,EAAWviI,KAAK6G,KAAKypE,EAAQryE,KAAME,EAAGC,EAAG4S,GAQ7ErU,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,KAM5D,MAAM23D,WAAuBvQ,GAE5BtvH,YAAa+T,EAAQ28D,EAAeC,EAAgB4sD,EAAUC,EAAWtK,EAAYC,GAEpF3oH,QACA1Q,KAAK8/B,KAAO,iBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR28D,cAAeA,EACfC,eAAgBA,EAChB4sD,SAAUA,EACVC,UAAWA,EACXtK,WAAYA,EACZC,YAAaA,GAGdr5H,KAAKy1H,mBAAoB,IAAIkQ,GAAsB1rH,EAAQ28D,EAAeC,EAAgB4sD,EAAUC,EAAWtK,EAAYC,IAC3Hr5H,KAAKq3H,iBAMP,MAAM2O,WAAkCvL,GAEvCv0H,YAAa+T,EAAS,EAAG0yG,EAAS,GAUjCj8G,MARiB,CAChB,EAAG,EAAG,GAAM,GAAK,EAAG,GAAM,EAAG,GAAK,EAAI,GAAK,GAAK,GAGjC,CACf,EAAG,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGTuJ,EAAQ0yG,GAElC3sH,KAAK8/B,KAAO,4BAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR0yG,OAAQA,IAOX,MAAMsZ,WAA4BzQ,GAEjCtvH,YAAa+T,EAAQ0yG,GAEpBj8G,QACA1Q,KAAK8/B,KAAO,sBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACR0yG,OAAQA,GAGT3sH,KAAKy1H,mBAAoB,IAAIuQ,GAA2B/rH,EAAQ0yG,IAChE3sH,KAAKq3H,iBAuBP,MAAM6O,WAA2BrI,GAEhC33H,YAAa2b,EAAM48C,EAAa,IAE/B,MAAMz5C,EAAOy5C,EAAWz5C,KAExB,IAASA,IAAQA,EAAKmhH,OAGrB,OADAx5H,QAAQu1B,MAAO,wEACR,IAAIwuC,GAIZ,MAAM3S,EAAS/4C,EAAKohH,eAAgBvkH,EAAM48C,EAAW7+C,MAIrD6+C,EAAWkY,WAA8Bx9D,IAAtBslD,EAAWlwD,OAAuBkwD,EAAWlwD,OAAS,QAItC4K,IAA9BslD,EAAW2/D,iBAA+B3/D,EAAW2/D,eAAiB,SAC7CjlH,IAAzBslD,EAAW4/D,YAA0B5/D,EAAW4/D,UAAY,QAChCllH,IAA5BslD,EAAW0/D,eAA6B1/D,EAAW0/D,cAAe,GAEvEztH,MAAOqtD,EAAQU,GAEfz+D,KAAK8/B,KAAO,sBAuBd,MAAMumG,WAAqB7Q,GAE1BtvH,YAAa2b,EAAM48C,GAElB/tD,QACA1Q,KAAK8/B,KAAO,eAEZ9/B,KAAKy+D,WAAa,CACjB58C,KAAMA,EACN48C,WAAYA,GAGbz+D,KAAKy1H,mBAAoB,IAAIyQ,GAAoBrkH,EAAM48C,IACvDz+D,KAAKq3H,iBAMP,MAAMiP,WAA4B51D,GAEjCxqE,YAAa+T,EAAS,EAAGssH,EAAO,GAAK5M,EAAiB,EAAG6M,EAAkB,EAAG9hH,EAAgB,EAAVrhB,KAAK6G,IAExFwG,QACA1Q,KAAK8/B,KAAO,sBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACRssH,KAAMA,EACN5M,eAAgBA,EAChB6M,gBAAiBA,EACjB9hH,IAAKA,GAGNi1G,EAAiBt2H,KAAK+pB,MAAOusG,GAC7B6M,EAAkBnjI,KAAK+pB,MAAOo5G,GAI9B,MAAM7yD,EAAU,GACV7nE,EAAW,GACXqiE,EAAU,GACVC,EAAM,GAIN7jE,EAAS,IAAIogD,GACbjkD,EAAS,IAAIikD,GACbnzB,EAAS,IAAImzB,GAInB,IAAM,IAAIllD,EAAI,EAAGA,GAAKk0H,EAAgBl0H,IAErC,IAAM,IAAI5F,EAAI,EAAGA,GAAK2mI,EAAiB3mI,IAAO,CAE7C,MAAMsU,EAAItU,EAAI2mI,EAAkB9hH,EAC1BrU,EAAI5K,EAAIk0H,EAAiBt2H,KAAK6G,GAAK,EAIzCxD,EAAO5G,GAAMma,EAASssH,EAAOljI,KAAKqH,IAAK2F,IAAQhN,KAAKqH,IAAKyJ,GACzDzN,EAAO3G,GAAMka,EAASssH,EAAOljI,KAAKqH,IAAK2F,IAAQhN,KAAKsH,IAAKwJ,GACzDzN,EAAOvG,EAAIomI,EAAOljI,KAAKsH,IAAK0F,GAE5BvE,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAI1CoK,EAAOzK,EAAIma,EAAS5W,KAAKqH,IAAKyJ,GAC9B5J,EAAOxK,EAAIka,EAAS5W,KAAKsH,IAAKwJ,GAC9BqjB,EAAO+kB,WAAY71C,EAAQ6D,GAAS2E,YAEpCi/D,EAAQ7sE,KAAMk2B,EAAO13B,EAAG03B,EAAOz3B,EAAGy3B,EAAOr3B,GAIzCiuE,EAAI9sE,KAAMzB,EAAI2mI,GACdp4D,EAAI9sE,KAAMmE,EAAIk0H,GAQhB,IAAM,IAAIl0H,EAAI,EAAGA,GAAKk0H,EAAgBl0H,IAErC,IAAM,IAAI5F,EAAI,EAAGA,GAAK2mI,EAAiB3mI,IAAO,CAI7C,MAAM0B,GAAMilI,EAAkB,GAAM/gI,EAAI5F,EAAI,EACtC2B,GAAMglI,EAAkB,IAAQ/gI,EAAI,GAAM5F,EAAI,EAC9C4B,GAAM+kI,EAAkB,IAAQ/gI,EAAI,GAAM5F,EAC1CwU,GAAMmyH,EAAkB,GAAM/gI,EAAI5F,EAIxC8zE,EAAQryE,KAAMC,EAAGC,EAAG6S,GACpBs/D,EAAQryE,KAAME,EAAGC,EAAG4S,GAQtBrU,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,KAM5D,MAAMq4D,WAAsBjR,GAE3BtvH,YAAa+T,EAAQssH,EAAM5M,EAAgB6M,EAAiB9hH,GAE3DhU,QACA1Q,KAAK8/B,KAAO,gBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACRssH,KAAMA,EACN5M,eAAgBA,EAChB6M,gBAAiBA,EACjB9hH,IAAKA,GAGN1kB,KAAKy1H,mBAAoB,IAAI6Q,GAAqBrsH,EAAQssH,EAAM5M,EAAgB6M,EAAiB9hH,IACjG1kB,KAAKq3H,iBAMP,MAAMqP,WAAgCh2D,GAErCxqE,YAAa+T,EAAS,EAAGssH,EAAO,GAAKC,EAAkB,GAAI7M,EAAiB,EAAG94H,EAAI,EAAG0C,EAAI,GAEzFmN,QACA1Q,KAAK8/B,KAAO,0BAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACRssH,KAAMA,EACNC,gBAAiBA,EACjB7M,eAAgBA,EAChB94H,EAAGA,EACH0C,EAAGA,GAGJijI,EAAkBnjI,KAAK+pB,MAAOo5G,GAC9B7M,EAAiBt2H,KAAK+pB,MAAOusG,GAI7B,MAAMhmD,EAAU,GACV7nE,EAAW,GACXqiE,EAAU,GACVC,EAAM,GAIN1nE,EAAS,IAAIikD,GACbnzB,EAAS,IAAImzB,GAEbg8E,EAAK,IAAIh8E,GACTi8E,EAAK,IAAIj8E,GAET3gC,EAAI,IAAI2gC,GACRk8E,EAAI,IAAIl8E,GACRm8E,EAAI,IAAIn8E,GAId,IAAM,IAAI9qD,EAAI,EAAGA,GAAK2mI,IAAoB3mI,EAAI,CAI7C,MAAMsU,EAAItU,EAAI2mI,EAAkB3lI,EAAIwC,KAAK6G,GAAK,EAK9C68H,EAA0B5yH,EAAGtT,EAAG0C,EAAG0W,EAAQ0sH,GAC3CI,EAA0B5yH,EAAI,IAAMtT,EAAG0C,EAAG0W,EAAQ2sH,GAIlDC,EAAEtqF,WAAYqqF,EAAID,GAClBG,EAAE1qF,WAAYwqF,EAAID,GAClB38G,EAAEiiC,aAAc46E,EAAGC,GACnBA,EAAE76E,aAAcjiC,EAAG68G,GAInB78G,EAAE9a,YACF43H,EAAE53H,YAEF,IAAM,IAAIzJ,EAAI,EAAGA,GAAKk0H,IAAmBl0H,EAAI,CAK5C,MAAM4K,EAAI5K,EAAIk0H,EAAiBt2H,KAAK6G,GAAK,EACnC/F,GAAOoiI,EAAOljI,KAAKqH,IAAK2F,GACxBjM,EAAKmiI,EAAOljI,KAAKsH,IAAK0F,GAK5B3J,EAAO5G,EAAI6mI,EAAG7mI,GAAMqE,EAAK2iI,EAAEhnI,EAAIsE,EAAK4lB,EAAElqB,GACtC4G,EAAO3G,EAAI4mI,EAAG5mI,GAAMoE,EAAK2iI,EAAE/mI,EAAIqE,EAAK4lB,EAAEjqB,GACtC2G,EAAOvG,EAAIwmI,EAAGxmI,GAAMgE,EAAK2iI,EAAE3mI,EAAIiE,EAAK4lB,EAAE7pB,GAEtC2L,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAI1Cq3B,EAAO+kB,WAAY71C,EAAQigI,GAAKz3H,YAEhCi/D,EAAQ7sE,KAAMk2B,EAAO13B,EAAG03B,EAAOz3B,EAAGy3B,EAAOr3B,GAIzCiuE,EAAI9sE,KAAMzB,EAAI2mI,GACdp4D,EAAI9sE,KAAMmE,EAAIk0H,IAQhB,IAAM,IAAIl0H,EAAI,EAAGA,GAAK+gI,EAAiB/gI,IAEtC,IAAM,IAAI5F,EAAI,EAAGA,GAAK85H,EAAgB95H,IAAO,CAI5C,MAAM0B,GAAMo4H,EAAiB,IAAQl0H,EAAI,IAAQ5F,EAAI,GAC/C2B,GAAMm4H,EAAiB,GAAMl0H,GAAM5F,EAAI,GACvC4B,GAAMk4H,EAAiB,GAAMl0H,EAAI5F,EACjCwU,GAAMslH,EAAiB,IAAQl0H,EAAI,GAAM5F,EAI/C8zE,EAAQryE,KAAMC,EAAGC,EAAG6S,GACpBs/D,EAAQryE,KAAME,EAAGC,EAAG4S,GAetB,SAAS0yH,EAA0B5yH,EAAGtT,EAAG0C,EAAG0W,EAAQ0F,GAEnD,MAAMqnH,EAAK3jI,KAAKqH,IAAKyJ,GACf8yH,EAAK5jI,KAAKsH,IAAKwJ,GACf+yH,EAAU3jI,EAAI1C,EAAIsT,EAClB0tB,EAAKx+B,KAAKqH,IAAKw8H,GAErBvnH,EAAS7f,EAAIma,GAAW,EAAI4nB,GAAO,GAAMmlG,EACzCrnH,EAAS5f,EAAIka,GAAW,EAAI4nB,GAAOolG,EAAK,GACxCtnH,EAASxf,EAAI8Z,EAAS5W,KAAKsH,IAAKu8H,GAAY,GAhB7ClnI,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,KAqB5D,MAAM+4D,WAA0B3R,GAE/BtvH,YAAa+T,EAAQssH,EAAMC,EAAiB7M,EAAgB94H,EAAG0C,EAAG6jI,GAEjE12H,QACA1Q,KAAK8/B,KAAO,oBAEZ9/B,KAAKy+D,WAAa,CACjBxkD,OAAQA,EACRssH,KAAMA,EACNC,gBAAiBA,EACjB7M,eAAgBA,EAChB94H,EAAGA,EACH0C,EAAGA,QAGiB4V,IAAhBiuH,GAA4Bz6H,QAAQoK,KAAM,4FAE/C/W,KAAKy1H,mBAAoB,IAAIiR,GAAyBzsH,EAAQssH,EAAMC,EAAiB7M,EAAgB94H,EAAG0C,IACxGvD,KAAKq3H,iBAMP,MAAMgQ,WAA2B32D,GAEhCxqE,YAAaoR,EAAMkvH,EAAkB,GAAIvsH,EAAS,EAAG0/G,EAAiB,EAAG2N,GAAS,GAEjF52H,QACA1Q,KAAK8/B,KAAO,qBAEZ9/B,KAAKy+D,WAAa,CACjBnnD,KAAMA,EACNkvH,gBAAiBA,EACjBvsH,OAAQA,EACR0/G,eAAgBA,EAChB2N,OAAQA,GAGT,MAAMC,EAASjwH,EAAK4nH,oBAAqBsH,EAAiBc,GAI1DtnI,KAAKwnI,SAAWD,EAAOC,SACvBxnI,KAAKmuE,QAAUo5D,EAAOp5D,QACtBnuE,KAAKohI,UAAYmG,EAAOnG,UAIxB,MAAM16H,EAAS,IAAIikD,GACbnzB,EAAS,IAAImzB,GACbjG,EAAK,IAAI1I,GACf,IAAIyrF,EAAI,IAAI98E,GAIZ,MAAM7+C,EAAW,GACXqiE,EAAU,GACVC,EAAM,GACNuF,EAAU,GAyChB,SAAS+zD,EAAiB7nI,GAIzB4nI,EAAInwH,EAAKvE,WAAYlT,EAAI2mI,EAAiBiB,GAI1C,MAAMX,EAAIS,EAAOp5D,QAAStuE,GACpBmqB,EAAIu9G,EAAOnG,UAAWvhI,GAI5B,IAAM,IAAI4F,EAAI,EAAGA,GAAKk0H,EAAgBl0H,IAAO,CAE5C,MAAM4K,EAAI5K,EAAIk0H,EAAiBt2H,KAAK6G,GAAK,EAEnCS,EAAMtH,KAAKsH,IAAK0F,GAChB3F,GAAQrH,KAAKqH,IAAK2F,GAIxBmnB,EAAO13B,EAAM4K,EAAMo8H,EAAEhnI,EAAI6K,EAAMqf,EAAElqB,EACjC03B,EAAOz3B,EAAM2K,EAAMo8H,EAAE/mI,EAAI4K,EAAMqf,EAAEjqB,EACjCy3B,EAAOr3B,EAAMuK,EAAMo8H,EAAE3mI,EAAIwK,EAAMqf,EAAE7pB,EACjCq3B,EAAOtoB,YAEPi/D,EAAQ7sE,KAAMk2B,EAAO13B,EAAG03B,EAAOz3B,EAAGy3B,EAAOr3B,GAIzCuG,EAAO5G,EAAI2nI,EAAE3nI,EAAIma,EAASud,EAAO13B,EACjC4G,EAAO3G,EAAI0nI,EAAE1nI,EAAIka,EAASud,EAAOz3B,EACjC2G,EAAOvG,EAAIsnI,EAAEtnI,EAAI8Z,EAASud,EAAOr3B,EAEjC2L,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,KA7D5C,WAEC,IAAM,IAAIN,EAAI,EAAGA,EAAI2mI,EAAiB3mI,IAErC6nI,EAAiB7nI,GASlB6nI,GAA8B,IAAXJ,EAAqBd,EAAkB,GA4E3D,WAEC,IAAM,IAAI3mI,EAAI,EAAGA,GAAK2mI,EAAiB3mI,IAEtC,IAAM,IAAI4F,EAAI,EAAGA,GAAKk0H,EAAgBl0H,IAErCi/C,EAAG5kD,EAAID,EAAI2mI,EACX9hF,EAAG3kD,EAAI0F,EAAIk0H,EAEXvrD,EAAI9sE,KAAMojD,EAAG5kD,EAAG4kD,EAAG3kD,GAhFrB87H,GAiDD,WAEC,IAAM,IAAIp2H,EAAI,EAAGA,GAAK+gI,EAAiB/gI,IAEtC,IAAM,IAAI5F,EAAI,EAAGA,GAAK85H,EAAgB95H,IAAO,CAE5C,MAAM0B,GAAMo4H,EAAiB,IAAQl0H,EAAI,IAAQ5F,EAAI,GAC/C2B,GAAMm4H,EAAiB,GAAMl0H,GAAM5F,EAAI,GACvC4B,GAAMk4H,EAAiB,GAAMl0H,EAAI5F,EACjCwU,GAAMslH,EAAiB,IAAQl0H,EAAI,GAAM5F,EAI/C8zE,EAAQryE,KAAMC,EAAGC,EAAG6S,GACpBs/D,EAAQryE,KAAME,EAAGC,EAAG4S,IA3DtBszH,GAjCDC,GAIA5nI,KAAKixE,SAAU0C,GACf3zE,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACrE9L,KAAKue,aAAc,SAAU,IAAIsuD,GAAwBsB,EAAS,IAClEnuE,KAAKue,aAAc,KAAM,IAAIsuD,GAAwBuB,EAAK,IA+G3D/4D,SAEC,MAAM9U,EAAOmwE,GAAe73B,UAAUxjC,OAAOgkC,KAAMr5C,MAInD,OAFAO,EAAK+W,KAAOtX,KAAKy+D,WAAWnnD,KAAKjC,SAE1B9U,GAMT,MAAMsnI,WAAqBrS,GAE1BtvH,YAAaoR,EAAMkvH,EAAiBvsH,EAAQ0/G,EAAgB2N,EAAQQ,GAEnEp3H,QACA1Q,KAAK8/B,KAAO,eAEZ9/B,KAAKy+D,WAAa,CACjBnnD,KAAMA,EACNkvH,gBAAiBA,EACjBvsH,OAAQA,EACR0/G,eAAgBA,EAChB2N,OAAQA,QAGMnuH,IAAV2uH,GAAsBn7H,QAAQoK,KAAM,+CAEzC,MAAMgxH,EAAiB,IAAIV,GAAoB/vH,EAAMkvH,EAAiBvsH,EAAQ0/G,EAAgB2N,GAI9FtnI,KAAKwnI,SAAWO,EAAeP,SAC/BxnI,KAAKmuE,QAAU45D,EAAe55D,QAC9BnuE,KAAKohI,UAAY2G,EAAe3G,UAIhCphI,KAAKy1H,mBAAoBsS,GACzB/nI,KAAKq3H,iBAMP,MAAM2Q,WAA0Bt3D,GAE/BxqE,YAAasoD,GAEZ99C,QACA1Q,KAAK8/B,KAAO,oBAIZ,MAAMh0B,EAAW,GAIXm8H,EAAO,CAAE,EAAG,GAAKC,EAAQ,GACzBnrH,EAAO,CAAE,IAAK,IAAK,KAIzB,GAAKyxC,GAAYA,EAASojB,WAAa,CAItC,MAAM3C,EAAQzgB,EAASygB,MAEvB,IAAM,IAAIpvE,EAAI,EAAGwO,EAAI4gE,EAAM3sE,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEhD,MAAMqvE,EAAOD,EAAOpvE,GAEpB,IAAM,IAAI4F,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B,MAAM0iI,EAAQj5D,EAAMnyD,EAAMtX,IACpB2iI,EAAQl5D,EAAMnyD,GAAQtX,EAAI,GAAM,IACtCwiI,EAAM,GAAM5kI,KAAK4B,IAAKkjI,EAAOC,GAC7BH,EAAM,GAAM5kI,KAAK2B,IAAKmjI,EAAOC,GAE7B,MAAMjiI,EAAM8hI,EAAM,GAAM,IAAMA,EAAM,QAEd9uH,IAAjB+uH,EAAO/hI,KAEX+hI,EAAO/hI,GAAQ,CAAEinE,OAAQ66D,EAAM,GAAK56D,OAAQ46D,EAAM,MAUrD,IAAM,MAAM9hI,KAAO+hI,EAAQ,CAE1B,MAAM1kI,EAAI0kI,EAAO/hI,GAEjB,IAAIO,EAAS8nD,EAAS1iD,SAAUtI,EAAE4pE,QAClCthE,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAE1CuG,EAAS8nD,EAAS1iD,SAAUtI,EAAE6pE,QAC9BvhE,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,SAIrC,GAAKquD,GAAYA,EAASuiB,iBAAmB,CAEnD,MAAMrqE,EAAS,IAAIikD,GAEnB,GAAwB,OAAnB6D,EAASriD,MAAiB,CAI9B,MAAMwT,EAAW6uC,EAASmiB,WAAWhxD,SAC/Bg0D,EAAUnlB,EAASriD,MACzB,IAAImiE,EAAS9f,EAAS8f,OAEC,IAAlBA,EAAOhsE,SAEXgsE,EAAS,CAAE,CAAE9tE,MAAO,EAAG8sD,MAAOqmB,EAAQrmB,MAAO6X,cAAe,KAM7D,IAAM,IAAIr5B,EAAI,EAAGu8F,EAAK/5D,EAAOhsE,OAAQwpC,EAAIu8F,IAAOv8F,EAAI,CAEnD,MAAMkjC,EAAQV,EAAQxiC,GAEhBtrC,EAAQwuE,EAAMxuE,MAGpB,IAAM,IAAIX,EAAIW,EAAO6N,EAAM7N,EAFbwuE,EAAM1hB,MAEwBztD,EAAIwO,EAAGxO,GAAK,EAEvD,IAAM,IAAI4F,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B,MAAM0iI,EAAQx0D,EAAQ91B,KAAMh+C,EAAI4F,GAC1B2iI,EAAQz0D,EAAQ91B,KAAMh+C,GAAM4F,EAAI,GAAM,GAC5CwiI,EAAM,GAAM5kI,KAAK4B,IAAKkjI,EAAOC,GAC7BH,EAAM,GAAM5kI,KAAK2B,IAAKmjI,EAAOC,GAE7B,MAAMjiI,EAAM8hI,EAAM,GAAM,IAAMA,EAAM,QAEd9uH,IAAjB+uH,EAAO/hI,KAEX+hI,EAAO/hI,GAAQ,CAAEinE,OAAQ66D,EAAM,GAAK56D,OAAQ46D,EAAM,MAYtD,IAAM,MAAM9hI,KAAO+hI,EAAQ,CAE1B,MAAM1kI,EAAI0kI,EAAO/hI,GAEjBO,EAAOi3C,oBAAqBh+B,EAAUnc,EAAE4pE,QACxCthE,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAE1CuG,EAAOi3C,oBAAqBh+B,EAAUnc,EAAE6pE,QACxCvhE,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,QAIrC,CAIN,MAAMwf,EAAW6uC,EAASmiB,WAAWhxD,SAErC,IAAM,IAAI9f,EAAI,EAAGwO,EAAMsR,EAAS2tC,MAAQ,EAAKztD,EAAIwO,EAAGxO,IAEnD,IAAM,IAAI4F,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAK9B,MAAM2nE,EAAS,EAAIvtE,EAAI4F,EACvBiB,EAAOi3C,oBAAqBh+B,EAAUytD,GACtCthE,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,GAE1C,MAAMktE,EAAS,EAAIxtE,GAAQ4F,EAAI,GAAM,EACrCiB,EAAOi3C,oBAAqBh+B,EAAU0tD,GACtCvhE,EAASxK,KAAMoF,EAAO5G,EAAG4G,EAAO3G,EAAG2G,EAAOvG,KAY9CH,KAAKue,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,KAMvE,IAAIw8H,GAA0B9oI,OAAO+oI,OAAO,CAC3CC,UAAW,KACXvP,YAAaA,GACbviD,kBAAmBA,GACnB6iD,eAAgBA,GAChBL,qBAAsBA,GACtBqB,aAAcA,GACdC,mBAAoBA,GACpBF,iBAAkBA,GAClBd,uBAAwBA,GACxBuC,qBAAsBA,GACtBD,2BAA4BA,GAC5BM,cAAeA,GACfgH,gBAAiBA,GACjBvF,sBAAuBA,GACvB0F,oBAAqBA,GACrBD,0BAA2BA,GAC3BQ,cAAeA,GACfN,oBAAqBA,GACrBQ,mBAAoBA,GACpBD,yBAA0BA,GAC1BS,mBAAoBA,GACpBP,yBAA0BA,GAC1BQ,cAAeA,GACftkD,oBAAqBA,GACrBukD,mBAAoBA,GACpBjK,yBAA0BA,GAC1ByK,aAAcA,GACdP,mBAAoBA,GACpBc,cAAeA,GACfN,oBAAqBA,GACrBY,eAAgBA,GAChBJ,qBAAsBA,GACtBM,oBAAqBA,GACrBD,0BAA2BA,GAC3BK,aAAcA,GACdH,mBAAoBA,GACpBO,cAAeA,GACfH,oBAAqBA,GACrBa,kBAAmBA,GACnBT,wBAAyBA,GACzBmB,aAAcA,GACdR,mBAAoBA,GACpBW,kBAAmBA,KASpB,SAASnhC,GAAgBpoC,GAExB8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,iBAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO,GACxB7oC,KAAK6lE,aAAc,EAEnB7lE,KAAK6oE,UAAWpK,GAmBjB,SAASgqE,GAAmBhqE,GAE3Bia,GAAer/B,KAAMr5C,KAAMy+D,GAE3Bz+D,KAAK8/B,KAAO,oBA2Db,SAASymE,GAAsB9nC,GAE9B8G,GAASlsB,KAAMr5C,MAEfA,KAAK24E,QAAU,CAAE,SAAY,IAE7B34E,KAAK8/B,KAAO,uBAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO,UACxB7oC,KAAKopE,UAAY,EACjBppE,KAAKqpE,UAAY,EAEjBrpE,KAAKu5B,IAAM,KAEXv5B,KAAK6nE,SAAW,KAChB7nE,KAAK8nE,kBAAoB,EAEzB9nE,KAAK+nE,MAAQ,KACb/nE,KAAKgoE,eAAiB,EAEtBhoE,KAAKupE,SAAW,IAAI1gC,GAAO,GAC3B7oC,KAAKwpE,kBAAoB,EACzBxpE,KAAK4qE,YAAc,KAEnB5qE,KAAKkqE,QAAU,KACflqE,KAAKmqE,UAAY,EAEjBnqE,KAAKoqE,UAAY,KACjBpqE,KAAKqqE,cAAgBvzB,GACrB92C,KAAKsqE,YAAc,IAAItuB,GAAS,EAAG,GAEnCh8C,KAAKuqE,gBAAkB,KACvBvqE,KAAKwqE,kBAAoB,EACzBxqE,KAAKyqE,iBAAmB,EAExBzqE,KAAK0qE,aAAe,KAEpB1qE,KAAK2qE,aAAe,KAEpB3qE,KAAKkoE,SAAW,KAEhBloE,KAAKmoE,OAAS,KACdnoE,KAAK6qE,gBAAkB,EAEvB7qE,KAAKsoE,gBAAkB,IAEvBtoE,KAAKuoE,WAAY,EACjBvoE,KAAKwoE,mBAAqB,EAC1BxoE,KAAKyoE,iBAAmB,QACxBzoE,KAAK0oE,kBAAoB,QAEzB1oE,KAAK2oE,UAAW,EAChB3oE,KAAK4oE,cAAe,EACpB5oE,KAAKmrE,cAAe,EAEpBnrE,KAAK2jG,gBAAiB,EAEtB3jG,KAAK6oE,UAAWpK,GAuFjB,SAAS+nC,GAAsB/nC,GAE9B8nC,GAAqBltD,KAAMr5C,MAE3BA,KAAK24E,QAAU,CAEd,SAAY,GACZ,SAAY,IAIb34E,KAAK8/B,KAAO,uBAEZ9/B,KAAK2pE,UAAY,EACjB3pE,KAAK6pE,aAAe,KACpB7pE,KAAK4pE,mBAAqB,EAC1B5pE,KAAK8pE,sBAAwB,KAC7B9pE,KAAKgqE,qBAAuB,IAAIhuB,GAAS,EAAG,GAC5Ch8C,KAAK+pE,mBAAqB,KAE1B/pE,KAAKqoE,aAAe,GAEpB7oE,OAAOC,eAAgBO,KAAM,MAAO,CACnC4d,IAAK,WAEJ,OAAS,EAAI,GAAM5d,KAAKqoE,eAAmB,EAAI,GAAMroE,KAAKqoE,eAG3Dz/D,IAAK,SAAW8/H,GAEf1oI,KAAKqoE,aAAe7uB,GAAUQ,MAAO,KAAQ0uF,EAAM,IAAQA,EAAM,GAAK,EAAG,MAK3E1oI,KAAKspE,MAAQ,KAEbtpE,KAAK64F,aAAe,EACpB74F,KAAK84F,gBAAkB,KAEvB94F,KAAK6oE,UAAWpK,GA8FjB,SAAS4nC,GAAmB5nC,GAE3B8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,oBAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO,UACxB7oC,KAAKypE,SAAW,IAAI5gC,GAAO,SAC3B7oC,KAAK0pE,UAAY,GAEjB1pE,KAAKu5B,IAAM,KAEXv5B,KAAK6nE,SAAW,KAChB7nE,KAAK8nE,kBAAoB,EAEzB9nE,KAAK+nE,MAAQ,KACb/nE,KAAKgoE,eAAiB,EAEtBhoE,KAAKupE,SAAW,IAAI1gC,GAAO,GAC3B7oC,KAAKwpE,kBAAoB,EACzBxpE,KAAK4qE,YAAc,KAEnB5qE,KAAKkqE,QAAU,KACflqE,KAAKmqE,UAAY,EAEjBnqE,KAAKoqE,UAAY,KACjBpqE,KAAKqqE,cAAgBvzB,GACrB92C,KAAKsqE,YAAc,IAAItuB,GAAS,EAAG,GAEnCh8C,KAAKuqE,gBAAkB,KACvBvqE,KAAKwqE,kBAAoB,EACzBxqE,KAAKyqE,iBAAmB,EAExBzqE,KAAKioE,YAAc,KAEnBjoE,KAAKkoE,SAAW,KAEhBloE,KAAKmoE,OAAS,KACdnoE,KAAKooE,QAAU74B,EACfvvC,KAAKqoE,aAAe,EACpBroE,KAAKsoE,gBAAkB,IAEvBtoE,KAAKuoE,WAAY,EACjBvoE,KAAKwoE,mBAAqB,EAC1BxoE,KAAKyoE,iBAAmB,QACxBzoE,KAAK0oE,kBAAoB,QAEzB1oE,KAAK2oE,UAAW,EAChB3oE,KAAK4oE,cAAe,EACpB5oE,KAAKmrE,cAAe,EAEpBnrE,KAAK6oE,UAAWpK,GAqGjB,SAAS6nC,GAAkB7nC,GAE1B8G,GAASlsB,KAAMr5C,MAEfA,KAAK24E,QAAU,CAAE,KAAQ,IAEzB34E,KAAK8/B,KAAO,mBAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO,UAExB7oC,KAAKu5B,IAAM,KACXv5B,KAAK8qE,YAAc,KAEnB9qE,KAAK6nE,SAAW,KAChB7nE,KAAK8nE,kBAAoB,EAEzB9nE,KAAK+nE,MAAQ,KACb/nE,KAAKgoE,eAAiB,EAEtBhoE,KAAKupE,SAAW,IAAI1gC,GAAO,GAC3B7oC,KAAKwpE,kBAAoB,EACzBxpE,KAAK4qE,YAAc,KAEnB5qE,KAAKkqE,QAAU,KACflqE,KAAKmqE,UAAY,EAEjBnqE,KAAKoqE,UAAY,KACjBpqE,KAAKqqE,cAAgBvzB,GACrB92C,KAAKsqE,YAAc,IAAItuB,GAAS,EAAG,GAEnCh8C,KAAKuqE,gBAAkB,KACvBvqE,KAAKwqE,kBAAoB,EACzBxqE,KAAKyqE,iBAAmB,EAExBzqE,KAAKkoE,SAAW,KAEhBloE,KAAKuoE,WAAY,EACjBvoE,KAAKwoE,mBAAqB,EAC1BxoE,KAAKyoE,iBAAmB,QACxBzoE,KAAK0oE,kBAAoB,QAEzB1oE,KAAK2oE,UAAW,EAChB3oE,KAAK4oE,cAAe,EACpB5oE,KAAKmrE,cAAe,EAEpBnrE,KAAK6oE,UAAWpK,GA8EjB,SAAS0nC,GAAoB1nC,GAE5B8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,qBAEZ9/B,KAAKkqE,QAAU,KACflqE,KAAKmqE,UAAY,EAEjBnqE,KAAKoqE,UAAY,KACjBpqE,KAAKqqE,cAAgBvzB,GACrB92C,KAAKsqE,YAAc,IAAItuB,GAAS,EAAG,GAEnCh8C,KAAKuqE,gBAAkB,KACvBvqE,KAAKwqE,kBAAoB,EACzBxqE,KAAKyqE,iBAAmB,EAExBzqE,KAAKuoE,WAAY,EACjBvoE,KAAKwoE,mBAAqB,EAE1BxoE,KAAKwlE,KAAM,EAEXxlE,KAAK2oE,UAAW,EAChB3oE,KAAK4oE,cAAe,EACpB5oE,KAAKmrE,cAAe,EAEpBnrE,KAAK6oE,UAAWpK,GAsEjB,SAAS2nC,GAAqB3nC,GAE7B8G,GAASlsB,KAAMr5C,MAEfA,KAAK8/B,KAAO,sBAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO,UAExB7oC,KAAKu5B,IAAM,KAEXv5B,KAAK6nE,SAAW,KAChB7nE,KAAK8nE,kBAAoB,EAEzB9nE,KAAK+nE,MAAQ,KACb/nE,KAAKgoE,eAAiB,EAEtBhoE,KAAKupE,SAAW,IAAI1gC,GAAO,GAC3B7oC,KAAKwpE,kBAAoB,EACzBxpE,KAAK4qE,YAAc,KAEnB5qE,KAAKioE,YAAc,KAEnBjoE,KAAKkoE,SAAW,KAEhBloE,KAAKmoE,OAAS,KACdnoE,KAAKooE,QAAU74B,EACfvvC,KAAKqoE,aAAe,EACpBroE,KAAKsoE,gBAAkB,IAEvBtoE,KAAKuoE,WAAY,EACjBvoE,KAAKwoE,mBAAqB,EAC1BxoE,KAAKyoE,iBAAmB,QACxBzoE,KAAK0oE,kBAAoB,QAEzB1oE,KAAK2oE,UAAW,EAChB3oE,KAAK4oE,cAAe,EACpB5oE,KAAKmrE,cAAe,EAEpBnrE,KAAK6oE,UAAWpK,GA6EjB,SAASgoC,GAAoBhoC,GAE5B8G,GAASlsB,KAAMr5C,MAEfA,KAAK24E,QAAU,CAAE,OAAU,IAE3B34E,KAAK8/B,KAAO,qBAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO,UAExB7oC,KAAKiqE,OAAS,KAEdjqE,KAAKu5B,IAAM,KAEXv5B,KAAKkqE,QAAU,KACflqE,KAAKmqE,UAAY,EAEjBnqE,KAAKoqE,UAAY,KACjBpqE,KAAKqqE,cAAgBvzB,GACrB92C,KAAKsqE,YAAc,IAAItuB,GAAS,EAAG,GAEnCh8C,KAAKuqE,gBAAkB,KACvBvqE,KAAKwqE,kBAAoB,EACzBxqE,KAAKyqE,iBAAmB,EAExBzqE,KAAKkoE,SAAW,KAEhBloE,KAAK2oE,UAAW,EAChB3oE,KAAK4oE,cAAe,EACpB5oE,KAAKmrE,cAAe,EAEpBnrE,KAAK6oE,UAAWpK,GAuDjB,SAASkoC,GAAoBloC,GAE5BioC,GAAkBrtD,KAAMr5C,MAExBA,KAAK8/B,KAAO,qBAEZ9/B,KAAKqK,MAAQ,EACbrK,KAAKirE,SAAW,EAChBjrE,KAAKkrE,QAAU,EAEflrE,KAAK6oE,UAAWpK,GA16BjBooC,GAAehuD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACnDguD,GAAehuD,UAAU3yC,YAAc2gG,GAEvCA,GAAehuD,UAAUsqE,kBAAmB,EAE5Ctc,GAAehuD,UAAU/1B,KAAO,SAAW+gC,GAM1C,OAJA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OAEjBnd,MAYRyoI,GAAkB5vF,UAAYr5C,OAAOkkD,OAAQg1B,GAAe7/B,WAC5D4vF,GAAkB5vF,UAAU3yC,YAAcuiI,GAE1CA,GAAkB5vF,UAAUqqD,qBAAsB,EAiHlDqD,GAAqB1tD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACzD0tD,GAAqB1tD,UAAU3yC,YAAcqgG,GAE7CA,GAAqB1tD,UAAUuuD,wBAAyB,EAExDb,GAAqB1tD,UAAU/1B,KAAO,SAAW+gC,GAuDhD,OArDA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAK24E,QAAU,CAAE,SAAY,IAE7B34E,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OACxBnd,KAAKopE,UAAYvlB,EAAOulB,UACxBppE,KAAKqpE,UAAYxlB,EAAOwlB,UAExBrpE,KAAKu5B,IAAMsqB,EAAOtqB,IAElBv5B,KAAK6nE,SAAWhkB,EAAOgkB,SACvB7nE,KAAK8nE,kBAAoBjkB,EAAOikB,kBAEhC9nE,KAAK+nE,MAAQlkB,EAAOkkB,MACpB/nE,KAAKgoE,eAAiBnkB,EAAOmkB,eAE7BhoE,KAAKupE,SAASzmD,KAAM+gC,EAAO0lB,UAC3BvpE,KAAK4qE,YAAc/mB,EAAO+mB,YAC1B5qE,KAAKwpE,kBAAoB3lB,EAAO2lB,kBAEhCxpE,KAAKkqE,QAAUrmB,EAAOqmB,QACtBlqE,KAAKmqE,UAAYtmB,EAAOsmB,UAExBnqE,KAAKoqE,UAAYvmB,EAAOumB,UACxBpqE,KAAKqqE,cAAgBxmB,EAAOwmB,cAC5BrqE,KAAKsqE,YAAYxnD,KAAM+gC,EAAOymB,aAE9BtqE,KAAKuqE,gBAAkB1mB,EAAO0mB,gBAC9BvqE,KAAKwqE,kBAAoB3mB,EAAO2mB,kBAChCxqE,KAAKyqE,iBAAmB5mB,EAAO4mB,iBAE/BzqE,KAAK0qE,aAAe7mB,EAAO6mB,aAE3B1qE,KAAK2qE,aAAe9mB,EAAO8mB,aAE3B3qE,KAAKkoE,SAAWrkB,EAAOqkB,SAEvBloE,KAAKmoE,OAAStkB,EAAOskB,OACrBnoE,KAAK6qE,gBAAkBhnB,EAAOgnB,gBAE9B7qE,KAAKsoE,gBAAkBzkB,EAAOykB,gBAE9BtoE,KAAKuoE,UAAY1kB,EAAO0kB,UACxBvoE,KAAKwoE,mBAAqB3kB,EAAO2kB,mBACjCxoE,KAAKyoE,iBAAmB5kB,EAAO4kB,iBAC/BzoE,KAAK0oE,kBAAoB7kB,EAAO6kB,kBAEhC1oE,KAAK2oE,SAAW9kB,EAAO8kB,SACvB3oE,KAAK4oE,aAAe/kB,EAAO+kB,aAC3B5oE,KAAKmrE,aAAetnB,EAAOsnB,aAE3BnrE,KAAK2jG,eAAiB9/C,EAAO8/C,eAEtB3jG,MAmERwmG,GAAqB3tD,UAAYr5C,OAAOkkD,OAAQ6iD,GAAqB1tD,WACrE2tD,GAAqB3tD,UAAU3yC,YAAcsgG,GAE7CA,GAAqB3tD,UAAUspE,wBAAyB,EAExD3b,GAAqB3tD,UAAU/1B,KAAO,SAAW+gC,GAiChD,OA/BA0iD,GAAqB1tD,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEhD7jD,KAAK24E,QAAU,CAEd,SAAY,GACZ,SAAY,IAIb34E,KAAK2pE,UAAY9lB,EAAO8lB,UACxB3pE,KAAK6pE,aAAehmB,EAAOgmB,aAC3B7pE,KAAK4pE,mBAAqB/lB,EAAO+lB,mBACjC5pE,KAAK8pE,sBAAwBjmB,EAAOimB,sBACpC9pE,KAAK+pE,mBAAqBlmB,EAAOkmB,mBACjC/pE,KAAKgqE,qBAAqBlnD,KAAM+gC,EAAOmmB,sBAEvChqE,KAAKqoE,aAAexkB,EAAOwkB,aAEtBxkB,EAAOylB,MAEXtpE,KAAKspE,OAAUtpE,KAAKspE,OAAS,IAAIzgC,IAAU/lB,KAAM+gC,EAAOylB,OAIxDtpE,KAAKspE,MAAQ,KAIdtpE,KAAK64F,aAAeh1C,EAAOg1C,aAC3B74F,KAAK84F,gBAAkBj1C,EAAOi1C,gBAEvB94F,MA2GRqmG,GAAkBxtD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACtDwtD,GAAkBxtD,UAAU3yC,YAAcmgG,GAE1CA,GAAkBxtD,UAAUopE,qBAAsB,EAElD5b,GAAkBxtD,UAAU/1B,KAAO,SAAW+gC,GAiD7C,OA/CA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OACxBnd,KAAKypE,SAAS3mD,KAAM+gC,EAAO4lB,UAC3BzpE,KAAK0pE,UAAY7lB,EAAO6lB,UAExB1pE,KAAKu5B,IAAMsqB,EAAOtqB,IAElBv5B,KAAK6nE,SAAWhkB,EAAOgkB,SACvB7nE,KAAK8nE,kBAAoBjkB,EAAOikB,kBAEhC9nE,KAAK+nE,MAAQlkB,EAAOkkB,MACpB/nE,KAAKgoE,eAAiBnkB,EAAOmkB,eAE7BhoE,KAAKupE,SAASzmD,KAAM+gC,EAAO0lB,UAC3BvpE,KAAK4qE,YAAc/mB,EAAO+mB,YAC1B5qE,KAAKwpE,kBAAoB3lB,EAAO2lB,kBAEhCxpE,KAAKkqE,QAAUrmB,EAAOqmB,QACtBlqE,KAAKmqE,UAAYtmB,EAAOsmB,UAExBnqE,KAAKoqE,UAAYvmB,EAAOumB,UACxBpqE,KAAKqqE,cAAgBxmB,EAAOwmB,cAC5BrqE,KAAKsqE,YAAYxnD,KAAM+gC,EAAOymB,aAE9BtqE,KAAKuqE,gBAAkB1mB,EAAO0mB,gBAC9BvqE,KAAKwqE,kBAAoB3mB,EAAO2mB,kBAChCxqE,KAAKyqE,iBAAmB5mB,EAAO4mB,iBAE/BzqE,KAAKioE,YAAcpkB,EAAOokB,YAE1BjoE,KAAKkoE,SAAWrkB,EAAOqkB,SAEvBloE,KAAKmoE,OAAStkB,EAAOskB,OACrBnoE,KAAKooE,QAAUvkB,EAAOukB,QACtBpoE,KAAKqoE,aAAexkB,EAAOwkB,aAC3BroE,KAAKsoE,gBAAkBzkB,EAAOykB,gBAE9BtoE,KAAKuoE,UAAY1kB,EAAO0kB,UACxBvoE,KAAKwoE,mBAAqB3kB,EAAO2kB,mBACjCxoE,KAAKyoE,iBAAmB5kB,EAAO4kB,iBAC/BzoE,KAAK0oE,kBAAoB7kB,EAAO6kB,kBAEhC1oE,KAAK2oE,SAAW9kB,EAAO8kB,SACvB3oE,KAAK4oE,aAAe/kB,EAAO+kB,aAC3B5oE,KAAKmrE,aAAetnB,EAAOsnB,aAEpBnrE,MA4FRsmG,GAAiBztD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACrDytD,GAAiBztD,UAAU3yC,YAAcogG,GAEzCA,GAAiBztD,UAAUkpE,oBAAqB,EAEhDzb,GAAiBztD,UAAU/1B,KAAO,SAAW+gC,GAyC5C,OAvCA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OAExBnd,KAAKu5B,IAAMsqB,EAAOtqB,IAClBv5B,KAAK8qE,YAAcjnB,EAAOinB,YAE1B9qE,KAAK6nE,SAAWhkB,EAAOgkB,SACvB7nE,KAAK8nE,kBAAoBjkB,EAAOikB,kBAEhC9nE,KAAK+nE,MAAQlkB,EAAOkkB,MACpB/nE,KAAKgoE,eAAiBnkB,EAAOmkB,eAE7BhoE,KAAKupE,SAASzmD,KAAM+gC,EAAO0lB,UAC3BvpE,KAAK4qE,YAAc/mB,EAAO+mB,YAC1B5qE,KAAKwpE,kBAAoB3lB,EAAO2lB,kBAEhCxpE,KAAKkqE,QAAUrmB,EAAOqmB,QACtBlqE,KAAKmqE,UAAYtmB,EAAOsmB,UAExBnqE,KAAKoqE,UAAYvmB,EAAOumB,UACxBpqE,KAAKqqE,cAAgBxmB,EAAOwmB,cAC5BrqE,KAAKsqE,YAAYxnD,KAAM+gC,EAAOymB,aAE9BtqE,KAAKuqE,gBAAkB1mB,EAAO0mB,gBAC9BvqE,KAAKwqE,kBAAoB3mB,EAAO2mB,kBAChCxqE,KAAKyqE,iBAAmB5mB,EAAO4mB,iBAE/BzqE,KAAKkoE,SAAWrkB,EAAOqkB,SAEvBloE,KAAKuoE,UAAY1kB,EAAO0kB,UACxBvoE,KAAKwoE,mBAAqB3kB,EAAO2kB,mBACjCxoE,KAAKyoE,iBAAmB5kB,EAAO4kB,iBAC/BzoE,KAAK0oE,kBAAoB7kB,EAAO6kB,kBAEhC1oE,KAAK2oE,SAAW9kB,EAAO8kB,SACvB3oE,KAAK4oE,aAAe/kB,EAAO+kB,aAC3B5oE,KAAKmrE,aAAetnB,EAAOsnB,aAEpBnrE,MA0DRmmG,GAAmBttD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACvDstD,GAAmBttD,UAAU3yC,YAAcigG,GAE3CA,GAAmBttD,UAAU4pE,sBAAuB,EAEpDtc,GAAmBttD,UAAU/1B,KAAO,SAAW+gC,GAsB9C,OApBA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKkqE,QAAUrmB,EAAOqmB,QACtBlqE,KAAKmqE,UAAYtmB,EAAOsmB,UAExBnqE,KAAKoqE,UAAYvmB,EAAOumB,UACxBpqE,KAAKqqE,cAAgBxmB,EAAOwmB,cAC5BrqE,KAAKsqE,YAAYxnD,KAAM+gC,EAAOymB,aAE9BtqE,KAAKuqE,gBAAkB1mB,EAAO0mB,gBAC9BvqE,KAAKwqE,kBAAoB3mB,EAAO2mB,kBAChCxqE,KAAKyqE,iBAAmB5mB,EAAO4mB,iBAE/BzqE,KAAKuoE,UAAY1kB,EAAO0kB,UACxBvoE,KAAKwoE,mBAAqB3kB,EAAO2kB,mBAEjCxoE,KAAK2oE,SAAW9kB,EAAO8kB,SACvB3oE,KAAK4oE,aAAe/kB,EAAO+kB,aAC3B5oE,KAAKmrE,aAAetnB,EAAOsnB,aAEpBnrE,MAiFRomG,GAAoBvtD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACxDutD,GAAoBvtD,UAAU3yC,YAAckgG,GAE5CA,GAAoBvtD,UAAUgpE,uBAAwB,EAEtDzb,GAAoBvtD,UAAU/1B,KAAO,SAAW+gC,GAoC/C,OAlCA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OAExBnd,KAAKu5B,IAAMsqB,EAAOtqB,IAElBv5B,KAAK6nE,SAAWhkB,EAAOgkB,SACvB7nE,KAAK8nE,kBAAoBjkB,EAAOikB,kBAEhC9nE,KAAK+nE,MAAQlkB,EAAOkkB,MACpB/nE,KAAKgoE,eAAiBnkB,EAAOmkB,eAE7BhoE,KAAKupE,SAASzmD,KAAM+gC,EAAO0lB,UAC3BvpE,KAAK4qE,YAAc/mB,EAAO+mB,YAC1B5qE,KAAKwpE,kBAAoB3lB,EAAO2lB,kBAEhCxpE,KAAKioE,YAAcpkB,EAAOokB,YAE1BjoE,KAAKkoE,SAAWrkB,EAAOqkB,SAEvBloE,KAAKmoE,OAAStkB,EAAOskB,OACrBnoE,KAAKooE,QAAUvkB,EAAOukB,QACtBpoE,KAAKqoE,aAAexkB,EAAOwkB,aAC3BroE,KAAKsoE,gBAAkBzkB,EAAOykB,gBAE9BtoE,KAAKuoE,UAAY1kB,EAAO0kB,UACxBvoE,KAAKwoE,mBAAqB3kB,EAAO2kB,mBACjCxoE,KAAKyoE,iBAAmB5kB,EAAO4kB,iBAC/BzoE,KAAK0oE,kBAAoB7kB,EAAO6kB,kBAEhC1oE,KAAK2oE,SAAW9kB,EAAO8kB,SACvB3oE,KAAK4oE,aAAe/kB,EAAO+kB,aAC3B5oE,KAAKmrE,aAAetnB,EAAOsnB,aAEpBnrE,MAmERymG,GAAmB5tD,UAAYr5C,OAAOkkD,OAAQ6hB,GAAS1sB,WACvD4tD,GAAmB5tD,UAAU3yC,YAAcugG,GAE3CA,GAAmB5tD,UAAUwpE,sBAAuB,EAEpD5b,GAAmB5tD,UAAU/1B,KAAO,SAAW+gC,GA6B9C,OA3BA0hB,GAAS1sB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAK24E,QAAU,CAAE,OAAU,IAE3B34E,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OAExBnd,KAAKiqE,OAASpmB,EAAOomB,OAErBjqE,KAAKu5B,IAAMsqB,EAAOtqB,IAElBv5B,KAAKkqE,QAAUrmB,EAAOqmB,QACtBlqE,KAAKmqE,UAAYtmB,EAAOsmB,UAExBnqE,KAAKoqE,UAAYvmB,EAAOumB,UACxBpqE,KAAKqqE,cAAgBxmB,EAAOwmB,cAC5BrqE,KAAKsqE,YAAYxnD,KAAM+gC,EAAOymB,aAE9BtqE,KAAKuqE,gBAAkB1mB,EAAO0mB,gBAC9BvqE,KAAKwqE,kBAAoB3mB,EAAO2mB,kBAChCxqE,KAAKyqE,iBAAmB5mB,EAAO4mB,iBAE/BzqE,KAAKkoE,SAAWrkB,EAAOqkB,SAEvBloE,KAAK2oE,SAAW9kB,EAAO8kB,SACvB3oE,KAAK4oE,aAAe/kB,EAAO+kB,aAC3B5oE,KAAKmrE,aAAetnB,EAAOsnB,aAEpBnrE,MA+BR2mG,GAAmB9tD,UAAYr5C,OAAOkkD,OAAQgjD,GAAkB7tD,WAChE8tD,GAAmB9tD,UAAU3yC,YAAcygG,GAE3CA,GAAmB9tD,UAAUgqE,sBAAuB,EAEpDlc,GAAmB9tD,UAAU/1B,KAAO,SAAW+gC,GAQ9C,OANA6iD,GAAkB7tD,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAE7C7jD,KAAKqK,MAAQw5C,EAAOx5C,MACpBrK,KAAKirE,SAAWpnB,EAAOonB,SACvBjrE,KAAKkrE,QAAUrnB,EAAOqnB,QAEflrE,MAIR,IAAI2oI,GAAyBnpI,OAAO+oI,OAAO,CAC1CC,UAAW,KACX3hC,eAAgBA,GAChBC,eAAgBA,GAChB2hC,kBAAmBA,GACnB/vD,eAAgBA,GAChBkuB,eAAgBA,GAChBJ,qBAAsBA,GACtBD,qBAAsBA,GACtBF,kBAAmBA,GACnBC,iBAAkBA,GAClBH,mBAAoBA,GACpBC,oBAAqBA,GACrBH,kBAAmBA,GACnBC,qBAAsBA,GACtBt+B,kBAAmBA,GACnB6+B,mBAAoBA,GACpBE,mBAAoBA,GACpBD,kBAAmBA,GACnBnhC,SAAUA,KAGX,MAAMqjE,GAAiB,CAGtBC,WAAY,SAAW1vF,EAAO2vF,EAAMC,GAEnC,OAAKH,GAAeI,aAAc7vF,GAI1B,IAAIA,EAAMjzC,YAAaizC,EAAM8mC,SAAU6oD,OAAa3vH,IAAP4vH,EAAmBA,EAAK5vF,EAAM72C,SAI5E62C,EAAMC,MAAO0vF,EAAMC,IAK3BE,aAAc,SAAW9vF,EAAOrZ,EAAMopG,GAErC,OAAO/vF,IACJ+vF,GAAc/vF,EAAMjzC,cAAgB45B,EAAcqZ,EAEd,iBAA3BrZ,EAAKigD,kBAET,IAAIjgD,EAAMqZ,GAIXvjC,MAAMijC,UAAUO,MAAMC,KAAMF,IAIpC6vF,aAAc,SAAWh7E,GAExB,OAAOm7E,YAAYC,OAAQp7E,MACtBA,aAAkBq7E,WAKxBC,iBAAkB,SAAWC,GAQ5B,MAAMvnI,EAAIunI,EAAMjnI,OACV0Q,EAAS,IAAI4C,MAAO5T,GAC1B,IAAM,IAAInC,EAAI,EAAGA,IAAMmC,IAAMnC,EAAImT,EAAQnT,GAAMA,EAI/C,OAFAmT,EAAOzQ,MAVP,SAAsB1C,EAAG4F,GAExB,OAAO8jI,EAAO1pI,GAAM0pI,EAAO9jI,MAUrBuN,GAKRw2H,YAAa,SAAWrqE,EAAQ6wB,EAAQtnD,GAEvC,MAAM+gG,EAAUtqE,EAAO78D,OACjB0Q,EAAS,IAAImsD,EAAOj5D,YAAaujI,GAEvC,IAAM,IAAI5pI,EAAI,EAAG0nD,EAAY,EAAGA,IAAckiF,IAAY5pI,EAAI,CAE7D,MAAM6pI,EAAYhhG,EAAO7oC,GAAMmwF,EAE/B,IAAM,IAAIvqF,EAAI,EAAGA,IAAMuqF,IAAWvqF,EAEjCuN,EAAQu0C,KAAiB4X,EAAQuqE,EAAYjkI,GAM/C,OAAOuN,GAKR22H,YAAa,SAAWC,EAAUL,EAAOpqE,EAAQ0qE,GAEhD,IAAIhqI,EAAI,EAAGsG,EAAMyjI,EAAU,GAE3B,UAAgBzwH,IAARhT,QAAkDgT,IAA7BhT,EAAK0jI,IAEjC1jI,EAAMyjI,EAAU/pI,KAIjB,QAAasZ,IAARhT,EAAoB,OAEzB,IAAIxG,EAAQwG,EAAK0jI,GACjB,QAAe1wH,IAAVxZ,EAEL,GAAKiW,MAAMC,QAASlW,GAEnB,GAECA,EAAQwG,EAAK0jI,QAEE1wH,IAAVxZ,IAEJ4pI,EAAMjoI,KAAM6E,EAAI24E,MAChB3f,EAAO79D,KAAKgxB,MAAO6sC,EAAQx/D,IAI5BwG,EAAMyjI,EAAU/pI,gBAECsZ,IAARhT,QAEJ,QAAuBgT,IAAlBxZ,EAAM+9C,QAIjB,GAEC/9C,EAAQwG,EAAK0jI,QAEE1wH,IAAVxZ,IAEJ4pI,EAAMjoI,KAAM6E,EAAI24E,MAChBn/E,EAAM+9C,QAASyhB,EAAQA,EAAO78D,SAI/B6D,EAAMyjI,EAAU/pI,gBAECsZ,IAARhT,QAMV,GAECxG,EAAQwG,EAAK0jI,QAEE1wH,IAAVxZ,IAEJ4pI,EAAMjoI,KAAM6E,EAAI24E,MAChB3f,EAAO79D,KAAM3B,IAIdwG,EAAMyjI,EAAU/pI,gBAECsZ,IAARhT,IAMZ2jI,QAAS,SAAWC,EAAYx6G,EAAMy6G,EAAYC,EAAUC,EAAM,IAEjE,MAAMC,EAAOJ,EAAWpgI,QAExBwgI,EAAK56G,KAAOA,EAEZ,MAAM66G,EAAS,GAEf,IAAM,IAAIvqI,EAAI,EAAGA,EAAIsqI,EAAKC,OAAO9nI,SAAWzC,EAAI,CAE/C,MAAMwqI,EAAQF,EAAKC,OAAQvqI,GACrByqI,EAAYD,EAAME,eAElBhB,EAAQ,GACRpqE,EAAS,GAEf,IAAM,IAAI15D,EAAI,EAAGA,EAAI4kI,EAAMd,MAAMjnI,SAAWmD,EAAI,CAE/C,MAAMs5E,EAAQsrD,EAAMd,MAAO9jI,GAAMykI,EAEjC,KAAKnrD,EAAQirD,GAAcjrD,GAASkrD,GAApC,CAEAV,EAAMjoI,KAAM+oI,EAAMd,MAAO9jI,IAEzB,IAAM,IAAIwX,EAAI,EAAGA,EAAIqtH,IAAcrtH,EAElCkiD,EAAO79D,KAAM+oI,EAAMlrE,OAAQ15D,EAAI6kI,EAAYrtH,KAMvB,IAAjBssH,EAAMjnI,SAEX+nI,EAAMd,MAAQX,GAAeK,aAAcM,EAAOc,EAAMd,MAAMrjI,aAC9DmkI,EAAMlrE,OAASypE,GAAeK,aAAc9pE,EAAQkrE,EAAMlrE,OAAOj5D,aAEjEkkI,EAAO9oI,KAAM+oI,IAIdF,EAAKC,OAASA,EAId,IAAII,EAAepnI,EAAAA,EAEnB,IAAM,IAAIvD,EAAI,EAAGA,EAAIsqI,EAAKC,OAAO9nI,SAAWzC,EAEtC2qI,EAAeL,EAAKC,OAAQvqI,GAAI0pI,MAAO,KAE3CiB,EAAeL,EAAKC,OAAQvqI,GAAI0pI,MAAO,IAQzC,IAAM,IAAI1pI,EAAI,EAAGA,EAAIsqI,EAAKC,OAAO9nI,SAAWzC,EAE3CsqI,EAAKC,OAAQvqI,GAAI+mH,OAAS,EAAI4jB,GAM/B,OAFAL,EAAKM,gBAEEN,GAIRO,iBAAkB,SAAWC,EAAYC,EAAiB,EAAGC,EAAgBF,EAAYT,EAAM,IAEzFA,GAAO,IAAIA,EAAM,IAEtB,MAAMY,EAAYD,EAAcT,OAAO9nI,OACjCyoI,EAAgBH,EAAiBV,EAGvC,IAAM,IAAIrqI,EAAI,EAAGA,EAAIirI,IAAcjrI,EAAI,CAEtC,MAAMmrI,EAAiBH,EAAcT,OAAQvqI,GACvCorI,EAAqBD,EAAeE,cAG1C,GAA4B,SAAvBD,GAAwD,WAAvBA,EAAkC,SAGxE,MAAME,EAAcR,EAAWP,OAAOgB,MAAM,SAAWf,GAEtD,OAAOA,EAAM96G,OAASy7G,EAAez7G,MACjC86G,EAAMa,gBAAkBD,KAI7B,QAAqB9xH,IAAhBgyH,EAA4B,SAEjC,IAAIE,EAAkB,EACtB,MAAMC,EAAqBN,EAAeT,eAErCS,EAAeO,kBAAkBC,4CAErCH,EAAkBC,EAAqB,GAIxC,IAAIG,EAAe,EACnB,MAAMC,EAAkBP,EAAYZ,eAE/BY,EAAYI,kBAAkBC,4CAElCC,EAAeC,EAAkB,GAIlC,MAAMxtC,EAAY8sC,EAAezB,MAAMjnI,OAAS,EAChD,IAAIqpI,EAGJ,GAAKZ,GAAiBC,EAAezB,MAAO,GAAM,CAGjD,MAAM9vG,EAAa4xG,EACbO,EAAWN,EAAqBD,EACtCM,EAAiB/C,GAAeC,WAAYmC,EAAe7rE,OAAQ1lC,EAAYmyG,QAEzE,GAAKb,GAAiBC,EAAezB,MAAOrrC,GAAc,CAGhE,MAAMzkE,EAAaykE,EAAYotC,EAAqBD,EAC9CO,EAAWnyG,EAAa6xG,EAAqBD,EACnDM,EAAiB/C,GAAeC,WAAYmC,EAAe7rE,OAAQ1lC,EAAYmyG,OAEzE,CAGN,MAAMC,EAAcb,EAAeO,oBAC7B9xG,EAAa4xG,EACbO,EAAWN,EAAqBD,EACtCQ,EAAYC,SAAUf,GACtBY,EAAiB/C,GAAeC,WAAYgD,EAAYE,aAActyG,EAAYmyG,GAKnF,GAA4B,eAAvBX,EAAsC,EAEpB,IAAIlkF,IAAa54C,UAAWw9H,GAAiBz8H,YAAYw6C,YACjEhM,QAASiuF,GAMxB,MAAMK,EAAWb,EAAY5B,MAAMjnI,OACnC,IAAM,IAAImD,EAAI,EAAGA,EAAIumI,IAAavmI,EAAI,CAErC,MAAMwmI,EAAaxmI,EAAIimI,EAAkBD,EAEzC,GAA4B,eAAvBR,EAGJlkF,GAAWmlF,wBACVf,EAAYhsE,OACZ8sE,EACAN,EACA,EACAR,EAAYhsE,OACZ8sE,OAGK,CAEN,MAAME,EAAWT,EAAiC,EAAfD,EAGnC,IAAM,IAAIxuH,EAAI,EAAGA,EAAIkvH,IAAalvH,EAEjCkuH,EAAYhsE,OAAQ8sE,EAAahvH,IAAO0uH,EAAgB1uH,KAY5D,OAFA0tH,EAAWxsH,UAAY63B,GAEhB20F,IA2BT,SAASyB,GAAaC,EAAoBC,EAAcC,EAAYR,GAEnE/rI,KAAKqsI,mBAAqBA,EAC1BrsI,KAAKwsI,aAAe,EAEpBxsI,KAAK+rI,kBAAgC5yH,IAAjB4yH,EACnBA,EAAe,IAAIO,EAAapmI,YAAaqmI,GAC9CvsI,KAAKssI,aAAeA,EACpBtsI,KAAKsqI,UAAYiC,EA0OlB,SAASE,GAAkBJ,EAAoBC,EAAcC,EAAYR,GAExEK,GAAY/yF,KAAMr5C,KAAMqsI,EAAoBC,EAAcC,EAAYR,GAEtE/rI,KAAK0sI,aAAgB,EACrB1sI,KAAK2sI,aAAgB,EACrB3sI,KAAK4sI,aAAgB,EACrB5sI,KAAK6sI,aAAgB,EAqItB,SAASC,GAAmBT,EAAoBC,EAAcC,EAAYR,GAEzEK,GAAY/yF,KAAMr5C,KAAMqsI,EAAoBC,EAAcC,EAAYR,GAwCvE,SAASgB,GAAqBV,EAAoBC,EAAcC,EAAYR,GAE3EK,GAAY/yF,KAAMr5C,KAAMqsI,EAAoBC,EAAcC,EAAYR,GAgBvE,SAASiB,GAAez9G,EAAMg6G,EAAOpqE,EAAQ8tE,GAE5C,QAAc9zH,IAAToW,EAAqB,MAAM,IAAItb,MAAO,gDAC3C,QAAekF,IAAVowH,GAAwC,IAAjBA,EAAMjnI,OAAe,MAAM,IAAI2R,MAAO,oDAAsDsb,GAExHvvB,KAAKuvB,KAAOA,EAEZvvB,KAAKupI,MAAQX,GAAeK,aAAcM,EAAOvpI,KAAKktI,gBACtDltI,KAAKm/D,OAASypE,GAAeK,aAAc9pE,EAAQn/D,KAAKmtI,iBAExDntI,KAAKotI,iBAAkBH,GAAiBjtI,KAAKqtI,sBAuc9C,SAASC,GAAsB/9G,EAAMg6G,EAAOpqE,GAE3C6tE,GAAc3zF,KAAMr5C,KAAMuvB,EAAMg6G,EAAOpqE,GA0BxC,SAASouE,GAAoBh+G,EAAMg6G,EAAOpqE,EAAQ8tE,GAEjDD,GAAc3zF,KAAMr5C,KAAMuvB,EAAMg6G,EAAOpqE,EAAQ8tE,GAuBhD,SAASO,GAAqBj+G,EAAMg6G,EAAOpqE,EAAQ8tE,GAElDD,GAAc3zF,KAAMr5C,KAAMuvB,EAAMg6G,EAAOpqE,EAAQ8tE,GAoBhD,SAASQ,GAA6BpB,EAAoBC,EAAcC,EAAYR,GAEnFK,GAAY/yF,KAAMr5C,KAAMqsI,EAAoBC,EAAcC,EAAYR,GAkCvE,SAAS2B,GAAyBn+G,EAAMg6G,EAAOpqE,EAAQ8tE,GAEtDD,GAAc3zF,KAAMr5C,KAAMuvB,EAAMg6G,EAAOpqE,EAAQ8tE,GA4BhD,SAASU,GAAqBp+G,EAAMg6G,EAAOpqE,EAAQ8tE,GAElDD,GAAc3zF,KAAMr5C,KAAMuvB,EAAMg6G,EAAOpqE,EAAQ8tE,GAuBhD,SAASW,GAAqBr+G,EAAMg6G,EAAOpqE,EAAQ8tE,GAElDD,GAAc3zF,KAAMr5C,KAAMuvB,EAAMg6G,EAAOpqE,EAAQ8tE,GAgBhD,SAASY,GAAet+G,EAAMu+G,GAAW,EAAK1D,EAAQjsH,EAAY43B,IAEjE/1C,KAAKuvB,KAAOA,EACZvvB,KAAKoqI,OAASA,EACdpqI,KAAK8tI,SAAWA,EAChB9tI,KAAKme,UAAYA,EAEjBne,KAAK4iD,KAAOpJ,GAAUG,eAGjB35C,KAAK8tI,SAAW,GAEpB9tI,KAAKyqI,gBAgDP,SAASsD,GAAoB9b,GAE5B,QAAmB94G,IAAd84G,EAAKnyF,KAET,MAAM,IAAI7rB,MAAO,4DAIlB,MAAM+5H,EAlDP,SAAuCvsG,GAEtC,OAASA,EAASvD,eAEjB,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,UAEJ,OAAOsvG,GAER,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,UAEJ,OAAOI,GAER,IAAK,QAEJ,OAAOL,GAER,IAAK,aAEJ,OAAOG,GAER,IAAK,OACL,IAAK,UAEJ,OAAOJ,GAER,IAAK,SAEJ,OAAOK,GAIT,MAAM,IAAI15H,MAAO,8CAAgDwtB,GAY/CwsG,CAA8Bhc,EAAKnyF,MAErD,QAAoB3mB,IAAf84G,EAAKsX,MAAsB,CAE/B,MAAMA,EAAQ,GAAIpqE,EAAS,GAE3BypE,GAAee,YAAa1X,EAAKl1G,KAAMwsH,EAAOpqE,EAAQ,SAEtD8yD,EAAKsX,MAAQA,EACbtX,EAAK9yD,OAASA,EAKf,YAAyBhmD,IAApB60H,EAAUv4H,MAEPu4H,EAAUv4H,MAAOw8G,GAKjB,IAAI+b,EAAW/b,EAAK1iG,KAAM0iG,EAAKsX,MAAOtX,EAAK9yD,OAAQ8yD,EAAKgb,eAhpCjEztI,OAAOo5C,OAAQwzF,GAAYvzF,UAAW,CAErCizF,SAAU,SAAWx+H,GAEpB,MAAM4gI,EAAKluI,KAAKqsI,mBAChB,IAAItqE,EAAK/hE,KAAKwsI,aACb15E,EAAKo7E,EAAInsE,GACTlP,EAAKq7E,EAAInsE,EAAK,GAEfosE,EAAmB,CAElBC,EAAM,CAEL,IAAIj2E,EAEJk2E,EAAa,CAMZC,EAAc,KAAShhI,EAAIwlD,GAAO,CAEjC,IAAM,IAAIy7E,EAAWxsE,EAAK,IAAO,CAEhC,QAAY5oD,IAAP25C,EAAmB,CAEvB,GAAKxlD,EAAIulD,EAAK,MAAMy7E,EAMpB,OAFAvsE,EAAKmsE,EAAG5rI,OACRtC,KAAKwsI,aAAezqE,EACb/hE,KAAKwuI,UAAWzsE,EAAK,EAAGz0D,EAAGulD,GAInC,GAAKkP,IAAOwsE,EAAW,MAKvB,GAHA17E,EAAKC,EACLA,EAAKo7E,IAAOnsE,GAEPz0D,EAAIwlD,EAGR,MAAMs7E,EAORj2E,EAAQ+1E,EAAG5rI,OACX,MAAM+rI,EAMP,GAAS/gI,GAAKulD,EAiDd,MAAMs7E,EAjDN,CAIC,MAAMM,EAAWP,EAAI,GAEhB5gI,EAAImhI,IAER1sE,EAAK,EACLlP,EAAK47E,GAMN,IAAM,IAAIF,EAAWxsE,EAAK,IAAO,CAEhC,QAAY5oD,IAAP05C,EAKJ,OADA7yD,KAAKwsI,aAAe,EACbxsI,KAAK0uI,aAAc,EAAGphI,EAAGwlD,GAIjC,GAAKiP,IAAOwsE,EAAW,MAKvB,GAHAz7E,EAAKD,EACLA,EAAKq7E,IAAOnsE,EAAK,GAEZz0D,GAAKulD,EAGT,MAAMu7E,EAORj2E,EAAQ4J,EACRA,EAAK,GAaP,KAAQA,EAAK5J,GAAQ,CAEpB,MAAMw2E,EAAQ5sE,EAAK5J,IAAY,EAE1B7qD,EAAI4gI,EAAIS,GAEZx2E,EAAQw2E,EAIR5sE,EAAK4sE,EAAM,EAWb,GALA77E,EAAKo7E,EAAInsE,GACTlP,EAAKq7E,EAAInsE,EAAK,QAIF5oD,IAAP05C,EAGJ,OADA7yD,KAAKwsI,aAAe,EACbxsI,KAAK0uI,aAAc,EAAGphI,EAAGwlD,GAIjC,QAAY35C,IAAP25C,EAIJ,OAFAiP,EAAKmsE,EAAG5rI,OACRtC,KAAKwsI,aAAezqE,EACb/hE,KAAKwuI,UAAWzsE,EAAK,EAAGlP,EAAIvlD,GAMrCtN,KAAKwsI,aAAezqE,EAEpB/hE,KAAK4uI,iBAAkB7sE,EAAIlP,EAAIC,GAIhC,OAAO9yD,KAAK6uI,aAAc9sE,EAAIlP,EAAIvlD,EAAGwlD,IAItCg8E,SAAU,KAKVC,iBAAkB,GAElBC,aAAc,WAEb,OAAOhvI,KAAK8uI,UAAY9uI,KAAK+uI,kBAI9BE,iBAAkB,SAAW9iI,GAI5B,MAAM6G,EAAShT,KAAK+rI,aACnB5sE,EAASn/D,KAAKssI,aACdt8C,EAAShwF,KAAKsqI,UACdtuH,EAAS7P,EAAQ6jF,EAElB,IAAM,IAAInwF,EAAI,EAAGA,IAAMmwF,IAAWnwF,EAEjCmT,EAAQnT,GAAMs/D,EAAQnjD,EAASnc,GAIhC,OAAOmT,GAMR67H,aAAc,WAEb,MAAM,IAAI56H,MAAO,4BAKlB26H,iBAAkB,eASnBpvI,OAAOo5C,OAAQwzF,GAAYvzF,UAAW,CAGrC61F,aAActC,GAAYvzF,UAAUo2F,iBAGpCT,UAAWpC,GAAYvzF,UAAUo2F,mBAuBlCxC,GAAiB5zF,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ0oF,GAAYvzF,WAAa,CAEnF3yC,YAAaumI,GAEbsC,iBAAkB,CAEjBG,YAAat5F,GACbu5F,UAAWv5F,IAIZg5F,iBAAkB,SAAW7sE,EAAIlP,EAAIC,GAEpC,MAAMo7E,EAAKluI,KAAKqsI,mBAChB,IAAI+C,EAAQrtE,EAAK,EAChBstE,EAAQttE,EAAK,EAEb9uD,EAAQi7H,EAAIkB,GACZl8H,EAAQg7H,EAAImB,GAEb,QAAel2H,IAAVlG,EAEJ,OAASjT,KAAKgvI,eAAeE,aAE5B,KAAKr5F,GAGJu5F,EAAQrtE,EACR9uD,EAAQ,EAAI4/C,EAAKC,EAEjB,MAED,KAAKhd,GAGJs5F,EAAQlB,EAAG5rI,OAAS,EACpB2Q,EAAQ4/C,EAAKq7E,EAAIkB,GAAUlB,EAAIkB,EAAQ,GAEvC,MAED,QAGCA,EAAQrtE,EACR9uD,EAAQ6/C,EAMX,QAAe35C,IAAVjG,EAEJ,OAASlT,KAAKgvI,eAAeG,WAE5B,KAAKt5F,GAGJw5F,EAAQttE,EACR7uD,EAAQ,EAAI4/C,EAAKD,EAEjB,MAED,KAAK/c,GAGJu5F,EAAQ,EACRn8H,EAAQ4/C,EAAKo7E,EAAI,GAAMA,EAAI,GAE3B,MAED,QAGCmB,EAAQttE,EAAK,EACb7uD,EAAQ2/C,EAMX,MAAMy8E,EAAuB,IAAZx8E,EAAKD,GACrBm9B,EAAShwF,KAAKsqI,UAEftqI,KAAK0sI,YAAc4C,GAAWz8E,EAAK5/C,GACnCjT,KAAK4sI,YAAc0C,GAAWp8H,EAAQ4/C,GACtC9yD,KAAK2sI,YAAcyC,EAAQp/C,EAC3BhwF,KAAK6sI,YAAcwC,EAAQr/C,GAI5B6+C,aAAc,SAAW9sE,EAAIlP,EAAIvlD,EAAGwlD,GAEnC,MAAM9/C,EAAShT,KAAK+rI,aACnB5sE,EAASn/D,KAAKssI,aACdt8C,EAAShwF,KAAKsqI,UAEd1lI,EAAKm9D,EAAKiuB,EAASu/C,EAAK3qI,EAAKorF,EAC7Bw/C,EAAKxvI,KAAK2sI,YAAc8C,EAAKzvI,KAAK6sI,YAClC6C,EAAK1vI,KAAK0sI,YAAaiD,EAAK3vI,KAAK4sI,YAEjC/rI,GAAMyM,EAAIulD,IAASC,EAAKD,GACxBq7E,EAAKrtI,EAAIA,EACT+uI,EAAM1B,EAAKrtI,EAINgvI,GAAOH,EAAKE,EAAM,EAAIF,EAAKxB,EAAKwB,EAAK7uI,EACrCwxD,GAAO,EAAIq9E,GAAOE,IAAU,IAAM,EAAIF,GAAOxB,IAAS,GAAMwB,GAAO7uI,EAAI,EACvEioD,IAAS,EAAI6mF,GAAOC,GAAQ,IAAMD,GAAOzB,EAAK,GAAMrtI,EACpDivI,EAAKH,EAAKC,EAAMD,EAAKzB,EAI3B,IAAM,IAAIruI,EAAI,EAAGA,IAAMmwF,IAAWnwF,EAEjCmT,EAAQnT,GACNgwI,EAAK1wE,EAAQqwE,EAAK3vI,GAClBwyD,EAAK8M,EAAQowE,EAAK1vI,GAClBipD,EAAKqW,EAAQv6D,EAAK/E,GAClBiwI,EAAK3wE,EAAQswE,EAAK5vI,GAIrB,OAAOmT,KAYT85H,GAAkBj0F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ0oF,GAAYvzF,WAAa,CAEpF3yC,YAAa4mI,GAEb+B,aAAc,SAAW9sE,EAAIlP,EAAIvlD,EAAGwlD,GAEnC,MAAM9/C,EAAShT,KAAK+rI,aACnB5sE,EAASn/D,KAAKssI,aACdt8C,EAAShwF,KAAKsqI,UAEdyF,EAAUhuE,EAAKiuB,EACfggD,EAAUD,EAAU//C,EAEpBigD,GAAY3iI,EAAIulD,IAASC,EAAKD,GAC9Bq9E,EAAU,EAAID,EAEf,IAAM,IAAIpwI,EAAI,EAAGA,IAAMmwF,IAAWnwF,EAEjCmT,EAAQnT,GACNs/D,EAAQ6wE,EAAUnwI,GAAMqwI,EACxB/wE,EAAQ4wE,EAAUlwI,GAAMowI,EAI3B,OAAOj9H,KAkBT+5H,GAAoBl0F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ0oF,GAAYvzF,WAAa,CAEtF3yC,YAAa6mI,GAEb8B,aAAc,SAAW9sE,GAExB,OAAO/hE,KAAKivI,iBAAkBltE,EAAK,MAsBrCviE,OAAOo5C,OAAQo0F,GAAe,CAK7B33H,OAAQ,SAAWg1H,GAElB,MAAM2D,EAAY3D,EAAMnkI,YAExB,IAAI+rH,EAGJ,QAA0B94G,IAArB60H,EAAU34H,OAEd48G,EAAO+b,EAAU34H,OAAQg1H,OAEnB,CAGNpY,EAAO,CAEN,KAAQoY,EAAM96G,KACd,MAASq5G,GAAeK,aAAcoB,EAAMd,MAAO3zH,OACnD,OAAUgzH,GAAeK,aAAcoB,EAAMlrE,OAAQvpD,QAItD,MAAMq3H,EAAgB5C,EAAM8F,mBAEvBlD,IAAkB5C,EAAMgD,uBAE5Bpb,EAAKgb,cAAgBA,GAQvB,OAFAhb,EAAKnyF,KAAOuqG,EAAMa,cAEXjZ,KAMTzyH,OAAOo5C,OAAQo0F,GAAcn0F,UAAW,CAEvC3yC,YAAa8mI,GAEbE,eAAgBxmH,aAEhBymH,gBAAiBzmH,aAEjB2mH,qBAAsB33F,GAEtB06F,iCAAkC,SAAWp9H,GAE5C,OAAO,IAAI+5H,GAAqB/sI,KAAKupI,MAAOvpI,KAAKm/D,OAAQn/D,KAAKuqI,eAAgBv3H,IAI/Eq9H,+BAAgC,SAAWr9H,GAE1C,OAAO,IAAI85H,GAAmB9sI,KAAKupI,MAAOvpI,KAAKm/D,OAAQn/D,KAAKuqI,eAAgBv3H,IAI7Es9H,+BAAgC,SAAWt9H,GAE1C,OAAO,IAAIy5H,GAAkBzsI,KAAKupI,MAAOvpI,KAAKm/D,OAAQn/D,KAAKuqI,eAAgBv3H,IAI5Eo6H,iBAAkB,SAAWH,GAE5B,IAAIsD,EAEJ,OAAStD,GAER,KAAKx3F,GAEJ86F,EAAgBvwI,KAAKowI,iCAErB,MAED,KAAK16F,GAEJ66F,EAAgBvwI,KAAKqwI,+BAErB,MAED,KAAK16F,GAEJ46F,EAAgBvwI,KAAKswI,+BAMvB,QAAuBn3H,IAAlBo3H,EAA8B,CAElC,MAAM1pB,EAAU,iCACf7mH,KAAKkrI,cAAgB,yBAA2BlrI,KAAKuvB,KAEtD,QAAgCpW,IAA3BnZ,KAAKurI,kBAAkC,CAG3C,GAAK0B,IAAkBjtI,KAAKqtI,qBAM3B,MAAM,IAAIp5H,MAAO4yG,GAJjB7mH,KAAKotI,iBAAkBptI,KAAKqtI,sBAW9B,OADA1gI,QAAQoK,KAAM,uBAAwB8vG,GAC/B7mH,KAMR,OAFAA,KAAKurI,kBAAoBgF,EAElBvwI,MAIRmwI,iBAAkB,WAEjB,OAASnwI,KAAKurI,mBAEb,KAAKvrI,KAAKowI,iCAET,OAAO36F,GAER,KAAKz1C,KAAKqwI,+BAET,OAAO36F,GAER,KAAK11C,KAAKswI,+BAET,OAAO36F,KAMV40F,aAAc,WAEb,OAAOvqI,KAAKm/D,OAAO78D,OAAStC,KAAKupI,MAAMjnI,QAKxCskH,MAAO,SAAW4pB,GAEjB,GAAoB,IAAfA,EAAqB,CAEzB,MAAMjH,EAAQvpI,KAAKupI,MAEnB,IAAM,IAAI1pI,EAAI,EAAGmC,EAAIunI,EAAMjnI,OAAQzC,IAAMmC,IAAMnC,EAE9C0pI,EAAO1pI,IAAO2wI,EAMhB,OAAOxwI,MAKRqK,MAAO,SAAWomI,GAEjB,GAAmB,IAAdA,EAAoB,CAExB,MAAMlH,EAAQvpI,KAAKupI,MAEnB,IAAM,IAAI1pI,EAAI,EAAGmC,EAAIunI,EAAMjnI,OAAQzC,IAAMmC,IAAMnC,EAE9C0pI,EAAO1pI,IAAO4wI,EAMhB,OAAOzwI,MAMRurC,KAAM,SAAWmlG,EAAWC,GAE3B,MAAMpH,EAAQvpI,KAAKupI,MAClBqH,EAAQrH,EAAMjnI,OAEf,IAAIwmI,EAAO,EACVC,EAAK6H,EAAQ,EAEd,KAAQ9H,IAAS8H,GAASrH,EAAOT,GAAS4H,KAEtC5H,EAIJ,MAAiB,IAATC,GAAcQ,EAAOR,GAAO4H,KAEhC5H,EAMJ,KAFGA,EAEW,IAATD,GAAcC,IAAO6H,EAAQ,CAG5B9H,GAAQC,IAEZA,EAAK1lI,KAAK2B,IAAK+jI,EAAI,GACnBD,EAAOC,EAAK,GAIb,MAAM/4C,EAAShwF,KAAKuqI,eACpBvqI,KAAKupI,MAAQX,GAAeC,WAAYU,EAAOT,EAAMC,GACrD/oI,KAAKm/D,OAASypE,GAAeC,WAAY7oI,KAAKm/D,OAAQ2pE,EAAO94C,EAAQ+4C,EAAK/4C,GAI3E,OAAOhwF,MAKR6wI,SAAU,WAET,IAAIC,GAAQ,EAEZ,MAAMxG,EAAYtqI,KAAKuqI,eAClBD,EAAYjnI,KAAK+pB,MAAOk9G,IAAgB,IAE5C39H,QAAQu1B,MAAO,oDAAqDliC,MACpE8wI,GAAQ,GAIT,MAAMvH,EAAQvpI,KAAKupI,MAClBpqE,EAASn/D,KAAKm/D,OAEdyxE,EAAQrH,EAAMjnI,OAEA,IAAVsuI,IAEJjkI,QAAQu1B,MAAO,uCAAwCliC,MACvD8wI,GAAQ,GAIT,IAAIC,EAAW,KAEf,IAAM,IAAIlxI,EAAI,EAAGA,IAAM+wI,EAAO/wI,IAAO,CAEpC,MAAMmxI,EAAWzH,EAAO1pI,GAExB,GAAyB,iBAAbmxI,GAAyBj3H,MAAOi3H,GAAa,CAExDrkI,QAAQu1B,MAAO,mDAAoDliC,KAAMH,EAAGmxI,GAC5EF,GAAQ,EACR,MAID,GAAkB,OAAbC,GAAqBA,EAAWC,EAAW,CAE/CrkI,QAAQu1B,MAAO,0CAA2CliC,KAAMH,EAAGmxI,EAAUD,GAC7ED,GAAQ,EACR,MAIDC,EAAWC,EAIZ,QAAgB73H,IAAXgmD,GAECypE,GAAeI,aAAc7pE,GAEjC,IAAM,IAAIt/D,EAAI,EAAGmC,EAAIm9D,EAAO78D,OAAQzC,IAAMmC,IAAMnC,EAAI,CAEnD,MAAMF,EAAQw/D,EAAQt/D,GAEtB,GAAKka,MAAOpa,GAAU,CAErBgN,QAAQu1B,MAAO,oDAAqDliC,KAAMH,EAAGF,GAC7EmxI,GAAQ,EACR,OAUJ,OAAOA,GAMRG,SAAU,WAGT,MAAM1H,EAAQX,GAAeC,WAAY7oI,KAAKupI,OAC7CpqE,EAASypE,GAAeC,WAAY7oI,KAAKm/D,QACzC6wB,EAAShwF,KAAKuqI,eAEd2G,EAAsBlxI,KAAKmwI,qBAAuBx6F,GAElDuoD,EAAYqrC,EAAMjnI,OAAS,EAE5B,IAAI6uI,EAAa,EAEjB,IAAM,IAAItxI,EAAI,EAAGA,EAAIq+F,IAAcr+F,EAAI,CAEtC,IAAIuxI,GAAO,EAEX,MAAMtyD,EAAOyqD,EAAO1pI,GAKpB,GAAKi/E,IAJYyqD,EAAO1pI,EAAI,KAIM,IAANA,GAAWi/E,IAASA,EAAM,IAErD,GAAOoyD,EAwBNE,GAAO,MAxBqB,CAI5B,MAAMp1H,EAASnc,EAAImwF,EAClBqhD,EAAUr1H,EAASg0E,EACnBshD,EAAUt1H,EAASg0E,EAEpB,IAAM,IAAIvqF,EAAI,EAAGA,IAAMuqF,IAAWvqF,EAAI,CAErC,MAAM9F,EAAQw/D,EAAQnjD,EAASvW,GAE/B,GAAK9F,IAAUw/D,EAAQkyE,EAAU5rI,IAChC9F,IAAUw/D,EAAQmyE,EAAU7rI,GAAM,CAElC2rI,GAAO,EACP,QAgBJ,GAAKA,EAAO,CAEX,GAAKvxI,IAAMsxI,EAAa,CAEvB5H,EAAO4H,GAAe5H,EAAO1pI,GAE7B,MAAM0xI,EAAa1xI,EAAImwF,EACtBwhD,EAAcL,EAAanhD,EAE5B,IAAM,IAAIvqF,EAAI,EAAGA,IAAMuqF,IAAWvqF,EAEjC05D,EAAQqyE,EAAc/rI,GAAM05D,EAAQoyE,EAAa9rI,KAMhD0rI,GAQL,GAAKjzC,EAAY,EAAI,CAEpBqrC,EAAO4H,GAAe5H,EAAOrrC,GAE7B,IAAM,IAAIqzC,EAAarzC,EAAYlO,EAAQwhD,EAAcL,EAAanhD,EAAQvqF,EAAI,EAAGA,IAAMuqF,IAAWvqF,EAErG05D,EAAQqyE,EAAc/rI,GAAM05D,EAAQoyE,EAAa9rI,KAI/C0rI,EAgBJ,OAZKA,IAAe5H,EAAMjnI,QAEzBtC,KAAKupI,MAAQX,GAAeC,WAAYU,EAAO,EAAG4H,GAClDnxI,KAAKm/D,OAASypE,GAAeC,WAAY1pE,EAAQ,EAAGgyE,EAAanhD,KAIjEhwF,KAAKupI,MAAQA,EACbvpI,KAAKm/D,OAASA,GAIRn/D,MAIR2J,MAAO,WAEN,MAAM4/H,EAAQX,GAAeC,WAAY7oI,KAAKupI,MAAO,GAC/CpqE,EAASypE,GAAeC,WAAY7oI,KAAKm/D,OAAQ,GAGjDkrE,EAAQ,IAAIoH,EADSzxI,KAAKkG,aACMlG,KAAKuvB,KAAMg6G,EAAOpqE,GAKxD,OAFAkrE,EAAMkB,kBAAoBvrI,KAAKurI,kBAExBlB,KAgBTiD,GAAqBz0F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQspF,GAAcn0F,WAAa,CAEzF3yC,YAAaonI,GAEbpC,cAAe,OACfiC,gBAAiBv3H,MAEjBy3H,qBAAsB53F,GAEtB46F,oCAAgCl3H,EAChCm3H,oCAAgCn3H,IAkBjCo0H,GAAmB10F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQspF,GAAcn0F,WAAa,CAEvF3yC,YAAaqnI,GAEbrC,cAAe,UAqBhBsC,GAAoB30F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQspF,GAAcn0F,WAAa,CAExF3yC,YAAasnI,GAEbtC,cAAe,WAkBhBuC,GAA4B50F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ0oF,GAAYvzF,WAAa,CAE9F3yC,YAAaunI,GAEboB,aAAc,SAAW9sE,EAAIlP,EAAIvlD,EAAGwlD,GAEnC,MAAM9/C,EAAShT,KAAK+rI,aACnB5sE,EAASn/D,KAAKssI,aACdt8C,EAAShwF,KAAKsqI,UAEdlgG,GAAU98B,EAAIulD,IAASC,EAAKD,GAE7B,IAAI72C,EAAS+lD,EAAKiuB,EAElB,IAAM,IAAIvvF,EAAMub,EAASg0E,EAAQh0E,IAAWvb,EAAKub,GAAU,EAE1D+qC,GAAW2qF,UAAW1+H,EAAQ,EAAGmsD,EAAQnjD,EAASg0E,EAAQ7wB,EAAQnjD,EAAQouB,GAI3E,OAAOp3B,KAgBT06H,GAAwB70F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQspF,GAAcn0F,WAAa,CAE5F3yC,YAAawnI,GAEbxC,cAAe,aAIfmC,qBAAsB33F,GAEtB26F,+BAAgC,SAAWr9H,GAE1C,OAAO,IAAIy6H,GAA6BztI,KAAKupI,MAAOvpI,KAAKm/D,OAAQn/D,KAAKuqI,eAAgBv3H,IAIvFs9H,oCAAgCn3H,IAcjCw0H,GAAoB90F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQspF,GAAcn0F,WAAa,CAExF3yC,YAAaynI,GAEbzC,cAAe,SACfiC,gBAAiBv3H,MAEjBy3H,qBAAsB53F,GAEtB46F,oCAAgCl3H,EAEhCm3H,oCAAgCn3H,IAcjCy0H,GAAoB/0F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQspF,GAAcn0F,WAAa,CAExF3yC,YAAa0nI,GAEb1C,cAAe,WAuGhB1rI,OAAOo5C,OAAQi1F,GAAe,CAE7Bp4H,MAAO,SAAWw8G,GAEjB,MAAMmY,EAAS,GACduH,EAAa1f,EAAKmY,OAClBwH,EAAY,GAAQ3f,EAAKiY,KAAO,GAEjC,IAAM,IAAIrqI,EAAI,EAAGmC,EAAI2vI,EAAWrvI,OAAQzC,IAAMmC,IAAMnC,EAEnDuqI,EAAO9oI,KAAMysI,GAAoB4D,EAAY9xI,IAAMwK,MAAOunI,IAI3D,MAAMzH,EAAO,IAAI0D,GAAe5b,EAAK1iG,KAAM0iG,EAAK6b,SAAU1D,EAAQnY,EAAK9zG,WAGvE,OAFAgsH,EAAKvnF,KAAOqvE,EAAKrvE,KAEVunF,GAIR90H,OAAQ,SAAW80H,GAElB,MAAMC,EAAS,GACdyH,EAAa1H,EAAKC,OAEbnY,EAAO,CAEZ,KAAQkY,EAAK56G,KACb,SAAY46G,EAAK2D,SACjB,OAAU1D,EACV,KAAQD,EAAKvnF,KACb,UAAaunF,EAAKhsH,WAInB,IAAM,IAAIte,EAAI,EAAGmC,EAAI6vI,EAAWvvI,OAAQzC,IAAMmC,IAAMnC,EAEnDuqI,EAAO9oI,KAAM0rI,GAAc33H,OAAQw8H,EAAYhyI,KAIhD,OAAOoyH,GAIR6f,8BAA+B,SAAWviH,EAAMwiH,EAAqB7H,EAAK8H,GAEzE,MAAMC,EAAkBF,EAAoBzvI,OACtC8nI,EAAS,GAEf,IAAM,IAAIvqI,EAAI,EAAGA,EAAIoyI,EAAiBpyI,IAAO,CAE5C,IAAI0pI,EAAQ,GACRpqE,EAAS,GAEboqE,EAAMjoI,MACHzB,EAAIoyI,EAAkB,GAAMA,EAC9BpyI,GACEA,EAAI,GAAMoyI,GAEb9yE,EAAO79D,KAAM,EAAG,EAAG,GAEnB,MAAMonC,EAAQkgG,GAAeU,iBAAkBC,GAC/CA,EAAQX,GAAeY,YAAaD,EAAO,EAAG7gG,GAC9Cy2B,EAASypE,GAAeY,YAAarqE,EAAQ,EAAGz2B,GAIzCspG,GAAyB,IAAfzI,EAAO,KAEvBA,EAAMjoI,KAAM2wI,GACZ9yE,EAAO79D,KAAM69D,EAAQ,KAItBirE,EAAO9oI,KACN,IAAIksI,GACH,0BAA4BuE,EAAqBlyI,GAAI0vB,KAAO,IAC5Dg6G,EAAOpqE,GACN90D,MAAO,EAAM6/H,IAIjB,OAAO,IAAI2D,GAAet+G,GAAQ,EAAG66G,IAItC8H,WAAY,SAAWC,EAAmB5iH,GAEzC,IAAI6iH,EAAYD,EAEhB,IAAOv8H,MAAMC,QAASs8H,GAAsB,CAE3C,MAAMrmG,EAAIqmG,EACVC,EAAYtmG,EAAE0iB,UAAY1iB,EAAE0iB,SAAS+M,YAAczvB,EAAEyvB,WAItD,IAAM,IAAI17D,EAAI,EAAGA,EAAIuyI,EAAU9vI,OAAQzC,IAEtC,GAAKuyI,EAAWvyI,GAAI0vB,OAASA,EAE5B,OAAO6iH,EAAWvyI,GAMpB,OAAO,MAIRwyI,oCAAqC,SAAWzpE,EAAcshE,EAAK8H,GAElE,MAAMM,EAA0B,GAI1BC,EAAU,qBAIhB,IAAM,IAAI1yI,EAAI,EAAG6tD,EAAKkb,EAAatmE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEzD,MAAMiwE,EAAclH,EAAc/oE,GAC5B6rC,EAAQokC,EAAYvgD,KAAKoc,MAAO4mG,GAEtC,GAAK7mG,GAASA,EAAMppC,OAAS,EAAI,CAEhC,MAAMitB,EAAOmc,EAAO,GAEpB,IAAI8mG,EAAwBF,EAAyB/iH,GAE9CijH,IAENF,EAAyB/iH,GAASijH,EAAwB,IAI3DA,EAAsBlxI,KAAMwuE,IAM9B,MAAM2iE,EAAQ,GAEd,IAAM,MAAMljH,KAAQ+iH,EAEnBG,EAAMnxI,KAAMusI,GAAciE,8BAA+BviH,EAAM+iH,EAAyB/iH,GAAQ26G,EAAK8H,IAItG,OAAOS,GAKRC,eAAgB,SAAWzzE,EAAWooC,GAErC,IAAOpoC,EAGN,OADAtyD,QAAQu1B,MAAO,yDACR,KAIR,MAAMywG,EAAmB,SAAW3E,EAAW4E,EAAWC,EAAeC,EAAcC,GAGtF,GAA8B,IAAzBF,EAAcvwI,OAAe,CAEjC,MAAMinI,EAAQ,GACRpqE,EAAS,GAEfypE,GAAee,YAAakJ,EAAetJ,EAAOpqE,EAAQ2zE,GAGpC,IAAjBvJ,EAAMjnI,QAEVywI,EAAWzxI,KAAM,IAAI0sI,EAAW4E,EAAWrJ,EAAOpqE,MAQ/CirE,EAAS,GAET4I,EAAW/zE,EAAU1vC,MAAQ,UAC7B26G,EAAMjrE,EAAUirE,KAAO,GACvB/rH,EAAY8gD,EAAU9gD,UAG5B,IAAI2vH,EAAW7uE,EAAU38D,SAAY,EAErC,MAAM2wI,EAAkBh0E,EAAUi0E,WAAa,GAE/C,IAAM,IAAIz4H,EAAI,EAAGA,EAAIw4H,EAAgB3wI,OAAQmY,IAAO,CAEnD,MAAMo4H,EAAgBI,EAAiBx4H,GAAIsC,KAG3C,GAAO81H,GAA0C,IAAzBA,EAAcvwI,OAGtC,GAAKuwI,EAAe,GAAIjqE,aAAe,CAGtC,MAAMuqE,EAAmB,GAEzB,IAAIl2H,EAEJ,IAAMA,EAAI,EAAGA,EAAI41H,EAAcvwI,OAAQ2a,IAEtC,GAAK41H,EAAe51H,GAAI2rD,aAEvB,IAAM,IAAIhmE,EAAI,EAAGA,EAAIiwI,EAAe51H,GAAI2rD,aAAatmE,OAAQM,IAE5DuwI,EAAkBN,EAAe51H,GAAI2rD,aAAchmE,KAAU,EAWhE,IAAM,MAAMwwI,KAAmBD,EAAmB,CAEjD,MAAM5J,EAAQ,GACRpqE,EAAS,GAEf,IAAM,IAAIv8D,EAAI,EAAGA,IAAMiwI,EAAe51H,GAAI2rD,aAAatmE,SAAWM,EAAI,CAErE,MAAMywI,EAAeR,EAAe51H,GAEpCssH,EAAMjoI,KAAM+xI,EAAav0D,MACzB3f,EAAO79D,KAAQ+xI,EAAavjE,cAAgBsjE,EAAoB,EAAI,GAIrEhJ,EAAO9oI,KAAM,IAAIksI,GAAqB,yBAA2B4F,EAAkB,IAAK7J,EAAOpqE,IAIhG2uE,EAAWqF,EAAiB7wI,QAAW4nI,GAAO,OAExC,CAIN,MAAMoJ,EAAW,UAAYjsC,EAAO5sF,GAAI8U,KAAO,IAE/CojH,EACC/E,GAAqB0F,EAAW,YAChCT,EAAe,MAAOzI,GAEvBuI,EACCjF,GAAyB4F,EAAW,cACpCT,EAAe,MAAOzI,GAEvBuI,EACC/E,GAAqB0F,EAAW,SAChCT,EAAe,MAAOzI,IAMzB,GAAuB,IAAlBA,EAAO9nI,OAEX,OAAO,KAMR,OAFa,IAAIurI,GAAemF,EAAUlF,EAAU1D,EAAQjsH,MAQ9D3e,OAAOo5C,OAAQi1F,GAAch1F,UAAW,CAEvC4xF,cAAe,WAGd,IAAIqD,EAAW,EAEf,IAAM,IAAIjuI,EAAI,EAAGmC,EAHFhC,KAAKoqI,OAGQ9nI,OAAQzC,IAAMmC,IAAMnC,EAAI,CAEnD,MAAMwqI,EAAQrqI,KAAKoqI,OAAQvqI,GAE3BiuI,EAAWzqI,KAAK2B,IAAK8oI,EAAUzD,EAAMd,MAAOc,EAAMd,MAAMjnI,OAAS,IAMlE,OAFAtC,KAAK8tI,SAAWA,EAET9tI,MAIRurC,KAAM,WAEL,IAAM,IAAI1rC,EAAI,EAAGA,EAAIG,KAAKoqI,OAAO9nI,OAAQzC,IAExCG,KAAKoqI,OAAQvqI,GAAI0rC,KAAM,EAAGvrC,KAAK8tI,UAIhC,OAAO9tI,MAIR6wI,SAAU,WAET,IAAIC,GAAQ,EAEZ,IAAM,IAAIjxI,EAAI,EAAGA,EAAIG,KAAKoqI,OAAO9nI,OAAQzC,IAExCixI,EAAQA,GAAS9wI,KAAKoqI,OAAQvqI,GAAIgxI,WAInC,OAAOC,GAIRG,SAAU,WAET,IAAM,IAAIpxI,EAAI,EAAGA,EAAIG,KAAKoqI,OAAO9nI,OAAQzC,IAExCG,KAAKoqI,OAAQvqI,GAAIoxI,WAIlB,OAAOjxI,MAIR2J,MAAO,WAEN,MAAMygI,EAAS,GAEf,IAAM,IAAIvqI,EAAI,EAAGA,EAAIG,KAAKoqI,OAAO9nI,OAAQzC,IAExCuqI,EAAO9oI,KAAMtB,KAAKoqI,OAAQvqI,GAAI8J,SAI/B,OAAO,IAAIkkI,GAAe7tI,KAAKuvB,KAAMvvB,KAAK8tI,SAAU1D,EAAQpqI,KAAKme,YAIlE9I,OAAQ,WAEP,OAAOw4H,GAAcx4H,OAAQrV,SAM/B,MAAMuzI,GAAQ,CAEb14D,SAAS,EAET24D,MAAO,GAEPvqI,IAAK,SAAW9C,EAAKstI,IAEE,IAAjBzzI,KAAK66E,UAIV76E,KAAKwzI,MAAOrtI,GAAQstI,IAIrB71H,IAAK,SAAWzX,GAEf,IAAsB,IAAjBnG,KAAK66E,QAIV,OAAO76E,KAAKwzI,MAAOrtI,IAIpB26B,OAAQ,SAAW36B,UAEXnG,KAAKwzI,MAAOrtI,IAIpB6Y,MAAO,WAENhf,KAAKwzI,MAAQ,KAMf,SAASE,GAAgBC,EAAQC,EAAYC,GAE5C,MAAM98D,EAAQ/2E,KAEd,IAGI8zI,EAHAC,GAAY,EACZC,EAAc,EACdC,EAAa,EAEjB,MAAMrkH,EAAW,GAKjB5vB,KAAKk0I,aAAU/6H,EACfnZ,KAAK2zI,OAASA,EACd3zI,KAAK4zI,WAAaA,EAClB5zI,KAAK6zI,QAAUA,EAEf7zI,KAAKm0I,UAAY,SAAW7vF,GAE3B2vF,KAEmB,IAAdF,QAEmB56H,IAAlB49D,EAAMm9D,SAEVn9D,EAAMm9D,QAAS5vF,EAAK0vF,EAAaC,GAMnCF,GAAY,GAIb/zI,KAAKo0I,QAAU,SAAW9vF,GAEzB0vF,SAE0B76H,IAArB49D,EAAM68D,YAEV78D,EAAM68D,WAAYtvF,EAAK0vF,EAAaC,GAIhCD,IAAgBC,IAEpBF,GAAY,OAEU56H,IAAjB49D,EAAM48D,QAEV58D,EAAM48D,WAQT3zI,KAAKq0I,UAAY,SAAW/vF,QAEJnrC,IAAlB49D,EAAM88D,SAEV98D,EAAM88D,QAASvvF,IAMjBtkD,KAAKs0I,WAAa,SAAWhwF,GAE5B,OAAKwvF,EAEGA,EAAaxvF,GAIdA,GAIRtkD,KAAKu0I,eAAiB,SAAWhtG,GAIhC,OAFAusG,EAAcvsG,EAEPvnC,MAIRA,KAAKw0I,WAAa,SAAWC,EAAOC,GAInC,OAFA9kH,EAAStuB,KAAMmzI,EAAOC,GAEf10I,MAIRA,KAAK20I,cAAgB,SAAWF,GAE/B,MAAMtoI,EAAQyjB,EAAS3K,QAASwvH,GAQhC,OANiB,IAAZtoI,GAEJyjB,EAASvnB,OAAQ8D,EAAO,GAIlBnM,MAIRA,KAAK40I,WAAa,SAAWnB,GAE5B,IAAM,IAAI5zI,EAAI,EAAGwO,EAAIuhB,EAASttB,OAAQzC,EAAIwO,EAAGxO,GAAK,EAAI,CAErD,MAAM40I,EAAQ7kH,EAAU/vB,GAClB60I,EAAS9kH,EAAU/vB,EAAI,GAI7B,GAFK40I,EAAMI,SAASJ,EAAMv2C,UAAY,GAEjCu2C,EAAM7yF,KAAM6xF,GAEhB,OAAOiB,EAMT,OAAO,MAMT,MAAMI,GAAwB,IAAIpB,GAElC,SAASqB,GAAQC,GAEhBh1I,KAAKg1I,aAAwB77H,IAAZ67H,EAA0BA,EAAUF,GAErD90I,KAAKi1I,YAAc,YACnBj1I,KAAKk1I,iBAAkB,EACvBl1I,KAAKsX,KAAO,GACZtX,KAAKm1I,aAAe,GACpBn1I,KAAKo1I,cAAgB,GAItB51I,OAAOo5C,OAAQm8F,GAAOl8F,UAAW,CAEhCw8F,KAAM,aAENC,UAAW,SAAWhxF,EAAKsvF,GAE1B,MAAM78D,EAAQ/2E,KAEd,OAAO,IAAIu1I,SAAS,SAAWC,EAASC,GAEvC1+D,EAAMs+D,KAAM/wF,EAAKkxF,EAAS5B,EAAY6B,OAMxChgI,MAAO,aAEPigI,eAAgB,SAAWT,GAG1B,OADAj1I,KAAKi1I,YAAcA,EACZj1I,MAIR21I,mBAAoB,SAAWh2I,GAG9B,OADAK,KAAKk1I,gBAAkBv1I,EAChBK,MAIR41I,QAAS,SAAWt+H,GAGnB,OADAtX,KAAKsX,KAAOA,EACLtX,MAIR61I,gBAAiB,SAAWV,GAG3B,OADAn1I,KAAKm1I,aAAeA,EACbn1I,MAIR81I,iBAAkB,SAAWV,GAG5B,OADAp1I,KAAKo1I,cAAgBA,EACdp1I,QAMT,MAAM+1I,GAAU,GAEhB,SAASC,GAAYhB,GAEpBD,GAAO17F,KAAMr5C,KAAMg1I,GAkSpB,SAASiB,GAAiBjB,GAEzBD,GAAO17F,KAAMr5C,KAAMg1I,GAkEpB,SAASkB,GAAyBlB,GAEjCD,GAAO17F,KAAMr5C,KAAMg1I,GAyHpB,SAASmB,GAAanB,GAErBD,GAAO17F,KAAMr5C,KAAMg1I,GAgFpB,SAASoB,GAAmBpB,GAE3BD,GAAO17F,KAAMr5C,KAAMg1I,GAwDpB,SAASqB,GAAmBrB,GAE3BD,GAAO17F,KAAMr5C,KAAMg1I,GAmFpB,SAASsB,GAAetB,GAEvBD,GAAO17F,KAAMr5C,KAAMg1I,GAsEpB,SAASuB,KAERv2I,KAAK8/B,KAAO,QAEZ9/B,KAAKw2I,mBAAqB,IA0X3B,SAASC,GAAcC,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAEpFV,GAAMl9F,KAAMr5C,MAEZA,KAAK8/B,KAAO,eAEZ9/B,KAAK02I,GAAKA,GAAM,EAChB12I,KAAK22I,GAAKA,GAAM,EAEhB32I,KAAK42I,QAAUA,GAAW,EAC1B52I,KAAK62I,QAAUA,GAAW,EAE1B72I,KAAK82I,YAAcA,GAAe,EAClC92I,KAAK+2I,UAAYA,GAAa,EAAI1zI,KAAK6G,GAEvClK,KAAKg3I,WAAaA,IAAc,EAEhCh3I,KAAKi3I,UAAYA,GAAa,EAuI/B,SAASC,GAAUR,EAAIC,EAAIQ,EAASL,EAAaC,EAAWC,GAE3DP,GAAap9F,KAAMr5C,KAAM02I,EAAIC,EAAIQ,EAASA,EAASL,EAAaC,EAAWC,GAE3Eh3I,KAAK8/B,KAAO,WA6Bb,SAASs3G,KAER,IAAIC,EAAK,EAAGzuF,EAAK,EAAGpN,EAAK,EAAGqN,EAAK,EAUjC,SAASosC,EAAMrtC,EAAIlzB,EAAIm+B,EAAIC,GAE1BukF,EAAKzvF,EACLgB,EAAKiK,EACLrX,GAAO,EAAIoM,EAAK,EAAIlzB,EAAK,EAAIm+B,EAAKC,EAClCjK,EAAK,EAAIjB,EAAK,EAAIlzB,EAAKm+B,EAAKC,EAI7B,MAAO,CAENwkF,eAAgB,SAAW1vF,EAAIlzB,EAAIC,EAAIja,EAAI68H,GAE1CtiD,EAAMvgE,EAAIC,EAAI4iH,GAAY5iH,EAAKizB,GAAM2vF,GAAY78H,EAAKga,KAIvD8iH,yBAA0B,SAAW5vF,EAAIlzB,EAAIC,EAAIja,EAAI+8H,EAAKC,EAAKC,GAG9D,IAAI7kF,GAAOp+B,EAAKkzB,GAAO6vF,GAAQ9iH,EAAKizB,IAAS6vF,EAAMC,IAAU/iH,EAAKD,GAAOgjH,EACrEpjI,GAAOqgB,EAAKD,GAAOgjH,GAAQh9H,EAAKga,IAASgjH,EAAMC,IAAUj9H,EAAKia,GAAOgjH,EAGzE7kF,GAAM4kF,EACNpjI,GAAMojI,EAENziD,EAAMvgE,EAAIC,EAAIm+B,EAAIx+C,IAInBsjI,KAAM,SAAWtqI,GAEhB,MAAMgH,EAAKhH,EAAIA,EAEf,OAAO+pI,EAAKzuF,EAAKt7C,EAAIkuC,EAAKlnC,EAAKu0C,GADpBv0C,EAAKhH,KA32CnB0oI,GAAWn9F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAExE3yC,YAAa8vI,GAEbX,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,QAE5B16H,IAARmrC,IAAoBA,EAAM,SAEZnrC,IAAdnZ,KAAKsX,OAAqBgtC,EAAMtkD,KAAKsX,KAAOgtC,GAEjDA,EAAMtkD,KAAKg1I,QAAQV,WAAYhwF,GAE/B,MAAMyyB,EAAQ/2E,KAER4/E,EAAS2zD,GAAM31H,IAAK0mC,GAE1B,QAAgBnrC,IAAXymE,EAYJ,OAVA7I,EAAMi+D,QAAQb,UAAW7vF,GAEzB9uB,YAAY,WAENm+G,GAASA,EAAQ/zD,GAEtB7I,EAAMi+D,QAAQZ,QAAS9vF,KAErB,GAEIs7B,EAMR,QAAwBzmE,IAAnB48H,GAASzxF,GAUb,YARAyxF,GAASzxF,GAAMhjD,KAAM,CAEpBqyI,OAAQA,EACRC,WAAYA,EACZC,QAASA,IASX,MACMgE,EAAqBvzF,EAAI3Y,MADV,+BAErB,IAAImsG,EAGJ,GAAKD,EAAqB,CAEzB,MAAME,EAAWF,EAAoB,GAC/BG,IAAcH,EAAoB,GAExC,IAAIt3I,EAAOs3I,EAAoB,GAC/Bt3I,EAAO03I,mBAAoB13I,GAEtBy3I,IAAWz3I,EAAO23I,KAAM33I,IAE7B,IAEC,IAAI43I,EACJ,MAAMC,GAAiBp4I,KAAKo4I,cAAgB,IAAKl6G,cAEjD,OAASk6G,GAER,IAAK,cACL,IAAK,OAEJ,MAAMv+D,EAAO,IAAI5N,WAAY1rE,EAAK+B,QAElC,IAAM,IAAIzC,EAAI,EAAGA,EAAIU,EAAK+B,OAAQzC,IAEjCg6E,EAAMh6E,GAAMU,EAAKwrC,WAAYlsC,GAM7Bs4I,EAFqB,SAAjBC,EAEO,IAAIv4G,KAAM,CAAEg6C,EAAK1uE,QAAU,CAAE20B,KAAMi4G,IAInCl+D,EAAK1uE,OAIjB,MAED,IAAK,WAEJ,MAAMktI,EAAS,IAAIC,UACnBH,EAAWE,EAAOE,gBAAiBh4I,EAAMw3I,GAEzC,MAED,IAAK,OAEJI,EAAW3iI,KAAKC,MAAOlV,GAEvB,MAED,QAEC43I,EAAW53I,EAObi1B,YAAY,WAENm+G,GAASA,EAAQwE,GAEtBphE,EAAMi+D,QAAQZ,QAAS9vF,KAErB,GAEF,MAAQpiB,GAGT1M,YAAY,WAENq+G,GAAUA,EAAS3xG,GAExB60C,EAAMi+D,QAAQX,UAAW/vF,GACzByyB,EAAMi+D,QAAQZ,QAAS9vF,KAErB,QAIE,CAINyxF,GAASzxF,GAAQ,GAEjByxF,GAASzxF,GAAMhjD,KAAM,CAEpBqyI,OAAQA,EACRC,WAAYA,EACZC,QAASA,IAIViE,EAAU,IAAIU,eAEdV,EAAQW,KAAM,MAAOn0F,GAAK,GAE1BwzF,EAAQ53H,iBAAkB,QAAQ,SAAWC,GAE5C,MAAMg4H,EAAWn4I,KAAKm4I,SAEhBO,EAAY3C,GAASzxF,GAI3B,UAFOyxF,GAASzxF,GAEK,MAAhBtkD,KAAKg/F,QAAkC,IAAhBh/F,KAAKg/F,OAAe,CAK1B,IAAhBh/F,KAAKg/F,QAAeryF,QAAQoK,KAAM,6CAIvCw8H,GAAMtqI,IAAKq7C,EAAK6zF,GAEhB,IAAM,IAAIt4I,EAAI,EAAG6tD,EAAKgrF,EAAUp2I,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEtD,MAAMsxB,EAAWunH,EAAW74I,GACvBsxB,EAASwiH,QAASxiH,EAASwiH,OAAQwE,GAIzCphE,EAAMi+D,QAAQZ,QAAS9vF,OAEjB,CAEN,IAAM,IAAIzkD,EAAI,EAAG6tD,EAAKgrF,EAAUp2I,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEtD,MAAMsxB,EAAWunH,EAAW74I,GACvBsxB,EAAS0iH,SAAU1iH,EAAS0iH,QAAS1zH,GAI3C42D,EAAMi+D,QAAQX,UAAW/vF,GACzByyB,EAAMi+D,QAAQZ,QAAS9vF,OAItB,GAEHwzF,EAAQ53H,iBAAkB,YAAY,SAAWC,GAEhD,MAAMu4H,EAAY3C,GAASzxF,GAE3B,IAAM,IAAIzkD,EAAI,EAAG6tD,EAAKgrF,EAAUp2I,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEtD,MAAMsxB,EAAWunH,EAAW74I,GACvBsxB,EAASyiH,YAAaziH,EAASyiH,WAAYzzH,OAI/C,GAEH23H,EAAQ53H,iBAAkB,SAAS,SAAWC,GAE7C,MAAMu4H,EAAY3C,GAASzxF,UAEpByxF,GAASzxF,GAEhB,IAAM,IAAIzkD,EAAI,EAAG6tD,EAAKgrF,EAAUp2I,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEtD,MAAMsxB,EAAWunH,EAAW74I,GACvBsxB,EAAS0iH,SAAU1iH,EAAS0iH,QAAS1zH,GAI3C42D,EAAMi+D,QAAQX,UAAW/vF,GACzByyB,EAAMi+D,QAAQZ,QAAS9vF,MAErB,GAEHwzF,EAAQ53H,iBAAkB,SAAS,SAAWC,GAE7C,MAAMu4H,EAAY3C,GAASzxF,UAEpByxF,GAASzxF,GAEhB,IAAM,IAAIzkD,EAAI,EAAG6tD,EAAKgrF,EAAUp2I,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEtD,MAAMsxB,EAAWunH,EAAW74I,GACvBsxB,EAAS0iH,SAAU1iH,EAAS0iH,QAAS1zH,GAI3C42D,EAAMi+D,QAAQX,UAAW/vF,GACzByyB,EAAMi+D,QAAQZ,QAAS9vF,MAErB,QAEwBnrC,IAAtBnZ,KAAKo4I,eAA6BN,EAAQM,aAAep4I,KAAKo4I,mBACrCj/H,IAAzBnZ,KAAKk1I,kBAAgC4C,EAAQ5C,gBAAkBl1I,KAAKk1I,iBAEpE4C,EAAQa,kBAAmBb,EAAQa,sBAAoCx/H,IAAlBnZ,KAAK+3I,SAAyB/3I,KAAK+3I,SAAW,cAExG,IAAM,MAAMa,KAAU54I,KAAKo1I,cAE1B0C,EAAQhC,iBAAkB8C,EAAQ54I,KAAKo1I,cAAewD,IAIvDd,EAAQe,KAAM,MAMf,OAFA9hE,EAAMi+D,QAAQb,UAAW7vF,GAElBwzF,GAIRgB,gBAAiB,SAAWn5I,GAG3B,OADAK,KAAKo4I,aAAez4I,EACbK,MAIR+4I,YAAa,SAAWp5I,GAGvB,OADAK,KAAK+3I,SAAWp4I,EACTK,QAYTi2I,GAAgBp9F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAE7E3yC,YAAa+vI,GAEbZ,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,GAEzC,MAAM98D,EAAQ/2E,KAER00I,EAAS,IAAIsB,GAAYj/D,EAAMi+D,SACrCN,EAAOkB,QAAS7+D,EAAMz/D,MACtBo9H,EAAOoB,iBAAkB/+D,EAAMq+D,eAC/BV,EAAOiB,mBAAoB5+D,EAAMm+D,iBACjCR,EAAOW,KAAM/wF,GAAK,SAAWziC,GAE5B,IAEC8xH,EAAQ58D,EAAMthE,MAAOD,KAAKC,MAAOoM,KAEhC,MAAQre,GAEJqwI,EAEJA,EAASrwI,GAITmJ,QAAQu1B,MAAO1+B,GAIhBuzE,EAAMi+D,QAAQX,UAAW/vF,MAIxBsvF,EAAYC,IAIhBp+H,MAAO,SAAWw8G,GAEjB,MAAM12D,EAAa,GAEnB,IAAM,IAAI17D,EAAI,EAAGA,EAAIoyH,EAAK3vH,OAAQzC,IAAO,CAExC,MAAMsqI,EAAO0D,GAAcp4H,MAAOw8G,EAAMpyH,IAExC07D,EAAWj6D,KAAM6oI,GAIlB,OAAO5uE,KAkBT26E,GAAwBr9F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAErF3yC,YAAagwI,GAEbb,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,GAEzC,MAAM98D,EAAQ/2E,KAERqkD,EAAS,GAETkC,EAAU,IAAIuuE,GAEd4f,EAAS,IAAIsB,GAAYh2I,KAAKg1I,SACpCN,EAAOkB,QAAS51I,KAAKsX,MACrBo9H,EAAOoE,gBAAiB,eACxBpE,EAAOoB,iBAAkB91I,KAAKo1I,eAC9BV,EAAOiB,mBAAoB5+D,EAAMm+D,iBAEjC,IAAI8D,EAAS,EAEb,SAASC,EAAap5I,GAErB60I,EAAOW,KAAM/wF,EAAKzkD,IAAK,SAAWsL,GAEjC,MAAM+tI,EAAWniE,EAAMthE,MAAOtK,GAAQ,GAEtCk5C,EAAQxkD,GAAM,CACbyO,MAAO4qI,EAAS5qI,MAChBC,OAAQ2qI,EAAS3qI,OACjBk0C,OAAQy2F,EAASz2F,OACjBI,QAASq2F,EAASr2F,SAGnBm2F,GAAU,EAEM,IAAXA,IAE0B,IAAzBE,EAASC,cAAoB5yF,EAAQ/D,UAAYzR,IAEtDwV,EAAQ7mC,MAAQ2kC,EAChBkC,EAAQ9D,OAASy2F,EAASz2F,OAC1B8D,EAAQgrB,aAAc,EAEjBoiE,GAASA,EAAQptF,MAIrBqtF,EAAYC,GAIhB,GAAKj+H,MAAMC,QAASyuC,GAEnB,IAAM,IAAIzkD,EAAI,EAAG6tD,EAAKpJ,EAAIhiD,OAAQzC,EAAI6tD,IAAO7tD,EAE5Co5I,EAAap5I,QAQd60I,EAAOW,KAAM/wF,GAAK,SAAWn5C,GAE5B,MAAM+tI,EAAWniE,EAAMthE,MAAOtK,GAAQ,GAEtC,GAAK+tI,EAASE,UAAY,CAEzB,MAAMnqE,EAAQiqE,EAASr2F,QAAQvgD,OAAS42I,EAASC,YAEjD,IAAM,IAAIthH,EAAI,EAAGA,EAAIo3C,EAAOp3C,IAAO,CAElCwsB,EAAQxsB,GAAM,CAAEgrB,QAAS,IAEzB,IAAM,IAAIhjD,EAAI,EAAGA,EAAIq5I,EAASC,YAAat5I,IAE1CwkD,EAAQxsB,GAAIgrB,QAAQvhD,KAAM43I,EAASr2F,QAAShrB,EAAIqhH,EAASC,YAAct5I,IACvEwkD,EAAQxsB,GAAI4qB,OAASy2F,EAASz2F,OAC9B4B,EAAQxsB,GAAIvpB,MAAQ4qI,EAAS5qI,MAC7B+1C,EAAQxsB,GAAItpB,OAAS2qI,EAAS3qI,OAMhCg4C,EAAQ7mC,MAAQ2kC,OAIhBkC,EAAQ7mC,MAAMpR,MAAQ4qI,EAAS5qI,MAC/Bi4C,EAAQ7mC,MAAMnR,OAAS2qI,EAAS3qI,OAChCg4C,EAAQ1D,QAAUq2F,EAASr2F,QAIE,IAAzBq2F,EAASC,cAEb5yF,EAAQ/D,UAAYzR,IAIrBwV,EAAQ9D,OAASy2F,EAASz2F,OAC1B8D,EAAQgrB,aAAc,EAEjBoiE,GAASA,EAAQptF,KAEpBqtF,EAAYC,GAIhB,OAAOttF,KAYT4vF,GAAYt9F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAEzE3yC,YAAaiwI,GAEbd,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,QAEtB16H,IAAdnZ,KAAKsX,OAAqBgtC,EAAMtkD,KAAKsX,KAAOgtC,GAEjDA,EAAMtkD,KAAKg1I,QAAQV,WAAYhwF,GAE/B,MAAMyyB,EAAQ/2E,KAER4/E,EAAS2zD,GAAM31H,IAAK0mC,GAE1B,QAAgBnrC,IAAXymE,EAYJ,OAVA7I,EAAMi+D,QAAQb,UAAW7vF,GAEzB9uB,YAAY,WAENm+G,GAASA,EAAQ/zD,GAEtB7I,EAAMi+D,QAAQZ,QAAS9vF,KAErB,GAEIs7B,EAIR,MAAMlgE,EAAQ3B,SAASC,gBAAiB,+BAAgC,OAExE,SAASq7H,IAER35H,EAAMkP,oBAAqB,OAAQyqH,GAAa,GAChD35H,EAAMkP,oBAAqB,QAAS0qH,GAAc,GAElD/F,GAAMtqI,IAAKq7C,EAAKtkD,MAEX2zI,GAASA,EAAQ3zI,MAEtB+2E,EAAMi+D,QAAQZ,QAAS9vF,GAIxB,SAASg1F,EAAcn5H,GAEtBT,EAAMkP,oBAAqB,OAAQyqH,GAAa,GAChD35H,EAAMkP,oBAAqB,QAAS0qH,GAAc,GAE7CzF,GAAUA,EAAS1zH,GAExB42D,EAAMi+D,QAAQX,UAAW/vF,GACzByyB,EAAMi+D,QAAQZ,QAAS9vF,GAiBxB,OAbA5kC,EAAMQ,iBAAkB,OAAQm5H,GAAa,GAC7C35H,EAAMQ,iBAAkB,QAASo5H,GAAc,GAEnB,UAAvBh1F,EAAInZ,OAAQ,EAAG,SAEOhyB,IAArBnZ,KAAKi1I,cAA4Bv1H,EAAMu1H,YAAcj1I,KAAKi1I,aAIhEl+D,EAAMi+D,QAAQb,UAAW7vF,GAEzB5kC,EAAMU,IAAMkkC,EAEL5kC,KAYT02H,GAAkBv9F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAE/E3yC,YAAakwI,GAEbf,KAAM,SAAWkE,EAAM5F,EAAQC,EAAYC,GAE1C,MAAMttF,EAAU,IAAI01B,GAEdy4D,EAAS,IAAIyB,GAAan2I,KAAKg1I,SACrCN,EAAOgB,eAAgB11I,KAAKi1I,aAC5BP,EAAOkB,QAAS51I,KAAKsX,MAErB,IAAI0hI,EAAS,EAEb,SAASC,EAAap5I,GAErB60I,EAAOW,KAAMkE,EAAM15I,IAAK,SAAW6f,GAElC6mC,EAAQlC,OAAQxkD,GAAM6f,EAEtBs5H,IAEgB,IAAXA,IAEJzyF,EAAQgrB,aAAc,EAEjBoiE,GAASA,EAAQptF,WAIrBptC,EAAW06H,GAIf,IAAM,IAAIh0I,EAAI,EAAGA,EAAI05I,EAAKj3I,SAAWzC,EAEpCo5I,EAAap5I,GAId,OAAO0mD,KAkBT8vF,GAAkBx9F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAE/E3yC,YAAamwI,GAEbhB,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,GAEzC,MAAM98D,EAAQ/2E,KAERumD,EAAU,IAAI+1B,GAEdo4D,EAAS,IAAIsB,GAAYh2I,KAAKg1I,SA+DpC,OA9DAN,EAAOoE,gBAAiB,eACxBpE,EAAOoB,iBAAkB91I,KAAKo1I,eAC9BV,EAAOkB,QAAS51I,KAAKsX,MACrBo9H,EAAOiB,mBAAoB5+D,EAAMm+D,iBACjCR,EAAOW,KAAM/wF,GAAK,SAAWn5C,GAE5B,MAAMquI,EAAUziE,EAAMthE,MAAOtK,GAEtBquI,SAEgBrgI,IAAlBqgI,EAAQ95H,MAEZ6mC,EAAQ7mC,MAAQ85H,EAAQ95H,WAEIvG,IAAjBqgI,EAAQj5I,OAEnBgmD,EAAQ7mC,MAAMpR,MAAQkrI,EAAQlrI,MAC9Bi4C,EAAQ7mC,MAAMnR,OAASirI,EAAQjrI,OAC/Bg4C,EAAQ7mC,MAAMnf,KAAOi5I,EAAQj5I,MAI9BgmD,EAAQlE,WAA0BlpC,IAAlBqgI,EAAQn3F,MAAsBm3F,EAAQn3F,MAAQ7R,GAC9D+V,EAAQjE,WAA0BnpC,IAAlBqgI,EAAQl3F,MAAsBk3F,EAAQl3F,MAAQ9R,GAE9D+V,EAAQhE,eAAkCppC,IAAtBqgI,EAAQj3F,UAA0Bi3F,EAAQj3F,UAAYxR,GAC1EwV,EAAQ/D,eAAkCrpC,IAAtBqgI,EAAQh3F,UAA0Bg3F,EAAQh3F,UAAYzR,GAE1EwV,EAAQ7D,gBAAoCvpC,IAAvBqgI,EAAQ92F,WAA2B82F,EAAQ92F,WAAa,OAErDvpC,IAAnBqgI,EAAQ/2F,SAEZ8D,EAAQ9D,OAAS+2F,EAAQ/2F,aAIJtpC,IAAjBqgI,EAAQ15G,OAEZymB,EAAQzmB,KAAO05G,EAAQ15G,WAIC3mB,IAApBqgI,EAAQ32F,UAEZ0D,EAAQ1D,QAAU22F,EAAQ32F,QAC1B0D,EAAQ/D,UAAYtR,IAIQ,IAAxBsoG,EAAQL,cAEZ5yF,EAAQ/D,UAAYzR,IAIrBwV,EAAQgrB,aAAc,EAEjBoiE,GAASA,EAAQptF,EAASizF,MAE7B5F,EAAYC,GAGRttF,KAYT+vF,GAAcz9F,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAE3E3yC,YAAaowI,GAEbjB,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,GAEzC,MAAMttF,EAAU,IAAItE,GAEdyyF,EAAS,IAAIyB,GAAan2I,KAAKg1I,SAsBrC,OArBAN,EAAOgB,eAAgB11I,KAAKi1I,aAC5BP,EAAOkB,QAAS51I,KAAKsX,MAErBo9H,EAAOW,KAAM/wF,GAAK,SAAW5kC,GAE5B6mC,EAAQ7mC,MAAQA,EAGhB,MAAM+5H,EAASn1F,EAAIo1F,OAAQ,kBAAqB,GAA4C,IAAvCp1F,EAAIo1F,OAAQ,sBAEjEnzF,EAAQ9D,OAASg3F,EAASxnG,GAAYC,GACtCqU,EAAQgrB,aAAc,OAENp4D,IAAXw6H,GAEJA,EAAQptF,KAIPqtF,EAAYC,GAERttF,KA4CT/mD,OAAOo5C,OAAQ29F,GAAM19F,UAAW,CAK/B3kC,SAAU,WAGT,OADAvH,QAAQoK,KAAM,6CACP,MAORhE,WAAY,SAAWoB,EAAGwlI,GAEzB,MAAMrsI,EAAItN,KAAK45I,eAAgBzlI,GAC/B,OAAOnU,KAAKkU,SAAU5G,EAAGqsI,IAM1BE,UAAW,SAAWC,EAAY,GAEjC,MAAMtsF,EAAS,GAEf,IAAM,IAAIn5C,EAAI,EAAGA,GAAKylI,EAAWzlI,IAEhCm5C,EAAOlsD,KAAMtB,KAAKkU,SAAUG,EAAIylI,IAIjC,OAAOtsF,GAMRyxE,gBAAiB,SAAW6a,EAAY,GAEvC,MAAMtsF,EAAS,GAEf,IAAM,IAAIn5C,EAAI,EAAGA,GAAKylI,EAAWzlI,IAEhCm5C,EAAOlsD,KAAMtB,KAAK+S,WAAYsB,EAAIylI,IAInC,OAAOtsF,GAMR/6C,UAAW,WAEV,MAAMsnI,EAAU/5I,KAAKg6I,aACrB,OAAOD,EAASA,EAAQz3I,OAAS,IAMlC03I,WAAY,SAAWF,GAItB,QAFmB3gI,IAAd2gI,IAA0BA,EAAY95I,KAAKw2I,oBAE3Cx2I,KAAKi6I,iBACPj6I,KAAKi6I,gBAAgB33I,SAAWw3I,EAAY,IAC5C95I,KAAKuxE,YAEP,OAAOvxE,KAAKi6I,gBAIbj6I,KAAKuxE,aAAc,EAEnB,MAAM/0D,EAAQ,GACd,IAAIxW,EAASpF,EAAOZ,KAAKkU,SAAU,GAC/B1O,EAAM,EAEVgX,EAAMlb,KAAM,GAEZ,IAAM,IAAIT,EAAI,EAAGA,GAAKi5I,EAAWj5I,IAEhCmF,EAAUhG,KAAKkU,SAAUrT,EAAIi5I,GAC7Bt0I,GAAOQ,EAAQs3C,WAAY18C,GAC3B4b,EAAMlb,KAAMkE,GACZ5E,EAAOoF,EAMR,OAFAhG,KAAKi6I,gBAAkBz9H,EAEhBA,GAIR1K,iBAAkB,WAEjB9R,KAAKuxE,aAAc,EACnBvxE,KAAKg6I,cAMNJ,eAAgB,SAAWzlI,EAAGvK,GAE7B,MAAMswI,EAAal6I,KAAKg6I,aAExB,IAAIn6I,EAAI,EACR,MAAM6tD,EAAKwsF,EAAW53I,OAEtB,IAAI63I,EAIHA,EAFIvwI,GAMcuK,EAAI+lI,EAAYxsF,EAAK,GAMxC,IAA4B0sF,EAAxB3/F,EAAM,EAAGC,EAAOgT,EAAK,EAEzB,KAAQjT,GAAOC,GAMd,GAJA76C,EAAIwD,KAAK+pB,MAAOqtB,GAAQC,EAAOD,GAAQ,GAEvC2/F,EAAaF,EAAYr6I,GAAMs6I,EAE1BC,EAAa,EAEjB3/F,EAAM56C,EAAI,MAEJ,MAAKu6I,EAAa,GAIlB,CAEN1/F,EAAO76C,EACP,MALA66C,EAAO76C,EAAI,EAeb,GAFAA,EAAI66C,EAECw/F,EAAYr6I,KAAQs6I,EAExB,OAAOt6I,GAAM6tD,EAAK,GAMnB,MAAM2sF,EAAeH,EAAYr6I,GAajC,OAFYA,GAJcs6I,EAAkBE,IANxBH,EAAYr6I,EAAI,GAEAw6I,KAQE3sF,EAAK,IAW5C54C,WAAY,SAAWxH,EAAGqsI,GAEzB,MAAMvlH,EAAQ,KACd,IAAI0+B,EAAKxlD,EAAI8mB,EACT9f,EAAKhH,EAAI8mB,EAIR0+B,EAAK,IAAIA,EAAK,GACdx+C,EAAK,IAAIA,EAAK,GAEnB,MAAMgmI,EAAMt6I,KAAKkU,SAAU4+C,GACrBynF,EAAMv6I,KAAKkU,SAAUI,GAErBk9D,EAAUmoE,IAAsBW,EAAc,UAAI,IAAIt+F,GAAY,IAAI2O,IAI5E,OAFA6mB,EAAQ1uD,KAAMy3H,GAAMhxI,IAAK+wI,GAAMprI,YAExBsiE,GAIRp9D,aAAc,SAAWD,EAAGwlI,GAE3B,MAAMrsI,EAAItN,KAAK45I,eAAgBzlI,GAC/B,OAAOnU,KAAK8U,WAAYxH,EAAGqsI,IAI5Bza,oBAAqB,SAAW/F,EAAUmO,GAIzC,MAAM9vG,EAAS,IAAImzB,GAEb68E,EAAW,GACXr5D,EAAU,GACVizD,EAAY,GAEZ5B,EAAM,IAAI70E,GACV6vF,EAAM,IAAItmF,GAIhB,IAAM,IAAIr0D,EAAI,EAAGA,GAAKs5H,EAAUt5H,IAAO,CAEtC,MAAMsU,EAAItU,EAAIs5H,EAEdqO,EAAU3nI,GAAMG,KAAKoU,aAAcD,EAAG,IAAIw2C,IAC1C68E,EAAU3nI,GAAIqP,YAOfi/D,EAAS,GAAM,IAAIxjB,GACnBy2E,EAAW,GAAM,IAAIz2E,GACrB,IAAI1lD,EAAM2O,OAAO6mI,UACjB,MAAMr5F,EAAK/9C,KAAKC,IAAKkkI,EAAU,GAAI1nI,GAC7BuhD,EAAKh+C,KAAKC,IAAKkkI,EAAU,GAAIznI,GAC7B26I,EAAKr3I,KAAKC,IAAKkkI,EAAU,GAAIrnI,GAE9BihD,GAAMn8C,IAEVA,EAAMm8C,EACN5pB,EAAO5uB,IAAK,EAAG,EAAG,IAIdy4C,GAAMp8C,IAEVA,EAAMo8C,EACN7pB,EAAO5uB,IAAK,EAAG,EAAG,IAId8xI,GAAMz1I,GAEVuyB,EAAO5uB,IAAK,EAAG,EAAG,GAInB42H,EAAIvzE,aAAcu7E,EAAU,GAAKhwG,GAAStoB,YAE1Ci/D,EAAS,GAAIliB,aAAcu7E,EAAU,GAAKhI,GAC1C4B,EAAW,GAAIn1E,aAAcu7E,EAAU,GAAKr5D,EAAS,IAKrD,IAAM,IAAItuE,EAAI,EAAGA,GAAKs5H,EAAUt5H,IAAO,CAQtC,GANAsuE,EAAStuE,GAAMsuE,EAAStuE,EAAI,GAAI8J,QAEhCy3H,EAAWvhI,GAAMuhI,EAAWvhI,EAAI,GAAI8J,QAEpC61H,EAAIvzE,aAAcu7E,EAAU3nI,EAAI,GAAK2nI,EAAU3nI,IAE1C2/H,EAAIl9H,SAAWsR,OAAOnK,QAAU,CAEpC+1H,EAAItwH,YAEJ,MAAM8pB,EAAQ31B,KAAKyuB,KAAM0nB,GAAUQ,MAAOwtF,EAAU3nI,EAAI,GAAI6gB,IAAK8mH,EAAU3nI,KAAS,EAAG,IAEvFsuE,EAAStuE,GAAIilD,aAAc01F,EAAIljF,iBAAkBkoE,EAAKxmG,IAIvDooG,EAAWvhI,GAAIosD,aAAcu7E,EAAU3nI,GAAKsuE,EAAStuE,IAMtD,IAAgB,IAAXynI,EAAkB,CAEtB,IAAItuG,EAAQ31B,KAAKyuB,KAAM0nB,GAAUQ,MAAOm0B,EAAS,GAAIztD,IAAKytD,EAASgrD,KAAgB,EAAG,IACtFngG,GAASmgG,EAEJqO,EAAU,GAAI9mH,IAAK8+G,EAAIvzE,aAAckiB,EAAS,GAAKA,EAASgrD,KAAiB,IAEjFngG,GAAUA,GAIX,IAAM,IAAIn5B,EAAI,EAAGA,GAAKs5H,EAAUt5H,IAG/BsuE,EAAStuE,GAAIilD,aAAc01F,EAAIljF,iBAAkBkwE,EAAU3nI,GAAKm5B,EAAQn5B,IACxEuhI,EAAWvhI,GAAIosD,aAAcu7E,EAAU3nI,GAAKsuE,EAAStuE,IAMvD,MAAO,CACN2nI,SAAUA,EACVr5D,QAASA,EACTizD,UAAWA,IAKbz3H,MAAO,WAEN,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,OAIrC8iB,KAAM,SAAW+gC,GAIhB,OAFA7jD,KAAKw2I,mBAAqB3yF,EAAO2yF,mBAE1Bx2I,MAIRqV,OAAQ,WAEP,MAAM9U,EAAO,CACZ2jD,SAAU,CACTb,QAAS,IACTvjB,KAAM,QACNqkB,UAAW,iBAOb,OAHA5jD,EAAKi2I,mBAAqBx2I,KAAKw2I,mBAC/Bj2I,EAAKu/B,KAAO9/B,KAAK8/B,KAEVv/B,GAIRyxH,SAAU,SAAWC,GAIpB,OAFAjyH,KAAKw2I,mBAAqBvkB,EAAKukB,mBAExBx2I,QA2BTy2I,GAAa59F,UAAYr5C,OAAOkkD,OAAQ6yF,GAAM19F,WAC9C49F,GAAa59F,UAAU3yC,YAAcuwI,GAErCA,GAAa59F,UAAU8hG,gBAAiB,EAExClE,GAAa59F,UAAU3kC,SAAW,SAAW5G,EAAGqsI,GAE/C,MAAM1pI,EAAQ0pI,GAAkB,IAAI39F,GAE9B4+F,EAAkB,EAAVv3I,KAAK6G,GACnB,IAAI2wI,EAAa76I,KAAK+2I,UAAY/2I,KAAK82I,YACvC,MAAMgE,EAAaz3I,KAAKC,IAAKu3I,GAAejnI,OAAOnK,QAGnD,KAAQoxI,EAAa,GAAIA,GAAcD,EACvC,KAAQC,EAAaD,GAAQC,GAAcD,EAEtCC,EAAajnI,OAAOnK,UAIvBoxI,EAFIC,EAES,EAIAF,IAMU,IAApB56I,KAAKg3I,YAAyB8D,IAE7BD,IAAeD,EAEnBC,GAAeD,EAIfC,GAA0BD,GAM5B,MAAM5wI,EAAQhK,KAAK82I,YAAcxpI,EAAIutI,EACrC,IAAI/6I,EAAIE,KAAK02I,GAAK12I,KAAK42I,QAAUvzI,KAAKqH,IAAKV,GACvCjK,EAAIC,KAAK22I,GAAK32I,KAAK62I,QAAUxzI,KAAKsH,IAAKX,GAE3C,GAAwB,IAAnBhK,KAAKi3I,UAAkB,CAE3B,MAAMvsI,EAAMrH,KAAKqH,IAAK1K,KAAKi3I,WACrBtsI,EAAMtH,KAAKsH,IAAK3K,KAAKi3I,WAErB71F,EAAKthD,EAAIE,KAAK02I,GACdr1F,EAAKthD,EAAIC,KAAK22I,GAGpB72I,EAAIshD,EAAK12C,EAAM22C,EAAK12C,EAAM3K,KAAK02I,GAC/B32I,EAAIqhD,EAAKz2C,EAAM02C,EAAK32C,EAAM1K,KAAK22I,GAIhC,OAAO1mI,EAAMrH,IAAK9I,EAAGC,IAItB02I,GAAa59F,UAAU/1B,KAAO,SAAW+gC,GAiBxC,OAfA0yF,GAAM19F,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAK02I,GAAK7yF,EAAO6yF,GACjB12I,KAAK22I,GAAK9yF,EAAO8yF,GAEjB32I,KAAK42I,QAAU/yF,EAAO+yF,QACtB52I,KAAK62I,QAAUhzF,EAAOgzF,QAEtB72I,KAAK82I,YAAcjzF,EAAOizF,YAC1B92I,KAAK+2I,UAAYlzF,EAAOkzF,UAExB/2I,KAAKg3I,WAAanzF,EAAOmzF,WAEzBh3I,KAAKi3I,UAAYpzF,EAAOozF,UAEjBj3I,MAKRy2I,GAAa59F,UAAUxjC,OAAS,WAE/B,MAAM9U,EAAOg2I,GAAM19F,UAAUxjC,OAAOgkC,KAAMr5C,MAe1C,OAbAO,EAAKm2I,GAAK12I,KAAK02I,GACfn2I,EAAKo2I,GAAK32I,KAAK22I,GAEfp2I,EAAKq2I,QAAU52I,KAAK42I,QACpBr2I,EAAKs2I,QAAU72I,KAAK62I,QAEpBt2I,EAAKu2I,YAAc92I,KAAK82I,YACxBv2I,EAAKw2I,UAAY/2I,KAAK+2I,UAEtBx2I,EAAKy2I,WAAah3I,KAAKg3I,WAEvBz2I,EAAK02I,UAAYj3I,KAAKi3I,UAEf12I,GAIRk2I,GAAa59F,UAAUm5E,SAAW,SAAWC,GAiB5C,OAfAskB,GAAM19F,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAErCjyH,KAAK02I,GAAKzkB,EAAKykB,GACf12I,KAAK22I,GAAK1kB,EAAK0kB,GAEf32I,KAAK42I,QAAU3kB,EAAK2kB,QACpB52I,KAAK62I,QAAU5kB,EAAK4kB,QAEpB72I,KAAK82I,YAAc7kB,EAAK6kB,YACxB92I,KAAK+2I,UAAY9kB,EAAK8kB,UAEtB/2I,KAAKg3I,WAAa/kB,EAAK+kB,WAEvBh3I,KAAKi3I,UAAYhlB,EAAKglB,UAEfj3I,MAYRk3I,GAASr+F,UAAYr5C,OAAOkkD,OAAQ+yF,GAAa59F,WACjDq+F,GAASr+F,UAAU3yC,YAAcgxI,GAEjCA,GAASr+F,UAAUkiG,YAAa,EA+EhC,MAAMlqI,GAAM,IAAI85C,GACVtmD,GAAK,IAAI+yI,GAAa9yI,GAAK,IAAI8yI,GAAa4D,GAAK,IAAI5D,GAE3D,SAAS6D,GAAkBztF,EAAS,GAAI85E,GAAS,EAAO4T,EAAY,cAAe3D,EAAU,IAE5FhB,GAAMl9F,KAAMr5C,MAEZA,KAAK8/B,KAAO,mBAEZ9/B,KAAKwtD,OAASA,EACdxtD,KAAKsnI,OAASA,EACdtnI,KAAKk7I,UAAYA,EACjBl7I,KAAKu3I,QAAUA,EAoKhB,SAAS4D,GAAY7tI,EAAGkN,EAAIhW,EAAIC,EAAIg9D,GAEnC,MAAMlyD,EAAmB,IAAZ9K,EAAK+V,GACZhL,EAAmB,IAAZiyD,EAAKj9D,GACZ8P,EAAKhH,EAAIA,EAEf,OAAS,EAAI9I,EAAK,EAAIC,EAAK8K,EAAKC,IADrBlC,EAAIgH,KACiC,EAAI9P,EAAK,EAAIC,EAAK,EAAI8K,EAAKC,GAAO8E,EAAK/E,EAAKjC,EAAI9I,EAyBjG,SAAS42I,GAAiB9tI,EAAGkN,EAAIhW,EAAIC,GAEpC,OArBD,SAA4B6I,EAAGzM,GAE9B,MAAMoc,EAAI,EAAI3P,EACd,OAAO2P,EAAIA,EAAIpc,EAkBRw6I,CAAmB/tI,EAAGkN,GAd9B,SAA4BlN,EAAGzM,GAE9B,OAAO,GAAM,EAAIyM,GAAMA,EAAIzM,EAYSy6I,CAAmBhuI,EAAG9I,GAR3D,SAA4B8I,EAAGzM,GAE9B,OAAOyM,EAAIA,EAAIzM,EAOd06I,CAAmBjuI,EAAG7I,GAgCxB,SAAS+2I,GAAaluI,EAAGkN,EAAIhW,EAAIC,EAAIg9D,GAEpC,OA5BD,SAAwBn0D,EAAGzM,GAE1B,MAAMoc,EAAI,EAAI3P,EACd,OAAO2P,EAAIA,EAAIA,EAAIpc,EAyBZ46I,CAAenuI,EAAGkN,GArB1B,SAAwBlN,EAAGzM,GAE1B,MAAMoc,EAAI,EAAI3P,EACd,OAAO,EAAI2P,EAAIA,EAAI3P,EAAIzM,EAkBS66I,CAAepuI,EAAG9I,GAdnD,SAAwB8I,EAAGzM,GAE1B,OAAO,GAAM,EAAIyM,GAAMA,EAAIA,EAAIzM,EAY0B86I,CAAeruI,EAAG7I,GAR5E,SAAwB6I,EAAGzM,GAE1B,OAAOyM,EAAIA,EAAIA,EAAIzM,EAOlB+6I,CAAetuI,EAAGm0D,GAIpB,SAASxwD,GAAkB1B,EAAK,IAAIysC,GAAWxsC,EAAK,IAAIwsC,GAAWpqB,EAAK,IAAIoqB,GAAW6/F,EAAK,IAAI7/F,IAE/Fu6F,GAAMl9F,KAAMr5C,MAEZA,KAAK8/B,KAAO,mBAEZ9/B,KAAKuP,GAAKA,EACVvP,KAAKwP,GAAKA,EACVxP,KAAK4xB,GAAKA,EACV5xB,KAAK67I,GAAKA,EA+DX,SAASC,GAAmBvsI,EAAK,IAAIo7C,GAAWn7C,EAAK,IAAIm7C,GAAW/4B,EAAK,IAAI+4B,GAAWkxF,EAAK,IAAIlxF,IAEhG4rF,GAAMl9F,KAAMr5C,MAEZA,KAAK8/B,KAAO,oBAEZ9/B,KAAKuP,GAAKA,EACVvP,KAAKwP,GAAKA,EACVxP,KAAK4xB,GAAKA,EACV5xB,KAAK67I,GAAKA,EAgEX,SAASE,GAAWvsI,EAAK,IAAIwsC,GAAWpqB,EAAK,IAAIoqB,IAEhDu6F,GAAMl9F,KAAMr5C,MAEZA,KAAK8/B,KAAO,YAEZ9/B,KAAKwP,GAAKA,EACVxP,KAAK4xB,GAAKA,EA+EX,SAASoqH,GAAYxsI,EAAK,IAAIm7C,GAAW/4B,EAAK,IAAI+4B,IAEjD4rF,GAAMl9F,KAAMr5C,MAEZA,KAAK8/B,KAAO,aAEZ9/B,KAAKwP,GAAKA,EACVxP,KAAK4xB,GAAKA,EAqEX,SAASqqH,GAAsB1sI,EAAK,IAAIysC,GAAWxsC,EAAK,IAAIwsC,GAAWpqB,EAAK,IAAIoqB,IAE/Eu6F,GAAMl9F,KAAMr5C,MAEZA,KAAK8/B,KAAO,uBAEZ9/B,KAAKuP,GAAKA,EACVvP,KAAKwP,GAAKA,EACVxP,KAAK4xB,GAAKA,EA4DX,SAASsqH,GAAuB3sI,EAAK,IAAIo7C,GAAWn7C,EAAK,IAAIm7C,GAAW/4B,EAAK,IAAI+4B,IAEhF4rF,GAAMl9F,KAAMr5C,MAEZA,KAAK8/B,KAAO,wBAEZ9/B,KAAKuP,GAAKA,EACVvP,KAAKwP,GAAKA,EACVxP,KAAK4xB,GAAKA,EA6DX,SAASuqH,GAAa3uF,EAAS,IAE9B+oF,GAAMl9F,KAAMr5C,MAEZA,KAAK8/B,KAAO,cAEZ9/B,KAAKwtD,OAASA,EA3qBfytF,GAAiBpiG,UAAYr5C,OAAOkkD,OAAQ6yF,GAAM19F,WAClDoiG,GAAiBpiG,UAAU3yC,YAAc+0I,GAEzCA,GAAiBpiG,UAAUujG,oBAAqB,EAEhDnB,GAAiBpiG,UAAU3kC,SAAW,SAAW5G,EAAGqsI,EAAiB,IAAIhvF,IAExE,MAAM16C,EAAQ0pI,EAERnsF,EAASxtD,KAAKwtD,OACdn/C,EAAIm/C,EAAOlrD,OAEXzB,GAAMwN,GAAMrO,KAAKsnI,OAAS,EAAI,IAAQh6H,EAC5C,IAcIkN,EAAIinD,EAdJ46E,EAAWh5I,KAAK+pB,MAAOvsB,GACvB0wH,EAAS1wH,EAAIw7I,EAEZr8I,KAAKsnI,OAET+U,GAAYA,EAAW,EAAI,GAAMh5I,KAAK+pB,MAAO/pB,KAAKC,IAAK+4I,GAAahuI,GAAM,GAAMA,EAE1D,IAAXkjH,GAAgB8qB,IAAahuI,EAAI,IAE5CguI,EAAWhuI,EAAI,EACfkjH,EAAS,GAMLvxH,KAAKsnI,QAAU+U,EAAW,EAE9B7hI,EAAKgzC,GAAU6uF,EAAW,GAAMhuI,IAKhCwC,GAAI0rC,WAAYiR,EAAQ,GAAKA,EAAQ,IAAMvkD,IAAKukD,EAAQ,IACxDhzC,EAAK3J,IAIN,MAAMrM,EAAKgpD,EAAQ6uF,EAAWhuI,GACxB5J,EAAK+oD,GAAU6uF,EAAW,GAAMhuI,GActC,GAZKrO,KAAKsnI,QAAU+U,EAAW,EAAIhuI,EAElCozD,EAAKjU,GAAU6uF,EAAW,GAAMhuI,IAKhCwC,GAAI0rC,WAAYiR,EAAQn/C,EAAI,GAAKm/C,EAAQn/C,EAAI,IAAMpF,IAAKukD,EAAQn/C,EAAI,IACpEozD,EAAK5wD,IAIkB,gBAAnB7Q,KAAKk7I,WAAkD,YAAnBl7I,KAAKk7I,UAA0B,CAGvE,MAAMnxI,EAAyB,YAAnB/J,KAAKk7I,UAA0B,GAAM,IACjD,IAAIzD,EAAMp0I,KAAK0G,IAAKyQ,EAAG+iC,kBAAmB/4C,GAAMuF,GAC5C2tI,EAAMr0I,KAAK0G,IAAKvF,EAAG+4C,kBAAmB94C,GAAMsF,GAC5C4tI,EAAMt0I,KAAK0G,IAAKtF,EAAG84C,kBAAmBkkB,GAAM13D,GAG3C2tI,EAAM,OAAOA,EAAM,GACnBD,EAAM,OAAOA,EAAMC,GACnBC,EAAM,OAAOA,EAAMD,GAExBrzI,GAAGmzI,yBAA0Bh9H,EAAG1a,EAAG0E,EAAG1E,EAAG2E,EAAG3E,EAAG2hE,EAAG3hE,EAAG23I,EAAKC,EAAKC,GAC/DrzI,GAAGkzI,yBAA0Bh9H,EAAGza,EAAGyE,EAAGzE,EAAG0E,EAAG1E,EAAG0hE,EAAG1hE,EAAG03I,EAAKC,EAAKC,GAC/DqD,GAAGxD,yBAA0Bh9H,EAAGra,EAAGqE,EAAGrE,EAAGsE,EAAGtE,EAAGshE,EAAGthE,EAAGs3I,EAAKC,EAAKC,OAEjC,eAAnB33I,KAAKk7I,YAEhB72I,GAAGizI,eAAgB98H,EAAG1a,EAAG0E,EAAG1E,EAAG2E,EAAG3E,EAAG2hE,EAAG3hE,EAAGE,KAAKu3I,SAChDjzI,GAAGgzI,eAAgB98H,EAAGza,EAAGyE,EAAGzE,EAAG0E,EAAG1E,EAAG0hE,EAAG1hE,EAAGC,KAAKu3I,SAChDyD,GAAG1D,eAAgB98H,EAAGra,EAAGqE,EAAGrE,EAAGsE,EAAGtE,EAAGshE,EAAGthE,EAAGH,KAAKu3I,UAUjD,OANAtnI,EAAMrH,IACLvE,GAAGuzI,KAAMrmB,GACTjtH,GAAGszI,KAAMrmB,GACTypB,GAAGpD,KAAMrmB,IAGHthH,GAIRgrI,GAAiBpiG,UAAU/1B,KAAO,SAAW+gC,GAE5C0yF,GAAM19F,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKwtD,OAAS,GAEd,IAAM,IAAI3tD,EAAI,EAAGwO,EAAIw1C,EAAO2J,OAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAAO,CAExD,MAAMoQ,EAAQ4zC,EAAO2J,OAAQ3tD,GAE7BG,KAAKwtD,OAAOlsD,KAAM2O,EAAMtG,SAQzB,OAJA3J,KAAKsnI,OAASzjF,EAAOyjF,OACrBtnI,KAAKk7I,UAAYr3F,EAAOq3F,UACxBl7I,KAAKu3I,QAAU1zF,EAAO0zF,QAEfv3I,MAIRi7I,GAAiBpiG,UAAUxjC,OAAS,WAEnC,MAAM9U,EAAOg2I,GAAM19F,UAAUxjC,OAAOgkC,KAAMr5C,MAE1CO,EAAKitD,OAAS,GAEd,IAAM,IAAI3tD,EAAI,EAAGwO,EAAIrO,KAAKwtD,OAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEtD,MAAMoQ,EAAQjQ,KAAKwtD,OAAQ3tD,GAC3BU,EAAKitD,OAAOlsD,KAAM2O,EAAMytC,WAQzB,OAJAn9C,EAAK+mI,OAAStnI,KAAKsnI,OACnB/mI,EAAK26I,UAAYl7I,KAAKk7I,UACtB36I,EAAKg3I,QAAUv3I,KAAKu3I,QAEbh3I,GAIR06I,GAAiBpiG,UAAUm5E,SAAW,SAAWC,GAEhDskB,GAAM19F,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAErCjyH,KAAKwtD,OAAS,GAEd,IAAM,IAAI3tD,EAAI,EAAGwO,EAAI4jH,EAAKzkE,OAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEtD,MAAMoQ,EAAQgiH,EAAKzkE,OAAQ3tD,GAC3BG,KAAKwtD,OAAOlsD,MAAM,IAAIqpD,IAAUx8C,UAAW8B,IAQ5C,OAJAjQ,KAAKsnI,OAASrV,EAAKqV,OACnBtnI,KAAKk7I,UAAYjpB,EAAKipB,UACtBl7I,KAAKu3I,QAAUtlB,EAAKslB,QAEbv3I,MA+FRiR,GAAiB4nC,UAAYr5C,OAAOkkD,OAAQ6yF,GAAM19F,WAClD5nC,GAAiB4nC,UAAU3yC,YAAc+K,GAEzCA,GAAiB4nC,UAAUyjG,oBAAqB,EAEhDrrI,GAAiB4nC,UAAU3kC,SAAW,SAAW5G,EAAGqsI,EAAiB,IAAI39F,IAExE,MAAM/rC,EAAQ0pI,EAERpqI,EAAKvP,KAAKuP,GAAIC,EAAKxP,KAAKwP,GAAIoiB,EAAK5xB,KAAK4xB,GAAIiqH,EAAK77I,KAAK67I,GAO1D,OALA5rI,EAAMrH,IACL4yI,GAAaluI,EAAGiC,EAAGzP,EAAG0P,EAAG1P,EAAG8xB,EAAG9xB,EAAG+7I,EAAG/7I,GACrC07I,GAAaluI,EAAGiC,EAAGxP,EAAGyP,EAAGzP,EAAG6xB,EAAG7xB,EAAG87I,EAAG97I,IAG/BkQ,GAIRgB,GAAiB4nC,UAAU/1B,KAAO,SAAW+gC,GAS5C,OAPA0yF,GAAM19F,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKuP,GAAGuT,KAAM+gC,EAAOt0C,IACrBvP,KAAKwP,GAAGsT,KAAM+gC,EAAOr0C,IACrBxP,KAAK4xB,GAAG9O,KAAM+gC,EAAOjyB,IACrB5xB,KAAK67I,GAAG/4H,KAAM+gC,EAAOg4F,IAEd77I,MAIRiR,GAAiB4nC,UAAUxjC,OAAS,WAEnC,MAAM9U,EAAOg2I,GAAM19F,UAAUxjC,OAAOgkC,KAAMr5C,MAO1C,OALAO,EAAKgP,GAAKvP,KAAKuP,GAAGmuC,UAClBn9C,EAAKiP,GAAKxP,KAAKwP,GAAGkuC,UAClBn9C,EAAKqxB,GAAK5xB,KAAK4xB,GAAG8rB,UAClBn9C,EAAKs7I,GAAK77I,KAAK67I,GAAGn+F,UAEXn9C,GAIR0Q,GAAiB4nC,UAAUm5E,SAAW,SAAWC,GAShD,OAPAskB,GAAM19F,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAErCjyH,KAAKuP,GAAGpB,UAAW8jH,EAAK1iH,IACxBvP,KAAKwP,GAAGrB,UAAW8jH,EAAKziH,IACxBxP,KAAK4xB,GAAGzjB,UAAW8jH,EAAKrgG,IACxB5xB,KAAK67I,GAAG1tI,UAAW8jH,EAAK4pB,IAEjB77I,MAiBR87I,GAAkBjjG,UAAYr5C,OAAOkkD,OAAQ6yF,GAAM19F,WACnDijG,GAAkBjjG,UAAU3yC,YAAc41I,GAE1CA,GAAkBjjG,UAAU0jG,qBAAsB,EAElDT,GAAkBjjG,UAAU3kC,SAAW,SAAW5G,EAAGqsI,EAAiB,IAAIhvF,IAEzE,MAAM16C,EAAQ0pI,EAERpqI,EAAKvP,KAAKuP,GAAIC,EAAKxP,KAAKwP,GAAIoiB,EAAK5xB,KAAK4xB,GAAIiqH,EAAK77I,KAAK67I,GAQ1D,OANA5rI,EAAMrH,IACL4yI,GAAaluI,EAAGiC,EAAGzP,EAAG0P,EAAG1P,EAAG8xB,EAAG9xB,EAAG+7I,EAAG/7I,GACrC07I,GAAaluI,EAAGiC,EAAGxP,EAAGyP,EAAGzP,EAAG6xB,EAAG7xB,EAAG87I,EAAG97I,GACrCy7I,GAAaluI,EAAGiC,EAAGpP,EAAGqP,EAAGrP,EAAGyxB,EAAGzxB,EAAG07I,EAAG17I,IAG/B8P,GAIR6rI,GAAkBjjG,UAAU/1B,KAAO,SAAW+gC,GAS7C,OAPA0yF,GAAM19F,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKuP,GAAGuT,KAAM+gC,EAAOt0C,IACrBvP,KAAKwP,GAAGsT,KAAM+gC,EAAOr0C,IACrBxP,KAAK4xB,GAAG9O,KAAM+gC,EAAOjyB,IACrB5xB,KAAK67I,GAAG/4H,KAAM+gC,EAAOg4F,IAEd77I,MAIR87I,GAAkBjjG,UAAUxjC,OAAS,WAEpC,MAAM9U,EAAOg2I,GAAM19F,UAAUxjC,OAAOgkC,KAAMr5C,MAO1C,OALAO,EAAKgP,GAAKvP,KAAKuP,GAAGmuC,UAClBn9C,EAAKiP,GAAKxP,KAAKwP,GAAGkuC,UAClBn9C,EAAKqxB,GAAK5xB,KAAK4xB,GAAG8rB,UAClBn9C,EAAKs7I,GAAK77I,KAAK67I,GAAGn+F,UAEXn9C,GAIRu7I,GAAkBjjG,UAAUm5E,SAAW,SAAWC,GASjD,OAPAskB,GAAM19F,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAErCjyH,KAAKuP,GAAGpB,UAAW8jH,EAAK1iH,IACxBvP,KAAKwP,GAAGrB,UAAW8jH,EAAKziH,IACxBxP,KAAK4xB,GAAGzjB,UAAW8jH,EAAKrgG,IACxB5xB,KAAK67I,GAAG1tI,UAAW8jH,EAAK4pB,IAEjB77I,MAeR+7I,GAAUljG,UAAYr5C,OAAOkkD,OAAQ6yF,GAAM19F,WAC3CkjG,GAAUljG,UAAU3yC,YAAc61I,GAElCA,GAAUljG,UAAU2jG,aAAc,EAElCT,GAAUljG,UAAU3kC,SAAW,SAAW5G,EAAGqsI,EAAiB,IAAI39F,IAEjE,MAAM/rC,EAAQ0pI,EAad,OAXW,IAANrsI,EAEJ2C,EAAM6S,KAAM9iB,KAAK4xB,KAIjB3hB,EAAM6S,KAAM9iB,KAAK4xB,IAAKroB,IAAKvJ,KAAKwP,IAChCS,EAAMrF,eAAgB0C,GAAIrE,IAAKjJ,KAAKwP,KAI9BS,GAMR8rI,GAAUljG,UAAU9lC,WAAa,SAAWoB,EAAGwlI,GAE9C,OAAO35I,KAAKkU,SAAUC,EAAGwlI,IAI1BoC,GAAUljG,UAAU/jC,WAAa,SAAWxH,EAAGqsI,GAE9C,MAAMnoE,EAAUmoE,GAAkB,IAAI39F,GAItC,OAFAw1B,EAAQ1uD,KAAM9iB,KAAK4xB,IAAKroB,IAAKvJ,KAAKwP,IAAKN,YAEhCsiE,GAIRuqE,GAAUljG,UAAU/1B,KAAO,SAAW+gC,GAOrC,OALA0yF,GAAM19F,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKwP,GAAGsT,KAAM+gC,EAAOr0C,IACrBxP,KAAK4xB,GAAG9O,KAAM+gC,EAAOjyB,IAEd5xB,MAIR+7I,GAAUljG,UAAUxjC,OAAS,WAE5B,MAAM9U,EAAOg2I,GAAM19F,UAAUxjC,OAAOgkC,KAAMr5C,MAK1C,OAHAO,EAAKiP,GAAKxP,KAAKwP,GAAGkuC,UAClBn9C,EAAKqxB,GAAK5xB,KAAK4xB,GAAG8rB,UAEXn9C,GAIRw7I,GAAUljG,UAAUm5E,SAAW,SAAWC,GAOzC,OALAskB,GAAM19F,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAErCjyH,KAAKwP,GAAGrB,UAAW8jH,EAAKziH,IACxBxP,KAAK4xB,GAAGzjB,UAAW8jH,EAAKrgG,IAEjB5xB,MAeRg8I,GAAWnjG,UAAYr5C,OAAOkkD,OAAQ6yF,GAAM19F,WAC5CmjG,GAAWnjG,UAAU3yC,YAAc81I,GAEnCA,GAAWnjG,UAAU4jG,cAAe,EAEpCT,GAAWnjG,UAAU3kC,SAAW,SAAW5G,EAAGqsI,EAAiB,IAAIhvF,IAElE,MAAM16C,EAAQ0pI,EAad,OAXW,IAANrsI,EAEJ2C,EAAM6S,KAAM9iB,KAAK4xB,KAIjB3hB,EAAM6S,KAAM9iB,KAAK4xB,IAAKroB,IAAKvJ,KAAKwP,IAChCS,EAAMrF,eAAgB0C,GAAIrE,IAAKjJ,KAAKwP,KAI9BS,GAMR+rI,GAAWnjG,UAAU9lC,WAAa,SAAWoB,EAAGwlI,GAE/C,OAAO35I,KAAKkU,SAAUC,EAAGwlI,IAI1BqC,GAAWnjG,UAAU/1B,KAAO,SAAW+gC,GAOtC,OALA0yF,GAAM19F,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKwP,GAAGsT,KAAM+gC,EAAOr0C,IACrBxP,KAAK4xB,GAAG9O,KAAM+gC,EAAOjyB,IAEd5xB,MAIRg8I,GAAWnjG,UAAUxjC,OAAS,WAE7B,MAAM9U,EAAOg2I,GAAM19F,UAAUxjC,OAAOgkC,KAAMr5C,MAK1C,OAHAO,EAAKiP,GAAKxP,KAAKwP,GAAGkuC,UAClBn9C,EAAKqxB,GAAK5xB,KAAK4xB,GAAG8rB,UAEXn9C,GAIRy7I,GAAWnjG,UAAUm5E,SAAW,SAAWC,GAO1C,OALAskB,GAAM19F,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAErCjyH,KAAKwP,GAAGrB,UAAW8jH,EAAKziH,IACxBxP,KAAK4xB,GAAGzjB,UAAW8jH,EAAKrgG,IAEjB5xB,MAgBRi8I,GAAqBpjG,UAAYr5C,OAAOkkD,OAAQ6yF,GAAM19F,WACtDojG,GAAqBpjG,UAAU3yC,YAAc+1I,GAE7CA,GAAqBpjG,UAAU6jG,wBAAyB,EAExDT,GAAqBpjG,UAAU3kC,SAAW,SAAW5G,EAAGqsI,EAAiB,IAAI39F,IAE5E,MAAM/rC,EAAQ0pI,EAERpqI,EAAKvP,KAAKuP,GAAIC,EAAKxP,KAAKwP,GAAIoiB,EAAK5xB,KAAK4xB,GAO5C,OALA3hB,EAAMrH,IACLwyI,GAAiB9tI,EAAGiC,EAAGzP,EAAG0P,EAAG1P,EAAG8xB,EAAG9xB,GACnCs7I,GAAiB9tI,EAAGiC,EAAGxP,EAAGyP,EAAGzP,EAAG6xB,EAAG7xB,IAG7BkQ,GAIRgsI,GAAqBpjG,UAAU/1B,KAAO,SAAW+gC,GAQhD,OANA0yF,GAAM19F,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKuP,GAAGuT,KAAM+gC,EAAOt0C,IACrBvP,KAAKwP,GAAGsT,KAAM+gC,EAAOr0C,IACrBxP,KAAK4xB,GAAG9O,KAAM+gC,EAAOjyB,IAEd5xB,MAIRi8I,GAAqBpjG,UAAUxjC,OAAS,WAEvC,MAAM9U,EAAOg2I,GAAM19F,UAAUxjC,OAAOgkC,KAAMr5C,MAM1C,OAJAO,EAAKgP,GAAKvP,KAAKuP,GAAGmuC,UAClBn9C,EAAKiP,GAAKxP,KAAKwP,GAAGkuC,UAClBn9C,EAAKqxB,GAAK5xB,KAAK4xB,GAAG8rB,UAEXn9C,GAIR07I,GAAqBpjG,UAAUm5E,SAAW,SAAWC,GAQpD,OANAskB,GAAM19F,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAErCjyH,KAAKuP,GAAGpB,UAAW8jH,EAAK1iH,IACxBvP,KAAKwP,GAAGrB,UAAW8jH,EAAKziH,IACxBxP,KAAK4xB,GAAGzjB,UAAW8jH,EAAKrgG,IAEjB5xB,MAgBRk8I,GAAsBrjG,UAAYr5C,OAAOkkD,OAAQ6yF,GAAM19F,WACvDqjG,GAAsBrjG,UAAU3yC,YAAcg2I,GAE9CA,GAAsBrjG,UAAU8jG,yBAA0B,EAE1DT,GAAsBrjG,UAAU3kC,SAAW,SAAW5G,EAAGqsI,EAAiB,IAAIhvF,IAE7E,MAAM16C,EAAQ0pI,EAERpqI,EAAKvP,KAAKuP,GAAIC,EAAKxP,KAAKwP,GAAIoiB,EAAK5xB,KAAK4xB,GAQ5C,OANA3hB,EAAMrH,IACLwyI,GAAiB9tI,EAAGiC,EAAGzP,EAAG0P,EAAG1P,EAAG8xB,EAAG9xB,GACnCs7I,GAAiB9tI,EAAGiC,EAAGxP,EAAGyP,EAAGzP,EAAG6xB,EAAG7xB,GACnCq7I,GAAiB9tI,EAAGiC,EAAGpP,EAAGqP,EAAGrP,EAAGyxB,EAAGzxB,IAG7B8P,GAIRisI,GAAsBrjG,UAAU/1B,KAAO,SAAW+gC,GAQjD,OANA0yF,GAAM19F,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKuP,GAAGuT,KAAM+gC,EAAOt0C,IACrBvP,KAAKwP,GAAGsT,KAAM+gC,EAAOr0C,IACrBxP,KAAK4xB,GAAG9O,KAAM+gC,EAAOjyB,IAEd5xB,MAIRk8I,GAAsBrjG,UAAUxjC,OAAS,WAExC,MAAM9U,EAAOg2I,GAAM19F,UAAUxjC,OAAOgkC,KAAMr5C,MAM1C,OAJAO,EAAKgP,GAAKvP,KAAKuP,GAAGmuC,UAClBn9C,EAAKiP,GAAKxP,KAAKwP,GAAGkuC,UAClBn9C,EAAKqxB,GAAK5xB,KAAK4xB,GAAG8rB,UAEXn9C,GAIR27I,GAAsBrjG,UAAUm5E,SAAW,SAAWC,GAQrD,OANAskB,GAAM19F,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAErCjyH,KAAKuP,GAAGpB,UAAW8jH,EAAK1iH,IACxBvP,KAAKwP,GAAGrB,UAAW8jH,EAAKziH,IACxBxP,KAAK4xB,GAAGzjB,UAAW8jH,EAAKrgG,IAEjB5xB,MAcRm8I,GAAYtjG,UAAYr5C,OAAOkkD,OAAQ6yF,GAAM19F,WAC7CsjG,GAAYtjG,UAAU3yC,YAAci2I,GAEpCA,GAAYtjG,UAAU+jG,eAAgB,EAEtCT,GAAYtjG,UAAU3kC,SAAW,SAAW5G,EAAGqsI,EAAiB,IAAI39F,IAEnE,MAAM/rC,EAAQ0pI,EAERnsF,EAASxtD,KAAKwtD,OACd3sD,GAAM2sD,EAAOlrD,OAAS,GAAMgL,EAE5B+uI,EAAWh5I,KAAK+pB,MAAOvsB,GACvB0wH,EAAS1wH,EAAIw7I,EAEb7hI,EAAKgzC,EAAqB,IAAb6uF,EAAiBA,EAAWA,EAAW,GACpD73I,EAAKgpD,EAAQ6uF,GACb53I,EAAK+oD,EAAQ6uF,EAAW7uF,EAAOlrD,OAAS,EAAIkrD,EAAOlrD,OAAS,EAAI+5I,EAAW,GAC3E56E,EAAKjU,EAAQ6uF,EAAW7uF,EAAOlrD,OAAS,EAAIkrD,EAAOlrD,OAAS,EAAI+5I,EAAW,GAOjF,OALApsI,EAAMrH,IACLuyI,GAAY5pB,EAAQ/2G,EAAG1a,EAAG0E,EAAG1E,EAAG2E,EAAG3E,EAAG2hE,EAAG3hE,GACzCq7I,GAAY5pB,EAAQ/2G,EAAGza,EAAGyE,EAAGzE,EAAG0E,EAAG1E,EAAG0hE,EAAG1hE,IAGnCkQ,GAIRksI,GAAYtjG,UAAU/1B,KAAO,SAAW+gC,GAEvC0yF,GAAM19F,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKwtD,OAAS,GAEd,IAAM,IAAI3tD,EAAI,EAAGwO,EAAIw1C,EAAO2J,OAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAAO,CAExD,MAAMoQ,EAAQ4zC,EAAO2J,OAAQ3tD,GAE7BG,KAAKwtD,OAAOlsD,KAAM2O,EAAMtG,SAIzB,OAAO3J,MAIRm8I,GAAYtjG,UAAUxjC,OAAS,WAE9B,MAAM9U,EAAOg2I,GAAM19F,UAAUxjC,OAAOgkC,KAAMr5C,MAE1CO,EAAKitD,OAAS,GAEd,IAAM,IAAI3tD,EAAI,EAAGwO,EAAIrO,KAAKwtD,OAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEtD,MAAMoQ,EAAQjQ,KAAKwtD,OAAQ3tD,GAC3BU,EAAKitD,OAAOlsD,KAAM2O,EAAMytC,WAIzB,OAAOn9C,GAIR47I,GAAYtjG,UAAUm5E,SAAW,SAAWC,GAE3CskB,GAAM19F,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAErCjyH,KAAKwtD,OAAS,GAEd,IAAM,IAAI3tD,EAAI,EAAGwO,EAAI4jH,EAAKzkE,OAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEtD,MAAMoQ,EAAQgiH,EAAKzkE,OAAQ3tD,GAC3BG,KAAKwtD,OAAOlsD,MAAM,IAAI06C,IAAU7tC,UAAW8B,IAI5C,OAAOjQ,MAIR,IAAI68I,GAAsBr9I,OAAO+oI,OAAO,CACvCC,UAAW,KACX0O,SAAUA,GACV+D,iBAAkBA,GAClBhqI,iBAAkBA,GAClB6qI,kBAAmBA,GACnBrF,aAAcA,GACdsF,UAAWA,GACXC,WAAYA,GACZC,qBAAsBA,GACtBC,sBAAuBA,GACvBC,YAAaA,KAQd,SAASW,KAERvG,GAAMl9F,KAAMr5C,MAEZA,KAAK8/B,KAAO,YAEZ9/B,KAAKkY,OAAS,GACdlY,KAAK+8I,WAAY,EA6OlB,SAASC,GAAMxvF,GAEdsvF,GAAUzjG,KAAMr5C,MAEhBA,KAAK8/B,KAAO,OAEZ9/B,KAAKi9I,aAAe,IAAIjhG,GAEnBwR,GAEJxtD,KAAKutD,cAAeC,GAkLtB,SAAS0vF,GAAO1vF,GAEfwvF,GAAK3jG,KAAMr5C,KAAMwtD,GAEjBxtD,KAAK4iD,KAAOpJ,GAAUG,eAEtB35C,KAAK8/B,KAAO,QAEZ9/B,KAAKy9H,MAAQ,GA2Fd,SAAS0f,GAAOhgI,EAAOiuF,EAAY,GAElC3wC,GAASphB,KAAMr5C,MAEfA,KAAK8/B,KAAO,QAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAAO1rB,GACxBnd,KAAKorG,UAAYA,EA2ClB,SAASgyC,GAAiB5xD,EAAUC,EAAa2f,GAEhD+xC,GAAM9jG,KAAMr5C,KAAMwrF,EAAU4f,GAE5BprG,KAAK8/B,KAAO,kBAEZ9/B,KAAK2f,SAASmD,KAAM23C,GAASE,WAC7B36D,KAAK4jD,eAEL5jD,KAAKyrF,YAAc,IAAI5iD,GAAO4iD,GAsB/B,SAAS4xD,GAAa3xF,GAErB1rD,KAAK0rD,OAASA,EAEd1rD,KAAK2rG,KAAO,EACZ3rG,KAAK4rG,WAAa,EAClB5rG,KAAKia,OAAS,EAEdja,KAAK6rG,QAAU,IAAI7vD,GAAS,IAAK,KAEjCh8C,KAAKu5B,IAAM,KACXv5B,KAAK0uG,QAAU,KACf1uG,KAAKwhD,OAAS,IAAI0S,GAElBl0D,KAAK8vG,YAAa,EAClB9vG,KAAKuxE,aAAc,EAEnBvxE,KAAKytG,SAAW,IAAI1wB,GACpB/8E,KAAKs9I,cAAgB,IAAIthG,GAAS,EAAG,GAErCh8C,KAAKu9I,eAAiB,EAEtBv9I,KAAKw9I,WAAa,CAEjB,IAAI74F,GAAS,EAAG,EAAG,EAAG,IAyGxB,SAAS84F,KAERJ,GAAYhkG,KAAMr5C,KAAM,IAAI05E,GAAmB,GAAI,EAAG,GAAK,MAE3D15E,KAAKo/B,MAAQ,EAiCd,SAASs+G,GAAWvgI,EAAOiuF,EAAWxhG,EAAUI,EAAO+hG,EAAUlhB,GAEhEsyD,GAAM9jG,KAAMr5C,KAAMmd,EAAOiuF,GAEzBprG,KAAK8/B,KAAO,YAEZ9/B,KAAK2f,SAASmD,KAAM23C,GAASE,WAC7B36D,KAAK4jD,eAEL5jD,KAAKk5C,OAAS,IAAIuhB,GAElBj7D,OAAOC,eAAgBO,KAAM,QAAS,CACrC4d,IAAK,WAIJ,OAAO5d,KAAKorG,UAAY/nG,KAAK6G,IAG9BtB,IAAK,SAAW+0I,GAIf39I,KAAKorG,UAAYuyC,EAAQt6I,KAAK6G,MAKhClK,KAAK4J,cAA0BuP,IAAbvP,EAA2BA,EAAW,EACxD5J,KAAKgK,WAAoBmP,IAAVnP,EAAwBA,EAAQ3G,KAAK6G,GAAK,EACzDlK,KAAK+rG,cAA0B5yF,IAAb4yF,EAA2BA,EAAW,EACxD/rG,KAAK6qF,WAAoB1xE,IAAV0xE,EAAwBA,EAAQ,EAE/C7qF,KAAK6sF,OAAS,IAAI4wD,GA6BnB,SAASG,KAERP,GAAYhkG,KAAMr5C,KAAM,IAAI05E,GAAmB,GAAI,EAAG,GAAK,MAE3D15E,KAAKs9I,cAAgB,IAAIthG,GAAS,EAAG,GAErCh8C,KAAKu9I,eAAiB,EAEtBv9I,KAAKw9I,WAAa,CAejB,IAAI74F,GAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,GAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,GAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,GAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,GAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,GAAS,EAAG,EAAG,EAAG,IAGvB3kD,KAAK69I,gBAAkB,CACtB,IAAIlzF,GAAS,EAAG,EAAG,GAAK,IAAIA,IAAW,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,EAAG,GACrE,IAAIA,GAAS,EAAG,GAAK,GAAK,IAAIA,GAAS,EAAG,EAAG,GAAK,IAAIA,GAAS,GAAK,EAAG,IAGxE3qD,KAAK89I,SAAW,CACf,IAAInzF,GAAS,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,EAAG,GACnE,IAAIA,GAAS,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,GAAK,IAqCvE,SAASozF,GAAY5gI,EAAOiuF,EAAWxhG,EAAUihF,GAEhDsyD,GAAM9jG,KAAMr5C,KAAMmd,EAAOiuF,GAEzBprG,KAAK8/B,KAAO,aAEZtgC,OAAOC,eAAgBO,KAAM,QAAS,CACrC4d,IAAK,WAIJ,OAAwB,EAAjB5d,KAAKorG,UAAgB/nG,KAAK6G,IAGlCtB,IAAK,SAAW+0I,GAIf39I,KAAKorG,UAAYuyC,GAAU,EAAIt6I,KAAK6G,OAKtClK,KAAK4J,cAA0BuP,IAAbvP,EAA2BA,EAAW,EACxD5J,KAAK6qF,WAAoB1xE,IAAV0xE,EAAwBA,EAAQ,EAE/C7qF,KAAK6sF,OAAS,IAAI+wD,GAyBnB,SAASI,GAAoBx/G,GAAO,EAAK25B,EAAQ,EAAG15B,EAAM,EAAG25B,GAAS,EAAKC,EAAO,GAAKC,EAAM,KAE5FmhB,GAAOpgC,KAAMr5C,MAEbA,KAAK8/B,KAAO,qBAEZ9/B,KAAKizB,KAAO,EACZjzB,KAAK65E,KAAO,KAEZ75E,KAAKw+B,KAAOA,EACZx+B,KAAKm4D,MAAQA,EACbn4D,KAAKy+B,IAAMA,EACXz+B,KAAKo4D,OAASA,EAEdp4D,KAAKq4D,KAAOA,EACZr4D,KAAKs4D,IAAMA,EAEXt4D,KAAKg6E,yBAsHN,SAASikE,KAERZ,GAAYhkG,KAAMr5C,KAAM,IAAIg+I,IAAsB,EAAG,EAAG,GAAK,EAAG,GAAK,MAkBtE,SAASE,GAAkB/gI,EAAOiuF,GAEjC+xC,GAAM9jG,KAAMr5C,KAAMmd,EAAOiuF,GAEzBprG,KAAK8/B,KAAO,mBAEZ9/B,KAAK2f,SAASmD,KAAM23C,GAASE,WAC7B36D,KAAK4jD,eAEL5jD,KAAKk5C,OAAS,IAAIuhB,GAElBz6D,KAAK6sF,OAAS,IAAIoxD,GAwBnB,SAASE,GAAchhI,EAAOiuF,GAE7B+xC,GAAM9jG,KAAMr5C,KAAMmd,EAAOiuF,GAEzBprG,KAAK8/B,KAAO,eAYb,SAASs+G,GAAejhI,EAAOiuF,EAAW98F,EAAOC,GAEhD4uI,GAAM9jG,KAAMr5C,KAAMmd,EAAOiuF,GAEzBprG,KAAK8/B,KAAO,gBAEZ9/B,KAAKsO,WAAoB6K,IAAV7K,EAAwBA,EAAQ,GAC/CtO,KAAKuO,YAAsB4K,IAAX5K,EAAyBA,EAAS,GArpCnDuuI,GAAUjkG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ6yF,GAAM19F,WAAa,CAEtE3yC,YAAa42I,GAEb7zI,IAAK,SAAWiM,GAEflV,KAAKkY,OAAO5W,KAAM4T,IAInBiP,UAAW,WAGV,MAAMjT,EAAalR,KAAKkY,OAAQ,GAAIhE,SAAU,GACxC/C,EAAWnR,KAAKkY,OAAQlY,KAAKkY,OAAO5V,OAAS,GAAI4R,SAAU,GAE1DhD,EAAWrS,OAAQsS,IAEzBnR,KAAKkY,OAAO5W,KAAM,IAAIy6I,GAAW5qI,EAAUD,KAe7CgD,SAAU,SAAW5G,GAEpB,MAAM+G,EAAI/G,EAAItN,KAAKyS,YACb4rI,EAAer+I,KAAKs+I,kBAC1B,IAAIz+I,EAAI,EAIR,KAAQA,EAAIw+I,EAAa/7I,QAAS,CAEjC,GAAK+7I,EAAcx+I,IAAOwU,EAAI,CAE7B,MAAMhF,EAAOgvI,EAAcx+I,GAAMwU,EAC3Ba,EAAQlV,KAAKkY,OAAQrY,GAErB0+I,EAAgBrpI,EAAMzC,YACtB0B,EAAsB,IAAlBoqI,EAAsB,EAAI,EAAIlvI,EAAOkvI,EAE/C,OAAOrpI,EAAMnC,WAAYoB,GAI1BtU,IAID,OAAO,MAUR4S,UAAW,WAEV,MAAM+rI,EAAOx+I,KAAKs+I,kBAClB,OAAOE,EAAMA,EAAKl8I,OAAS,IAK5BwP,iBAAkB,WAEjB9R,KAAKuxE,aAAc,EACnBvxE,KAAKy+I,aAAe,KACpBz+I,KAAKs+I,mBAONA,gBAAiB,WAIhB,GAAKt+I,KAAKy+I,cAAgBz+I,KAAKy+I,aAAan8I,SAAWtC,KAAKkY,OAAO5V,OAElE,OAAOtC,KAAKy+I,aAOb,MAAM1E,EAAU,GAChB,IAAI2E,EAAO,EAEX,IAAM,IAAI7+I,EAAI,EAAGwO,EAAIrO,KAAKkY,OAAO5V,OAAQzC,EAAIwO,EAAGxO,IAE/C6+I,GAAQ1+I,KAAKkY,OAAQrY,GAAI4S,YACzBsnI,EAAQz4I,KAAMo9I,GAMf,OAFA1+I,KAAKy+I,aAAe1E,EAEbA,GAIR9a,gBAAiB,SAAW6a,EAAY,IAEvC,MAAMtsF,EAAS,GAEf,IAAM,IAAI3tD,EAAI,EAAGA,GAAKi6I,EAAWj6I,IAEhC2tD,EAAOlsD,KAAMtB,KAAKkU,SAAUrU,EAAIi6I,IAUjC,OANK95I,KAAK+8I,WAETvvF,EAAOlsD,KAAMksD,EAAQ,IAIfA,GAIRqsF,UAAW,SAAWC,EAAY,IAEjC,MAAMtsF,EAAS,GACf,IAAI5sD,EAEJ,IAAM,IAAIf,EAAI,EAAGqY,EAASlY,KAAKkY,OAAQrY,EAAIqY,EAAO5V,OAAQzC,IAAO,CAEhE,MAAMqV,EAAQgD,EAAQrY,GAChBuuG,EAAel5F,GAASA,EAAMylI,eAA+B,EAAZb,EAClD5kI,IAAWA,EAAMsnI,aAAetnI,EAAMunI,cAAmB,EACxDvnI,GAASA,EAAM0nI,cAAkB9C,EAAY5kI,EAAMs4C,OAAOlrD,OAC3Dw3I,EAECvc,EAAMroH,EAAM2kI,UAAWzrC,GAE7B,IAAM,IAAI3oG,EAAI,EAAGA,EAAI83H,EAAIj7H,OAAQmD,IAAO,CAEvC,MAAMwK,EAAQstH,EAAK93H,GAEd7E,GAAQA,EAAK/B,OAAQoR,KAE1Bu9C,EAAOlsD,KAAM2O,GACbrP,EAAOqP,IAYT,OANKjQ,KAAK+8I,WAAavvF,EAAOlrD,OAAS,IAAOkrD,EAAQA,EAAOlrD,OAAS,GAAIzD,OAAQ2uD,EAAQ,KAEzFA,EAAOlsD,KAAMksD,EAAQ,IAIfA,GAIR1qC,KAAM,SAAW+gC,GAEhB0yF,GAAM19F,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKkY,OAAS,GAEd,IAAM,IAAIrY,EAAI,EAAGwO,EAAIw1C,EAAO3rC,OAAO5V,OAAQzC,EAAIwO,EAAGxO,IAAO,CAExD,MAAMqV,EAAQ2uC,EAAO3rC,OAAQrY,GAE7BG,KAAKkY,OAAO5W,KAAM4T,EAAMvL,SAMzB,OAFA3J,KAAK+8I,UAAYl5F,EAAOk5F,UAEjB/8I,MAIRqV,OAAQ,WAEP,MAAM9U,EAAOg2I,GAAM19F,UAAUxjC,OAAOgkC,KAAMr5C,MAE1CO,EAAKw8I,UAAY/8I,KAAK+8I,UACtBx8I,EAAK2X,OAAS,GAEd,IAAM,IAAIrY,EAAI,EAAGwO,EAAIrO,KAAKkY,OAAO5V,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEtD,MAAMqV,EAAQlV,KAAKkY,OAAQrY,GAC3BU,EAAK2X,OAAO5W,KAAM4T,EAAMG,UAIzB,OAAO9U,GAIRyxH,SAAU,SAAWC,GAEpBskB,GAAM19F,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAErCjyH,KAAK+8I,UAAY9qB,EAAK8qB,UACtB/8I,KAAKkY,OAAS,GAEd,IAAM,IAAIrY,EAAI,EAAGwO,EAAI4jH,EAAK/5G,OAAO5V,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEtD,MAAMqV,EAAQ+8G,EAAK/5G,OAAQrY,GAC3BG,KAAKkY,OAAO5W,MAAM,IAAIu7I,GAAQ3nI,EAAM4qB,OAASkyF,SAAU98G,IAIxD,OAAOlV,QAsBTg9I,GAAKnkG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQo5F,GAAUjkG,WAAa,CAErE3yC,YAAa82I,GAEbzvF,cAAe,SAAWC,GAEzBxtD,KAAKmP,OAAQq+C,EAAQ,GAAI1tD,EAAG0tD,EAAQ,GAAIztD,GAExC,IAAM,IAAIF,EAAI,EAAGwO,EAAIm/C,EAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAE1CG,KAAK4jB,OAAQ4pC,EAAQ3tD,GAAIC,EAAG0tD,EAAQ3tD,GAAIE,GAIzC,OAAOC,MAIRmP,OAAQ,SAAWrP,EAAGC,GAIrB,OAFAC,KAAKi9I,aAAar0I,IAAK9I,EAAGC,GAEnBC,MAIR4jB,OAAQ,SAAW9jB,EAAGC,GAErB,MAAMmV,EAAQ,IAAI6mI,GAAW/7I,KAAKi9I,aAAatzI,QAAS,IAAIqyC,GAASl8C,EAAGC,IAKxE,OAJAC,KAAKkY,OAAO5W,KAAM4T,GAElBlV,KAAKi9I,aAAar0I,IAAK9I,EAAGC,GAEnBC,MAIRykB,iBAAkB,SAAWk6H,EAAMC,EAAMlI,EAAIC,GAE5C,MAAMzhI,EAAQ,IAAI+mI,GACjBj8I,KAAKi9I,aAAatzI,QAClB,IAAIqyC,GAAS2iG,EAAMC,GACnB,IAAI5iG,GAAS06F,EAAIC,IAOlB,OAJA32I,KAAKkY,OAAO5W,KAAM4T,GAElBlV,KAAKi9I,aAAar0I,IAAK8tI,EAAIC,GAEpB32I,MAIRskB,cAAe,SAAWu6H,EAAOC,EAAOC,EAAOC,EAAOtI,EAAIC,GAEzD,MAAMzhI,EAAQ,IAAIjE,GACjBjR,KAAKi9I,aAAatzI,QAClB,IAAIqyC,GAAS6iG,EAAOC,GACpB,IAAI9iG,GAAS+iG,EAAOC,GACpB,IAAIhjG,GAAS06F,EAAIC,IAOlB,OAJA32I,KAAKkY,OAAO5W,KAAM4T,GAElBlV,KAAKi9I,aAAar0I,IAAK8tI,EAAIC,GAEpB32I,MAIRi/I,WAAY,SAAW1hB,GAEtB,MAEMroH,EAAQ,IAAIinI,GAFL,CAAEn8I,KAAKi9I,aAAatzI,SAAU8R,OAAQ8hH,IAOnD,OAJAv9H,KAAKkY,OAAO5W,KAAM4T,GAElBlV,KAAKi9I,aAAan6H,KAAMy6G,EAAKA,EAAIj7H,OAAS,IAEnCtC,MAIR0kB,IAAK,SAAWgyH,EAAIC,EAAIQ,EAASL,EAAaC,EAAWC,GAExD,MAAMpvF,EAAK5nD,KAAKi9I,aAAan9I,EACvB+nD,EAAK7nD,KAAKi9I,aAAal9I,EAK7B,OAHAC,KAAKk/I,OAAQxI,EAAK9uF,EAAI+uF,EAAK9uF,EAAIsvF,EAC9BL,EAAaC,EAAWC,GAElBh3I,MAIRk/I,OAAQ,SAAWxI,EAAIC,EAAIQ,EAASL,EAAaC,EAAWC,GAI3D,OAFAh3I,KAAKm/I,WAAYzI,EAAIC,EAAIQ,EAASA,EAASL,EAAaC,EAAWC,GAE5Dh3I,MAIR6gB,QAAS,SAAW61H,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAEjF,MAAMrvF,EAAK5nD,KAAKi9I,aAAan9I,EACvB+nD,EAAK7nD,KAAKi9I,aAAal9I,EAI7B,OAFAC,KAAKm/I,WAAYzI,EAAK9uF,EAAI+uF,EAAK9uF,EAAI+uF,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAElFj3I,MAIRm/I,WAAY,SAAWzI,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAEpF,MAAM/hI,EAAQ,IAAIuhI,GAAcC,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAE9F,GAAKj3I,KAAKkY,OAAO5V,OAAS,EAAI,CAG7B,MAAM88I,EAAalqI,EAAMhB,SAAU,GAE5BkrI,EAAWvgJ,OAAQmB,KAAKi9I,eAE9Bj9I,KAAK4jB,OAAQw7H,EAAWt/I,EAAGs/I,EAAWr/I,GAMxCC,KAAKkY,OAAO5W,KAAM4T,GAElB,MAAMiO,EAAYjO,EAAMhB,SAAU,GAGlC,OAFAlU,KAAKi9I,aAAan6H,KAAMK,GAEjBnjB,MAIR8iB,KAAM,SAAW+gC,GAMhB,OAJAi5F,GAAUjkG,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAErC7jD,KAAKi9I,aAAan6H,KAAM+gC,EAAOo5F,cAExBj9I,MAIRqV,OAAQ,WAEP,MAAM9U,EAAOu8I,GAAUjkG,UAAUxjC,OAAOgkC,KAAMr5C,MAI9C,OAFAO,EAAK08I,aAAej9I,KAAKi9I,aAAav/F,UAE/Bn9C,GAIRyxH,SAAU,SAAWC,GAMpB,OAJA6qB,GAAUjkG,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAEzCjyH,KAAKi9I,aAAa9uI,UAAW8jH,EAAKgrB,cAE3Bj9I,QAkBTk9I,GAAMrkG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQs5F,GAAKnkG,WAAa,CAEjE3yC,YAAag3I,GAEbmC,eAAgB,SAAWvF,GAE1B,MAAMwF,EAAW,GAEjB,IAAM,IAAIz/I,EAAI,EAAGwO,EAAIrO,KAAKy9H,MAAMn7H,OAAQzC,EAAIwO,EAAGxO,IAE9Cy/I,EAAUz/I,GAAMG,KAAKy9H,MAAO59H,GAAIg6I,UAAWC,GAI5C,OAAOwF,GAMRlgB,cAAe,SAAW0a,GAEzB,MAAO,CAENp7E,MAAO1+D,KAAK65I,UAAWC,GACvBrc,MAAOz9H,KAAKq/I,eAAgBvF,KAM9Bh3H,KAAM,SAAW+gC,GAEhBm5F,GAAKnkG,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEhC7jD,KAAKy9H,MAAQ,GAEb,IAAM,IAAI59H,EAAI,EAAGwO,EAAIw1C,EAAO45E,MAAMn7H,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEvD,MAAM2C,EAAOqhD,EAAO45E,MAAO59H,GAE3BG,KAAKy9H,MAAMn8H,KAAMkB,EAAKmH,SAIvB,OAAO3J,MAIRqV,OAAQ,WAEP,MAAM9U,EAAOy8I,GAAKnkG,UAAUxjC,OAAOgkC,KAAMr5C,MAEzCO,EAAKqiD,KAAO5iD,KAAK4iD,KACjBriD,EAAKk9H,MAAQ,GAEb,IAAM,IAAI59H,EAAI,EAAGwO,EAAIrO,KAAKy9H,MAAMn7H,OAAQzC,EAAIwO,EAAGxO,IAAO,CAErD,MAAM2C,EAAOxC,KAAKy9H,MAAO59H,GACzBU,EAAKk9H,MAAMn8H,KAAMkB,EAAK6S,UAIvB,OAAO9U,GAIRyxH,SAAU,SAAWC,GAEpB+qB,GAAKnkG,UAAUm5E,SAAS34E,KAAMr5C,KAAMiyH,GAEpCjyH,KAAK4iD,KAAOqvE,EAAKrvE,KACjB5iD,KAAKy9H,MAAQ,GAEb,IAAM,IAAI59H,EAAI,EAAGwO,EAAI4jH,EAAKwL,MAAMn7H,OAAQzC,EAAIwO,EAAGxO,IAAO,CAErD,MAAM2C,EAAOyvH,EAAKwL,MAAO59H,GACzBG,KAAKy9H,MAAMn8H,MAAM,IAAI07I,IAAOhrB,SAAUxvH,IAIvC,OAAOxC,QAiBTm9I,GAAMtkG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+W,GAAS5hB,WAAa,CAErE3yC,YAAai3I,GAEbvgF,SAAS,EAET95C,KAAM,SAAW+gC,GAOhB,OALA4W,GAAS5hB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEpC7jD,KAAKmd,MAAM2F,KAAM+gC,EAAO1mC,OACxBnd,KAAKorG,UAAYvnD,EAAOunD,UAEjBprG,MAIRqV,OAAQ,SAAWyuC,GAElB,MAAMvjD,EAAOk6D,GAAS5hB,UAAUxjC,OAAOgkC,KAAMr5C,KAAM8jD,GAcnD,OAZAvjD,EAAKytD,OAAO7wC,MAAQnd,KAAKmd,MAAMonD,SAC/BhkE,EAAKytD,OAAOo9C,UAAYprG,KAAKorG,eAEHjyF,IAArBnZ,KAAKyrF,cAA4BlrF,EAAKytD,OAAOy9B,YAAczrF,KAAKyrF,YAAYlnB,eAE1DprD,IAAlBnZ,KAAK4J,WAAyBrJ,EAAKytD,OAAOpkD,SAAW5J,KAAK4J,eAC3CuP,IAAfnZ,KAAKgK,QAAsBzJ,EAAKytD,OAAOhkD,MAAQhK,KAAKgK,YACrCmP,IAAfnZ,KAAK6qF,QAAsBtqF,EAAKytD,OAAO68B,MAAQ7qF,KAAK6qF,YAClC1xE,IAAlBnZ,KAAK+rG,WAAyBxrG,EAAKytD,OAAO+9C,SAAW/rG,KAAK+rG,eAE1C5yF,IAAhBnZ,KAAK6sF,SAAuBtsF,EAAKytD,OAAO6+B,OAAS7sF,KAAK6sF,OAAOx3E,UAE3D9U,KAmBT68I,GAAgBvkG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQy5F,GAAMtkG,WAAa,CAE5E3yC,YAAak3I,GAEblxC,mBAAmB,EAEnBppF,KAAM,SAAW+gC,GAMhB,OAJAs5F,GAAMtkG,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKyrF,YAAY3oE,KAAM+gC,EAAO4nC,aAEvBzrF,QAoCTR,OAAOo5C,OAAQykG,GAAYxkG,UAAW,CAErC+sE,kBAAmB,IAAI1xD,GAEvBqrF,oBAAqB,IAAI50F,GAEzB60F,YAAa,IAAI70F,GAEjBimD,iBAAkB,WAEjB,OAAO5wG,KAAKu9I,gBAIbvsC,WAAY,WAEX,OAAOhxG,KAAKytG,UAIbsD,eAAgB,SAAWvH,GAE1B,MAAMmG,EAAe3vG,KAAK0rD,OACzB+zF,EAAez/I,KAAKwhD,OACpBk+F,EAAmB1/I,KAAK4lH,kBACxB+5B,EAAa3/I,KAAKw/I,YAClBI,EAAqB5/I,KAAKu/I,oBAE3BK,EAAmB7yF,sBAAuBy8C,EAAMz9C,aAChD4jD,EAAahwF,SAASmD,KAAM88H,GAE5BD,EAAW5yF,sBAAuBy8C,EAAMtwD,OAAO6S,aAC/C4jD,EAAah+C,OAAQguF,GACrBhwC,EAAalyC,oBAEbiiF,EAAiBvgG,iBAAkBwwD,EAAa/jD,iBAAkB+jD,EAAahkD,oBAC/E3rD,KAAKytG,SAASrwB,wBAAyBsiE,GAEvCD,EAAa72I,IACZ,GAAK,EAAK,EAAK,GACf,EAAK,GAAK,EAAK,GACf,EAAK,EAAK,GAAK,GACf,EAAK,EAAK,EAAK,GAGhB62I,EAAahjG,SAAUkzD,EAAa/jD,kBACpC6zF,EAAahjG,SAAUkzD,EAAahkD,qBAIrCmlD,YAAa,SAAW+uC,GAEvB,OAAO7/I,KAAKw9I,WAAYqC,IAIzBrvC,gBAAiB,WAEhB,OAAOxwG,KAAKs9I,eAIbx6H,KAAM,SAAW+gC,GAShB,OAPA7jD,KAAK0rD,OAAS7H,EAAO6H,OAAO/hD,QAE5B3J,KAAK2rG,KAAO9nD,EAAO8nD,KACnB3rG,KAAKia,OAAS4pC,EAAO5pC,OAErBja,KAAK6rG,QAAQ/oF,KAAM+gC,EAAOgoD,SAEnB7rG,MAIR2J,MAAO,WAEN,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,OAIrCqV,OAAQ,WAEP,MAAM24C,EAAS,GAUf,OARmB,IAAdhuD,KAAK2rG,OAAa39C,EAAO29C,KAAO3rG,KAAK2rG,MACjB,IAApB3rG,KAAK4rG,aAAmB59C,EAAO49C,WAAa5rG,KAAK4rG,YACjC,IAAhB5rG,KAAKia,SAAe+zC,EAAO/zC,OAASja,KAAKia,QACtB,MAAnBja,KAAK6rG,QAAQ/rG,GAAgC,MAAnBE,KAAK6rG,QAAQ9rG,IAAYiuD,EAAO69C,QAAU7rG,KAAK6rG,QAAQnuD,WAEtFsQ,EAAOtC,OAAS1rD,KAAK0rD,OAAOr2C,QAAQ,GAAQ24C,cACrCA,EAAOtC,OAAOlK,OAEdwM,KAcTyvF,GAAgB5kG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ25F,GAAYxkG,WAAa,CAElF3yC,YAAau3I,GAEbqC,mBAAmB,EAEnB/uC,eAAgB,SAAWvH,GAE1B,MAAM99C,EAAS1rD,KAAK0rD,OAEdiuB,EAA0B,EAApBngC,GAAUE,QAAc8vD,EAAMx/F,MAAQhK,KAAKo/B,MACjDw6C,EAAS55E,KAAK6rG,QAAQv9F,MAAQtO,KAAK6rG,QAAQt9F,OAC3C+pD,EAAMkxC,EAAM5/F,UAAY8hD,EAAO4M,IAEhCqhB,IAAQjuB,EAAOiuB,KAAOC,IAAWluB,EAAOkuB,QAAUthB,IAAQ5M,EAAO4M,MAErE5M,EAAOiuB,IAAMA,EACbjuB,EAAOkuB,OAASA,EAChBluB,EAAO4M,IAAMA,EACb5M,EAAOsuB,0BAIRqjE,GAAYxkG,UAAUk4D,eAAe13D,KAAMr5C,KAAMwpG,MA2CnDk0C,GAAU7kG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQy5F,GAAMtkG,WAAa,CAEtE3yC,YAAaw3I,GAEb5xC,aAAa,EAEbhpF,KAAM,SAAW+gC,GAahB,OAXAs5F,GAAMtkG,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAK4J,SAAWi6C,EAAOj6C,SACvB5J,KAAKgK,MAAQ65C,EAAO75C,MACpBhK,KAAK+rG,SAAWloD,EAAOkoD,SACvB/rG,KAAK6qF,MAAQhnC,EAAOgnC,MAEpB7qF,KAAKk5C,OAAS2K,EAAO3K,OAAOvvC,QAE5B3J,KAAK6sF,OAAShpC,EAAOgpC,OAAOljF,QAErB3J,QAsDT49I,GAAiB/kG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ25F,GAAYxkG,WAAa,CAEnF3yC,YAAa03I,GAEbntC,oBAAoB,EAEpBM,eAAgB,SAAWvH,EAAOq2C,EAAgB,GAEjD,MAAMn0F,EAAS1rD,KAAK0rD,OACnB+zF,EAAez/I,KAAKwhD,OACpBo+F,EAAqB5/I,KAAKu/I,oBAC1BI,EAAa3/I,KAAKw/I,YAClBE,EAAmB1/I,KAAK4lH,kBAEzBg6B,EAAmB7yF,sBAAuBy8C,EAAMz9C,aAChDL,EAAO/rC,SAASmD,KAAM88H,GAEtBD,EAAW78H,KAAM4oC,EAAO/rC,UACxBggI,EAAW12I,IAAKjJ,KAAK69I,gBAAiBgC,IACtCn0F,EAAO18B,GAAGlM,KAAM9iB,KAAK89I,SAAU+B,IAC/Bn0F,EAAOiG,OAAQguF,GACfj0F,EAAO+R,oBAEPgiF,EAAavoF,iBAAmB0oF,EAAmB9/I,GAAK8/I,EAAmB7/I,GAAK6/I,EAAmBz/I,GAEnGu/I,EAAiBvgG,iBAAkBuM,EAAOE,iBAAkBF,EAAOC,oBACnE3rD,KAAKytG,SAASrwB,wBAAyBsiE,MAoCzC3B,GAAWllG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQy5F,GAAMtkG,WAAa,CAEvE3yC,YAAa63I,GAEb9xC,cAAc,EAEdnpF,KAAM,SAAW+gC,GAShB,OAPAs5F,GAAMtkG,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAK4J,SAAWi6C,EAAOj6C,SACvB5J,KAAK6qF,MAAQhnC,EAAOgnC,MAEpB7qF,KAAK6sF,OAAShpC,EAAOgpC,OAAOljF,QAErB3J,QA2BTg+I,GAAmBnlG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+1B,GAAO5gC,WAAa,CAEhF3yC,YAAa83I,GAEb5yB,sBAAsB,EAEtBtoG,KAAM,SAAW+gC,EAAQub,GAcxB,OAZAqa,GAAO5gC,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,EAAQub,GAE1Cp/D,KAAKw+B,KAAOqlB,EAAOrlB,KACnBx+B,KAAKm4D,MAAQtU,EAAOsU,MACpBn4D,KAAKy+B,IAAMolB,EAAOplB,IAClBz+B,KAAKo4D,OAASvU,EAAOuU,OACrBp4D,KAAKq4D,KAAOxU,EAAOwU,KACnBr4D,KAAKs4D,IAAMzU,EAAOyU,IAElBt4D,KAAKizB,KAAO4wB,EAAO5wB,KACnBjzB,KAAK65E,KAAuB,OAAhBh2B,EAAOg2B,KAAgB,KAAOr6E,OAAOo5C,OAAQ,GAAIiL,EAAOg2B,MAE7D75E,MAIR06E,cAAe,SAAWC,EAAWC,EAAY96E,EAAGC,EAAGuO,EAAOC,GAE1C,OAAdvO,KAAK65E,OAET75E,KAAK65E,KAAO,CACXgB,SAAS,EACTF,UAAW,EACXC,WAAY,EACZxqD,QAAS,EACTC,QAAS,EACT/hB,MAAO,EACPC,OAAQ,IAKVvO,KAAK65E,KAAKgB,SAAU,EACpB76E,KAAK65E,KAAKc,UAAYA,EACtB36E,KAAK65E,KAAKe,WAAaA,EACvB56E,KAAK65E,KAAKzpD,QAAUtwB,EACpBE,KAAK65E,KAAKxpD,QAAUtwB,EACpBC,KAAK65E,KAAKvrE,MAAQA,EAClBtO,KAAK65E,KAAKtrE,OAASA,EAEnBvO,KAAKg6E,0BAINc,gBAAiB,WAEG,OAAd96E,KAAK65E,OAET75E,KAAK65E,KAAKgB,SAAU,GAIrB76E,KAAKg6E,0BAINA,uBAAwB,WAEvB,MAAM1vD,GAAOtqB,KAAKm4D,MAAQn4D,KAAKw+B,OAAW,EAAIx+B,KAAKizB,MAC7C1I,GAAOvqB,KAAKy+B,IAAMz+B,KAAKo4D,SAAa,EAAIp4D,KAAKizB,MAC7C9uB,GAAOnE,KAAKm4D,MAAQn4D,KAAKw+B,MAAS,EAClCp6B,GAAOpE,KAAKy+B,IAAMz+B,KAAKo4D,QAAW,EAExC,IAAI55B,EAAOr6B,EAAKmmB,EACZ6tC,EAAQh0D,EAAKmmB,EACbmU,EAAMr6B,EAAKmmB,EACX6tC,EAASh0D,EAAKmmB,EAElB,GAAmB,OAAdvqB,KAAK65E,MAAiB75E,KAAK65E,KAAKgB,QAAU,CAE9C,MAAMklE,GAAW//I,KAAKm4D,MAAQn4D,KAAKw+B,MAASx+B,KAAK65E,KAAKc,UAAY36E,KAAKizB,KACjE+sH,GAAWhgJ,KAAKy+B,IAAMz+B,KAAKo4D,QAAWp4D,KAAK65E,KAAKe,WAAa56E,KAAKizB,KAExEuL,GAAQuhH,EAAS//I,KAAK65E,KAAKzpD,QAC3B+nC,EAAQ35B,EAAOuhH,EAAS//I,KAAK65E,KAAKvrE,MAClCmwB,GAAOuhH,EAAShgJ,KAAK65E,KAAKxpD,QAC1B+nC,EAAS35B,EAAMuhH,EAAShgJ,KAAK65E,KAAKtrE,OAInCvO,KAAK4rD,iBAAiB2M,iBAAkB/5B,EAAM25B,EAAO15B,EAAK25B,EAAQp4D,KAAKq4D,KAAMr4D,KAAKs4D,KAElFt4D,KAAK8rD,wBAAwBhpC,KAAM9iB,KAAK4rD,kBAAmBnL,UAI5DprC,OAAQ,SAAWyuC,GAElB,MAAMvjD,EAAOk6D,GAAS5hB,UAAUxjC,OAAOgkC,KAAMr5C,KAAM8jD,GAYnD,OAVAvjD,EAAKytD,OAAO/6B,KAAOjzB,KAAKizB,KACxB1yB,EAAKytD,OAAOxvB,KAAOx+B,KAAKw+B,KACxBj+B,EAAKytD,OAAOmK,MAAQn4D,KAAKm4D,MACzB53D,EAAKytD,OAAOvvB,IAAMz+B,KAAKy+B,IACvBl+B,EAAKytD,OAAOoK,OAASp4D,KAAKo4D,OAC1B73D,EAAKytD,OAAOqK,KAAOr4D,KAAKq4D,KACxB93D,EAAKytD,OAAOsK,IAAMt4D,KAAKs4D,IAEJ,OAAdt4D,KAAK65E,OAAgBt5E,EAAKytD,OAAO6rB,KAAOr6E,OAAOo5C,OAAQ,GAAI54C,KAAK65E,OAE9Dt5E,KAYT09I,GAAuBplG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ25F,GAAYxkG,WAAa,CAEzF3yC,YAAa+3I,GAEbgC,0BAA0B,EAE1BlvC,eAAgB,SAAWvH,GAE1B6zC,GAAYxkG,UAAUk4D,eAAe13D,KAAMr5C,KAAMwpG,MAqBnD00C,GAAiBrlG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQy5F,GAAMtkG,WAAa,CAE7E3yC,YAAag4I,GAEbzyC,oBAAoB,EAEpB3oF,KAAM,SAAW+gC,GAQhB,OANAs5F,GAAMtkG,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKk5C,OAAS2K,EAAO3K,OAAOvvC,QAE5B3J,KAAK6sF,OAAShpC,EAAOgpC,OAAOljF,QAErB3J,QAcTm+I,GAAatlG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQy5F,GAAMtkG,WAAa,CAEzE3yC,YAAai4I,GAEb9yC,gBAAgB,IAejB+yC,GAAcvlG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQy5F,GAAMtkG,WAAa,CAE1E3yC,YAAak4I,GAEbpyC,iBAAiB,EAEjBlpF,KAAM,SAAW+gC,GAOhB,OALAs5F,GAAMtkG,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKsO,MAAQu1C,EAAOv1C,MACpBtO,KAAKuO,OAASs1C,EAAOt1C,OAEdvO,MAIRqV,OAAQ,SAAWyuC,GAElB,MAAMvjD,EAAO48I,GAAMtkG,UAAUxjC,OAAOgkC,KAAMr5C,KAAM8jD,GAKhD,OAHAvjD,EAAKytD,OAAO1/C,MAAQtO,KAAKsO,MACzB/N,EAAKytD,OAAOz/C,OAASvO,KAAKuO,OAEnBhO,KAgBT,MAAM2/I,GAELh6I,cAEC1G,OAAOC,eAAgBO,KAAM,wBAAyB,CAAEL,OAAO,IAE/DK,KAAKwrG,aAAe,GAEpB,IAAM,IAAI3rG,EAAI,EAAGA,EAAI,EAAGA,IAEvBG,KAAKwrG,aAAalqG,KAAM,IAAIqpD,IAM9B/hD,IAAK4iG,GAEJ,IAAM,IAAI3rG,EAAI,EAAGA,EAAI,EAAGA,IAEvBG,KAAKwrG,aAAc3rG,GAAIijB,KAAM0oF,EAAc3rG,IAI5C,OAAOG,KAIRmgJ,OAEC,IAAM,IAAItgJ,EAAI,EAAGA,EAAI,EAAGA,IAEvBG,KAAKwrG,aAAc3rG,GAAI+I,IAAK,EAAG,EAAG,GAInC,OAAO5I,KAMRogJ,MAAO5oH,EAAQ0hB,GAId,MAAMp5C,EAAI03B,EAAO13B,EAAGC,EAAIy3B,EAAOz3B,EAAGI,EAAIq3B,EAAOr3B,EAEvCkgJ,EAAQrgJ,KAAKwrG,aAiBnB,OAdAtyD,EAAOp2B,KAAMu9H,EAAO,IAAMz1I,eAAgB,SAG1CsuC,EAAOoD,gBAAiB+jG,EAAO,GAAK,QAAWtgJ,GAC/Cm5C,EAAOoD,gBAAiB+jG,EAAO,GAAK,QAAWlgJ,GAC/C+4C,EAAOoD,gBAAiB+jG,EAAO,GAAK,QAAWvgJ,GAG/Co5C,EAAOoD,gBAAiB+jG,EAAO,GAAkBvgJ,EAAIC,EAAjB,UACpCm5C,EAAOoD,gBAAiB+jG,EAAO,GAAkBtgJ,EAAII,EAAjB,UACpC+4C,EAAOoD,gBAAiB+jG,EAAO,GAAK,SAAa,EAAMlgJ,EAAIA,EAAI,IAC/D+4C,EAAOoD,gBAAiB+jG,EAAO,GAAkBvgJ,EAAIK,EAAjB,UACpC+4C,EAAOoD,gBAAiB+jG,EAAO,GAAK,SAAavgJ,EAAIA,EAAIC,EAAIA,IAEtDm5C,EAORonG,gBAAiB9oH,EAAQ0hB,GAIxB,MAAMp5C,EAAI03B,EAAO13B,EAAGC,EAAIy3B,EAAOz3B,EAAGI,EAAIq3B,EAAOr3B,EAEvCkgJ,EAAQrgJ,KAAKwrG,aAiBnB,OAdAtyD,EAAOp2B,KAAMu9H,EAAO,IAAMz1I,eAAgB,SAG1CsuC,EAAOoD,gBAAiB+jG,EAAO,GAAK,SAAiBtgJ,GACrDm5C,EAAOoD,gBAAiB+jG,EAAO,GAAK,SAAiBlgJ,GACrD+4C,EAAOoD,gBAAiB+jG,EAAO,GAAK,SAAiBvgJ,GAGrDo5C,EAAOoD,gBAAiB+jG,EAAO,GAAK,QAAiBvgJ,EAAIC,GACzDm5C,EAAOoD,gBAAiB+jG,EAAO,GAAK,QAAiBtgJ,EAAII,GACzD+4C,EAAOoD,gBAAiB+jG,EAAO,GAAK,QAAWlgJ,EAAIA,EAAI,SACvD+4C,EAAOoD,gBAAiB+jG,EAAO,GAAK,QAAiBvgJ,EAAIK,GACzD+4C,EAAOoD,gBAAiB+jG,EAAO,GAAK,SAAavgJ,EAAIA,EAAIC,EAAIA,IAEtDm5C,EAIRjwC,IAAKsiG,GAEJ,IAAM,IAAI1rG,EAAI,EAAGA,EAAI,EAAGA,IAEvBG,KAAKwrG,aAAc3rG,GAAIoJ,IAAKsiG,EAAGC,aAAc3rG,IAI9C,OAAOG,KAIRugJ,YAAah1C,EAAIp/E,GAEhB,IAAM,IAAItsB,EAAI,EAAGA,EAAI,EAAGA,IAEvBG,KAAKwrG,aAAc3rG,GAAIy8C,gBAAiBivD,EAAGC,aAAc3rG,GAAKssB,GAI/D,OAAOnsB,KAIRqK,MAAO8hB,GAEN,IAAM,IAAItsB,EAAI,EAAGA,EAAI,EAAGA,IAEvBG,KAAKwrG,aAAc3rG,GAAI+K,eAAgBuhB,GAIxC,OAAOnsB,KAIRq6C,KAAMkxD,EAAInhE,GAET,IAAM,IAAIvqC,EAAI,EAAGA,EAAI,EAAGA,IAEvBG,KAAKwrG,aAAc3rG,GAAIw6C,KAAMkxD,EAAGC,aAAc3rG,GAAKuqC,GAIpD,OAAOpqC,KAIRnB,OAAQ0sG,GAEP,IAAM,IAAI1rG,EAAI,EAAGA,EAAI,EAAGA,IAEvB,IAAOG,KAAKwrG,aAAc3rG,GAAIhB,OAAQ0sG,EAAGC,aAAc3rG,IAEtD,OAAO,EAMT,OAAO,EAIRijB,KAAMyoF,GAEL,OAAOvrG,KAAK4I,IAAK2iG,EAAGC,cAIrB7hG,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrCmO,UAAWgrC,EAAOn9B,EAAS,GAE1B,MAAMwvF,EAAexrG,KAAKwrG,aAE1B,IAAM,IAAI3rG,EAAI,EAAGA,EAAI,EAAGA,IAEvB2rG,EAAc3rG,GAAIsO,UAAWgrC,EAAOn9B,EAAe,EAAJnc,GAIhD,OAAOG,KAIR09C,QAASvE,EAAQ,GAAIn9B,EAAS,GAE7B,MAAMwvF,EAAexrG,KAAKwrG,aAE1B,IAAM,IAAI3rG,EAAI,EAAGA,EAAI,EAAGA,IAEvB2rG,EAAc3rG,GAAI69C,QAASvE,EAAOn9B,EAAe,EAAJnc,GAI9C,OAAOs5C,EAMRpzC,kBAAmByxB,EAAQgpH,GAI1B,MAAM1gJ,EAAI03B,EAAO13B,EAAGC,EAAIy3B,EAAOz3B,EAAGI,EAAIq3B,EAAOr3B,EAG7CqgJ,EAAS,GAAM,QAGfA,EAAS,GAAM,QAAWzgJ,EAC1BygJ,EAAS,GAAM,QAAWrgJ,EAC1BqgJ,EAAS,GAAM,QAAW1gJ,EAG1B0gJ,EAAS,GAAM,SAAW1gJ,EAAIC,EAC9BygJ,EAAS,GAAM,SAAWzgJ,EAAII,EAC9BqgJ,EAAS,GAAM,SAAa,EAAIrgJ,EAAIA,EAAI,GACxCqgJ,EAAS,GAAM,SAAW1gJ,EAAIK,EAC9BqgJ,EAAS,GAAM,SAAa1gJ,EAAIA,EAAIC,EAAIA,IAM1C,SAAS0gJ,GAAYl1C,EAAIH,GAExB+xC,GAAM9jG,KAAMr5C,UAAMmZ,EAAWiyF,GAE7BprG,KAAK8/B,KAAO,aAEZ9/B,KAAKurG,QAAcpyF,IAAPoyF,EAAqBA,EAAK,IAAI20C,GAyC3C,SAASQ,GAAgB1L,GAExBD,GAAO17F,KAAMr5C,KAAMg1I,GAEnBh1I,KAAKgkD,SAAW,GAzCjBy8F,GAAW5nG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQy5F,GAAMtkG,WAAa,CAEvE3yC,YAAau6I,GAEbn1C,cAAc,EAEdxoF,KAAM,SAAW+gC,GAMhB,OAJAs5F,GAAMtkG,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAEjC7jD,KAAKurG,GAAGzoF,KAAM+gC,EAAO0nD,IAEdvrG,MAIRgyH,SAAU,SAAWC,GAKpB,OAHAjyH,KAAKorG,UAAY6mB,EAAK7mB,UACtBprG,KAAKurG,GAAGp9F,UAAW8jH,EAAK1mB,IAEjBvrG,MAIRqV,OAAQ,SAAWyuC,GAElB,MAAMvjD,EAAO48I,GAAMtkG,UAAUxjC,OAAOgkC,KAAMr5C,KAAM8jD,GAIhD,OAFAvjD,EAAKytD,OAAOu9C,GAAKvrG,KAAKurG,GAAG7tD,UAElBn9C,KAcTmgJ,GAAe7nG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAE5E3yC,YAAaw6I,GAEbrL,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,GAEzC,MAAM98D,EAAQ/2E,KAER00I,EAAS,IAAIsB,GAAYj/D,EAAMi+D,SACrCN,EAAOkB,QAAS7+D,EAAMz/D,MACtBo9H,EAAOoB,iBAAkB/+D,EAAMq+D,eAC/BV,EAAOiB,mBAAoB5+D,EAAMm+D,iBACjCR,EAAOW,KAAM/wF,GAAK,SAAWziC,GAE5B,IAEC8xH,EAAQ58D,EAAMthE,MAAOD,KAAKC,MAAOoM,KAEhC,MAAQre,GAEJqwI,EAEJA,EAASrwI,GAITmJ,QAAQu1B,MAAO1+B,GAIhBuzE,EAAMi+D,QAAQX,UAAW/vF,MAIxBsvF,EAAYC,IAIhBp+H,MAAO,SAAWw8G,GAEjB,MAAMjuE,EAAWhkD,KAAKgkD,SAEtB,SAAS28F,EAAYpxH,GAQpB,YAN0BpW,IAArB6qC,EAAUz0B,IAEd5iB,QAAQoK,KAAM,0CAA2CwY,GAInDy0B,EAAUz0B,GAIlB,MAAMwvC,EAAW,IAAI4pE,GAAW1W,EAAKnyF,MA+ErC,QA7EmB3mB,IAAd84G,EAAKrvE,OAAqBmc,EAASnc,KAAOqvE,EAAKrvE,WACjCzpC,IAAd84G,EAAK1iG,OAAqBwvC,EAASxvC,KAAO0iG,EAAK1iG,WAChCpW,IAAf84G,EAAK90G,YAA0ChE,IAAnB4lD,EAAS5hD,OAAsB4hD,EAAS5hD,MAAMgmD,OAAQ8uD,EAAK90G,YACpEhE,IAAnB84G,EAAK7oD,YAA0BrK,EAASqK,UAAY6oD,EAAK7oD,gBACtCjwD,IAAnB84G,EAAK5oD,YAA0BtK,EAASsK,UAAY4oD,EAAK5oD,gBAC1ClwD,IAAf84G,EAAK3oD,QAAsBvK,EAASuK,OAAQ,IAAIzgC,IAAQs6B,OAAQ8uD,EAAK3oD,aACnDnwD,IAAlB84G,EAAK1oD,eAAgDpwD,IAAtB4lD,EAASwK,UAAyBxK,EAASwK,SAASpG,OAAQ8uD,EAAK1oD,eAC9EpwD,IAAlB84G,EAAKxoD,eAAgDtwD,IAAtB4lD,EAAS0K,UAAyB1K,EAAS0K,SAAStG,OAAQ8uD,EAAKxoD,eAC7EtwD,IAAnB84G,EAAKvoD,YAA0B3K,EAAS2K,UAAYuoD,EAAKvoD,gBACtCvwD,IAAnB84G,EAAKtoD,YAA0B5K,EAAS4K,UAAYsoD,EAAKtoD,gBAC7BxwD,IAA5B84G,EAAKroD,qBAAmC7K,EAAS6K,mBAAqBqoD,EAAKroD,yBAC9DzwD,IAAb84G,EAAKzsD,MAAoBzG,EAASyG,IAAMysD,EAAKzsD,UACxBrsD,IAArB84G,EAAKtsD,cAA4B5G,EAAS4G,YAAcssD,EAAKtsD,kBAC3CxsD,IAAlB84G,EAAKxsD,WAAyB1G,EAAS0G,SAAWwsD,EAAKxsD,eACtCtsD,IAAjB84G,EAAK7pD,UAAwBrJ,EAASqJ,QAAU6pD,EAAK7pD,cACvCjvD,IAAd84G,EAAKvsD,OAAqB3G,EAAS2G,KAAOusD,EAAKvsD,WAC9BvsD,IAAjB84G,EAAKrsD,UAAwB7G,EAAS6G,QAAUqsD,EAAKrsD,cAChCzsD,IAArB84G,EAAKpsD,cAA4B9G,EAAS8G,YAAcosD,EAAKpsD,kBAC1C1sD,IAAnB84G,EAAKxqD,YAA0B1I,EAAS0I,UAAYwqD,EAAKxqD,gBACtCtuD,IAAnB84G,EAAK5rD,YAA0BtH,EAASsH,UAAY4rD,EAAK5rD,gBACrCltD,IAApB84G,EAAK3rD,aAA2BvH,EAASuH,WAAa2rD,EAAK3rD,iBACvCntD,IAApB84G,EAAK9qD,aAA2BpI,EAASoI,WAAa8qD,EAAK9qD,iBAErChuD,IAAtB84G,EAAKnrD,eAA6B/H,EAAS+H,aAAemrD,EAAKnrD,mBACrC3tD,IAA1B84G,EAAK1rD,mBAAiCxH,EAASwH,iBAAmB0rD,EAAK1rD,uBAClDptD,IAArB84G,EAAKzrD,cAA4BzH,EAASyH,YAAcyrD,EAAKzrD,kBACzCrtD,IAApB84G,EAAKxrD,aAA2B1H,EAAS0H,WAAawrD,EAAKxrD,iBAClCttD,IAAzB84G,EAAKvrD,kBAAgC3H,EAAS2H,gBAAkBurD,EAAKvrD,sBAChDvtD,IAArB84G,EAAKtrD,cAA4B5H,EAAS4H,YAAcsrD,EAAKtrD,kBACvCxtD,IAAtB84G,EAAKrrD,eAA6B7H,EAAS6H,aAAeqrD,EAAKrrD,mBACzCztD,IAAtB84G,EAAKprD,eAA6B9H,EAAS8H,aAAeorD,EAAKprD,mBAE5C1tD,IAAnB84G,EAAK1pD,YAA0BxJ,EAASwJ,UAAY0pD,EAAK1pD,gBAC7BpvD,IAA5B84G,EAAKzpD,qBAAmCzJ,EAASyJ,mBAAqBypD,EAAKzpD,yBACjDrvD,IAA1B84G,EAAKxpD,mBAAiC1J,EAAS0J,iBAAmBwpD,EAAKxpD,uBAC5CtvD,IAA3B84G,EAAKvpD,oBAAkC3J,EAAS2J,kBAAoBupD,EAAKvpD,wBAEvDvvD,IAAlB84G,EAAKjxG,WAAyB+9C,EAAS/9C,SAAWixG,EAAKjxG,UAEpC,IAAnBixG,EAAKjnD,YAAkBjM,EAASiM,UAAYinD,EAAKjnD,gBAC/B7xD,IAAlB84G,EAAKhnD,WAAyBlM,EAASkM,SAAWgnD,EAAKhnD,eACtC9xD,IAAjB84G,EAAK/mD,UAAwBnM,EAASmM,QAAU+mD,EAAK/mD,cACtC/xD,IAAf84G,EAAK5nH,QAAsB00D,EAAS10D,MAAQ4nH,EAAK5nH,YAE1B8O,IAAvB84G,EAAK5qD,gBAA8BtI,EAASsI,cAAgB4qD,EAAK5qD,oBACpCluD,IAA7B84G,EAAK3qD,sBAAoCvI,EAASuI,oBAAsB2qD,EAAK3qD,0BACjDnuD,IAA5B84G,EAAK1qD,qBAAmCxI,EAASwI,mBAAqB0qD,EAAK1qD,yBAEzDpuD,IAAlB84G,EAAKtpD,WAAyB5J,EAAS4J,SAAWspD,EAAKtpD,eACjCxvD,IAAtB84G,EAAKrpD,eAA6B7J,EAAS6J,aAAeqpD,EAAKrpD,mBACzCzvD,IAAtB84G,EAAK9mD,eAA6BpM,EAASoM,aAAe8mD,EAAK9mD,mBAC5ChyD,IAAnB84G,EAAKzqD,YAA0BzI,EAASyI,UAAYyqD,EAAKzqD,gBAEjCruD,IAAxB84G,EAAKtuB,iBAA+B5kC,EAAS4kC,eAAiBsuB,EAAKtuB,qBAElDxqF,IAAjB84G,EAAK1rH,UAAwBw4D,EAASx4D,QAAU0rH,EAAK1rH,cAEjC4S,IAApB84G,EAAKtqD,aAA2B5I,EAAS4I,WAAasqD,EAAKtqD,iBAEzCxuD,IAAlB84G,EAAKz2D,WAAyBuD,EAASvD,SAAWy2D,EAAKz2D,eAEjCriD,IAAtB84G,EAAK5sD,eAEyB,iBAAtB4sD,EAAK5sD,aAEhBtG,EAASsG,aAAiB4sD,EAAK5sD,aAAe,EAI9CtG,EAASsG,aAAe4sD,EAAK5sD,mBAQRlsD,IAAlB84G,EAAK15C,SAET,IAAM,MAAMhpD,KAAQ0iG,EAAK15C,SAAW,CAEnC,MAAM+b,EAAU29B,EAAK15C,SAAUhpD,GAI/B,OAFAwvC,EAASwZ,SAAUhpD,GAAS,GAEnB+kE,EAAQx0D,MAEhB,IAAK,IACJi/B,EAASwZ,SAAUhpD,GAAO5vB,MAAQghJ,EAAYrsD,EAAQ30F,OACtD,MAED,IAAK,IACJo/D,EAASwZ,SAAUhpD,GAAO5vB,OAAQ,IAAIkpC,IAAQs6B,OAAQmxB,EAAQ30F,OAC9D,MAED,IAAK,KACJo/D,EAASwZ,SAAUhpD,GAAO5vB,OAAQ,IAAIq8C,IAAU7tC,UAAWmmF,EAAQ30F,OACnE,MAED,IAAK,KACJo/D,EAASwZ,SAAUhpD,GAAO5vB,OAAQ,IAAIgrD,IAAUx8C,UAAWmmF,EAAQ30F,OACnE,MAED,IAAK,KACJo/D,EAASwZ,SAAUhpD,GAAO5vB,OAAQ,IAAIglD,IAAUx2C,UAAWmmF,EAAQ30F,OACnE,MAED,IAAK,KACJo/D,EAASwZ,SAAUhpD,GAAO5vB,OAAQ,IAAIq+C,IAAU7vC,UAAWmmF,EAAQ30F,OACnE,MAED,IAAK,KACJo/D,EAASwZ,SAAUhpD,GAAO5vB,OAAQ,IAAIu0D,IAAU/lD,UAAWmmF,EAAQ30F,OACnE,MAED,QACCo/D,EAASwZ,SAAUhpD,GAAO5vB,MAAQ20F,EAAQ30F,OAY9C,QAJsBwZ,IAAjB84G,EAAKt5C,UAAwB5Z,EAAS4Z,QAAUs5C,EAAKt5C,cAC/Bx/D,IAAtB84G,EAAKr5C,eAA6B7Z,EAAS6Z,aAAeq5C,EAAKr5C,mBACvCz/D,IAAxB84G,EAAKp5C,iBAA+B9Z,EAAS8Z,eAAiBo5C,EAAKp5C,qBAE/C1/D,IAApB84G,EAAKj5C,WAET,IAAM,MAAM7yE,KAAO8rH,EAAKj5C,WAEvBja,EAASia,WAAY7yE,GAAQ8rH,EAAKj5C,WAAY7yE,GA2BhD,QAnBsBgT,IAAjB84G,EAAK2uB,UAAwB7hF,EAAS4G,YAA+B,IAAjBssD,EAAK2uB,cAI3CznI,IAAd84G,EAAKryG,OAAqBm/C,EAASn/C,KAAOqyG,EAAKryG,WACtBzG,IAAzB84G,EAAKlnD,kBAAgChM,EAASgM,gBAAkBknD,EAAKlnD,sBAIxD5xD,IAAb84G,EAAK14F,MAAoBwlC,EAASxlC,IAAMonH,EAAY1uB,EAAK14F,WACzCpgB,IAAhB84G,EAAKhoD,SAAuBlL,EAASkL,OAAS02E,EAAY1uB,EAAKhoD,cAE7C9wD,IAAlB84G,EAAK/pD,WAAyBnJ,EAASmJ,SAAWy4E,EAAY1uB,EAAK/pD,gBAElD/uD,IAAjB84G,EAAK/nD,UAAwBnL,EAASmL,QAAUy2E,EAAY1uB,EAAK/nD,eAC9C/wD,IAAnB84G,EAAK9nD,YAA0BpL,EAASoL,UAAY8nD,EAAK9nD,gBAEtChxD,IAAnB84G,EAAK7nD,YAA0BrL,EAASqL,UAAYu2E,EAAY1uB,EAAK7nD,iBAC9CjxD,IAAvB84G,EAAK5nD,gBAA8BtL,EAASsL,cAAgB4nD,EAAK5nD,oBAC5ClxD,IAArB84G,EAAK3nD,YAA4B,CAErC,IAAIA,EAAc2nD,EAAK3nD,aAEe,IAAjC10D,MAAMC,QAASy0D,KAInBA,EAAc,CAAEA,EAAaA,IAI9BvL,EAASuL,aAAc,IAAItuB,IAAU7tC,UAAWm8D,GAsCjD,YAlC8BnxD,IAAzB84G,EAAK1nD,kBAAgCxL,EAASwL,gBAAkBo2E,EAAY1uB,EAAK1nD,uBACtDpxD,IAA3B84G,EAAKznD,oBAAkCzL,EAASyL,kBAAoBynD,EAAKznD,wBAC/CrxD,IAA1B84G,EAAKxnD,mBAAiC1L,EAAS0L,iBAAmBwnD,EAAKxnD,uBAEjDtxD,IAAtB84G,EAAKvnD,eAA6B3L,EAAS2L,aAAei2E,EAAY1uB,EAAKvnD,oBACrDvxD,IAAtB84G,EAAKtnD,eAA6B5L,EAAS4L,aAAeg2E,EAAY1uB,EAAKtnD,oBAEtDxxD,IAArB84G,EAAKrnD,cAA4B7L,EAAS6L,YAAc+1E,EAAY1uB,EAAKrnD,mBAC9CzxD,IAA3B84G,EAAKzoD,oBAAkCzK,EAASyK,kBAAoByoD,EAAKzoD,wBAEpDrwD,IAArB84G,EAAKhqD,cAA4BlJ,EAASkJ,YAAc04E,EAAY1uB,EAAKhqD,mBAEzD9uD,IAAhB84G,EAAK9pD,SAAuBpJ,EAASoJ,OAASw4E,EAAY1uB,EAAK9pD,cACtChvD,IAAzB84G,EAAKpnD,kBAAgC9L,EAAS8L,gBAAkBonD,EAAKpnD,sBAE/C1xD,IAAtB84G,EAAK5pD,eAA6BtJ,EAASsJ,aAAe4pD,EAAK5pD,mBACtClvD,IAAzB84G,EAAK3pD,kBAAgCvJ,EAASuJ,gBAAkB2pD,EAAK3pD,sBAEnDnvD,IAAlB84G,EAAKpqD,WAAyB9I,EAAS8I,SAAW84E,EAAY1uB,EAAKpqD,gBACxC1uD,IAA3B84G,EAAKnqD,oBAAkC/I,EAAS+I,kBAAoBmqD,EAAKnqD,wBAE1D3uD,IAAf84G,EAAKlqD,QAAsBhJ,EAASgJ,MAAQ44E,EAAY1uB,EAAKlqD,aACrC5uD,IAAxB84G,EAAKjqD,iBAA+BjJ,EAASiJ,eAAiBiqD,EAAKjqD,qBAE9C7uD,IAArB84G,EAAKnnD,cAA4B/L,EAAS+L,YAAc61E,EAAY1uB,EAAKnnD,mBAEnD3xD,IAAtB84G,EAAKpoD,eAA6B9K,EAAS8K,aAAe82E,EAAY1uB,EAAKpoD,oBAC5C1wD,IAA/B84G,EAAKnoD,wBAAsC/K,EAAS+K,sBAAwB62E,EAAY1uB,EAAKnoD,6BACjE3wD,IAA5B84G,EAAKloD,qBAAmChL,EAASgL,mBAAqB42E,EAAY1uB,EAAKloD,0BACzD5wD,IAA9B84G,EAAKjoD,uBAAqCjL,EAASiL,sBAAuB,IAAIhuB,IAAU7tC,UAAW8jH,EAAKjoD,4BAElF7wD,IAAtB84G,EAAKp5B,eAA6B95B,EAAS85B,aAAeo5B,EAAKp5B,mBACtC1/E,IAAzB84G,EAAKn5B,kBAAgC/5B,EAAS+5B,gBAAkB6nD,EAAY1uB,EAAKn5B,kBAE/E/5B,GAIR8hF,YAAa,SAAWlhJ,GAGvB,OADAK,KAAKgkD,SAAWrkD,EACTK,QAMT,MAAM8gJ,GAAc,CAEnBC,WAAY,SAAW5nG,GAEtB,GAA4B,oBAAhB6nG,YAEX,OAAO,IAAIA,aAAcC,OAAQ9nG,GAOlC,IAAIhtB,EAAI,GAER,IAAM,IAAItsB,EAAI,EAAG6tD,EAAKvU,EAAM72C,OAAQzC,EAAI6tD,EAAI7tD,IAG3CssB,GAAK6pD,OAAOkrE,aAAc/nG,EAAOt5C,IAIlC,IAIC,OAAOo4I,mBAAoBkJ,OAAQh1H,IAElC,MAAQ3oB,GAET,OAAO2oB,IAMTi1H,eAAgB,SAAW98F,GAE1B,MAAMn4C,EAAQm4C,EAAI+8F,YAAa,KAE/B,OAAiB,IAAZl1I,EAAuB,KAErBm4C,EAAInZ,OAAQ,EAAGh/B,EAAQ,KAMhC,SAASm1I,KAER5wE,GAAer3B,KAAMr5C,MAErBA,KAAK8/B,KAAO,0BACZ9/B,KAAKw3F,cAAgBp0F,EAAAA,EAwCtB,SAASm+I,GAA0BpoG,EAAOuyB,EAAU1G,EAAY6qB,GAEhC,iBAAnB,IAEXA,EAAmB7qB,EAEnBA,GAAa,EAEbr4D,QAAQu1B,MAAO,kGAIhBupC,GAAgBpyB,KAAMr5C,KAAMm5C,EAAOuyB,EAAU1G,GAE7ChlE,KAAK6vF,iBAAmBA,GAAoB,EAkC7C,SAAS2xD,GAAsBxM,GAE9BD,GAAO17F,KAAMr5C,KAAMg1I,GAtFpBsM,GAAwBzoG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQgtB,GAAe73B,WAAa,CAE7F3yC,YAAao7I,GAEbrwD,2BAA2B,EAE3BnuE,KAAM,SAAW+gC,GAMhB,OAJA6sB,GAAe73B,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAE1C7jD,KAAKw3F,cAAgB3zC,EAAO2zC,cAErBx3F,MAIR2J,MAAO,WAEN,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,OAIrCqV,OAAQ,WAEP,MAAM9U,EAAOmwE,GAAe73B,UAAUxjC,OAAOgkC,KAAMr5C,MAMnD,OAJAO,EAAKi3F,cAAgBx3F,KAAKw3F,cAE1Bj3F,EAAK0wF,2BAA4B,EAE1B1wF,KAwBTghJ,GAAyB1oG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+nB,GAAgB5yB,WAAa,CAE/F3yC,YAAaq7I,GAEb/vD,4BAA4B,EAE5B1uE,KAAM,SAAW+gC,GAMhB,OAJA4nB,GAAgB5yB,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAE3C7jD,KAAK6vF,iBAAmBhsC,EAAOgsC,iBAExB7vF,MAIRqV,OAAQ,WAEP,MAAM9U,EAAOkrE,GAAgB5yB,UAAUxjC,OAAOgkC,KAAMr5C,MAMpD,OAJAO,EAAKsvF,iBAAmB7vF,KAAK6vF,iBAE7BtvF,EAAKixF,4BAA6B,EAE3BjxF,KAYTihJ,GAAqB3oG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAElF3yC,YAAas7I,GAEbnM,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,GAEzC,MAAM98D,EAAQ/2E,KAER00I,EAAS,IAAIsB,GAAYj/D,EAAMi+D,SACrCN,EAAOkB,QAAS7+D,EAAMz/D,MACtBo9H,EAAOoB,iBAAkB/+D,EAAMq+D,eAC/BV,EAAOiB,mBAAoB5+D,EAAMm+D,iBACjCR,EAAOW,KAAM/wF,GAAK,SAAWziC,GAE5B,IAEC8xH,EAAQ58D,EAAMthE,MAAOD,KAAKC,MAAOoM,KAEhC,MAAQre,GAEJqwI,EAEJA,EAASrwI,GAITmJ,QAAQu1B,MAAO1+B,GAIhBuzE,EAAMi+D,QAAQX,UAAW/vF,MAIxBsvF,EAAYC,IAIhBp+H,MAAO,SAAWw8G,GAEjB,MAAMwvB,EAAuB,GACvBC,EAAiB,GAEvB,SAASC,EAAsB1vB,EAAMrvE,GAEpC,QAAsCzpC,IAAjCsoI,EAAsB7+F,GAAuB,OAAO6+F,EAAsB7+F,GAE/E,MACMosE,EADqBiD,EAAK/C,mBACctsE,GAExCz3C,EAYP,SAAyB8mH,EAAMrvE,GAE9B,QAAgCzpC,IAA3BuoI,EAAgB9+F,GAAuB,OAAO8+F,EAAgB9+F,GAEnE,MACMg/F,EADe3vB,EAAKtD,aACQ/rE,GAE5BmwB,EAAK,IAAIpG,YAAai1E,GAAcz2I,OAI1C,OAFAu2I,EAAgB9+F,GAASmwB,EAElBA,EAvBQ8uE,CAAgB5vB,EAAMjD,EAAkB7jH,QAGjD0jH,EAAK,IAAIJ,GADDv+C,GAAe8+C,EAAkBlvF,KAAM30B,GACZ6jH,EAAkBh/B,QAK3D,OAJA6+B,EAAGjsE,KAAOosE,EAAkBpsE,KAE5B6+F,EAAsB7+F,GAASisE,EAExBA,EAmBR,MAAMrgE,EAAWyjE,EAAKhhC,0BAA4B,IAAIqwD,GAA4B,IAAI5wE,GAEhFvkE,EAAQ8lH,EAAK1xH,KAAK4L,MAExB,QAAegN,IAAVhN,EAAsB,CAE1B,MAAM21I,EAAa5xE,GAAe/jE,EAAM2zB,KAAM3zB,EAAMgtC,OACpDqV,EAASyiB,SAAU,IAAIxF,GAAiBq2E,EAAY,IAIrD,MAAMnxE,EAAashD,EAAK1xH,KAAKowE,WAE7B,IAAM,MAAMxqE,KAAOwqE,EAAa,CAE/B,MAAM/yB,EAAY+yB,EAAYxqE,GAC9B,IAAI47I,EAEJ,GAAKnkG,EAAU6hC,6BAA+B,CAG7CsiE,EAAkB,IAAIhzB,GADI4yB,EAAsB1vB,EAAK1xH,KAAMq9C,EAAUr9C,MACAq9C,EAAU8tB,SAAU9tB,EAAU5hC,OAAQ4hC,EAAUonB,gBAE/G,CAEN,MAAM88E,EAAa5xE,GAAetyB,EAAU9d,KAAM8d,EAAUzE,OAE5D4oG,EAAkB,IADYnkG,EAAU4zC,2BAA6B+vD,GAA2B91E,IACnDq2E,EAAYlkG,EAAU8tB,SAAU9tB,EAAUonB,iBAIhE7rD,IAAnBykC,EAAUruB,OAAqBwyH,EAAgBxyH,KAAOquB,EAAUruB,MACrEi/B,EAASjwC,aAAcpY,EAAK47I,GAI7B,MAAMnxE,EAAkBqhD,EAAK1xH,KAAKqwE,gBAElC,GAAKA,EAEJ,IAAM,MAAMzqE,KAAOyqE,EAAkB,CAEpC,MAAMsD,EAAiBtD,EAAiBzqE,GAElCgzC,EAAQ,GAEd,IAAM,IAAIt5C,EAAI,EAAG6tD,EAAKwmB,EAAe5xE,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAE3D,MAAM+9C,EAAYs2B,EAAgBr0E,GAClC,IAAIkiJ,EAEJ,GAAKnkG,EAAU6hC,6BAA+B,CAG7CsiE,EAAkB,IAAIhzB,GADI4yB,EAAsB1vB,EAAK1xH,KAAMq9C,EAAUr9C,MACAq9C,EAAU8tB,SAAU9tB,EAAU5hC,OAAQ4hC,EAAUonB,gBAE/G,CAGN+8E,EAAkB,IAAIt2E,GADHyE,GAAetyB,EAAU9d,KAAM8d,EAAUzE,OACTyE,EAAU8tB,SAAU9tB,EAAUonB,iBAI1D7rD,IAAnBykC,EAAUruB,OAAqBwyH,EAAgBxyH,KAAOquB,EAAUruB,MACrE4pB,EAAM73C,KAAMygJ,GAIbvzF,EAASoiB,gBAAiBzqE,GAAQgzC,EAMP84E,EAAK1xH,KAAKswE,uBAItCriB,EAASqiB,sBAAuB,GAIjC,MAAMvC,EAAS2jD,EAAK1xH,KAAK+tE,QAAU2jD,EAAK1xH,KAAKyhJ,WAAa/vB,EAAK1xH,KAAK0hJ,QAEpE,QAAgB9oI,IAAXm1D,EAEJ,IAAM,IAAIzuE,EAAI,EAAGmC,EAAIssE,EAAOhsE,OAAQzC,IAAMmC,IAAMnC,EAAI,CAEnD,MAAMmvE,EAAQV,EAAQzuE,GAEtB2uD,EAAS4iB,SAAUpC,EAAMxuE,MAAOwuE,EAAM1hB,MAAO0hB,EAAM7J,eAMrD,MAAMsJ,EAAiBwjD,EAAK1xH,KAAKkuE,eAEjC,QAAwBt1D,IAAnBs1D,EAA+B,CAEnC,MAAMlkE,EAAS,IAAIogD,QAEYxxC,IAA1Bs1D,EAAelkE,QAEnBA,EAAO4D,UAAWsgE,EAAelkE,QAIlCikD,EAASigB,eAAiB,IAAI/d,GAAQnmD,EAAQkkE,EAAex0D,QAO9D,OAHKg4G,EAAK1iG,OAAOi/B,EAASj/B,KAAO0iG,EAAK1iG,MACjC0iG,EAAKz2D,WAAWhN,EAASgN,SAAWy2D,EAAKz2D,UAEvChN,KAMT,MAAM0zF,WAAqBnN,GAE1B7uI,YAAa8uI,GAEZtkI,MAAOskI,GAIRK,KAAM/wF,EAAKqvF,EAAQC,EAAYC,GAE9B,MAAM98D,EAAQ/2E,KAERsX,EAAuB,KAAdtX,KAAKsX,KAAgBwpI,GAAYM,eAAgB98F,GAAQtkD,KAAKsX,KAC7EtX,KAAKm1I,aAAen1I,KAAKm1I,cAAgB79H,EAEzC,MAAMo9H,EAAS,IAAIsB,GAAYh2I,KAAKg1I,SACpCN,EAAOkB,QAAS51I,KAAKsX,MACrBo9H,EAAOoB,iBAAkB91I,KAAKo1I,eAC9BV,EAAOiB,mBAAoB31I,KAAKk1I,iBAChCR,EAAOW,KAAM/wF,GAAK,SAAWziC,GAE5B,IAAIowG,EAAO,KAEX,IAECA,EAAOz8G,KAAKC,MAAOoM,GAElB,MAAQqgB,GAMT,YAJiB/oB,IAAZ06H,GAAwBA,EAAS3xG,QAEtCv1B,QAAQu1B,MAAO,mCAAsCoiB,EAAM,IAAKpiB,EAAM2kF,SAMvE,MAAM3iE,EAAW+tE,EAAK/tE,cAEJ/qC,IAAb+qC,QAA4C/qC,IAAlB+qC,EAASpkB,MAAsD,aAAhCokB,EAASpkB,KAAK5B,cAO5E64C,EAAMthE,MAAOw8G,EAAM0hB,GALlBhnI,QAAQu1B,MAAO,kCAAqCoiB,KAOnDsvF,EAAYC,GAIhBp+H,MAAOw8G,EAAM0hB,GAEZ,MAAMp4E,EAAav7D,KAAKmiJ,gBAAiBlwB,EAAK12D,YACxCwC,EAAS/9D,KAAKoiJ,YAAanwB,EAAKl0D,QAChCF,EAAa79D,KAAKqiJ,gBAAiBpwB,EAAKp0D,WAAYE,GAEpD1Z,EAASrkD,KAAKsiJ,YAAarwB,EAAK5tE,QAAQ,gBAE7BlrC,IAAXw6H,GAAuBA,EAAQ3lF,MAI/BhK,EAAWhkD,KAAKuiJ,cAAetwB,EAAKjuE,SAAUK,GAC9CyZ,EAAY99D,KAAKwiJ,eAAgBvwB,EAAKn0D,UAAW9Z,GAEjDgK,EAAShuD,KAAKyiJ,YAAaxwB,EAAKjkE,OAAQ6P,EAAYC,EAAWvC,GAC/DyC,EAAYh+D,KAAK0iJ,eAAgBzwB,EAAKj0D,UAAWhQ,GAMvD,GAJAhuD,KAAK2iJ,cAAe30F,EAAQgQ,QAIZ7kD,IAAXw6H,EAAuB,CAE3B,IAAIiP,GAAY,EAEhB,IAAM,MAAMhgG,KAAQyB,EAEnB,GAAKA,EAAQzB,aAAkBY,iBAAmB,CAEjDo/F,GAAY,EACZ,OAMiB,IAAdA,GAAsBjP,EAAQ3lF,GAIpC,OAAOA,EAIRo0F,YAAanwB,GAEZ,MAAMl0D,EAAS,GAEf,QAAc5kD,IAAT84G,EAEJ,IAAM,IAAIpyH,EAAI,EAAGwO,EAAI4jH,EAAK3vH,OAAQzC,EAAIwO,EAAGxO,IAAO,CAE/C,MAAM6+D,GAAQ,IAAIw+E,IAAQlrB,SAAUC,EAAMpyH,IAE1Ck+D,EAAQW,EAAM9b,MAAS8b,EAMzB,OAAOX,EAIR2kF,eAAgBzwB,EAAMjkE,GAErB,MAAMgQ,EAAY,GACZqpC,EAAQ,GAYd,GARAr5C,EAAOsP,UAAU,SAAWp+C,GAEtBA,EAAMwyG,SAASrqB,EAAOnoF,EAAM0jC,MAAS1jC,WAM7B/F,IAAT84G,EAEJ,IAAM,IAAIpyH,EAAI,EAAGwO,EAAI4jH,EAAK3vH,OAAQzC,EAAIwO,EAAGxO,IAAO,CAE/C,MAAMi/D,GAAW,IAAI+yD,IAAWG,SAAUC,EAAMpyH,GAAKwnG,GAErDrpC,EAAWc,EAASlc,MAASkc,EAM/B,OAAOd,EAIRqkF,gBAAiBpwB,EAAMl0D,GAEtB,MAAMF,EAAa,GACnB,IAAIglF,EAEJ,QAAc1pI,IAAT84G,EAAqB,CAEzB,MAAM6wB,EAAuB,IAAItB,GAEjC,IAAM,IAAI3hJ,EAAI,EAAGwO,EAAI4jH,EAAK3vH,OAAQzC,EAAIwO,EAAGxO,IAAO,CAE/C,IAAI2uD,EACJ,MAAMjuD,EAAO0xH,EAAMpyH,GAEnB,OAASU,EAAKu/B,MAEb,IAAK,gBACL,IAAK,sBAEJ0uB,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAK+N,MACL/N,EAAKgO,OACLhO,EAAKq2E,cACLr2E,EAAKs2E,gBAGN,MAED,IAAK,cACL,IAAK,oBACL,IAAK,eAEJroB,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAK+N,MACL/N,EAAKgO,OACLhO,EAAKo2E,MACLp2E,EAAKq2E,cACLr2E,EAAKs2E,eACLt2E,EAAKu2E,eAGN,MAED,IAAK,iBACL,IAAK,uBAEJtoB,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAK0Z,OACL1Z,EAAK44H,SACL54H,EAAK64H,WACL74H,EAAK84H,aAGN,MAED,IAAK,mBACL,IAAK,yBAEJ7qE,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAKk5H,UACLl5H,EAAKm5H,aACLn5H,EAAKgO,OACLhO,EAAKo5H,eACLp5H,EAAKs2E,eACLt2E,EAAKq5H,UACLr5H,EAAK64H,WACL74H,EAAK84H,aAGN,MAED,IAAK,eACL,IAAK,qBAEJ7qE,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAK0Z,OACL1Z,EAAKgO,OACLhO,EAAKo5H,eACLp5H,EAAKs2E,eACLt2E,EAAKq5H,UACLr5H,EAAK64H,WACL74H,EAAK84H,aAGN,MAED,IAAK,iBACL,IAAK,uBAEJ7qE,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAK0Z,OACL1Z,EAAKq2E,cACLr2E,EAAKs2E,eACLt2E,EAAKkjI,SACLljI,EAAKmjI,UACLnjI,EAAK64H,WACL74H,EAAK84H,aAGN,MAED,IAAK,uBACL,IAAK,6BACL,IAAK,sBACL,IAAK,4BACL,IAAK,qBACL,IAAK,2BACL,IAAK,sBACL,IAAK,4BAEJ7qE,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAK0Z,OACL1Z,EAAKosH,QAGN,MAED,IAAK,eACL,IAAK,qBAEJn+D,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAKqkI,YACLrkI,EAAKskI,YACLtkI,EAAKukI,cACLvkI,EAAKwkI,YACLxkI,EAAK64H,WACL74H,EAAK84H,aAGN,MAED,IAAK,gBACL,IAAK,sBAEJ7qE,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAK0Z,OACL1Z,EAAKgmI,KACLhmI,EAAKo5H,eACLp5H,EAAKimI,gBACLjmI,EAAKmkB,KAGN,MAED,IAAK,oBACL,IAAK,0BAEJ8pC,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAK0Z,OACL1Z,EAAKgmI,KACLhmI,EAAKimI,gBACLjmI,EAAKo5H,eACLp5H,EAAKM,EACLN,EAAKgD,GAGN,MAED,IAAK,eACL,IAAK,qBAIJirD,EAAW,IAAI85E,GAAY/nI,EAAKu/B,OAC/B,IAAI+8G,GAAQt8I,EAAK+W,KAAKwoB,OAASkyF,SAAUzxH,EAAK+W,MAC9C/W,EAAKimI,gBACLjmI,EAAK0Z,OACL1Z,EAAKo5H,eACLp5H,EAAK+mI,QAGN,MAED,IAAK,gBACL,IAAK,sBAEJ94E,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAKitD,OACLjtD,EAAK44H,SACL54H,EAAKkjI,SACLljI,EAAKmjI,WAGN,MAED,IAAK,qBACL,IAAK,2BAEJl1E,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/Bv/B,EAAKuL,SACLvL,EAAKozE,QACLpzE,EAAK0Z,OACL1Z,EAAKwiJ,SAGN,MAED,IAAK,gBACL,IAAK,sBAEJF,EAAiB,GAEjB,IAAM,IAAIp9I,EAAI,EAAG6sE,EAAK/xE,EAAKw9D,OAAOz7D,OAAQmD,EAAI6sE,EAAI7sE,IAAO,CAExD,MAAMi5D,EAAQX,EAAQx9D,EAAKw9D,OAAQt4D,IAEnCo9I,EAAevhJ,KAAMo9D,GAItBlQ,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/B+iH,EACAtiJ,EAAK09H,eAGN,MAGD,IAAK,kBACL,IAAK,wBAEJ4kB,EAAiB,GAEjB,IAAM,IAAIp9I,EAAI,EAAG6sE,EAAK/xE,EAAKw9D,OAAOz7D,OAAQmD,EAAI6sE,EAAI7sE,IAAO,CAExD,MAAMi5D,EAAQX,EAAQx9D,EAAKw9D,OAAQt4D,IAEnCo9I,EAAevhJ,KAAMo9D,GAItB,MAAM8/D,EAAcj+H,EAAK2K,QAAQszH,iBAEZrlH,IAAhBqlH,IAEJj+H,EAAK2K,QAAQszH,aAAc,IAAIqe,GAAQre,EAAY1+F,OAASkyF,SAAUwM,IAIvEhwE,EAAW,IAAI85E,GAAY/nI,EAAKu/B,MAC/B+iH,EACAtiJ,EAAK2K,SAGN,MAED,IAAK,iBACL,IAAK,0BAEJsjD,EAAWs0F,EAAqBrtI,MAAOlV,GAEvC,MAED,IAAK,WAEJoM,QAAQu1B,MAAO,oEAEf,MAED,QAECv1B,QAAQoK,KAAM,kDAAoDxW,EAAKu/B,KAAO,KAE9E,SAIF0uB,EAAS5L,KAAOriD,EAAKqiD,UAEFzpC,IAAd5Y,EAAKgvB,OAAqBi/B,EAASj/B,KAAOhvB,EAAKgvB,OACjB,IAA9Bi/B,EAASuiB,uBAA+C53D,IAAlB5Y,EAAKi7D,WAAyBhN,EAASgN,SAAWj7D,EAAKi7D,UAElGqC,EAAYt9D,EAAKqiD,MAAS4L,GAM5B,OAAOqP,EAIR2kF,eAAgBvwB,EAAMjuE,GAErB,MAAMxnC,EAAQ,GACRshD,EAAY,GAElB,QAAc3kD,IAAT84G,EAAqB,CAEzB,MAAMyiB,EAAS,IAAIgM,GACnBhM,EAAOmM,YAAa78F,GAEpB,IAAM,IAAInkD,EAAI,EAAGwO,EAAI4jH,EAAK3vH,OAAQzC,EAAIwO,EAAGxO,IAAO,CAE/C,MAAMU,EAAO0xH,EAAMpyH,GAEnB,GAAmB,kBAAdU,EAAKu/B,KAA2B,CAIpC,MAAMqZ,EAAQ,GAEd,IAAM,IAAI1zC,EAAI,EAAGA,EAAIlF,EAAKu9D,UAAUx7D,OAAQmD,IAAO,CAElD,MAAMs5D,EAAWx+D,EAAKu9D,UAAWr4D,QAED0T,IAA3BqD,EAAOuiD,EAASnc,QAEpBpmC,EAAOuiD,EAASnc,MAAS8xF,EAAOj/H,MAAOspD,IAIxC5lB,EAAM73C,KAAMkb,EAAOuiD,EAASnc,OAI7Bkb,EAAWv9D,EAAKqiD,MAASzJ,YAIGhgC,IAAvBqD,EAAOjc,EAAKqiD,QAEhBpmC,EAAOjc,EAAKqiD,MAAS8xF,EAAOj/H,MAAOlV,IAIpCu9D,EAAWv9D,EAAKqiD,MAASpmC,EAAOjc,EAAKqiD,OAQxC,OAAOkb,EAIRqkF,gBAAiBlwB,GAEhB,MAAM12D,EAAa,GAEnB,QAAcpiD,IAAT84G,EAEJ,IAAM,IAAIpyH,EAAI,EAAGA,EAAIoyH,EAAK3vH,OAAQzC,IAAO,CAExC,MAAMU,EAAO0xH,EAAMpyH,GAEbsqI,EAAO0D,GAAcp4H,MAAOlV,GAElCg7D,EAAY4uE,EAAKvnF,MAASunF,EAM5B,OAAO5uE,EAIR+mF,YAAarwB,EAAM0hB,GAElB,MAAM58D,EAAQ/2E,KACRqkD,EAAS,GAEf,IAAIqwF,EAmBJ,SAASsO,EAAkBtjI,GAE1B,GAAsB,iBAAVA,EAAqB,CAEhC,MAAM4kC,EAAM5kC,EAIZ,OAzBF,SAAoB4kC,GAInB,OAFAyyB,EAAMi+D,QAAQb,UAAW7vF,GAElBowF,EAAOW,KAAM/wF,GAAK,WAExByyB,EAAMi+D,QAAQZ,QAAS9vF,UAErBnrC,GAAW,WAEb49D,EAAMi+D,QAAQX,UAAW/vF,GACzByyB,EAAMi+D,QAAQZ,QAAS9vF,MAchB2+F,CAFM,4BAA4BrhG,KAAM0C,GAAQA,EAAMyyB,EAAMo+D,aAAe7wF,GAMlF,OAAK5kC,EAAMnf,KAEH,CACNA,KAAM2vE,GAAexwD,EAAMogB,KAAMpgB,EAAMnf,MACvC+N,MAAOoR,EAAMpR,MACbC,OAAQmR,EAAMnR,QAKR,KAQV,QAAc4K,IAAT84G,GAAsBA,EAAK3vH,OAAS,EAAI,CAE5C,MAAM0yI,EAAU,IAAItB,GAAgBC,GAEpCe,EAAS,IAAIyB,GAAanB,GAC1BN,EAAOgB,eAAgB11I,KAAKi1I,aAE5B,IAAM,IAAIp1I,EAAI,EAAG6tD,EAAKukE,EAAK3vH,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEjD,MAAM6f,EAAQuyG,EAAMpyH,GACdykD,EAAM5kC,EAAM4kC,IAElB,GAAK1uC,MAAMC,QAASyuC,GAAQ,CAI3BD,EAAQ3kC,EAAMkjC,MAAS,GAEvB,IAAM,IAAIn9C,EAAI,EAAG6sE,EAAKhuB,EAAIhiD,OAAQmD,EAAI6sE,EAAI7sE,IAAO,CAEhD,MAEMy9I,EAAoBF,EAFP1+F,EAAK7+C,IAIG,OAAtBy9I,IAECA,aAA6B1/F,iBAEjCa,EAAQ3kC,EAAMkjC,MAAOthD,KAAM4hJ,GAM3B7+F,EAAQ3kC,EAAMkjC,MAAOthD,KAAM,IAAIg7E,GAAa4mE,EAAkB3iJ,KAAM2iJ,EAAkB50I,MAAO40I,EAAkB30I,eAQ5G,CAIN,MAAM20I,EAAoBF,EAAkBtjI,EAAM4kC,KAEvB,OAAtB4+F,IAEJ7+F,EAAQ3kC,EAAMkjC,MAASsgG,KAU3B,OAAO7+F,EAIRk+F,cAAetwB,EAAM5tE,GAEpB,SAAS8+F,EAAexjJ,EAAOmgC,GAE9B,MAAsB,iBAAVngC,EAA4BA,GAExCgN,QAAQoK,KAAM,uEAAwEpX,GAE/EmgC,EAAMngC,IAId,MAAMqkD,EAAW,GAEjB,QAAc7qC,IAAT84G,EAEJ,IAAM,IAAIpyH,EAAI,EAAGwO,EAAI4jH,EAAK3vH,OAAQzC,EAAIwO,EAAGxO,IAAO,CAE/C,MAAMU,EAAO0xH,EAAMpyH,GAcnB,IAAI0mD,OAZgBptC,IAAf5Y,EAAKmf,OAET/S,QAAQoK,KAAM,+CAAgDxW,EAAKqiD,WAItCzpC,IAAzBkrC,EAAQ9jD,EAAKmf,QAEjB/S,QAAQoK,KAAM,sCAAuCxW,EAAKmf,OAK3D,MAAMA,EAAQ2kC,EAAQ9jD,EAAKmf,OAEtB9J,MAAMC,QAAS6J,IAEnB6mC,EAAU,IAAI01B,GAAav8D,GAEL,IAAjBA,EAAMpd,SAAeikD,EAAQgrB,aAAc,KAM/ChrB,EAFI7mC,GAASA,EAAMnf,KAET,IAAI+7E,GAAa58D,EAAMnf,KAAMmf,EAAMpR,MAAOoR,EAAMnR,QAIhD,IAAI0zC,GAASviC,GAInBA,IAAQ6mC,EAAQgrB,aAAc,IAIpChrB,EAAQ3D,KAAOriD,EAAKqiD,UAEDzpC,IAAd5Y,EAAKgvB,OAAqBg3B,EAAQh3B,KAAOhvB,EAAKgvB,WAE7BpW,IAAjB5Y,EAAK4hD,UAAwBoE,EAAQpE,QAAUghG,EAAe5iJ,EAAK4hD,QAASihG,UAE5DjqI,IAAhB5Y,EAAKyb,QAAuBuqC,EAAQvqC,OAAO7N,UAAW5N,EAAKyb,aAC3C7C,IAAhB5Y,EAAKwiD,QAAuBwD,EAAQxD,OAAO50C,UAAW5N,EAAKwiD,aAC3C5pC,IAAhB5Y,EAAKgK,QAAuBg8C,EAAQh8C,OAAO4D,UAAW5N,EAAKgK,aACzC4O,IAAlB5Y,EAAKygB,WAAyBulC,EAAQvlC,SAAWzgB,EAAKygB,eAExC7H,IAAd5Y,EAAK6jD,OAETmC,EAAQlE,MAAQ8gG,EAAe5iJ,EAAK6jD,KAAM,GAAKi/F,IAC/C98F,EAAQjE,MAAQ6gG,EAAe5iJ,EAAK6jD,KAAM,GAAKi/F,UAI3BlqI,IAAhB5Y,EAAKkiD,SAAuB8D,EAAQ9D,OAASliD,EAAKkiD,aACpCtpC,IAAd5Y,EAAKu/B,OAAqBymB,EAAQzmB,KAAOv/B,EAAKu/B,WAC5B3mB,IAAlB5Y,EAAKoiD,WAAyB4D,EAAQ5D,SAAWpiD,EAAKoiD,eAEnCxpC,IAAnB5Y,EAAKiiD,YAA0B+D,EAAQ/D,UAAY2gG,EAAe5iJ,EAAKiiD,UAAW8gG,UAC/DnqI,IAAnB5Y,EAAKgiD,YAA0BgE,EAAQhE,UAAY4gG,EAAe5iJ,EAAKgiD,UAAW+gG,UAC9DnqI,IAApB5Y,EAAKmiD,aAA2B6D,EAAQ7D,WAAaniD,EAAKmiD,iBAE3CvpC,IAAf5Y,EAAK4iD,QAAsBoD,EAAQpD,MAAQ5iD,EAAK4iD,YAEtBhqC,IAA1B5Y,EAAK2iD,mBAAiCqD,EAAQrD,iBAAmB3iD,EAAK2iD,uBAC7C/pC,IAAzB5Y,EAAK6iD,kBAAgCmD,EAAQnD,gBAAkB7iD,EAAK6iD,iBAEzEY,EAAUzjD,EAAKqiD,MAAS2D,EAM1B,OAAOvC,EAIRy+F,YAAaliJ,EAAMs9D,EAAYC,EAAWvC,GAEzC,IAAIvN,EAkDAQ,EAAUuQ,EAhDd,SAASwkF,EAAah0H,GAQrB,YAN4BpW,IAAvB0kD,EAAYtuC,IAEhB5iB,QAAQoK,KAAM,yCAA0CwY,GAIlDsuC,EAAYtuC,GAIpB,SAASi0H,EAAaj0H,GAErB,QAAcpW,IAAToW,EAAL,CAEA,GAAK3Z,MAAMC,QAAS0Z,GAAS,CAE5B,MAAM4pB,EAAQ,GAEd,IAAM,IAAIt5C,EAAI,EAAGwO,EAAIkhB,EAAKjtB,OAAQzC,EAAIwO,EAAGxO,IAAO,CAE/C,MAAM+iD,EAAOrzB,EAAM1vB,QAEQsZ,IAAtB2kD,EAAWlb,IAEfj2C,QAAQoK,KAAM,yCAA0C6rC,GAIzDzJ,EAAM73C,KAAMw8D,EAAWlb,IAIxB,OAAOzJ,EAUR,YAN2BhgC,IAAtB2kD,EAAWvuC,IAEf5iB,QAAQoK,KAAM,yCAA0CwY,GAIlDuuC,EAAWvuC,IAMnB,OAAShvB,EAAKu/B,MAEb,IAAK,QAEJkuB,EAAS,IAAIwgE,QAEYr1G,IAApB5Y,EAAK8rF,YAEJz4E,OAAOyoE,UAAW97E,EAAK8rF,cAE3Br+B,EAAOq+B,WAAa,IAAIxjD,GAAOtoC,EAAK8rF,kBAMpBlzE,IAAb5Y,EAAKilE,MAEc,QAAlBjlE,EAAKilE,IAAI1lC,KAEbkuB,EAAOwX,IAAM,IAAI+oD,GAAKhuH,EAAKilE,IAAIroD,MAAO5c,EAAKilE,IAAInN,KAAM93D,EAAKilE,IAAIlN,KAEjC,YAAlB/3D,EAAKilE,IAAI1lC,OAEpBkuB,EAAOwX,IAAM,IAAI8oD,GAAS/tH,EAAKilE,IAAIroD,MAAO5c,EAAKilE,IAAIm8C,WAMrD,MAED,IAAK,oBAEJ3zD,EAAS,IAAI0rB,GAAmBn5E,EAAKo5E,IAAKp5E,EAAKq5E,OAAQr5E,EAAK83D,KAAM93D,EAAK+3D,UAEnDn/C,IAAf5Y,EAAK6+B,QAAsB4uB,EAAO5uB,MAAQ7+B,EAAK6+B,YACjCjmB,IAAd5Y,EAAK0yB,OAAqB+6B,EAAO/6B,KAAO1yB,EAAK0yB,WAC1B9Z,IAAnB5Y,EAAKu5E,YAA0B9rB,EAAO8rB,UAAYv5E,EAAKu5E,gBACnC3gE,IAApB5Y,EAAKw5E,aAA2B/rB,EAAO+rB,WAAax5E,EAAKw5E,iBAC3C5gE,IAAd5Y,EAAKs5E,OAAqB7rB,EAAO6rB,KAAOr6E,OAAOo5C,OAAQ,GAAIr4C,EAAKs5E,OAErE,MAED,IAAK,qBAEJ7rB,EAAS,IAAIgwF,GAAoBz9I,EAAKi+B,KAAMj+B,EAAK43D,MAAO53D,EAAKk+B,IAAKl+B,EAAK63D,OAAQ73D,EAAK83D,KAAM93D,EAAK+3D,UAE5En/C,IAAd5Y,EAAK0yB,OAAqB+6B,EAAO/6B,KAAO1yB,EAAK0yB,WAC/B9Z,IAAd5Y,EAAKs5E,OAAqB7rB,EAAO6rB,KAAOr6E,OAAOo5C,OAAQ,GAAIr4C,EAAKs5E,OAErE,MAED,IAAK,eAEJ7rB,EAAS,IAAImwF,GAAc59I,EAAK4c,MAAO5c,EAAK6qG,WAE5C,MAED,IAAK,mBAEJp9C,EAAS,IAAIkwF,GAAkB39I,EAAK4c,MAAO5c,EAAK6qG,WAEhD,MAED,IAAK,aAEJp9C,EAAS,IAAI+vF,GAAYx9I,EAAK4c,MAAO5c,EAAK6qG,UAAW7qG,EAAKqJ,SAAUrJ,EAAKsqF,OAEzE,MAED,IAAK,gBAEJ78B,EAAS,IAAIowF,GAAe79I,EAAK4c,MAAO5c,EAAK6qG,UAAW7qG,EAAK+N,MAAO/N,EAAKgO,QAEzE,MAED,IAAK,YAEJy/C,EAAS,IAAI0vF,GAAWn9I,EAAK4c,MAAO5c,EAAK6qG,UAAW7qG,EAAKqJ,SAAUrJ,EAAKyJ,MAAOzJ,EAAKwrG,SAAUxrG,EAAKsqF,OAEnG,MAED,IAAK,kBAEJ78B,EAAS,IAAIovF,GAAiB78I,EAAK4c,MAAO5c,EAAKkrF,YAAalrF,EAAK6qG,WAEjE,MAED,IAAK,aAEJp9C,GAAS,IAAIyyF,IAAazuB,SAAUzxH,GAEpC,MAED,IAAK,cAEJiuD,EAAW+0F,EAAahjJ,EAAKiuD,UAC5BuQ,EAAWykF,EAAajjJ,EAAKw+D,UAE9B/Q,EAAS,IAAIgjE,GAAaxiE,EAAUuQ,QAEb5lD,IAAlB5Y,EAAKq+D,WAAyB5Q,EAAO4Q,SAAWr+D,EAAKq+D,eACjCzlD,IAApB5Y,EAAKs+D,YAA2B7Q,EAAO6Q,WAAW1wD,UAAW5N,EAAKs+D,iBAChD1lD,IAAlB5Y,EAAKu+D,WAAyB9Q,EAAO8Q,SAAWv+D,EAAKu+D,UAE1D,MAED,IAAK,OAEJtQ,EAAW+0F,EAAahjJ,EAAKiuD,UAC7BuQ,EAAWykF,EAAajjJ,EAAKw+D,UAE7B/Q,EAAS,IAAIonB,GAAM5mB,EAAUuQ,GAE7B,MAED,IAAK,gBAEJvQ,EAAW+0F,EAAahjJ,EAAKiuD,UAC7BuQ,EAAWykF,EAAajjJ,EAAKw+D,UAC7B,MAAMzR,EAAQ/sD,EAAK+sD,MACb+Q,EAAiB99D,EAAK89D,eAE5BrQ,EAAS,IAAIukE,GAAe/jE,EAAUuQ,EAAUzR,GAChDU,EAAOqQ,eAAiB,IAAIoN,GAAiB,IAAI/kD,aAAc23C,EAAellB,OAAS,IAEvF,MAED,IAAK,MAEJ6U,EAAS,IAAIqiE,GAEb,MAED,IAAK,OAEJriE,EAAS,IAAIl0C,GAAMypI,EAAahjJ,EAAKiuD,UAAYg1F,EAAajjJ,EAAKw+D,WAEnE,MAED,IAAK,WAEJ/Q,EAAS,IAAIgmE,GAAUuvB,EAAahjJ,EAAKiuD,UAAYg1F,EAAajjJ,EAAKw+D,WAEvE,MAED,IAAK,eAEJ/Q,EAAS,IAAI+lE,GAAcwvB,EAAahjJ,EAAKiuD,UAAYg1F,EAAajjJ,EAAKw+D,WAE3E,MAED,IAAK,aACL,IAAK,SAEJ/Q,EAAS,IAAIqmE,GAAQkvB,EAAahjJ,EAAKiuD,UAAYg1F,EAAajjJ,EAAKw+D,WAErE,MAED,IAAK,SAEJ/Q,EAAS,IAAI+hE,GAAQyzB,EAAajjJ,EAAKw+D,WAEvC,MAED,IAAK,QAEJ/Q,EAAS,IAAIyuD,GAEb,MAED,IAAK,OAEJzuD,EAAS,IAAIkjE,GAEb,MAED,QAECljE,EAAS,IAAIyM,GA2Cf,GAvCAzM,EAAOpL,KAAOriD,EAAKqiD,UAEAzpC,IAAd5Y,EAAKgvB,OAAqBy+B,EAAOz+B,KAAOhvB,EAAKgvB,WAE7BpW,IAAhB5Y,EAAKihD,QAETwM,EAAOxM,OAAOrzC,UAAW5N,EAAKihD,aAECroC,IAA1B5Y,EAAKyiD,mBAAiCgL,EAAOhL,iBAAmBziD,EAAKyiD,kBACrEgL,EAAOhL,kBAAmBgL,EAAOxM,OAAOqW,UAAW7J,EAAOruC,SAAUquC,EAAO1F,WAAY0F,EAAO3jD,cAI5E8O,IAAlB5Y,EAAKof,UAAyBquC,EAAOruC,SAASxR,UAAW5N,EAAKof,eAC5CxG,IAAlB5Y,EAAKygB,UAAyBgtC,EAAOhtC,SAAS7S,UAAW5N,EAAKygB,eAC1C7H,IAApB5Y,EAAK+nD,YAA2B0F,EAAO1F,WAAWn6C,UAAW5N,EAAK+nD,iBACnDnvC,IAAf5Y,EAAK8J,OAAsB2jD,EAAO3jD,MAAM8D,UAAW5N,EAAK8J,aAIrC8O,IAApB5Y,EAAK46D,aAA2BnN,EAAOmN,WAAa56D,EAAK46D,iBAClChiD,IAAvB5Y,EAAK66D,gBAA8BpN,EAAOoN,cAAgB76D,EAAK66D,eAE/D76D,EAAKssF,cAEiB1zE,IAArB5Y,EAAKssF,OAAO8e,OAAqB39C,EAAO6+B,OAAO8e,KAAOprG,EAAKssF,OAAO8e,WACvCxyF,IAA3B5Y,EAAKssF,OAAO+e,aAA2B59C,EAAO6+B,OAAO+e,WAAarrG,EAAKssF,OAAO+e,iBACvDzyF,IAAvB5Y,EAAKssF,OAAO5yE,SAAuB+zC,EAAO6+B,OAAO5yE,OAAS1Z,EAAKssF,OAAO5yE,aAC9Cd,IAAxB5Y,EAAKssF,OAAOgf,SAAwB79C,EAAO6+B,OAAOgf,QAAQ19F,UAAW5N,EAAKssF,OAAOgf,cAC1D1yF,IAAvB5Y,EAAKssF,OAAOnhC,SAAuBsC,EAAO6+B,OAAOnhC,OAAS1rD,KAAKyiJ,YAAaliJ,EAAKssF,OAAOnhC,eAIxEvyC,IAAjB5Y,EAAKgG,UAAwBynD,EAAOznD,QAAUhG,EAAKgG,cAC5B4S,IAAvB5Y,EAAK86D,gBAA8BrN,EAAOqN,cAAgB96D,EAAK86D,oBAC1CliD,IAArB5Y,EAAK+6D,cAA4BtN,EAAOsN,YAAc/6D,EAAK+6D,kBACzCniD,IAAlB5Y,EAAKi7D,WAAyBxN,EAAOwN,SAAWj7D,EAAKi7D,eACrCriD,IAAhB5Y,EAAKo5D,SAAuB3L,EAAO2L,OAAON,KAAO94D,EAAKo5D,aAEpCxgD,IAAlB5Y,EAAKsuD,SAAyB,CAElC,MAAMA,EAAWtuD,EAAKsuD,SAEtB,IAAM,IAAIhvD,EAAI,EAAGA,EAAIgvD,EAASvsD,OAAQzC,IAErCmuD,EAAO/kD,IAAKjJ,KAAKyiJ,YAAa5zF,EAAUhvD,GAAKg+D,EAAYC,EAAWvC,IAMtE,QAAyBpiD,IAApB5Y,EAAKg7D,WAA2B,CAEpC,MAAMkoF,EAAmBljJ,EAAKg7D,WAE9B,IAAM,IAAI17D,EAAI,EAAGA,EAAI4jJ,EAAiBnhJ,OAAQzC,IAAO,CAEpD,MAAM+iD,EAAO6gG,EAAkB5jJ,GAE/BmuD,EAAOuN,WAAWj6D,KAAMi6D,EAAY3Y,KAMtC,GAAmB,QAAdriD,EAAKu/B,KAAiB,MAED3mB,IAApB5Y,EAAKuvG,aAA2B9hD,EAAO8hD,WAAavvG,EAAKuvG,YAE9D,MAAMygB,EAAShwH,EAAKgwH,OAEpB,IAAM,IAAIliH,EAAI,EAAGA,EAAIkiH,EAAOjuH,OAAQ+L,IAAO,CAE1C,MAAM29G,EAAQuE,EAAQliH,GAChB6Q,EAAQ8uC,EAAO+O,oBAAqB,OAAQivD,EAAMh+D,aAEzC70C,IAAV+F,GAEJ8uC,EAAOwiE,SAAUtxG,EAAO8sG,EAAMpiH,WAQjC,OAAOokD,EAIR20F,cAAe30F,EAAQgQ,GAEmB,IAApCx+D,OAAOud,KAAMihD,GAAY17D,QAE9B0rD,EAAOsP,UAAU,SAAWp+C,GAE3B,IAA6B,IAAxBA,EAAMy/C,oBAA6CxlD,IAAnB+F,EAAM4/C,SAAyB,CAEnE,MAAMA,EAAWd,EAAW9+C,EAAM4/C,eAEhB3lD,IAAb2lD,EAEJnyD,QAAQoK,KAAM,mDAAoDmI,EAAM4/C,UAIxE5/C,EAAM2T,KAAMisC,EAAU5/C,EAAM2/C,gBAYhC6kF,eAAgB/jJ,GAGf,OADAgN,QAAQoK,KAAM,iFACP/W,KAAK61I,gBAAiBl2I,IAM/B,MAAMyjJ,GAAkB,CACvBpzG,UAAWA,GACXC,sBAAuBA,GACvBC,sBAAuBA,GACvBC,iCAAkCA,GAClCC,iCAAkCA,GAClCC,wBAAyBA,GACzBC,wBAAyBA,IAGpB+yG,GAAmB,CACxB9yG,eAAgBA,GAChBC,oBAAqBA,GACrBC,uBAAwBA,IAGnB6yG,GAAiB,CACtB5yG,cAAeA,GACfC,2BAA4BA,GAC5BE,0BAA2BA,GAC3BE,aAAcA,GACdC,0BAA2BA,GAC3BE,yBAA0BA,IAG3B,SAASyyG,GAAmB3O,GAEO,oBAAtB4O,mBAEXj3I,QAAQoK,KAAM,+DAIO,oBAAV6jB,OAEXjuB,QAAQoK,KAAM,mDAIfg+H,GAAO17F,KAAMr5C,KAAMg1I,GAEnBh1I,KAAKkL,QAAU,CAAEg4C,iBAAkB,QAgFpC,SAAS2gG,KAER7jJ,KAAK8/B,KAAO,YAEZ9/B,KAAKmd,MAAQ,IAAI0rB,GAEjB7oC,KAAK8jJ,SAAW,GAChB9jJ,KAAK+jJ,YAAc,KAyRpB,SAASC,GAAMzjJ,GAEdP,KAAK8/B,KAAO,OAEZ9/B,KAAKO,KAAOA,EA0Db,SAAS0jJ,GAAYC,EAAM75I,EAAO+lB,EAASC,EAAS9vB,GAEnD,MAAM4jJ,EAAQ5jJ,EAAK6jJ,OAAQF,IAAU3jJ,EAAK6jJ,OAAQ,KAElD,IAAOD,EAIN,YAFAx3I,QAAQu1B,MAAO,0BAA4BgiH,EAAO,oCAAsC3jJ,EAAK8jJ,WAAa,KAM3G,MAAM/sI,EAAO,IAAIusI,GAEjB,IAAI/jJ,EAAGC,EAAGukJ,EAAKC,EAAKC,EAAMC,EAAMC,EAAMC,EAEtC,GAAKR,EAAMr4G,EAAI,CAEd,MAAM84G,EAAUT,EAAMU,iBAAoBV,EAAMU,eAAiBV,EAAMr4G,EAAEmzD,MAAO,MAEhF,IAAM,IAAIp/F,EAAI,EAAGwO,EAAIu2I,EAAQtiJ,OAAQzC,EAAIwO,GAAK,CAI7C,OAFeu2I,EAAS/kJ,MAIvB,IAAK,IAEJC,EAAI8kJ,EAAS/kJ,KAASwK,EAAQ+lB,EAC9BrwB,EAAI6kJ,EAAS/kJ,KAASwK,EAAQgmB,EAE9B/Y,EAAKnI,OAAQrP,EAAGC,GAEhB,MAED,IAAK,IAEJD,EAAI8kJ,EAAS/kJ,KAASwK,EAAQ+lB,EAC9BrwB,EAAI6kJ,EAAS/kJ,KAASwK,EAAQgmB,EAE9B/Y,EAAKsM,OAAQ9jB,EAAGC,GAEhB,MAED,IAAK,IAEJukJ,EAAMM,EAAS/kJ,KAASwK,EAAQ+lB,EAChCm0H,EAAMK,EAAS/kJ,KAASwK,EAAQgmB,EAChCm0H,EAAOI,EAAS/kJ,KAASwK,EAAQ+lB,EACjCq0H,EAAOG,EAAS/kJ,KAASwK,EAAQgmB,EAEjC/Y,EAAKmN,iBAAkB+/H,EAAMC,EAAMH,EAAKC,GAExC,MAED,IAAK,IAEJD,EAAMM,EAAS/kJ,KAASwK,EAAQ+lB,EAChCm0H,EAAMK,EAAS/kJ,KAASwK,EAAQgmB,EAChCm0H,EAAOI,EAAS/kJ,KAASwK,EAAQ+lB,EACjCq0H,EAAOG,EAAS/kJ,KAASwK,EAAQgmB,EACjCq0H,EAAOE,EAAS/kJ,KAASwK,EAAQ+lB,EACjCu0H,EAAOC,EAAS/kJ,KAASwK,EAAQgmB,EAEjC/Y,EAAKgN,cAAekgI,EAAMC,EAAMC,EAAMC,EAAML,EAAKC,KAUrD,MAAO,CAAEn0H,QAAS+zH,EAAMW,GAAKz6I,EAAOiN,KAAMA,GAI3C,SAASytI,GAAY/P,GAEpBD,GAAO17F,KAAMr5C,KAAMg1I,GA+CpB,IAAI1xB,GAziBJqgC,GAAkB9qG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAE/E3yC,YAAay9I,GAEbqB,qBAAqB,EAErBC,WAAY,SAAqB/5I,GAIhC,OAFAlL,KAAKkL,QAAUA,EAERlL,MAIRq1I,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,QAE5B16H,IAARmrC,IAAoBA,EAAM,SAEZnrC,IAAdnZ,KAAKsX,OAAqBgtC,EAAMtkD,KAAKsX,KAAOgtC,GAEjDA,EAAMtkD,KAAKg1I,QAAQV,WAAYhwF,GAE/B,MAAMyyB,EAAQ/2E,KAER4/E,EAAS2zD,GAAM31H,IAAK0mC,GAE1B,QAAgBnrC,IAAXymE,EAYJ,OAVA7I,EAAMi+D,QAAQb,UAAW7vF,GAEzB9uB,YAAY,WAENm+G,GAASA,EAAQ/zD,GAEtB7I,EAAMi+D,QAAQZ,QAAS9vF,KAErB,GAEIs7B,EAIR,MAAMslE,EAAe,GACrBA,EAAaC,YAAqC,cAArBnlJ,KAAKi1I,YAAgC,cAAgB,UAElFr6G,MAAO0pB,EAAK4gG,GAAezlC,MAAM,SAAW2lC,GAE3C,OAAOA,EAAIxlH,UAER6/E,MAAM,SAAW7/E,GAEpB,OAAOgkH,kBAAmBhkH,EAAMm3C,EAAM7rE,YAEnCu0G,MAAM,SAAW4lC,GAEpB9R,GAAMtqI,IAAKq7C,EAAK+gG,GAEX1R,GAASA,EAAQ0R,GAEtBtuE,EAAMi+D,QAAQZ,QAAS9vF,MAEpBghG,OAAO,SAAW9hJ,GAEhBqwI,GAAUA,EAASrwI,GAExBuzE,EAAMi+D,QAAQX,UAAW/vF,GACzByyB,EAAMi+D,QAAQZ,QAAS9vF,MAIxByyB,EAAMi+D,QAAQb,UAAW7vF,MAiB3B9kD,OAAOo5C,OAAQirG,GAAUhrG,UAAW,CAEnC1pC,OAAQ,SAAWrP,EAAGC,GAMrB,OAJAC,KAAK+jJ,YAAc,IAAI/G,GACvBh9I,KAAK8jJ,SAASxiJ,KAAMtB,KAAK+jJ,aACzB/jJ,KAAK+jJ,YAAY50I,OAAQrP,EAAGC,GAErBC,MAIR4jB,OAAQ,SAAW9jB,EAAGC,GAIrB,OAFAC,KAAK+jJ,YAAYngI,OAAQ9jB,EAAGC,GAErBC,MAIRykB,iBAAkB,SAAWk6H,EAAMC,EAAMlI,EAAIC,GAI5C,OAFA32I,KAAK+jJ,YAAYt/H,iBAAkBk6H,EAAMC,EAAMlI,EAAIC,GAE5C32I,MAIRskB,cAAe,SAAWu6H,EAAOC,EAAOC,EAAOC,EAAOtI,EAAIC,GAIzD,OAFA32I,KAAK+jJ,YAAYz/H,cAAeu6H,EAAOC,EAAOC,EAAOC,EAAOtI,EAAIC,GAEzD32I,MAIRi/I,WAAY,SAAW1hB,GAItB,OAFAv9H,KAAK+jJ,YAAY9E,WAAY1hB,GAEtBv9H,MAIRulJ,SAAU,SAAWC,EAAOC,GAE3B,SAASC,EAAiBC,GAEzB,MAAM5nF,EAAS,GAEf,IAAM,IAAIl+D,EAAI,EAAGwO,EAAIs3I,EAAWrjJ,OAAQzC,EAAIwO,EAAGxO,IAAO,CAErD,MAAM+lJ,EAAUD,EAAY9lJ,GAEtBgmJ,EAAW,IAAI3I,GACrB2I,EAAS3tI,OAAS0tI,EAAQ1tI,OAE1B6lD,EAAOz8D,KAAMukJ,GAId,OAAO9nF,EAIR,SAAS+nF,EAAsBlmB,EAAMmmB,GAEpC,MAAMC,EAAUD,EAAUzjJ,OAM1B,IAAI6C,GAAS,EACb,IAAM,IAAItE,EAAImlJ,EAAU,EAAGziJ,EAAI,EAAGA,EAAIyiJ,EAASnlJ,EAAI0C,IAAO,CAEzD,IAAI0iJ,EAAYF,EAAWllJ,GACvBqlJ,EAAaH,EAAWxiJ,GAExB4iJ,EAASD,EAAWpmJ,EAAImmJ,EAAUnmJ,EAClCsmJ,EAASF,EAAWnmJ,EAAIkmJ,EAAUlmJ,EAEtC,GAAKsD,KAAKC,IAAK8iJ,GAAWxyI,OAAOnK,QAAU,CAU1C,GAPK28I,EAAS,IAEbH,EAAYF,EAAWxiJ,GAAK4iJ,GAAWA,EACvCD,EAAaH,EAAWllJ,GAAKulJ,GAAWA,GAIlCxmB,EAAK7/H,EAAIkmJ,EAAUlmJ,GAAS6/H,EAAK7/H,EAAImmJ,EAAWnmJ,EAAQ,SAE/D,GAAK6/H,EAAK7/H,IAAMkmJ,EAAUlmJ,GAEzB,GAAK6/H,EAAK9/H,IAAMmmJ,EAAUnmJ,EAAK,OAAO,MAGhC,CAEN,MAAMumJ,EAAWD,GAAWxmB,EAAK9/H,EAAImmJ,EAAUnmJ,GAAMqmJ,GAAWvmB,EAAK7/H,EAAIkmJ,EAAUlmJ,GACnF,GAAkB,IAAbsmJ,EAAoB,OAAO,EAChC,GAAKA,EAAW,EAAQ,SACxBlhJ,GAAWA,OAIN,CAGN,GAAKy6H,EAAK7/H,IAAMkmJ,EAAUlmJ,EAAM,SAEhC,GAASmmJ,EAAWpmJ,GAAK8/H,EAAK9/H,GAAS8/H,EAAK9/H,GAAKmmJ,EAAUnmJ,GACrDmmJ,EAAUnmJ,GAAK8/H,EAAK9/H,GAAS8/H,EAAK9/H,GAAKomJ,EAAWpmJ,EAAS,OAAO,GAO1E,OAAOqF,EAIR,MAAMm4H,EAAcF,GAAWE,YAEzBwmB,EAAW9jJ,KAAK8jJ,SACtB,GAAyB,IAApBA,EAASxhJ,OAAe,MAAO,GAEpC,IAAiB,IAAZmjJ,EAAmB,OAAOC,EAAiB5B,GAGhD,IAAIwC,EAAOV,EAASC,EACpB,MAAM9nF,EAAS,GAEf,GAAyB,IAApB+lF,EAASxhJ,OAMb,OAJAsjJ,EAAU9B,EAAU,GACpB+B,EAAW,IAAI3I,GACf2I,EAAS3tI,OAAS0tI,EAAQ1tI,OAC1B6lD,EAAOz8D,KAAMukJ,GACN9nF,EAIR,IAAIwoF,GAAejpB,EAAawmB,EAAU,GAAIjK,aAC9C0M,EAAaf,GAAUe,EAAaA,EAIpC,MAAMC,EAAmB,GACnBC,EAAY,GAClB,IAEIC,EAkGAC,EApGAC,EAAgB,GAChBC,EAAU,EAGdJ,EAAWI,QAAY1tI,EACvBytI,EAAeC,GAAY,GAE3B,IAAM,IAAIhnJ,EAAI,EAAGwO,EAAIy1I,EAASxhJ,OAAQzC,EAAIwO,EAAGxO,IAE5C+lJ,EAAU9B,EAAUjkJ,GACpB6mJ,EAAYd,EAAQ/L,YACpByM,EAAQhpB,EAAaopB,GACrBJ,EAAQd,GAAUc,EAAQA,EAErBA,IAEKC,GAAkBE,EAAWI,IAAcA,IAEpDJ,EAAWI,GAAY,CAAE16H,EAAG,IAAI+wH,GAASr8I,GACzC4lJ,EAAWI,GAAU16H,EAAEjU,OAAS0tI,EAAQ1tI,OAEnCquI,GAAaM,IAClBD,EAAeC,GAAY,IAM3BD,EAAeC,GAAUvlJ,KAAM,CAAEmZ,EAAGmrI,EAAS/kJ,EAAG6lJ,EAAW,KAS7D,IAAOD,EAAW,GAAM,OAAOf,EAAiB5B,GAGhD,GAAK2C,EAAUnkJ,OAAS,EAAI,CAE3B,IAAIwkJ,GAAY,EAChB,MAAMC,EAAW,GAEjB,IAAM,IAAIC,EAAO,EAAGC,EAAOR,EAAUnkJ,OAAQ0kJ,EAAOC,EAAMD,IAEzDR,EAAkBQ,GAAS,GAI5B,IAAM,IAAIA,EAAO,EAAGC,EAAOR,EAAUnkJ,OAAQ0kJ,EAAOC,EAAMD,IAAU,CAEnE,MAAME,EAAMN,EAAeI,GAE3B,IAAM,IAAIG,EAAO,EAAGA,EAAOD,EAAI5kJ,OAAQ6kJ,IAAU,CAEhD,MAAMC,EAAKF,EAAKC,GAChB,IAAIE,GAAkB,EAEtB,IAAM,IAAIC,EAAQ,EAAGA,EAAQb,EAAUnkJ,OAAQglJ,IAEzCxB,EAAsBsB,EAAGvmJ,EAAG4lJ,EAAWa,GAAQzmJ,KAE9CmmJ,IAASM,GAAQP,EAASzlJ,KAAM,CAAEimJ,MAAOP,EAAMQ,IAAKF,EAAO9kJ,KAAM2kJ,IACjEE,GAEJA,GAAkB,EAClBb,EAAkBc,GAAQhmJ,KAAM8lJ,IAIhCN,GAAY,GAQVO,GAEJb,EAAkBQ,GAAO1lJ,KAAM8lJ,IAS7BL,EAASzkJ,OAAS,IAGfwkJ,IAAYF,EAAgBJ,IAQrC,IAAM,IAAI3mJ,EAAI,EAAG6tD,EAAK+4F,EAAUnkJ,OAAQzC,EAAI6tD,EAAI7tD,IAAO,CAEtDgmJ,EAAWY,EAAW5mJ,GAAIssB,EAC1B4xC,EAAOz8D,KAAMukJ,GACbc,EAAWC,EAAe/mJ,GAE1B,IAAM,IAAI4F,EAAI,EAAG6sE,EAAKq0E,EAASrkJ,OAAQmD,EAAI6sE,EAAI7sE,IAE9CogJ,EAASpoB,MAAMn8H,KAAMqlJ,EAAUlhJ,GAAIgV,GAQrC,OAAOsjD,KAcTv+D,OAAOo5C,OAAQorG,GAAKnrG,UAAW,CAE9BstF,QAAQ,EAERC,eAAgB,SAAWvkH,EAAMjC,EAAO,KAEvC,MAAMm+C,EAAS,GACTt5B,EAcR,SAAsB5iB,EAAMjC,EAAMrf,GAEjC,MAAMknJ,EAAQ7xI,MAAMkzH,KAAOlzH,MAAMkzH,KAAMjnH,GAASm0D,OAAQn0D,GAAOo9E,MAAO,IAChE50F,EAAQuV,EAAOrf,EAAK6tG,WACpBs5C,GAAgBnnJ,EAAKkuD,YAAY5/C,KAAOtO,EAAKkuD,YAAY7/C,KAAOrO,EAAKonJ,oBAAuBt9I,EAE5Fo6B,EAAQ,GAEd,IAAIrU,EAAU,EAAGC,EAAU,EAE3B,IAAM,IAAIxwB,EAAI,EAAGA,EAAI4nJ,EAAMnlJ,OAAQzC,IAAO,CAEzC,MAAMqkJ,EAAOuD,EAAO5nJ,GAEpB,GAAc,OAATqkJ,EAEJ9zH,EAAU,EACVC,GAAWq3H,MAEL,CAEN,MAAME,EAAM3D,GAAYC,EAAM75I,EAAO+lB,EAASC,EAAS9vB,GACvD6vB,GAAWw3H,EAAIx3H,QACfqU,EAAMnjC,KAAMsmJ,EAAItwI,OAMlB,OAAOmtB,EA3CQojH,CAAahmI,EAAMjC,EAAM5f,KAAKO,MAE5C,IAAM,IAAIM,EAAI,EAAGmiC,EAAKyB,EAAMniC,OAAQzB,EAAImiC,EAAIniC,IAE3C+U,MAAMijC,UAAUv3C,KAAKgxB,MAAOyrC,EAAQt5B,EAAO5jC,GAAI0kJ,YAIhD,OAAOxnF,KA2HTgnF,GAAWlsG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAExE3yC,YAAa6+I,GAEb1P,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,GAEzC,MAAM98D,EAAQ/2E,KAER00I,EAAS,IAAIsB,GAAYh2I,KAAKg1I,SACpCN,EAAOkB,QAAS51I,KAAKsX,MACrBo9H,EAAOoB,iBAAkB91I,KAAKo1I,eAC9BV,EAAOiB,mBAAoB5+D,EAAMm+D,iBACjCR,EAAOW,KAAM/wF,GAAK,SAAWziC,GAE5B,IAAIowG,EAEJ,IAECA,EAAOz8G,KAAKC,MAAOoM,GAElB,MAAQre,GAETmJ,QAAQoK,KAAM,yFACdk7G,EAAOz8G,KAAKC,MAAOoM,EAAK4pB,UAAW,GAAI5pB,EAAKvf,OAAS,IAItD,MAAM0iB,EAAO+xD,EAAMthE,MAAOw8G,GAErB0hB,GAASA,EAAQ3uH,KAEpB4uH,EAAYC,IAIhBp+H,MAAO,SAAWw8G,GAEjB,OAAO,IAAI+xB,GAAM/xB,MAQnB,MAAM61B,GAAe,CAEpB1pH,WAAY,WAQX,YANkBjlB,IAAbmqG,KAEJA,GAAW,IAAMv8E,OAAO+gH,cAAgB/gH,OAAOghH,qBAIzCzkC,IAIRnkC,WAAY,SAAWx/E,GAEtB2jH,GAAW3jH,IAMb,SAASqoJ,GAAahT,GAErBD,GAAO17F,KAAMr5C,KAAMg1I,GAsDpB,SAASiT,GAAsBz8D,EAAUC,EAAa2f,GAErDq1C,GAAWpnG,KAAMr5C,UAAMmZ,EAAWiyF,GAElC,MAAMvmC,GAAS,IAAIh8B,IAAQjgC,IAAK4iF,GAC1B1mB,GAAS,IAAIj8B,IAAQjgC,IAAK6iF,GAE1By8D,EAAM,IAAIv9F,GAASka,EAAOtgE,EAAGsgE,EAAO/7B,EAAG+7B,EAAOrjE,GAC9C2mJ,EAAS,IAAIx9F,GAASma,EAAOvgE,EAAGugE,EAAOh8B,EAAGg8B,EAAOtjE,GAGjD61I,EAAKh0I,KAAKyG,KAAMzG,KAAK6G,IACrB0+C,EAAKyuF,EAAKh0I,KAAKyG,KAAM,KAE3B9J,KAAKurG,GAAGC,aAAc,GAAI1oF,KAAMolI,GAAMj/I,IAAKk/I,GAASv9I,eAAgBysI,GACpEr3I,KAAKurG,GAAGC,aAAc,GAAI1oF,KAAMolI,GAAM3+I,IAAK4+I,GAASv9I,eAAgBg+C,GA8BrE,SAASw/F,GAAmBjrI,EAAOiuF,GAElCq1C,GAAWpnG,KAAMr5C,UAAMmZ,EAAWiyF,GAElC,MAAMvmC,GAAS,IAAIh8B,IAAQjgC,IAAKuU,GAGhCnd,KAAKurG,GAAGC,aAAc,GAAI5iG,IAAKi8D,EAAOtgE,EAAGsgE,EAAO/7B,EAAG+7B,EAAOrjE,GAAIoJ,eAAgB,EAAIvH,KAAKyG,KAAMzG,KAAK6G,KAtGnG89I,GAAYnvG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQqxF,GAAOl8F,WAAa,CAEzE3yC,YAAa8hJ,GAEb3S,KAAM,SAAW/wF,EAAKqvF,EAAQC,EAAYC,GAEzC,MAAM98D,EAAQ/2E,KAER00I,EAAS,IAAIsB,GAAYj/D,EAAMi+D,SACrCN,EAAOoE,gBAAiB,eACxBpE,EAAOkB,QAAS7+D,EAAMz/D,MACtBo9H,EAAOoB,iBAAkB/+D,EAAMq+D,eAC/BV,EAAOiB,mBAAoB5+D,EAAMm+D,iBACjCR,EAAOW,KAAM/wF,GAAK,SAAWn5C,GAE5B,IAIC,MAAMk9I,EAAal9I,EAAOiuC,MAAO,GAEjB0uG,GAAa1pH,aACrBkqH,gBAAiBD,GAAY,SAAWE,GAE/C5U,EAAQ4U,MAIR,MAAQ/kJ,GAEJqwI,EAEJA,EAASrwI,GAITmJ,QAAQu1B,MAAO1+B,GAIhBuzE,EAAMi+D,QAAQX,UAAW/vF,MAIxBsvF,EAAYC,MAyBjBoU,GAAqBpvG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+8F,GAAW5nG,WAAa,CAEtF3yC,YAAa+hJ,GAEbO,wBAAwB,EAExB1lI,KAAM,SAAW+gC,GAIhB,OAFA48F,GAAW5nG,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAE/B7jD,MAIRqV,OAAQ,SAAWyuC,GAMlB,OAJa28F,GAAW5nG,UAAUxjC,OAAOgkC,KAAMr5C,KAAM8jD,MAqBvDskG,GAAkBvvG,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+8F,GAAW5nG,WAAa,CAEnF3yC,YAAakiJ,GAEbK,qBAAqB,EAErB3lI,KAAM,SAAW+gC,GAIhB,OAFA48F,GAAW5nG,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAE/B7jD,MAIRqV,OAAQ,SAAWyuC,GAMlB,OAJa28F,GAAW5nG,UAAUxjC,OAAOgkC,KAAMr5C,KAAM8jD,MAUvD,MAAM4kG,GAAY,IAAIx0F,GAChBy0F,GAAW,IAAIz0F,GAErB,SAAS00F,KAER5oJ,KAAK8/B,KAAO,eAEZ9/B,KAAK45E,OAAS,EAEd55E,KAAK6oJ,OAAS,KAEd7oJ,KAAKq9G,QAAU,IAAI3jC,GACnB15E,KAAKq9G,QAAQ1jD,OAAO/xC,OAAQ,GAC5B5nB,KAAKq9G,QAAQr6D,kBAAmB,EAEhChjD,KAAKs9G,QAAU,IAAI5jC,GACnB15E,KAAKs9G,QAAQ3jD,OAAO/xC,OAAQ,GAC5B5nB,KAAKs9G,QAAQt6D,kBAAmB,EAEhChjD,KAAK8oJ,OAAS,CACb1pH,MAAO,KACPu6C,IAAK,KACLC,OAAQ,KACRvhB,KAAM,KACNC,IAAK,KACLrlC,KAAM,KACN41H,OAAQ,MAKVrpJ,OAAOo5C,OAAQgwG,GAAa/vG,UAAW,CAEtC4P,OAAQ,SAAWiD,GAElB,MAAMlvC,EAAQxc,KAAK8oJ,OAMnB,GAJoBtsI,EAAM4iB,QAAUssB,EAAOtsB,OAAS5iB,EAAMm9D,MAAQjuB,EAAOiuB,KACxEn9D,EAAMo9D,SAAWluB,EAAOkuB,OAAS55E,KAAK45E,QAAUp9D,EAAM67C,OAAS3M,EAAO2M,MACtE77C,EAAM87C,MAAQ5M,EAAO4M,KAAO97C,EAAMyW,OAASy4B,EAAOz4B,MAAQzW,EAAMqsI,SAAW7oJ,KAAK6oJ,OAE9D,CAElBrsI,EAAM4iB,MAAQssB,EAAOtsB,MACrB5iB,EAAMm9D,IAAMjuB,EAAOiuB,IACnBn9D,EAAMo9D,OAASluB,EAAOkuB,OAAS55E,KAAK45E,OACpCp9D,EAAM67C,KAAO3M,EAAO2M,KACpB77C,EAAM87C,IAAM5M,EAAO4M,IACnB97C,EAAMyW,KAAOy4B,EAAOz4B,KACpBzW,EAAMqsI,OAAS7oJ,KAAK6oJ,OAKpB,MAAMj9F,EAAmBF,EAAOE,iBAAiBjiD,QAC3Co/I,EAAavsI,EAAMqsI,OAAS,EAC5BG,EAAqBD,EAAavsI,EAAM67C,KAAO77C,EAAM4iB,MACrD6pH,EAASzsI,EAAM67C,KAAOh1D,KAAKL,IAAKw2C,GAAUC,QAAUj9B,EAAMm9D,IAAM,IAAUn9D,EAAMyW,KACtF,IAAIi2H,EAAMC,EAIVR,GAAS9rG,SAAU,KAASksG,EAC5BL,GAAU7rG,SAAU,IAAOksG,EAI3BG,GAASD,EAAOzsI,EAAMo9D,OAASovE,EAC/BG,EAAOF,EAAOzsI,EAAMo9D,OAASovE,EAE7Bp9F,EAAiB/O,SAAU,GAAM,EAAIrgC,EAAM67C,MAAS8wF,EAAOD,GAC3Dt9F,EAAiB/O,SAAU,IAAQssG,EAAOD,IAAWC,EAAOD,GAE5DlpJ,KAAKq9G,QAAQzxD,iBAAiB9oC,KAAM8oC,GAIpCs9F,GAASD,EAAOzsI,EAAMo9D,OAASovE,EAC/BG,EAAOF,EAAOzsI,EAAMo9D,OAASovE,EAE7Bp9F,EAAiB/O,SAAU,GAAM,EAAIrgC,EAAM67C,MAAS8wF,EAAOD,GAC3Dt9F,EAAiB/O,SAAU,IAAQssG,EAAOD,IAAWC,EAAOD,GAE5DlpJ,KAAKs9G,QAAQ1xD,iBAAiB9oC,KAAM8oC,GAIrC5rD,KAAKq9G,QAAQtxD,YAAYjpC,KAAM4oC,EAAOK,aAActP,SAAUksG,IAC9D3oJ,KAAKs9G,QAAQvxD,YAAYjpC,KAAM4oC,EAAOK,aAActP,SAAUisG,OAMhE,MAAMU,GAELljJ,YAAamjJ,GAEZrpJ,KAAKqpJ,eAA4BlwI,IAAdkwI,GAA4BA,EAE/CrpJ,KAAK0wI,UAAY,EACjB1wI,KAAKspJ,QAAU,EACftpJ,KAAKupJ,YAAc,EAEnBvpJ,KAAKwpJ,SAAU,EAIhBhpJ,QAECR,KAAK0wI,UAAYr8G,KAEjBr0B,KAAKspJ,QAAUtpJ,KAAK0wI,UACpB1wI,KAAKupJ,YAAc,EACnBvpJ,KAAKwpJ,SAAU,EAIhBnoJ,OAECrB,KAAKypJ,iBACLzpJ,KAAKwpJ,SAAU,EACfxpJ,KAAKqpJ,WAAY,EAIlBI,iBAGC,OADAzpJ,KAAK0pJ,WACE1pJ,KAAKupJ,YAIbG,WAEC,IAAIr6I,EAAO,EAEX,GAAKrP,KAAKqpJ,YAAerpJ,KAAKwpJ,QAG7B,OADAxpJ,KAAKQ,QACE,EAIR,GAAKR,KAAKwpJ,QAAU,CAEnB,MAAMG,EAAUt1H,KAEhBhlB,GAASs6I,EAAU3pJ,KAAKspJ,SAAY,IACpCtpJ,KAAKspJ,QAAUK,EAEf3pJ,KAAKupJ,aAAel6I,EAIrB,OAAOA,GAMT,SAASglB,KAER,OAAgC,oBAAhBu1H,YAA8B30H,KAAO20H,aAAcv1H,MAIpE,MAAMw1H,GAA4B,IAAIl/F,GAChCm/F,GAA8B,IAAI/iG,GAClCgjG,GAAyB,IAAIp/F,GAC7Bq/F,GAA6B,IAAIr/F,GAEvC,MAAMs/F,WAAsBxvF,GAE3Bv0D,cAECwK,QAEA1Q,KAAK8/B,KAAO,gBAEZ9/B,KAAKujB,QAAUukI,GAAa1pH,aAE5Bp+B,KAAKkqJ,KAAOlqJ,KAAKujB,QAAQ4mI,aACzBnqJ,KAAKkqJ,KAAKE,QAASpqJ,KAAKujB,QAAQ8mI,aAEhCrqJ,KAAKw5B,OAAS,KAEdx5B,KAAKsqJ,UAAY,EAIjBtqJ,KAAKuqJ,OAAS,IAAInB,GAInBoB,WAEC,OAAOxqJ,KAAKkqJ,KAIbO,eAWC,OATqB,OAAhBzqJ,KAAKw5B,SAETx5B,KAAKkqJ,KAAKpsC,WAAY99G,KAAKw5B,QAC3Bx5B,KAAKw5B,OAAOskF,WAAY99G,KAAKujB,QAAQ8mI,aACrCrqJ,KAAKkqJ,KAAKE,QAASpqJ,KAAKujB,QAAQ8mI,aAChCrqJ,KAAKw5B,OAAS,MAIRx5B,KAIR0qJ,YAEC,OAAO1qJ,KAAKw5B,OAIbmxH,UAAWhrJ,GAiBV,OAfqB,OAAhBK,KAAKw5B,QAETx5B,KAAKkqJ,KAAKpsC,WAAY99G,KAAKw5B,QAC3Bx5B,KAAKw5B,OAAOskF,WAAY99G,KAAKujB,QAAQ8mI,cAIrCrqJ,KAAKkqJ,KAAKpsC,WAAY99G,KAAKujB,QAAQ8mI,aAIpCrqJ,KAAKw5B,OAAS75B,EACdK,KAAKkqJ,KAAKE,QAASpqJ,KAAKw5B,QACxBx5B,KAAKw5B,OAAO4wH,QAASpqJ,KAAKujB,QAAQ8mI,aAE3BrqJ,KAIR4qJ,kBAEC,OAAO5qJ,KAAKkqJ,KAAKA,KAAKvqJ,MAIvBkrJ,gBAAiBlrJ,GAIhB,OAFAK,KAAKkqJ,KAAKA,KAAKY,gBAAiBnrJ,EAAOK,KAAKujB,QAAQwnI,YAAa,KAE1D/qJ,KAIRy9D,kBAAmBC,GAElBhtD,MAAM+sD,kBAAmBC,GAEzB,MAAM12D,EAAWhH,KAAKujB,QAAQvc,SACxBgoB,EAAKhvB,KAAKgvB,GAQhB,GANAhvB,KAAKsqJ,UAAYtqJ,KAAKuqJ,OAAOb,WAE7B1pJ,KAAK+rD,YAAY8L,UAAWgyF,GAAaC,GAAeC,IAExDC,GAAaphJ,IAAK,EAAG,GAAK,GAAIkiD,gBAAiBg/F,IAE1C9iJ,EAASgkJ,UAAY,CAIzB,MAAMra,EAAU3wI,KAAKujB,QAAQwnI,YAAc/qJ,KAAKsqJ,UAEhDtjJ,EAASgkJ,UAAUC,wBAAyBpB,GAAY/pJ,EAAG6wI,GAC3D3pI,EAASkkJ,UAAUD,wBAAyBpB,GAAY9pJ,EAAG4wI,GAC3D3pI,EAASmkJ,UAAUF,wBAAyBpB,GAAY1pJ,EAAGwwI,GAC3D3pI,EAASokJ,SAASH,wBAAyBjB,GAAalqJ,EAAG6wI,GAC3D3pI,EAASqkJ,SAASJ,wBAAyBjB,GAAajqJ,EAAG4wI,GAC3D3pI,EAASskJ,SAASL,wBAAyBjB,GAAa7pJ,EAAGwwI,GAC3D3pI,EAASukJ,IAAIN,wBAAyBj8H,EAAGlvB,EAAG6wI,GAC5C3pI,EAASwkJ,IAAIP,wBAAyBj8H,EAAGjvB,EAAG4wI,GAC5C3pI,EAASykJ,IAAIR,wBAAyBj8H,EAAG7uB,EAAGwwI,QAI5C3pI,EAAS4vD,YAAaizF,GAAY/pJ,EAAG+pJ,GAAY9pJ,EAAG8pJ,GAAY1pJ,GAChE6G,EAAS0kJ,eAAgB1B,GAAalqJ,EAAGkqJ,GAAajqJ,EAAGiqJ,GAAa7pJ,EAAG6uB,EAAGlvB,EAAGkvB,EAAGjvB,EAAGivB,EAAG7uB,IAQ3F,MAAMwrJ,WAAclxF,GAEnBv0D,YAAac,GAEZ0J,QAEA1Q,KAAK8/B,KAAO,QAEZ9/B,KAAKgH,SAAWA,EAChBhH,KAAKujB,QAAUvc,EAASuc,QAExBvjB,KAAKkqJ,KAAOlqJ,KAAKujB,QAAQ4mI,aACzBnqJ,KAAKkqJ,KAAKE,QAASpjJ,EAASwjJ,YAE5BxqJ,KAAK4rJ,UAAW,EAEhB5rJ,KAAKmL,OAAS,KACdnL,KAAK6rJ,OAAS,EACd7rJ,KAAK8rJ,MAAO,EACZ9rJ,KAAK+rJ,UAAY,EACjB/rJ,KAAKgsJ,QAAU,EACfhsJ,KAAKgc,OAAS,EACdhc,KAAK8tI,cAAW30H,EAChBnZ,KAAKisJ,aAAe,EACpBjsJ,KAAKksJ,WAAY,EACjBlsJ,KAAKmsJ,oBAAqB,EAC1BnsJ,KAAK6jD,OAAS,KACd7jD,KAAKosJ,WAAa,QAElBpsJ,KAAKqsJ,WAAa,EAClBrsJ,KAAKssJ,UAAY,EACjBtsJ,KAAKusJ,YAAa,EAElBvsJ,KAAKwsJ,QAAU,GAIhBC,YAEC,OAAOzsJ,KAAKkqJ,KAIbwC,cAAeC,GAOd,OALA3sJ,KAAKmsJ,oBAAqB,EAC1BnsJ,KAAKosJ,WAAa,YAClBpsJ,KAAK6jD,OAAS8oG,EACd3sJ,KAAKoqJ,UAEEpqJ,KAIR4sJ,sBAAuBC,GAOtB,OALA7sJ,KAAKmsJ,oBAAqB,EAC1BnsJ,KAAKosJ,WAAa,YAClBpsJ,KAAK6jD,OAAS7jD,KAAKujB,QAAQupI,yBAA0BD,GACrD7sJ,KAAKoqJ,UAEEpqJ,KAIR+sJ,qBAAsBC,GAOrB,OALAhtJ,KAAKmsJ,oBAAqB,EAC1BnsJ,KAAKosJ,WAAa,kBAClBpsJ,KAAK6jD,OAAS7jD,KAAKujB,QAAQ0pI,wBAAyBD,GACpDhtJ,KAAKoqJ,UAEEpqJ,KAIRktJ,UAAW3E,GAOV,OALAvoJ,KAAKmL,OAASo9I,EACdvoJ,KAAKosJ,WAAa,SAEbpsJ,KAAK4rJ,UAAW5rJ,KAAKmtJ,OAEnBntJ,KAIRmtJ,KAAMC,EAAQ,GAEb,IAAwB,IAAnBptJ,KAAKksJ,UAGT,YADAv/I,QAAQoK,KAAM,0CAKf,IAAiC,IAA5B/W,KAAKmsJ,mBAGT,YADAx/I,QAAQoK,KAAM,oDAKf/W,KAAKqsJ,WAAarsJ,KAAKujB,QAAQwnI,YAAcqC,EAE7C,MAAMvpG,EAAS7jD,KAAKujB,QAAQ8pI,qBAe5B,OAdAxpG,EAAO14C,OAASnL,KAAKmL,OACrB04C,EAAOioG,KAAO9rJ,KAAK8rJ,KACnBjoG,EAAOkoG,UAAY/rJ,KAAK+rJ,UACxBloG,EAAOmoG,QAAUhsJ,KAAKgsJ,QACtBnoG,EAAOypG,QAAUttJ,KAAKutJ,QAAQ16H,KAAM7yB,MACpC6jD,EAAOrjD,MAAOR,KAAKqsJ,WAAYrsJ,KAAKssJ,UAAYtsJ,KAAKgc,OAAQhc,KAAK8tI,UAElE9tI,KAAKksJ,WAAY,EAEjBlsJ,KAAK6jD,OAASA,EAEd7jD,KAAKwtJ,UAAWxtJ,KAAK6rJ,QACrB7rJ,KAAKytJ,gBAAiBztJ,KAAKisJ,cAEpBjsJ,KAAKoqJ,UAIbsD,QAEC,IAAiC,IAA5B1tJ,KAAKmsJ,mBA4BV,OArBwB,IAAnBnsJ,KAAKksJ,YAITlsJ,KAAKssJ,WAAajpJ,KAAK2B,IAAKhF,KAAKujB,QAAQwnI,YAAc/qJ,KAAKqsJ,WAAY,GAAMrsJ,KAAKisJ,cAEhE,IAAdjsJ,KAAK8rJ,OAIT9rJ,KAAKssJ,UAAYtsJ,KAAKssJ,WAActsJ,KAAK8tI,UAAY9tI,KAAKmL,OAAO2iI,WAIlE9tI,KAAK6jD,OAAOxiD,OACZrB,KAAK6jD,OAAOypG,QAAU,KAEtBttJ,KAAKksJ,WAAY,GAIXlsJ,KA1BN2M,QAAQoK,KAAM,oDA8BhB1V,OAEC,IAAiC,IAA5BrB,KAAKmsJ,mBAaV,OANAnsJ,KAAKssJ,UAAY,EAEjBtsJ,KAAK6jD,OAAOxiD,OACZrB,KAAK6jD,OAAOypG,QAAU,KACtBttJ,KAAKksJ,WAAY,EAEVlsJ,KAXN2M,QAAQoK,KAAM,oDAehBqzI,UAEC,GAAKpqJ,KAAKwsJ,QAAQlqJ,OAAS,EAAI,CAE9BtC,KAAK6jD,OAAOumG,QAASpqJ,KAAKwsJ,QAAS,IAEnC,IAAM,IAAI3sJ,EAAI,EAAGwO,EAAIrO,KAAKwsJ,QAAQlqJ,OAAQzC,EAAIwO,EAAGxO,IAEhDG,KAAKwsJ,QAAS3sJ,EAAI,GAAIuqJ,QAASpqJ,KAAKwsJ,QAAS3sJ,IAI9CG,KAAKwsJ,QAASxsJ,KAAKwsJ,QAAQlqJ,OAAS,GAAI8nJ,QAASpqJ,KAAKysJ,kBAItDzsJ,KAAK6jD,OAAOumG,QAASpqJ,KAAKysJ,aAM3B,OAFAzsJ,KAAKusJ,YAAa,EAEXvsJ,KAIR89G,aAEC,GAAK99G,KAAKwsJ,QAAQlqJ,OAAS,EAAI,CAE9BtC,KAAK6jD,OAAOi6D,WAAY99G,KAAKwsJ,QAAS,IAEtC,IAAM,IAAI3sJ,EAAI,EAAGwO,EAAIrO,KAAKwsJ,QAAQlqJ,OAAQzC,EAAIwO,EAAGxO,IAEhDG,KAAKwsJ,QAAS3sJ,EAAI,GAAIi+G,WAAY99G,KAAKwsJ,QAAS3sJ,IAIjDG,KAAKwsJ,QAASxsJ,KAAKwsJ,QAAQlqJ,OAAS,GAAIw7G,WAAY99G,KAAKysJ,kBAIzDzsJ,KAAK6jD,OAAOi6D,WAAY99G,KAAKysJ,aAM9B,OAFAzsJ,KAAKusJ,YAAa,EAEXvsJ,KAIR2tJ,aAEC,OAAO3tJ,KAAKwsJ,QAIboB,WAAYjuJ,GAgBX,OAdOA,IAAQA,EAAQ,KAEE,IAApBK,KAAKusJ,YAETvsJ,KAAK89G,aACL99G,KAAKwsJ,QAAU7sJ,EAAMy5C,QACrBp5C,KAAKoqJ,WAILpqJ,KAAKwsJ,QAAU7sJ,EAAMy5C,QAIfp5C,KAIRwtJ,UAAW7tJ,GAIV,GAFAK,KAAK6rJ,OAASlsJ,OAEcwZ,IAAvBnZ,KAAK6jD,OAAOgoG,OAQjB,OANwB,IAAnB7rJ,KAAKksJ,WAETlsJ,KAAK6jD,OAAOgoG,OAAOf,gBAAiB9qJ,KAAK6rJ,OAAQ7rJ,KAAKujB,QAAQwnI,YAAa,KAIrE/qJ,KAIR6tJ,YAEC,OAAO7tJ,KAAK6rJ,OAIbnB,YAEC,OAAO1qJ,KAAK2tJ,aAAc,GAI3BhD,UAAWnxH,GAEV,OAAOx5B,KAAK4tJ,WAAYp0H,EAAS,CAAEA,GAAW,IAI/Ci0H,gBAAiB9tJ,GAEhB,IAAiC,IAA5BK,KAAKmsJ,mBAeV,OARAnsJ,KAAKisJ,aAAetsJ,GAEI,IAAnBK,KAAKksJ,WAETlsJ,KAAK6jD,OAAOooG,aAAanB,gBAAiB9qJ,KAAKisJ,aAAcjsJ,KAAKujB,QAAQwnI,YAAa,KAIjF/qJ,KAbN2M,QAAQoK,KAAM,oDAiBhB+2I,kBAEC,OAAO9tJ,KAAKisJ,aAIbsB,UAECvtJ,KAAKksJ,WAAY,EAIlB6B,UAEC,OAAiC,IAA5B/tJ,KAAKmsJ,oBAETx/I,QAAQoK,KAAM,qDACP,GAID/W,KAAK8rJ,KAIbkC,QAASruJ,GAER,IAAiC,IAA5BK,KAAKmsJ,mBAeV,OARAnsJ,KAAK8rJ,KAAOnsJ,GAEY,IAAnBK,KAAKksJ,YAETlsJ,KAAK6jD,OAAOioG,KAAO9rJ,KAAK8rJ,MAIlB9rJ,KAbN2M,QAAQoK,KAAM,oDAiBhBk3I,aAActuJ,GAIb,OAFAK,KAAK+rJ,UAAYpsJ,EAEVK,KAIRkuJ,WAAYvuJ,GAIX,OAFAK,KAAKgsJ,QAAUrsJ,EAERK,KAIRmuJ,YAEC,OAAOnuJ,KAAKkqJ,KAAKA,KAAKvqJ,MAIvByuJ,UAAWzuJ,GAIV,OAFAK,KAAKkqJ,KAAKA,KAAKY,gBAAiBnrJ,EAAOK,KAAKujB,QAAQwnI,YAAa,KAE1D/qJ,MAMT,MAAMquJ,GAA4B,IAAI1jG,GAChC2jG,GAA8B,IAAIvnG,GAClCwnG,GAAyB,IAAI5jG,GAC7B6jG,GAA+B,IAAI7jG,GAEzC,MAAM8jG,WAAwB9C,GAE7BzlJ,YAAac,GAEZ0J,MAAO1J,GAEPhH,KAAK0uJ,OAAS1uJ,KAAKujB,QAAQorI,eAC3B3uJ,KAAK0uJ,OAAOE,aAAe,OAC3B5uJ,KAAK0uJ,OAAOtE,QAASpqJ,KAAKkqJ,MAI3BuC,YAEC,OAAOzsJ,KAAK0uJ,OAIbG,iBAEC,OAAO7uJ,KAAK0uJ,OAAOI,YAIpBC,eAAgBpvJ,GAIf,OAFAK,KAAK0uJ,OAAOI,YAAcnvJ,EAEnBK,KAIRgvJ,mBAEC,OAAOhvJ,KAAK0uJ,OAAOO,cAIpBC,iBAAkBvvJ,GAIjB,OAFAK,KAAK0uJ,OAAOO,cAAgBtvJ,EAErBK,KAIRmvJ,mBAEC,OAAOnvJ,KAAK0uJ,OAAOU,cAIpBC,iBAAkB1vJ,GAIjB,OAFAK,KAAK0uJ,OAAOU,cAAgBzvJ,EAErBK,KAIRsvJ,iBAEC,OAAOtvJ,KAAK0uJ,OAAOa,YAIpBC,eAAgB7vJ,GAIf,OAFAK,KAAK0uJ,OAAOa,YAAc5vJ,EAEnBK,KAIRyvJ,mBAAoBC,EAAgBC,EAAgBC,GAMnD,OAJA5vJ,KAAK0uJ,OAAOgB,eAAiBA,EAC7B1vJ,KAAK0uJ,OAAOiB,eAAiBA,EAC7B3vJ,KAAK0uJ,OAAOkB,cAAgBA,EAErB5vJ,KAIRy9D,kBAAmBC,GAIlB,GAFAhtD,MAAM+sD,kBAAmBC,IAEQ,IAA5B19D,KAAKmsJ,qBAAkD,IAAnBnsJ,KAAKksJ,UAAsB,OAEpElsJ,KAAK+rD,YAAY8L,UAAWw2F,GAAaC,GAAeC,IAExDC,GAAe5lJ,IAAK,EAAG,EAAG,GAAIkiD,gBAAiBwjG,IAE/C,MAAMI,EAAS1uJ,KAAK0uJ,OAEpB,GAAKA,EAAO1D,UAAY,CAIvB,MAAMra,EAAU3wI,KAAKujB,QAAQwnI,YAAc/qJ,KAAKgH,SAASsjJ,UAEzDoE,EAAO1D,UAAUC,wBAAyBoD,GAAYvuJ,EAAG6wI,GACzD+d,EAAOxD,UAAUD,wBAAyBoD,GAAYtuJ,EAAG4wI,GACzD+d,EAAOvD,UAAUF,wBAAyBoD,GAAYluJ,EAAGwwI,GACzD+d,EAAOmB,aAAa5E,wBAAyBuD,GAAe1uJ,EAAG6wI,GAC/D+d,EAAOoB,aAAa7E,wBAAyBuD,GAAezuJ,EAAG4wI,GAC/D+d,EAAOqB,aAAa9E,wBAAyBuD,GAAeruJ,EAAGwwI,QAI/D+d,EAAO93F,YAAay3F,GAAYvuJ,EAAGuuJ,GAAYtuJ,EAAGsuJ,GAAYluJ,GAC9DuuJ,EAAOhD,eAAgB8C,GAAe1uJ,EAAG0uJ,GAAezuJ,EAAGyuJ,GAAeruJ,IAQ7E,MAAM6vJ,GAEL9pJ,YAAa+pJ,EAAOC,EAAU,MAE7BlwJ,KAAKmwJ,SAAWF,EAAM1sI,QAAQ6sI,iBAC9BpwJ,KAAKmwJ,SAASD,QAAUA,EAExBlwJ,KAAKO,KAAO,IAAI0rE,WAAYjsE,KAAKmwJ,SAASE,mBAE1CJ,EAAMxD,YAAYrC,QAASpqJ,KAAKmwJ,UAKjCG,mBAIC,OAFAtwJ,KAAKmwJ,SAASI,qBAAsBvwJ,KAAKO,MAElCP,KAAKO,KAIbiwJ,sBAEC,IAAI7wJ,EAAQ,EACZ,MAAMY,EAAOP,KAAKswJ,mBAElB,IAAM,IAAIzwJ,EAAI,EAAGA,EAAIU,EAAK+B,OAAQzC,IAEjCF,GAASY,EAAMV,GAIhB,OAAOF,EAAQY,EAAK+B,QAMtB,SAASmuJ,GAAeC,EAASjvH,EAAU6oG,GAK1C,IAAIqmB,EACHC,EACAC,EAkBD,OAvBA7wJ,KAAK0wJ,QAAUA,EACf1wJ,KAAKsqI,UAAYA,EAsBR7oG,GAER,IAAK,aACJkvH,EAAc3wJ,KAAK8wJ,OACnBF,EAAsB5wJ,KAAK+wJ,eAC3BF,EAAc7wJ,KAAKgxJ,+BAEnBhxJ,KAAKmL,OAAS,IAAI4hE,aAA0B,EAAZu9D,GAChCtqI,KAAKixJ,WAAa,EAClB,MAED,IAAK,SACL,IAAK,OACJN,EAAc3wJ,KAAKkxJ,QAInBN,EAAsB5wJ,KAAKkxJ,QAE3BL,EAAc7wJ,KAAKmxJ,0BAEnBnxJ,KAAKmL,OAAS,IAAIyK,MAAmB,EAAZ00H,GACzB,MAED,QACCqmB,EAAc3wJ,KAAKoxJ,MACnBR,EAAsB5wJ,KAAKqxJ,cAC3BR,EAAc7wJ,KAAKsxJ,4BAEnBtxJ,KAAKmL,OAAS,IAAI4hE,aAA0B,EAAZu9D,GAIlCtqI,KAAKuxJ,iBAAmBZ,EACxB3wJ,KAAKwxJ,yBAA2BZ,EAChC5wJ,KAAKyxJ,aAAeZ,EACpB7wJ,KAAK0xJ,WAAa,EAClB1xJ,KAAK2xJ,UAAY,EAEjB3xJ,KAAK4xJ,iBAAmB,EACxB5xJ,KAAK6xJ,yBAA2B,EAEhC7xJ,KAAK8xJ,SAAW,EAChB9xJ,KAAK+xJ,eAAiB,EAIvBvyJ,OAAOo5C,OAAQ63G,GAAc53G,UAAW,CAGvCm5G,WAAY,SAAWC,EAAW1gC,GAKjC,MAAMpmH,EAASnL,KAAKmL,OACnB6kF,EAAShwF,KAAKsqI,UACdtuH,EAASi2I,EAAYjiE,EAASA,EAE/B,IAAIkiE,EAAgBlyJ,KAAK4xJ,iBAEzB,GAAuB,IAAlBM,EAAsB,CAI1B,IAAM,IAAIryJ,EAAI,EAAGA,IAAMmwF,IAAWnwF,EAEjCsL,EAAQ6Q,EAASnc,GAAMsL,EAAQtL,GAIhCqyJ,EAAgB3gC,MAEV,CAIN2gC,GAAiB3gC,EACjB,MAAM4gC,EAAM5gC,EAAS2gC,EACrBlyJ,KAAKuxJ,iBAAkBpmJ,EAAQ6Q,EAAQ,EAAGm2I,EAAKniE,GAIhDhwF,KAAK4xJ,iBAAmBM,GAKzBE,mBAAoB,SAAW7gC,GAE9B,MAAMpmH,EAASnL,KAAKmL,OACnB6kF,EAAShwF,KAAKsqI,UACdtuH,EAASg0E,EAAShwF,KAAK2xJ,UAEe,IAAlC3xJ,KAAK6xJ,0BAIT7xJ,KAAKyxJ,eAMNzxJ,KAAKwxJ,yBAA0BrmJ,EAAQ6Q,EAAQ,EAAGu1G,EAAQvhC,GAC1DhwF,KAAK6xJ,0BAA4BtgC,GAKlCj/F,MAAO,SAAW2/H,GAEjB,MAAMjiE,EAAShwF,KAAKsqI,UACnBn/H,EAASnL,KAAKmL,OACd6Q,EAASi2I,EAAYjiE,EAASA,EAE9BuhC,EAASvxH,KAAK4xJ,iBACdS,EAAiBryJ,KAAK6xJ,yBAEtBnB,EAAU1wJ,KAAK0wJ,QAKhB,GAHA1wJ,KAAK4xJ,iBAAmB,EACxB5xJ,KAAK6xJ,yBAA2B,EAE3BtgC,EAAS,EAAI,CAIjB,MAAM+gC,EAAsBtiE,EAAShwF,KAAK0xJ,WAE1C1xJ,KAAKuxJ,iBACJpmJ,EAAQ6Q,EAAQs2I,EAAqB,EAAI/gC,EAAQvhC,GAI9CqiE,EAAiB,GAIrBryJ,KAAKwxJ,yBAA0BrmJ,EAAQ6Q,EAAQhc,KAAK2xJ,UAAY3hE,EAAQ,EAAGA,GAI5E,IAAM,IAAInwF,EAAImwF,EAAQxsF,EAAIwsF,EAASA,EAAQnwF,IAAM2D,IAAM3D,EAEtD,GAAKsL,EAAQtL,KAAQsL,EAAQtL,EAAImwF,GAAW,CAI3C0gE,EAAQt4D,SAAUjtF,EAAQ6Q,GAC1B,QASHu2I,kBAAmB,WAElB,MAAM7B,EAAU1wJ,KAAK0wJ,QAEfvlJ,EAASnL,KAAKmL,OACnB6kF,EAAShwF,KAAKsqI,UAEdgoB,EAAsBtiE,EAAShwF,KAAK0xJ,WAErChB,EAAQ8B,SAAUrnJ,EAAQmnJ,GAG1B,IAAM,IAAIzyJ,EAAImwF,EAAQxsF,EAAI8uJ,EAAqBzyJ,IAAM2D,IAAM3D,EAE1DsL,EAAQtL,GAAMsL,EAAQmnJ,EAAwBzyJ,EAAImwF,GAKnDhwF,KAAKyxJ,eAELzxJ,KAAK4xJ,iBAAmB,EACxB5xJ,KAAK6xJ,yBAA2B,GAKjCY,qBAAsB,WAErB,MAAMH,EAAuC,EAAjBtyJ,KAAKsqI,UACjCtqI,KAAK0wJ,QAAQt4D,SAAUp4F,KAAKmL,OAAQmnJ,IAIrChB,4BAA6B,WAE5B,MAAM73H,EAAaz5B,KAAK2xJ,UAAY3xJ,KAAKsqI,UACnCsB,EAAWnyG,EAAaz5B,KAAKsqI,UAEnC,IAAM,IAAIzqI,EAAI45B,EAAY55B,EAAI+rI,EAAU/rI,IAEvCG,KAAKmL,OAAQtL,GAAM,GAMrBmxJ,+BAAgC,WAE/BhxJ,KAAKsxJ,8BACLtxJ,KAAKmL,OAAQnL,KAAK2xJ,UAAY3xJ,KAAKsqI,UAAY,GAAM,GAItD6mB,0BAA2B,WAE1B,MAAM13H,EAAaz5B,KAAK0xJ,WAAa1xJ,KAAKsqI,UACpCooB,EAAc1yJ,KAAK2xJ,UAAY3xJ,KAAKsqI,UAE1C,IAAM,IAAIzqI,EAAI,EAAGA,EAAIG,KAAKsqI,UAAWzqI,IAEpCG,KAAKmL,OAAQunJ,EAAc7yJ,GAAMG,KAAKmL,OAAQsuB,EAAa55B,IAS7DqxJ,QAAS,SAAW/lJ,EAAQo8C,EAAWmiF,EAAWp8H,EAAG0iF,GAEpD,GAAK1iF,GAAK,GAET,IAAM,IAAIzN,EAAI,EAAGA,IAAMmwF,IAAWnwF,EAEjCsL,EAAQo8C,EAAY1nD,GAAMsL,EAAQu+H,EAAY7pI,IAQjDixJ,OAAQ,SAAW3lJ,EAAQo8C,EAAWmiF,EAAWp8H,GAEhDy5C,GAAW2qF,UAAWvmI,EAAQo8C,EAAWp8C,EAAQo8C,EAAWp8C,EAAQu+H,EAAWp8H,IAIhFyjJ,eAAgB,SAAW5lJ,EAAQo8C,EAAWmiF,EAAWp8H,EAAG0iF,GAE3D,MAAM2iE,EAAa3yJ,KAAKixJ,WAAajhE,EAGrCjpC,GAAWmlF,wBAAyB/gI,EAAQwnJ,EAAYxnJ,EAAQo8C,EAAWp8C,EAAQu+H,GAGnF3iF,GAAW2qF,UAAWvmI,EAAQo8C,EAAWp8C,EAAQo8C,EAAWp8C,EAAQwnJ,EAAYrlJ,IAIjF8jJ,MAAO,SAAWjmJ,EAAQo8C,EAAWmiF,EAAWp8H,EAAG0iF,GAElD,MAAM7jE,EAAI,EAAI7e,EAEd,IAAM,IAAIzN,EAAI,EAAGA,IAAMmwF,IAAWnwF,EAAI,CAErC,MAAM4F,EAAI8hD,EAAY1nD,EAEtBsL,EAAQ1F,GAAM0F,EAAQ1F,GAAM0mB,EAAIhhB,EAAQu+H,EAAY7pI,GAAMyN,IAM5D+jJ,cAAe,SAAWlmJ,EAAQo8C,EAAWmiF,EAAWp8H,EAAG0iF,GAE1D,IAAM,IAAInwF,EAAI,EAAGA,IAAMmwF,IAAWnwF,EAAI,CAErC,MAAM4F,EAAI8hD,EAAY1nD,EAEtBsL,EAAQ1F,GAAM0F,EAAQ1F,GAAM0F,EAAQu+H,EAAY7pI,GAAMyN,MASzD,MAAMslJ,GAAqB,gBACrBC,GAAc,IAAIC,OAAQ,kBAAgC,KAK1DC,GAAY,mBACZC,GAAiB,KAAOJ,GAAmBjzD,QAAS,MAAO,IAAO,IAIlEszD,GAAe,kBAAkBpvG,OAAO87C,QAAS,KAAMozD,IAGvDG,GAAU,WAAWrvG,OAAO87C,QAAS,OAAQqzD,IAI7CG,GAAY,4BAA4BtvG,OAAO87C,QAAS,KAAMozD,IAI9DK,GAAc,uBAAuBvvG,OAAO87C,QAAS,KAAMozD,IAE3DM,GAAW,IAAIP,OAClB,IACAG,GACAC,GACAC,GACAC,GACA,KAGGE,GAAwB,CAAE,WAAY,YAAa,SAEzD,SAASC,GAAWC,EAAal8I,EAAMm8I,GAEtC,MAAMC,EAAaD,GAAsBE,GAAgBC,eAAgBt8I,GAEzEtX,KAAK6zJ,aAAeL,EACpBxzJ,KAAK8zJ,UAAYN,EAAYO,WAAYz8I,EAAMo8I,GAyDhD,SAASC,GAAiBK,EAAU18I,EAAMo8I,GAEzC1zJ,KAAKsX,KAAOA,EACZtX,KAAK0zJ,WAAaA,GAAcC,GAAgBC,eAAgBt8I,GAEhEtX,KAAK2d,KAAOg2I,GAAgBM,SAAUD,EAAUh0J,KAAK0zJ,WAAWh2I,WAAcs2I,EAE9Eh0J,KAAKg0J,SAAWA,EA+lBjB,SAASE,KAERl0J,KAAK4iD,KAAOpJ,GAAUG,eAGtB35C,KAAKwtG,SAAW53F,MAAMijC,UAAUO,MAAMC,KAAM9mB,WAE5CvyB,KAAKm0J,gBAAkB,EAGvB,MAAMxgF,EAAU,GAChB3zE,KAAKo0J,eAAiBzgF,EAEtB,IAAM,IAAI9zE,EAAI,EAAGmC,EAAIuwB,UAAUjwB,OAAQzC,IAAMmC,IAAMnC,EAElD8zE,EAASphD,UAAW1yB,GAAI+iD,MAAS/iD,EAIlCG,KAAKq0J,OAAS,GACdr0J,KAAKs0J,aAAe,GACpBt0J,KAAK8zJ,UAAY,GACjB9zJ,KAAKu0J,uBAAyB,GAE9B,MAAMx9E,EAAQ/2E,KAEdA,KAAKw0J,MAAQ,CAEZvnE,QAAS,CACJ7+E,YAEH,OAAO2oE,EAAMy2B,SAASlrG,QAGnBmyJ,YAEH,OAAOz0J,KAAKoO,MAAQ2oE,EAAMo9E,kBAIxBO,wBAEH,OAAO39E,EAAM+8E,UAAUxxJ,SArsB1B9C,OAAOo5C,OAAQ26G,GAAU16G,UAAW,CAEnC25G,SAAU,SAAWr5G,EAAOn9B,GAE3Bhc,KAAK6yB,OAEL,MAAM8hI,EAAkB30J,KAAK6zJ,aAAaM,gBACzCzD,EAAU1wJ,KAAK8zJ,UAAWa,QAGVx7I,IAAZu3I,GAAwBA,EAAQ8B,SAAUr5G,EAAOn9B,IAIvDo8E,SAAU,SAAWj/C,EAAOn9B,GAE3B,MAAM44I,EAAW50J,KAAK8zJ,UAEtB,IAAM,IAAIj0J,EAAIG,KAAK6zJ,aAAaM,gBAAiBnyJ,EAAI4yJ,EAAStyJ,OAAQzC,IAAMmC,IAAMnC,EAEjF+0J,EAAU/0J,GAAIu4F,SAAUj/C,EAAOn9B,IAMjC6W,KAAM,WAEL,MAAM+hI,EAAW50J,KAAK8zJ,UAEtB,IAAM,IAAIj0J,EAAIG,KAAK6zJ,aAAaM,gBAAiBnyJ,EAAI4yJ,EAAStyJ,OAAQzC,IAAMmC,IAAMnC,EAEjF+0J,EAAU/0J,GAAIgzB,QAMhBgiI,OAAQ,WAEP,MAAMD,EAAW50J,KAAK8zJ,UAEtB,IAAM,IAAIj0J,EAAIG,KAAK6zJ,aAAaM,gBAAiBnyJ,EAAI4yJ,EAAStyJ,OAAQzC,IAAMmC,IAAMnC,EAEjF+0J,EAAU/0J,GAAIg1J,YAoBjBr1J,OAAOo5C,OAAQ+6G,GAAiB,CAE/BJ,UAAWA,GAEX7vG,OAAQ,SAAWoxG,EAAMx9I,EAAMo8I,GAE9B,OAASoB,GAAQA,EAAKC,uBAMd,IAAIpB,GAAgBJ,UAAWuB,EAAMx9I,EAAMo8I,GAJ3C,IAAIC,GAAiBmB,EAAMx9I,EAAMo8I,IAiB1CsB,iBAAkB,SAAWzlI,GAE5B,OAAOA,EAAKowE,QAAS,MAAO,KAAMA,QAASkzD,GAAa,KAIzDe,eAAgB,SAAWhhB,GAE1B,MAAMqiB,EAAU5B,GAAS5vF,KAAMmvE,GAE/B,IAAOqiB,EAEN,MAAM,IAAIhhJ,MAAO,4CAA8C2+H,GAIhE,MAAMsiB,EAAU,CAEfx3I,SAAUu3I,EAAS,GACnBE,WAAYF,EAAS,GACrBG,YAAaH,EAAS,GACtBniB,aAAcmiB,EAAS,GACvBI,cAAeJ,EAAS,IAGnBK,EAAUJ,EAAQx3I,UAAYw3I,EAAQx3I,SAAS2jI,YAAa,KAElE,QAAiBloI,IAAZm8I,IAAuC,IAAdA,EAAkB,CAE/C,MAAMH,EAAaD,EAAQx3I,SAAS+tB,UAAW6pH,EAAU,IAMF,IAAlDhC,GAAsBruI,QAASkwI,KAEnCD,EAAQx3I,SAAWw3I,EAAQx3I,SAAS+tB,UAAW,EAAG6pH,GAClDJ,EAAQC,WAAaA,GAMvB,GAA8B,OAAzBD,EAAQpiB,cAAyD,IAAhCoiB,EAAQpiB,aAAaxwI,OAE1D,MAAM,IAAI2R,MAAO,+DAAiE2+H,GAInF,OAAOsiB,GAIRjB,SAAU,SAAWa,EAAMp3I,GAE1B,IAAOA,GAAyB,KAAbA,GAAgC,MAAbA,IAAmC,IAAfA,GAAoBA,IAAao3I,EAAKvlI,MAAQ7R,IAAao3I,EAAKlyG,KAEzH,OAAOkyG,EAKR,GAAKA,EAAKh2F,SAAW,CAEpB,MAAMgzD,EAAOgjC,EAAKh2F,SAASizD,cAAer0G,GAE1C,QAAcvE,IAAT24G,EAEJ,OAAOA,EAOT,GAAKgjC,EAAKjmG,SAAW,CAEpB,MAAM0mG,EAAoB,SAAW1mG,GAEpC,IAAM,IAAIhvD,EAAI,EAAGA,EAAIgvD,EAASvsD,OAAQzC,IAAO,CAE5C,MAAM21J,EAAY3mG,EAAUhvD,GAE5B,GAAK21J,EAAUjmI,OAAS7R,GAAY83I,EAAU5yG,OAASllC,EAEtD,OAAO83I,EAIR,MAAMxiJ,EAASuiJ,EAAmBC,EAAU3mG,UAE5C,GAAK77C,EAAS,OAAOA,EAItB,OAAO,MAIFyiJ,EAAcF,EAAmBT,EAAKjmG,UAE5C,GAAK4mG,EAEJ,OAAOA,EAMT,OAAO,QAMTj2J,OAAOo5C,OAAQ+6G,GAAgB96G,UAAW,CAGzC68G,sBAAuB,aACvBC,sBAAuB,aAEvBC,YAAa,CACZC,OAAQ,EACRC,YAAa,EACbC,aAAc,EACdC,eAAgB,GAGjBC,WAAY,CACXC,KAAM,EACNC,YAAa,EACbC,uBAAwB,GAGzBC,oBAAqB,CAEpB,SAA0BlrJ,EAAQ6Q,GAEjC7Q,EAAQ6Q,GAAWhc,KAAK2d,KAAM3d,KAAK8yI,eAIpC,SAAyB3nI,EAAQ6Q,GAEhC,MAAM6nC,EAAS7jD,KAAKs2J,iBAEpB,IAAM,IAAIz2J,EAAI,EAAGmC,EAAI6hD,EAAOvhD,OAAQzC,IAAMmC,IAAMnC,EAE/CsL,EAAQ6Q,KAAc6nC,EAAQhkD,IAMhC,SAAgCsL,EAAQ6Q,GAEvC7Q,EAAQ6Q,GAAWhc,KAAKs2J,iBAAkBt2J,KAAKq1J,gBAIhD,SAA2BlqJ,EAAQ6Q,GAElChc,KAAKs2J,iBAAiB54G,QAASvyC,EAAQ6Q,KAMzCu6I,iCAAkC,CAEjC,CAGC,SAA0BprJ,EAAQ6Q,GAEjChc,KAAKw2J,aAAcx2J,KAAK8yI,cAAiB3nI,EAAQ6Q,IAIlD,SAAyC7Q,EAAQ6Q,GAEhDhc,KAAKw2J,aAAcx2J,KAAK8yI,cAAiB3nI,EAAQ6Q,GACjDhc,KAAKw2J,aAAajlF,aAAc,GAIjC,SAAoDpmE,EAAQ6Q,GAE3Dhc,KAAKw2J,aAAcx2J,KAAK8yI,cAAiB3nI,EAAQ6Q,GACjDhc,KAAKw2J,aAAat7F,wBAAyB,IAI1C,CAIF,SAAyB/vD,EAAQ6Q,GAEhC,MAAMy6I,EAAOz2J,KAAKs2J,iBAElB,IAAM,IAAIz2J,EAAI,EAAGmC,EAAIy0J,EAAKn0J,OAAQzC,IAAMmC,IAAMnC,EAE7C42J,EAAM52J,GAAMsL,EAAQ6Q,MAMtB,SAAwC7Q,EAAQ6Q,GAE/C,MAAMy6I,EAAOz2J,KAAKs2J,iBAElB,IAAM,IAAIz2J,EAAI,EAAGmC,EAAIy0J,EAAKn0J,OAAQzC,IAAMmC,IAAMnC,EAE7C42J,EAAM52J,GAAMsL,EAAQ6Q,KAIrBhc,KAAKw2J,aAAajlF,aAAc,GAIjC,SAAmDpmE,EAAQ6Q,GAE1D,MAAMy6I,EAAOz2J,KAAKs2J,iBAElB,IAAM,IAAIz2J,EAAI,EAAGmC,EAAIy0J,EAAKn0J,OAAQzC,IAAMmC,IAAMnC,EAE7C42J,EAAM52J,GAAMsL,EAAQ6Q,KAIrBhc,KAAKw2J,aAAat7F,wBAAyB,IAI1C,CAIF,SAAgC/vD,EAAQ6Q,GAEvChc,KAAKs2J,iBAAkBt2J,KAAKq1J,eAAkBlqJ,EAAQ6Q,IAIvD,SAA+C7Q,EAAQ6Q,GAEtDhc,KAAKs2J,iBAAkBt2J,KAAKq1J,eAAkBlqJ,EAAQ6Q,GACtDhc,KAAKw2J,aAAajlF,aAAc,GAIjC,SAA0DpmE,EAAQ6Q,GAEjEhc,KAAKs2J,iBAAkBt2J,KAAKq1J,eAAkBlqJ,EAAQ6Q,GACtDhc,KAAKw2J,aAAat7F,wBAAyB,IAI1C,CAIF,SAA6B/vD,EAAQ6Q,GAEpChc,KAAKs2J,iBAAiBnoJ,UAAWhD,EAAQ6Q,IAI1C,SAA4C7Q,EAAQ6Q,GAEnDhc,KAAKs2J,iBAAiBnoJ,UAAWhD,EAAQ6Q,GACzChc,KAAKw2J,aAAajlF,aAAc,GAIjC,SAAuDpmE,EAAQ6Q,GAE9Dhc,KAAKs2J,iBAAiBnoJ,UAAWhD,EAAQ6Q,GACzChc,KAAKw2J,aAAat7F,wBAAyB,KAQ9Cs3F,SAAU,SAA2BkE,EAAa16I,GAEjDhc,KAAK6yB,OACL7yB,KAAKwyJ,SAAUkE,EAAa16I,IAU7Bo8E,SAAU,SAA2Bu+D,EAAa36I,GAEjDhc,KAAK6yB,OACL7yB,KAAKo4F,SAAUu+D,EAAa36I,IAK7B6W,KAAM,WAEL,IAAI2jI,EAAex2J,KAAK2d,KACxB,MAAM+1I,EAAa1zJ,KAAK0zJ,WAElByB,EAAazB,EAAWyB,WACxBriB,EAAe4gB,EAAW5gB,aAChC,IAAIuiB,EAAgB3B,EAAW2B,cAe/B,GAbOmB,IAENA,EAAe7C,GAAgBM,SAAUj0J,KAAKg0J,SAAUN,EAAWh2I,WAAc1d,KAAKg0J,SAEtFh0J,KAAK2d,KAAO64I,GAKbx2J,KAAKwyJ,SAAWxyJ,KAAK01J,sBACrB11J,KAAKo4F,SAAWp4F,KAAK21J,uBAGda,EAGN,YADA7pJ,QAAQu1B,MAAO,2DAA6DliC,KAAKsX,KAAO,yBAKzF,GAAK69I,EAAa,CAEjB,IAAIC,EAAc1B,EAAW0B,YAG7B,OAASD,GAER,IAAK,YAEJ,IAAOqB,EAAaz3F,SAGnB,YADApyD,QAAQu1B,MAAO,oFAAqFliC,MAKrG,IAAOw2J,EAAaz3F,SAASjB,UAG5B,YADAnxD,QAAQu1B,MAAO,8GAA+GliC,MAK/Hw2J,EAAeA,EAAaz3F,SAASjB,UAErC,MAED,IAAK,QAEJ,IAAO04F,EAAa13F,SAGnB,YADAnyD,QAAQu1B,MAAO,iFAAkFliC,MAQlGw2J,EAAeA,EAAa13F,SAASuoC,MAGrC,IAAM,IAAIxnG,EAAI,EAAGA,EAAI22J,EAAal0J,OAAQzC,IAEzC,GAAK22J,EAAc32J,GAAI0vB,OAAS6lI,EAAc,CAE7CA,EAAcv1J,EACd,MAMF,MAED,QAEC,QAAoCsZ,IAA/Bq9I,EAAcrB,GAGlB,YADAxoJ,QAAQu1B,MAAO,uEAAwEliC,MAKxFw2J,EAAeA,EAAcrB,GAK/B,QAAqBh8I,IAAhBi8I,EAA4B,CAEhC,QAAqCj8I,IAAhCq9I,EAAcpB,GAGlB,YADAzoJ,QAAQu1B,MAAO,wFAAyFliC,KAAMw2J,GAK/GA,EAAeA,EAAcpB,IAO/B,MAAMwB,EAAeJ,EAAc1jB,GAEnC,QAAsB35H,IAAjBy9I,EAA6B,CAEjC,MAAMl5I,EAAWg2I,EAAWh2I,SAI5B,YAFA/Q,QAAQu1B,MAAO,+DAAiExkB,EAC/E,IAAMo1H,EAAe,wBAA0B0jB,GAMjD,IAAIK,EAAa72J,KAAKi2J,WAAWC,KAEjCl2J,KAAKw2J,aAAeA,OAEcr9I,IAA7Bq9I,EAAajlF,YAEjBslF,EAAa72J,KAAKi2J,WAAWE,iBAEsBh9I,IAAxCq9I,EAAat7F,yBAExB27F,EAAa72J,KAAKi2J,WAAWG,wBAK9B,IAAIU,EAAc92J,KAAK41J,YAAYC,OAEnC,QAAuB18I,IAAlBk8I,EAA8B,CAIlC,GAAsB,0BAAjBviB,EAA2C,CAK/C,IAAO0jB,EAAahoG,SAGnB,YADA7hD,QAAQu1B,MAAO,sGAAuGliC,MAKvH,IAAKw2J,EAAahoG,SAASuiB,iBAmB1B,YADApkE,QAAQu1B,MAAO,oHAAqHliC,MAhBpI,IAAOw2J,EAAahoG,SAASoiB,gBAG5B,YADAjkE,QAAQu1B,MAAO,sHAAuHliC,WAK1EmZ,IAAxDq9I,EAAa1gF,sBAAuBu/E,KAExCA,EAAgBmB,EAAa1gF,sBAAuBu/E,IAcvDyB,EAAc92J,KAAK41J,YAAYG,aAE/B/1J,KAAKs2J,iBAAmBM,EACxB52J,KAAKq1J,cAAgBA,YAEiBl8I,IAA3By9I,EAAazoJ,gBAAoDgL,IAAzBy9I,EAAal5G,SAIhEo5G,EAAc92J,KAAK41J,YAAYI,eAE/Bh2J,KAAKs2J,iBAAmBM,GAEbhhJ,MAAMC,QAAS+gJ,IAE1BE,EAAc92J,KAAK41J,YAAYE,YAE/B91J,KAAKs2J,iBAAmBM,GAIxB52J,KAAK8yI,aAAeA,EAKrB9yI,KAAKwyJ,SAAWxyJ,KAAKq2J,oBAAqBS,GAC1C92J,KAAKo4F,SAAWp4F,KAAKu2J,iCAAkCO,GAAeD,IAIvEhC,OAAQ,WAEP70J,KAAK2d,KAAO,KAIZ3d,KAAKwyJ,SAAWxyJ,KAAK+2J,kBACrB/2J,KAAKo4F,SAAWp4F,KAAKg3J,qBAOvBx3J,OAAOo5C,OAAQ+6G,GAAgB96G,UAAW,CAGzCk+G,kBAAmBpD,GAAgB96G,UAAU25G,SAC7CwE,kBAAmBrD,GAAgB96G,UAAUu/C,WAmF9C54F,OAAOo5C,OAAQs7G,GAAqBr7G,UAAW,CAE9Ck8G,wBAAwB,EAExB9rJ,IAAK,WAEJ,MAAMgkF,EAAUjtF,KAAKwtG,SACpBypD,EAAgBj3J,KAAKo0J,eACrB3vH,EAAQzkC,KAAKq0J,OACb6C,EAAcl3J,KAAKs0J,aACnBM,EAAW50J,KAAK8zJ,UAChBqD,EAAYvC,EAAStyJ,OAEtB,IAAI80J,EACHC,EAAWpqE,EAAQ3qF,OACnBg1J,EAAiBt3J,KAAKm0J,gBAEvB,IAAM,IAAIt0J,EAAI,EAAGmC,EAAIuwB,UAAUjwB,OAAQzC,IAAMmC,IAAMnC,EAAI,CAEtD,MAAMmuD,EAASz7B,UAAW1yB,GACzB+iD,EAAOoL,EAAOpL,KACf,IAAIz2C,EAAQ8qJ,EAAer0G,GAE3B,QAAezpC,IAAVhN,EAAsB,CAI1BA,EAAQkrJ,IACRJ,EAAer0G,GAASz2C,EACxB8gF,EAAQ3rF,KAAM0sD,GAId,IAAM,IAAIvoD,EAAI,EAAG7C,EAAIu0J,EAAW1xJ,IAAM7C,IAAM6C,EAE3CmvJ,EAAUnvJ,GAAInE,KAAM,IAAIqyJ,GAAiB3lG,EAAQvpB,EAAOh/B,GAAKyxJ,EAAazxJ,UAIrE,GAAK0G,EAAQmrJ,EAAiB,CAEpCF,EAAcnqE,EAAS9gF,GAIvB,MAAMorJ,IAAsBD,EAC3BE,EAAmBvqE,EAASsqE,GAE7BN,EAAeO,EAAiB50G,MAASz2C,EACzC8gF,EAAS9gF,GAAUqrJ,EAEnBP,EAAer0G,GAAS20G,EACxBtqE,EAASsqE,GAAqBvpG,EAI9B,IAAM,IAAIvoD,EAAI,EAAG7C,EAAIu0J,EAAW1xJ,IAAM7C,IAAM6C,EAAI,CAE/C,MAAMgyJ,EAAkB7C,EAAUnvJ,GACjCiyJ,EAAaD,EAAiBF,GAE/B,IAAI7G,EAAU+G,EAAiBtrJ,GAE/BsrJ,EAAiBtrJ,GAAUurJ,OAEVv+I,IAAZu3I,IAMJA,EAAU,IAAIiD,GAAiB3lG,EAAQvpB,EAAOh/B,GAAKyxJ,EAAazxJ,KAIjEgyJ,EAAiBF,GAAqB7G,QAI5BzjE,EAAS9gF,KAAYirJ,GAEhCzqJ,QAAQu1B,MAAO,sJAOjBliC,KAAKm0J,gBAAkBmD,GAIxBx2H,OAAQ,WAEP,MAAMmsD,EAAUjtF,KAAKwtG,SACpBypD,EAAgBj3J,KAAKo0J,eACrBQ,EAAW50J,KAAK8zJ,UAChBqD,EAAYvC,EAAStyJ,OAEtB,IAAIg1J,EAAiBt3J,KAAKm0J,gBAE1B,IAAM,IAAIt0J,EAAI,EAAGmC,EAAIuwB,UAAUjwB,OAAQzC,IAAMmC,IAAMnC,EAAI,CAEtD,MAAMmuD,EAASz7B,UAAW1yB,GACzB+iD,EAAOoL,EAAOpL,KACdz2C,EAAQ8qJ,EAAer0G,GAExB,QAAezpC,IAAVhN,GAAuBA,GAASmrJ,EAAiB,CAIrD,MAAMK,EAAkBL,IACvBM,EAAoB3qE,EAAS0qE,GAE9BV,EAAeW,EAAkBh1G,MAASz2C,EAC1C8gF,EAAS9gF,GAAUyrJ,EAEnBX,EAAer0G,GAAS+0G,EACxB1qE,EAAS0qE,GAAoB3pG,EAI7B,IAAM,IAAIvoD,EAAI,EAAG7C,EAAIu0J,EAAW1xJ,IAAM7C,IAAM6C,EAAI,CAE/C,MAAMgyJ,EAAkB7C,EAAUnvJ,GACjCoyJ,EAAcJ,EAAiBE,GAC/BjH,EAAU+G,EAAiBtrJ,GAE5BsrJ,EAAiBtrJ,GAAU0rJ,EAC3BJ,EAAiBE,GAAoBjH,IAQxC1wJ,KAAKm0J,gBAAkBmD,GAKxBQ,QAAS,WAER,MAAM7qE,EAAUjtF,KAAKwtG,SACpBypD,EAAgBj3J,KAAKo0J,eACrBQ,EAAW50J,KAAK8zJ,UAChBqD,EAAYvC,EAAStyJ,OAEtB,IAAIg1J,EAAiBt3J,KAAKm0J,gBACzBkD,EAAWpqE,EAAQ3qF,OAEpB,IAAM,IAAIzC,EAAI,EAAGmC,EAAIuwB,UAAUjwB,OAAQzC,IAAMmC,IAAMnC,EAAI,CAEtD,MACC+iD,EADcrwB,UAAW1yB,GACX+iD,KACdz2C,EAAQ8qJ,EAAer0G,GAExB,QAAezpC,IAAVhN,EAIJ,UAFO8qJ,EAAer0G,GAEjBz2C,EAAQmrJ,EAAiB,CAI7B,MAAMC,IAAsBD,EAC3BE,EAAmBvqE,EAASsqE,GAC5Br5D,IAAem5D,EACfU,EAAa9qE,EAASiR,GAGvB+4D,EAAeO,EAAiB50G,MAASz2C,EACzC8gF,EAAS9gF,GAAUqrJ,EAGnBP,EAAec,EAAWn1G,MAAS20G,EACnCtqE,EAASsqE,GAAqBQ,EAC9B9qE,EAAQob,MAIR,IAAM,IAAI5iG,EAAI,EAAG7C,EAAIu0J,EAAW1xJ,IAAM7C,IAAM6C,EAAI,CAE/C,MAAMgyJ,EAAkB7C,EAAUnvJ,GACjCiyJ,EAAaD,EAAiBF,GAC9B32J,EAAO62J,EAAiBv5D,GAEzBu5D,EAAiBtrJ,GAAUurJ,EAC3BD,EAAiBF,GAAqB32J,EACtC62J,EAAgBpvD,WAIX,CAIN,MAAMnK,IAAem5D,EACpBU,EAAa9qE,EAASiR,GAElBA,EAAY,IAEhB+4D,EAAec,EAAWn1G,MAASz2C,GAIpC8gF,EAAS9gF,GAAU4rJ,EACnB9qE,EAAQob,MAIR,IAAM,IAAI5iG,EAAI,EAAG7C,EAAIu0J,EAAW1xJ,IAAM7C,IAAM6C,EAAI,CAE/C,MAAMgyJ,EAAkB7C,EAAUnvJ,GAElCgyJ,EAAiBtrJ,GAAUsrJ,EAAiBv5D,GAC5Cu5D,EAAgBpvD,QAUpBroG,KAAKm0J,gBAAkBmD,GAMxBvD,WAAY,SAAWz8I,EAAMo8I,GAK5B,MAAMsE,EAAgBh4J,KAAKu0J,uBAC3B,IAAIpoJ,EAAQ6rJ,EAAe1gJ,GAC3B,MAAMs9I,EAAW50J,KAAK8zJ,UAEtB,QAAe36I,IAAVhN,EAAsB,OAAOyoJ,EAAUzoJ,GAE5C,MAAMs4B,EAAQzkC,KAAKq0J,OAClB6C,EAAcl3J,KAAKs0J,aACnBrnE,EAAUjtF,KAAKwtG,SACf6pD,EAAWpqE,EAAQ3qF,OACnBg1J,EAAiBt3J,KAAKm0J,gBACtBsD,EAAkB,IAAI7hJ,MAAOyhJ,GAE9BlrJ,EAAQyoJ,EAAStyJ,OAEjB01J,EAAe1gJ,GAASnL,EAExBs4B,EAAMnjC,KAAMgW,GACZ4/I,EAAY51J,KAAMoyJ,GAClBkB,EAAStzJ,KAAMm2J,GAEf,IAAM,IAAI53J,EAAIy3J,EAAgBt1J,EAAIirF,EAAQ3qF,OAAQzC,IAAMmC,IAAMnC,EAAI,CAEjE,MAAMmuD,EAASi/B,EAASptF,GACxB43J,EAAiB53J,GAAM,IAAI8zJ,GAAiB3lG,EAAQ12C,EAAMo8I,GAI3D,OAAO+D,GAIRQ,aAAc,SAAW3gJ,GAKxB,MAAM0gJ,EAAgBh4J,KAAKu0J,uBAC1BpoJ,EAAQ6rJ,EAAe1gJ,GAExB,QAAe6B,IAAVhN,EAAsB,CAE1B,MAAMs4B,EAAQzkC,KAAKq0J,OAClB6C,EAAcl3J,KAAKs0J,aACnBM,EAAW50J,KAAK8zJ,UAChBoE,EAAoBtD,EAAStyJ,OAAS,EACtC61J,EAAevD,EAAUsD,GAG1BF,EAFoB1gJ,EAAM4gJ,IAEU/rJ,EAEpCyoJ,EAAUzoJ,GAAUgsJ,EACpBvD,EAASvsD,MAET6uD,EAAa/qJ,GAAU+qJ,EAAagB,GACpChB,EAAY7uD,MAEZ5jE,EAAOt4B,GAAUs4B,EAAOyzH,GACxBzzH,EAAM4jE,UAQT,MAAM+vD,GAELlyJ,YAAamyJ,EAAOluB,EAAMmuB,EAAY,KAAMn6I,EAAYgsH,EAAKhsH,WAE5Dne,KAAKu4J,OAASF,EACdr4J,KAAKw4J,MAAQruB,EACbnqI,KAAKy4J,WAAaH,EAClBt4J,KAAKme,UAAYA,EAEjB,MAAMisH,EAASD,EAAKC,OACnBsuB,EAAUtuB,EAAO9nI,OACjBq2J,EAAe,IAAI/iJ,MAAO8iJ,GAErBE,EAAsB,CAC3B1pB,YAAat5F,GACbu5F,UAAWv5F,IAGZ,IAAM,IAAI/1C,EAAI,EAAGA,IAAM64J,IAAY74J,EAAI,CAEtC,MAAMgsI,EAAczB,EAAQvqI,GAAI0rI,kBAAmB,MACnDotB,EAAc94J,GAAMgsI,EACpBA,EAAYiD,SAAW8pB,EAIxB54J,KAAK64J,qBAAuBD,EAE5B54J,KAAK84J,cAAgBH,EAGrB34J,KAAK+4J,kBAAoB,IAAInjJ,MAAO8iJ,GAEpC14J,KAAKg5J,YAAc,KACnBh5J,KAAKi5J,kBAAoB,KAEzBj5J,KAAKk5J,sBAAwB,KAC7Bl5J,KAAKm5J,mBAAqB,KAE1Bn5J,KAAK8rJ,KAAOv2G,GACZv1C,KAAKo5J,YAAe,EAIpBp5J,KAAKq5J,WAAa,KAIlBr5J,KAAK8+E,KAAO,EAEZ9+E,KAAKywI,UAAY,EACjBzwI,KAAKs5J,oBAAsB,EAE3Bt5J,KAAKuxH,OAAS,EACdvxH,KAAKu5J,iBAAmB,EAExBv5J,KAAKw5J,YAAcp2J,EAAAA,EAEnBpD,KAAKy5J,QAAS,EACdz5J,KAAK66E,SAAU,EAEf76E,KAAK05J,mBAAoB,EAEzB15J,KAAK25J,kBAAmB,EACxB35J,KAAK45J,gBAAiB,EAMvBzM,OAIC,OAFAntJ,KAAKu4J,OAAOsB,gBAAiB75J,MAEtBA,KAIRqB,OAIC,OAFArB,KAAKu4J,OAAOuB,kBAAmB95J,MAExBA,KAAKkwF,QAIbA,QASC,OAPAlwF,KAAKy5J,QAAS,EACdz5J,KAAK66E,SAAU,EAEf76E,KAAK8+E,KAAO,EACZ9+E,KAAKo5J,YAAe,EACpBp5J,KAAKq5J,WAAa,KAEXr5J,KAAK+5J,aAAaC,cAI1BC,YAEC,OAAOj6J,KAAK66E,UAAa76E,KAAKy5J,QAA6B,IAAnBz5J,KAAKywI,WACxB,OAApBzwI,KAAKq5J,YAAuBr5J,KAAKu4J,OAAO2B,gBAAiBl6J,MAK3Dm6J,cAEC,OAAOn6J,KAAKu4J,OAAO2B,gBAAiBl6J,MAIrCo6J,QAASt7E,GAIR,OAFA9+E,KAAKq5J,WAAav6E,EAEX9+E,KAIRguJ,QAAS37D,EAAMmnE,GAKd,OAHAx5J,KAAK8rJ,KAAOz5D,EACZryF,KAAKw5J,YAAcA,EAEZx5J,KASRq6J,mBAAoB9oC,GAOnB,OALAvxH,KAAKuxH,OAASA,EAGdvxH,KAAKu5J,iBAAmBv5J,KAAK66E,QAAU02C,EAAS,EAEzCvxH,KAAK+5J,aAKbO,qBAEC,OAAOt6J,KAAKu5J,iBAIbgB,OAAQzsB,GAEP,OAAO9tI,KAAKw6J,gBAAiB1sB,EAAU,EAAG,GAI3C2sB,QAAS3sB,GAER,OAAO9tI,KAAKw6J,gBAAiB1sB,EAAU,EAAG,GAI3C4sB,cAAeC,EAAe7sB,EAAU8sB,GAKvC,GAHAD,EAAcF,QAAS3sB,GACvB9tI,KAAKu6J,OAAQzsB,GAER8sB,EAAO,CAEX,MAAMC,EAAiB76J,KAAKw4J,MAAM1qB,SACjCgtB,EAAkBH,EAAcnC,MAAM1qB,SAEtCitB,EAAgBD,EAAkBD,EAClCG,EAAgBH,EAAiBC,EAElCH,EAAcC,KAAM,EAAKG,EAAejtB,GACxC9tI,KAAK46J,KAAMI,EAAe,EAAKltB,GAIhC,OAAO9tI,KAIRi7J,YAAaC,EAAcptB,EAAU8sB,GAEpC,OAAOM,EAAaR,cAAe16J,KAAM8tI,EAAU8sB,GAIpDb,aAEC,MAAMoB,EAAoBn7J,KAAKm5J,mBAS/B,OAP2B,OAAtBgC,IAEJn7J,KAAKm5J,mBAAqB,KAC1Bn5J,KAAKu4J,OAAO6C,4BAA6BD,IAInCn7J,KASRq7J,sBAAuB5qB,GAKtB,OAHAzwI,KAAKywI,UAAYA,EACjBzwI,KAAKs5J,oBAAsBt5J,KAAKy5J,OAAS,EAAIhpB,EAEtCzwI,KAAKg6J,cAKbsB,wBAEC,OAAOt7J,KAAKs5J,oBAIbiC,YAAaztB,GAIZ,OAFA9tI,KAAKywI,UAAYzwI,KAAKw4J,MAAM1qB,SAAWA,EAEhC9tI,KAAKg6J,cAIbwB,SAAUC,GAKT,OAHAz7J,KAAK8+E,KAAO28E,EAAO38E,KACnB9+E,KAAKywI,UAAYgrB,EAAOhrB,UAEjBzwI,KAAKg6J,cAIb0B,KAAM5tB,GAEL,OAAO9tI,KAAK46J,KAAM56J,KAAKs5J,oBAAqB,EAAGxrB,GAIhD8sB,KAAMe,EAAgBC,EAAc9tB,GAEnC,MAAMuqB,EAAQr4J,KAAKu4J,OAClBlkI,EAAMgkI,EAAMv5E,KACZ2xD,EAAYzwI,KAAKywI,UAElB,IAAI5E,EAAc7rI,KAAKk5J,sBAEF,OAAhBrtB,IAEJA,EAAcwsB,EAAMwD,0BACpB77J,KAAKk5J,sBAAwBrtB,GAI9B,MAAMtC,EAAQsC,EAAYQ,mBACzBltE,EAAS0sE,EAAYS,aAQtB,OANA/C,EAAO,GAAMl1G,EACbk1G,EAAO,GAAMl1G,EAAMy5G,EAEnB3uE,EAAQ,GAAMw8F,EAAiBlrB,EAC/BtxE,EAAQ,GAAMy8F,EAAenrB,EAEtBzwI,KAIRg6J,cAEC,MAAM8B,EAAuB97J,KAAKk5J,sBASlC,OAP8B,OAAzB4C,IAEJ97J,KAAKk5J,sBAAwB,KAC7Bl5J,KAAKu4J,OAAO6C,4BAA6BU,IAInC97J,KAMR+7J,WAEC,OAAO/7J,KAAKu4J,OAIbyD,UAEC,OAAOh8J,KAAKw4J,MAIbyD,UAEC,OAAOj8J,KAAKy4J,YAAcz4J,KAAKu4J,OAAO2D,MAMvCC,QAASr9E,EAAMs9E,EAAWC,EAAepK,GAIxC,IAAOjyJ,KAAK66E,QAKX,YADA76E,KAAKs8J,cAAex9E,GAKrB,MAAM4xD,EAAY1wI,KAAKq5J,WAEvB,GAAmB,OAAd3oB,EAAqB,CAIzB,MAAM6rB,GAAgBz9E,EAAO4xD,GAAc2rB,EAC3C,GAAKE,EAAc,GAAuB,IAAlBF,EAEvB,OAMDr8J,KAAKq5J,WAAa,KAClB+C,EAAYC,EAAgBE,EAM7BH,GAAap8J,KAAKw8J,iBAAkB19E,GACpC,MAAM29E,EAAWz8J,KAAK08J,YAAaN,GAK7B7qC,EAASvxH,KAAKs8J,cAAex9E,GAEnC,GAAKyyC,EAAS,EAAI,CAEjB,MAAMonC,EAAe34J,KAAK84J,cACpB6D,EAAiB38J,KAAK+4J,kBAE5B,GAAS/4J,KAAKme,YAER63B,GAEJ,IAAM,IAAIvwC,EAAI,EAAG7C,EAAI+1J,EAAar2J,OAAQmD,IAAM7C,IAAM6C,EAErDkzJ,EAAclzJ,GAAIqmI,SAAU2wB,GAC5BE,EAAgBl3J,GAAI2sJ,mBAAoB7gC,QASzC,IAAM,IAAI9rH,EAAI,EAAG7C,EAAI+1J,EAAar2J,OAAQmD,IAAM7C,IAAM6C,EAErDkzJ,EAAclzJ,GAAIqmI,SAAU2wB,GAC5BE,EAAgBl3J,GAAIusJ,WAAYC,EAAW1gC,IAUhD+qC,cAAex9E,GAEd,IAAIyyC,EAAS,EAEb,GAAKvxH,KAAK66E,QAAU,CAEnB02C,EAASvxH,KAAKuxH,OACd,MAAMsa,EAAc7rI,KAAKm5J,mBAEzB,GAAqB,OAAhBttB,EAAuB,CAE3B,MAAM+wB,EAAmB/wB,EAAYC,SAAUhtD,GAAQ,GAEvDyyC,GAAUqrC,EAEL99E,EAAO+sD,EAAYQ,mBAAoB,KAE3CrsI,KAAK+5J,aAEqB,IAArB6C,IAGJ58J,KAAK66E,SAAU,KAWnB,OADA76E,KAAKu5J,iBAAmBhoC,EACjBA,EAIRirC,iBAAkB19E,GAEjB,IAAI2xD,EAAY,EAEhB,IAAOzwI,KAAKy5J,OAAS,CAEpBhpB,EAAYzwI,KAAKywI,UAEjB,MAAM5E,EAAc7rI,KAAKk5J,sBAEzB,GAAqB,OAAhBrtB,EAAuB,CAI3B4E,GAFyB5E,EAAYC,SAAUhtD,GAAQ,GAIlDA,EAAO+sD,EAAYQ,mBAAoB,KAE3CrsI,KAAKg6J,cAEc,IAAdvpB,EAGJzwI,KAAKy5J,QAAS,EAKdz5J,KAAKywI,UAAYA,IAWrB,OADAzwI,KAAKs5J,oBAAsB7oB,EACpBA,EAIRisB,YAAaN,GAEZ,MAAMtuB,EAAW9tI,KAAKw4J,MAAM1qB,SACtBge,EAAO9rJ,KAAK8rJ,KAElB,IAAIhtE,EAAO9+E,KAAK8+E,KAAOs9E,EACnBS,EAAY78J,KAAKo5J,WAErB,MAAM0D,EAAahR,IAASt2G,GAE5B,GAAmB,IAAd4mH,EAEJ,OAAqB,IAAhBS,EAA2B/9E,EAEvBg+E,GAAkC,IAAR,EAAZD,GAA0B/uB,EAAWhvD,EAAOA,EAIpE,GAAKgtE,IAASx2G,GAAW,EAEH,IAAhBunH,IAIJ78J,KAAKo5J,WAAa,EAClBp5J,KAAK+8J,aAAa,GAAM,GAAM,IAI/BC,EAAa,CAEZ,GAAKl+E,GAAQgvD,EAEZhvD,EAAOgvD,MAED,MAAKhvD,EAAO,GAIZ,CAEN9+E,KAAK8+E,KAAOA,EAEZ,MAAMk+E,EANNl+E,EAAO,EAUH9+E,KAAK05J,kBAAoB15J,KAAKy5J,QAAS,EACvCz5J,KAAK66E,SAAU,EAEpB76E,KAAK8+E,KAAOA,EAEZ9+E,KAAKu4J,OAAOt/G,cAAe,CAC1BnZ,KAAM,WAAY27H,OAAQz7J,KAC1Bu2B,UAAW6lI,EAAY,GAAM,EAAI,SAK7B,CAwBN,IAtBqB,IAAhBS,IAICT,GAAa,GAEjBS,EAAY,EAEZ78J,KAAK+8J,aAAa,EAA2B,IAArB/8J,KAAKw5J,YAAmBsD,IAQhD98J,KAAK+8J,YAAkC,IAArB/8J,KAAKw5J,aAAmB,EAAMsD,IAM7Ch+E,GAAQgvD,GAAYhvD,EAAO,EAAI,CAInC,MAAMm+E,EAAY55J,KAAK+pB,MAAO0xD,EAAOgvD,GACrChvD,GAAQgvD,EAAWmvB,EAEnBJ,GAAax5J,KAAKC,IAAK25J,GAEvB,MAAMC,EAAUl9J,KAAKw5J,YAAcqD,EAEnC,GAAKK,GAAW,EAIVl9J,KAAK05J,kBAAoB15J,KAAKy5J,QAAS,EACvCz5J,KAAK66E,SAAU,EAEpBiE,EAAOs9E,EAAY,EAAItuB,EAAW,EAElC9tI,KAAK8+E,KAAOA,EAEZ9+E,KAAKu4J,OAAOt/G,cAAe,CAC1BnZ,KAAM,WAAY27H,OAAQz7J,KAC1Bu2B,UAAW6lI,EAAY,EAAI,GAAM,QAG5B,CAIN,GAAiB,IAAZc,EAAgB,CAIpB,MAAMC,EAAUf,EAAY,EAC5Bp8J,KAAK+8J,YAAaI,GAAWA,EAASL,QAItC98J,KAAK+8J,aAAa,GAAO,EAAOD,GAIjC98J,KAAKo5J,WAAayD,EAElB78J,KAAK8+E,KAAOA,EAEZ9+E,KAAKu4J,OAAOt/G,cAAe,CAC1BnZ,KAAM,OAAQ27H,OAAQz7J,KAAMi9J,UAAWA,UAOzCj9J,KAAK8+E,KAAOA,EAIb,GAAKg+E,GAAkC,IAAR,EAAZD,GAIlB,OAAO/uB,EAAWhvD,EAMpB,OAAOA,EAIRi+E,YAAaI,EAASC,EAAON,GAE5B,MAAMhuB,EAAW9uI,KAAK64J,qBAEjBiE,GAEJhuB,EAASI,YAAcr5F,GACvBi5F,EAASK,UAAYt5F,KAQpBi5F,EAASI,YAFLiuB,EAEmBn9J,KAAK25J,iBAAmB9jH,GAAkBD,GAI1CE,GAMvBg5F,EAASK,UAFLiuB,EAEiBp9J,KAAK45J,eAAiB/jH,GAAkBD,GAItCE,IAQ1B0kH,gBAAiB1sB,EAAUuvB,EAAWC,GAErC,MAAMjF,EAAQr4J,KAAKu4J,OAAQlkI,EAAMgkI,EAAMv5E,KACvC,IAAI+sD,EAAc7rI,KAAKm5J,mBAEF,OAAhBttB,IAEJA,EAAcwsB,EAAMwD,0BACpB77J,KAAKm5J,mBAAqBttB,GAI3B,MAAMtC,EAAQsC,EAAYQ,mBACzBltE,EAAS0sE,EAAYS,aAOtB,OALA/C,EAAO,GAAMl1G,EACb8qC,EAAQ,GAAMk+F,EACd9zB,EAAO,GAAMl1G,EAAMy5G,EACnB3uE,EAAQ,GAAMm+F,EAEPt9J,MAMT,SAASu9J,GAAgBzI,GAExB90J,KAAKk8J,MAAQpH,EACb90J,KAAKw9J,qBACLx9J,KAAKy9J,WAAa,EAElBz9J,KAAK8+E,KAAO,EAEZ9+E,KAAKywI,UAAY,EAIlB8sB,GAAe1kH,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ/K,GAAgBE,WAAa,CAErF3yC,YAAaq3J,GAEbG,YAAa,SAAWjC,EAAQkC,GAE/B,MAAM7I,EAAO2G,EAAOhD,YAAcz4J,KAAKk8J,MACtC9xB,EAASqxB,EAAOjD,MAAMpuB,OACtBsuB,EAAUtuB,EAAO9nI,OACjBsyJ,EAAW6G,EAAO1C,kBAClBJ,EAAe8C,EAAO3C,cACtB8E,EAAW9I,EAAKlyG,KAChBi7G,EAAiB79J,KAAK89J,uBAEvB,IAAIC,EAAiBF,EAAgBD,QAEbzkJ,IAAnB4kJ,IAEJA,EAAiB,GACjBF,EAAgBD,GAAaG,GAI9B,IAAM,IAAIl+J,EAAI,EAAGA,IAAM64J,IAAY74J,EAAI,CAEtC,MAAMwqI,EAAQD,EAAQvqI,GACrB+yI,EAAYvI,EAAM96G,KAEnB,IAAImhI,EAAUqN,EAAgBnrB,GAE9B,QAAiBz5H,IAAZu3I,EAEJkE,EAAU/0J,GAAM6wJ,MAEV,CAIN,GAFAA,EAAUkE,EAAU/0J,QAEHsZ,IAAZu3I,EAAwB,CAIC,OAAxBA,EAAQsI,gBAETtI,EAAQqB,eACX/xJ,KAAKg+J,oBAAqBtN,EAASkN,EAAUhrB,IAI9C,SAID,MAAMt7H,EAAOqmJ,GAAmBA,EAC/B5E,kBAAmBl5J,GAAI6wJ,QAAQgD,WAEhChD,EAAU,IAAID,GACbkD,GAAgBjwG,OAAQoxG,EAAMliB,EAAWt7H,GACzC+yH,EAAMa,cAAeb,EAAME,kBAEzBmmB,EAAQqB,eACX/xJ,KAAKg+J,oBAAqBtN,EAASkN,EAAUhrB,GAE7CgiB,EAAU/0J,GAAM6wJ,EAIjBiI,EAAc94J,GAAIksI,aAAe2kB,EAAQvlJ,SAM3C0uJ,gBAAiB,SAAW4B,GAE3B,IAAOz7J,KAAKk6J,gBAAiBuB,GAAW,CAEvC,GAA4B,OAAvBA,EAAOzC,YAAuB,CAKlC,MAAM4E,GAAanC,EAAOhD,YAAcz4J,KAAKk8J,OAAQt5G,KACpDq7G,EAAWxC,EAAOjD,MAAM51G,KACxBs7G,EAAiBl+J,KAAKm+J,eAAgBF,GAEvCj+J,KAAK09J,YAAajC,EACjByC,GAAkBA,EAAeE,aAAc,IAEhDp+J,KAAKq+J,mBAAoB5C,EAAQwC,EAAUL,GAI5C,MAAMhJ,EAAW6G,EAAO1C,kBAGxB,IAAM,IAAIl5J,EAAI,EAAGmC,EAAI4yJ,EAAStyJ,OAAQzC,IAAMmC,IAAMnC,EAAI,CAErD,MAAM6wJ,EAAUkE,EAAU/0J,GAEG,GAAxB6wJ,EAAQoB,aAEZ9xJ,KAAKs+J,aAAc5N,GACnBA,EAAQ6B,qBAMVvyJ,KAAKu+J,YAAa9C,KAMpB3B,kBAAmB,SAAW2B,GAE7B,GAAKz7J,KAAKk6J,gBAAiBuB,GAAW,CAErC,MAAM7G,EAAW6G,EAAO1C,kBAGxB,IAAM,IAAIl5J,EAAI,EAAGmC,EAAI4yJ,EAAStyJ,OAAQzC,IAAMmC,IAAMnC,EAAI,CAErD,MAAM6wJ,EAAUkE,EAAU/0J,GAEG,KAArB6wJ,EAAQoB,WAEfpB,EAAQ+B,uBACRzyJ,KAAKw+J,iBAAkB9N,IAMzB1wJ,KAAKy+J,gBAAiBhD,KAQxB+B,mBAAoB,WAEnBx9J,KAAK0+J,SAAW,GAChB1+J,KAAK2+J,gBAAkB,EAEvB3+J,KAAKm+J,eAAiB,GAQtBn+J,KAAK8zJ,UAAY,GACjB9zJ,KAAK4+J,iBAAmB,EAExB5+J,KAAK89J,uBAAyB,GAG9B99J,KAAK6+J,qBAAuB,GAC5B7+J,KAAK8+J,4BAA8B,EAEnC,MAAM/nF,EAAQ/2E,KAEdA,KAAKw0J,MAAQ,CAEZuK,QAAS,CACJ3wJ,YAEH,OAAO2oE,EAAM2nF,SAASp8J,QAGnBmyJ,YAEH,OAAO19E,EAAM4nF,kBAIf/J,SAAU,CACLxmJ,YAEH,OAAO2oE,EAAM+8E,UAAUxxJ,QAGpBmyJ,YAEH,OAAO19E,EAAM6nF,mBAIfI,oBAAqB,CAChB5wJ,YAEH,OAAO2oE,EAAM8nF,qBAAqBv8J,QAG/BmyJ,YAEH,OAAO19E,EAAM+nF,gCAWjB5E,gBAAiB,SAAWuB,GAE3B,MAAMtvJ,EAAQsvJ,EAAOzC,YACrB,OAAiB,OAAV7sJ,GAAkBA,EAAQnM,KAAK2+J,iBAIvCN,mBAAoB,SAAW5C,EAAQwC,EAAUL,GAEhD,MAAMmB,EAAU/+J,KAAK0+J,SACpBO,EAAgBj/J,KAAKm+J,eAEtB,IAAID,EAAiBe,EAAehB,GAEpC,QAAwB9kJ,IAAnB+kJ,EAEJA,EAAiB,CAEhBE,aAAc,CAAE3C,GAChByD,aAAc,IAIfzD,EAAOxC,kBAAoB,EAE3BgG,EAAehB,GAAaC,MAEtB,CAEN,MAAME,EAAeF,EAAeE,aAEpC3C,EAAOxC,kBAAoBmF,EAAa97J,OACxC87J,EAAa98J,KAAMm6J,GAIpBA,EAAOzC,YAAc+F,EAAQz8J,OAC7By8J,EAAQz9J,KAAMm6J,GAEdyC,EAAegB,aAActB,GAAanC,GAI3C0D,sBAAuB,SAAW1D,GAEjC,MAAMsD,EAAU/+J,KAAK0+J,SACpBU,EAAqBL,EAASA,EAAQz8J,OAAS,GAC/C+8J,EAAa5D,EAAOzC,YAErBoG,EAAmBpG,YAAcqG,EACjCN,EAASM,GAAeD,EACxBL,EAAQ12D,MAERozD,EAAOzC,YAAc,KAGrB,MAAMiF,EAAWxC,EAAOjD,MAAM51G,KAC7Bq8G,EAAgBj/J,KAAKm+J,eACrBD,EAAiBe,EAAehB,GAChCqB,EAAsBpB,EAAeE,aAErCmB,EACCD,EAAqBA,EAAoBh9J,OAAS,GAEnDk9J,EAAmB/D,EAAOxC,kBAE3BsG,EAAgBtG,kBAAoBuG,EACpCF,EAAqBE,GAAqBD,EAC1CD,EAAoBj3D,MAEpBozD,EAAOxC,kBAAoB,YAGNiF,EAAegB,cACtBzD,EAAOhD,YAAcz4J,KAAKk8J,OAAQt5G,MAIZ,IAA/B08G,EAAoBh9J,eAEjB28J,EAAehB,GAIvBj+J,KAAKy/J,iCAAkChE,IAIxCgE,iCAAkC,SAAWhE,GAE5C,MAAM7G,EAAW6G,EAAO1C,kBAExB,IAAM,IAAIl5J,EAAI,EAAGmC,EAAI4yJ,EAAStyJ,OAAQzC,IAAMmC,IAAMnC,EAAI,CAErD,MAAM6wJ,EAAUkE,EAAU/0J,GAES,KAA3B6wJ,EAAQqB,gBAEf/xJ,KAAK0/J,uBAAwBhP,KAQhC6N,YAAa,SAAW9C,GAQvB,MAAMsD,EAAU/+J,KAAK0+J,SACpBiB,EAAYlE,EAAOzC,YAEnB4G,EAAkB5/J,KAAK2+J,kBAEvBkB,EAAsBd,EAASa,GAEhCnE,EAAOzC,YAAc4G,EACrBb,EAASa,GAAoBnE,EAE7BoE,EAAoB7G,YAAc2G,EAClCZ,EAASY,GAAcE,GAIxBpB,gBAAiB,SAAWhD,GAQ3B,MAAMsD,EAAU/+J,KAAK0+J,SACpBiB,EAAYlE,EAAOzC,YAEnB8G,IAAwB9/J,KAAK2+J,gBAE7BoB,EAAmBhB,EAASe,GAE7BrE,EAAOzC,YAAc8G,EACrBf,EAASe,GAAuBrE,EAEhCsE,EAAiB/G,YAAc2G,EAC/BZ,EAASY,GAAcI,GAMxB/B,oBAAqB,SAAWtN,EAASkN,EAAUhrB,GAElD,MAAMirB,EAAiB79J,KAAK89J,uBAC3BlJ,EAAW50J,KAAK8zJ,UAEjB,IAAIkM,EAAgBnC,EAAgBD,QAEbzkJ,IAAlB6mJ,IAEJA,EAAgB,GAChBnC,EAAgBD,GAAaoC,GAI9BA,EAAeptB,GAAc8d,EAE7BA,EAAQsI,YAAcpE,EAAStyJ,OAC/BsyJ,EAAStzJ,KAAMovJ,IAIhBgP,uBAAwB,SAAWhP,GAElC,MAAMkE,EAAW50J,KAAK8zJ,UACrBmM,EAAcvP,EAAQA,QACtBkN,EAAWqC,EAAYjM,SAASpxG,KAChCgwF,EAAYqtB,EAAY3oJ,KACxBumJ,EAAiB79J,KAAK89J,uBACtBkC,EAAgBnC,EAAgBD,GAEhCsC,EAAsBtL,EAAUA,EAAStyJ,OAAS,GAClD+8J,EAAa3O,EAAQsI,YAEtBkH,EAAoBlH,YAAcqG,EAClCzK,EAAUyK,GAAea,EACzBtL,EAASvsD,aAEF23D,EAAeptB,GAEuB,IAAxCpzI,OAAOud,KAAMijJ,GAAgB19J,eAE1Bu7J,EAAgBD,IAMzBU,aAAc,SAAW5N,GAExB,MAAMkE,EAAW50J,KAAK8zJ,UACrB6L,EAAYjP,EAAQsI,YAEpB4G,EAAkB5/J,KAAK4+J,mBAEvBuB,EAAuBvL,EAAUgL,GAElClP,EAAQsI,YAAc4G,EACtBhL,EAAUgL,GAAoBlP,EAE9ByP,EAAqBnH,YAAc2G,EACnC/K,EAAU+K,GAAcQ,GAIzB3B,iBAAkB,SAAW9N,GAE5B,MAAMkE,EAAW50J,KAAK8zJ,UACrB6L,EAAYjP,EAAQsI,YAEpB8G,IAAwB9/J,KAAK4+J,iBAE7BwB,EAAoBxL,EAAUkL,GAE/BpP,EAAQsI,YAAc8G,EACtBlL,EAAUkL,GAAuBpP,EAEjC0P,EAAkBpH,YAAc2G,EAChC/K,EAAU+K,GAAcS,GAOzBvE,wBAAyB,WAExB,MAAMlD,EAAe34J,KAAK6+J,qBACzBe,EAAkB5/J,KAAK8+J,8BAExB,IAAIjzB,EAAc8sB,EAAciH,GAahC,YAXqBzmJ,IAAhB0yH,IAEJA,EAAc,IAAIiB,GACjB,IAAIpmH,aAAc,GAAK,IAAIA,aAAc,GACzC,EAAG1mB,KAAKqgK,kCAETx0B,EAAYy0B,aAAeV,EAC3BjH,EAAciH,GAAoB/zB,GAI5BA,GAIRuvB,4BAA6B,SAAWvvB,GAEvC,MAAM8sB,EAAe34J,KAAK6+J,qBACzBc,EAAY9zB,EAAYy0B,aAExBR,IAAwB9/J,KAAK8+J,4BAE7ByB,EAAwB5H,EAAcmH,GAEvCj0B,EAAYy0B,aAAeR,EAC3BnH,EAAcmH,GAAuBj0B,EAErC00B,EAAsBD,aAAeX,EACrChH,EAAcgH,GAAcY,GAI7BF,iCAAkC,IAAI35I,aAAc,GAKpD85I,WAAY,SAAWr2B,EAAMs2B,EAActiJ,GAE1C,MAAM22I,EAAO2L,GAAgBzgK,KAAKk8J,MACjC0B,EAAW9I,EAAKlyG,KAEjB,IAAI89G,EAA6B,iBAATv2B,EAAoB0D,GAAcqE,WAAY4iB,EAAM3qB,GAASA,EAErF,MAAM8zB,EAA0B,OAAfyC,EAAsBA,EAAW99G,KAAOunF,EAEnD+zB,EAAiBl+J,KAAKm+J,eAAgBF,GAC5C,IAAIN,EAAkB,KAgBtB,QAdmBxkJ,IAAdgF,IAIHA,EAFmB,OAAfuiJ,EAEQA,EAAWviJ,UAIX43B,SAMU58B,IAAnB+kJ,EAA+B,CAEnC,MAAMyC,EAAiBzC,EAAegB,aAActB,GAEpD,QAAwBzkJ,IAAnBwnJ,GAAgCA,EAAexiJ,YAAcA,EAEjE,OAAOwiJ,EAMRhD,EAAkBO,EAAeE,aAAc,GAG3B,OAAfsC,IACJA,EAAa/C,EAAgBnF,OAK/B,GAAoB,OAAfkI,EAAsB,OAAO,KAGlC,MAAME,EAAY,IAAIxI,GAAiBp4J,KAAM0gK,EAAYD,EAActiJ,GAOvE,OALAne,KAAK09J,YAAakD,EAAWjD,GAG7B39J,KAAKq+J,mBAAoBuC,EAAW3C,EAAUL,GAEvCgD,GAKRD,eAAgB,SAAWx2B,EAAMs2B,GAEhC,MAAM3L,EAAO2L,GAAgBzgK,KAAKk8J,MACjC0B,EAAW9I,EAAKlyG,KAEhB89G,EAA6B,iBAATv2B,EACnB0D,GAAcqE,WAAY4iB,EAAM3qB,GAASA,EAE1C8zB,EAAWyC,EAAaA,EAAW99G,KAAOunF,EAE1C+zB,EAAiBl+J,KAAKm+J,eAAgBF,GAEvC,YAAwB9kJ,IAAnB+kJ,GAEGA,EAAegB,aAActB,IAI9B,MAKRiD,cAAe,WAEd,MAAM9B,EAAU/+J,KAAK0+J,SAGrB,IAAM,IAAI7+J,EAFEG,KAAK2+J,gBAEQ,EAAG9+J,GAAK,IAAMA,EAEtCk/J,EAASl/J,GAAIwB,OAId,OAAOrB,MAKRyoD,OAAQ,SAAW2zG,GAElBA,GAAap8J,KAAKywI,UAElB,MAAMsuB,EAAU/+J,KAAK0+J,SACpBoC,EAAW9gK,KAAK2+J,gBAEhB7/E,EAAO9+E,KAAK8+E,MAAQs9E,EACpBC,EAAgBh5J,KAAKrE,KAAMo9J,GAE3BnK,EAAYjyJ,KAAKy9J,YAAc,EAIhC,IAAM,IAAI59J,EAAI,EAAGA,IAAMihK,IAAajhK,EAAI,CAExBk/J,EAASl/J,GAEjBs8J,QAASr9E,EAAMs9E,EAAWC,EAAepK,GAMjD,MAAM2C,EAAW50J,KAAK8zJ,UACrBqD,EAAYn3J,KAAK4+J,iBAElB,IAAM,IAAI/+J,EAAI,EAAGA,IAAMs3J,IAAct3J,EAEpC+0J,EAAU/0J,GAAIyyB,MAAO2/H,GAItB,OAAOjyJ,MAKR+gK,QAAS,SAAWC,GAEnBhhK,KAAK8+E,KAAO,EACZ,IAAM,IAAIj/E,EAAI,EAAGA,EAAIG,KAAK0+J,SAASp8J,OAAQzC,IAE1CG,KAAK0+J,SAAU7+J,GAAIi/E,KAAO,EAI3B,OAAO9+E,KAAKyoD,OAAQu4G,IAKrB/E,QAAS,WAER,OAAOj8J,KAAKk8J,OAKb+E,YAAa,SAAW92B,GAEvB,MAAM40B,EAAU/+J,KAAK0+J,SACpBT,EAAW9zB,EAAKvnF,KAChBq8G,EAAgBj/J,KAAKm+J,eACrBD,EAAiBe,EAAehB,GAEjC,QAAwB9kJ,IAAnB+kJ,EAA+B,CAMnC,MAAMgD,EAAkBhD,EAAeE,aAEvC,IAAM,IAAIv+J,EAAI,EAAGmC,EAAIk/J,EAAgB5+J,OAAQzC,IAAMmC,IAAMnC,EAAI,CAE5D,MAAM47J,EAASyF,EAAiBrhK,GAEhCG,KAAK85J,kBAAmB2B,GAExB,MAAM4D,EAAa5D,EAAOzC,YACzBoG,EAAqBL,EAASA,EAAQz8J,OAAS,GAEhDm5J,EAAOzC,YAAc,KACrByC,EAAOxC,kBAAoB,KAE3BmG,EAAmBpG,YAAcqG,EACjCN,EAASM,GAAeD,EACxBL,EAAQ12D,MAERroG,KAAKy/J,iCAAkChE,UAIjCwD,EAAehB,KAOxBkD,YAAa,SAAWrM,GAEvB,MAAM8I,EAAW9I,EAAKlyG,KACrBq8G,EAAgBj/J,KAAKm+J,eAEtB,IAAM,MAAMF,KAAYgB,EAAgB,CAEvC,MACCxD,EADoBwD,EAAehB,GAAWiB,aACvBtB,QAERzkJ,IAAXsiJ,IAEJz7J,KAAK85J,kBAAmB2B,GACxBz7J,KAAKm/J,sBAAuB1D,IAM9B,MACCuE,EADsBhgK,KAAK89J,uBACKF,GAEjC,QAAuBzkJ,IAAlB6mJ,EAEJ,IAAM,MAAMptB,KAAaotB,EAAgB,CAExC,MAAMtP,EAAUsP,EAAeptB,GAC/B8d,EAAQ+B,uBACRzyJ,KAAK0/J,uBAAwBhP,KAShC0Q,cAAe,SAAWj3B,EAAMs2B,GAE/B,MAAMhF,EAASz7J,KAAK2gK,eAAgBx2B,EAAMs2B,GAE1B,OAAXhF,IAEJz7J,KAAK85J,kBAAmB2B,GACxBz7J,KAAKm/J,sBAAuB1D,OAQ/B,MAAM4F,GAELn7J,YAAavG,GAEU,iBAAVA,IAEXgN,QAAQoK,KAAM,sDACdpX,EAAQ4yB,UAAW,IAIpBvyB,KAAKL,MAAQA,EAIdgK,QAEC,OAAO,IAAI03J,QAA8BloJ,IAArBnZ,KAAKL,MAAMgK,MAAsB3J,KAAKL,MAAQK,KAAKL,MAAMgK,UAM/E,SAAS23J,GAA4BnoH,EAAO62C,EAAQH,GAEnD4+B,GAAkBp1E,KAAMr5C,KAAMm5C,EAAO62C,GAErChwF,KAAK6vF,iBAAmBA,GAAoB,EA2C7C,SAAS0xE,GAAmBp2J,EAAQ20B,EAAM4rC,EAAUoU,EAAaxyB,GAEhEttD,KAAKmL,OAASA,EACdnL,KAAK8/B,KAAOA,EACZ9/B,KAAK0rE,SAAWA,EAChB1rE,KAAK8/E,YAAcA,EACnB9/E,KAAKstD,MAAQA,EAEbttD,KAAKqjD,QAAU,EAqDhB,SAASm+G,GAAWv3J,EAAQssB,EAAW8hC,EAAMC,GAE5Ct4D,KAAKyxD,IAAM,IAAID,GAAKvnD,EAAQssB,GAG5Bv2B,KAAKq4D,KAAOA,GAAQ,EACpBr4D,KAAKs4D,IAAMA,GAAOl1D,EAAAA,EAClBpD,KAAK0rD,OAAS,KACd1rD,KAAK25D,OAAS,IAAIP,GAElBp5D,KAAKkI,OAAS,CACbktE,KAAM,GACNt7D,KAAM,CAAEpM,UAAW,GACnB2iH,IAAK,GACLgE,OAAQ,CAAE3mH,UAAW,GACrBqiH,OAAQ,IAGTvwH,OAAOo7D,iBAAkB56D,KAAKkI,OAAQ,CACrCu5J,WAAY,CACX7jJ,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,yEACP/W,KAAKq0H,WAQhB,SAASqtC,GAASngK,EAAGC,GAEpB,OAAOD,EAAEqI,SAAWpI,EAAEoI,SAIvB,SAAS+3J,GAAiB3zG,EAAQunB,EAAWz2E,EAAYsgE,GAQxD,GANKpR,EAAO2L,OAAO/X,KAAM2zB,EAAU5b,SAElC3L,EAAOqP,QAASkY,EAAWz2E,IAIT,IAAdsgE,EAAqB,CAEzB,MAAMvQ,EAAWb,EAAOa,SAExB,IAAM,IAAIhvD,EAAI,EAAGwO,EAAIwgD,EAASvsD,OAAQzC,EAAIwO,EAAGxO,IAE5C8hK,GAAiB9yG,EAAUhvD,GAAK01E,EAAWz2E,GAAY,IAvJ1DwiK,GAA2BzoH,UAAYr5C,OAAOo5C,OAAQp5C,OAAOkkD,OAAQ+qE,GAAkB51E,WAAa,CAEnG3yC,YAAao7J,GAEbhwE,8BAA8B,EAE9BxuE,KAAM,SAAW+gC,GAMhB,OAJA4qE,GAAkB51E,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAE7C7jD,KAAK6vF,iBAAmBhsC,EAAOgsC,iBAExB7vF,MAIR2J,MAAO,SAAWpJ,GAEjB,MAAMsuH,EAAKJ,GAAkB51E,UAAUlvC,MAAM0vC,KAAMr5C,KAAMO,GAIzD,OAFAsuH,EAAGh/B,iBAAmB7vF,KAAK6vF,iBAEpBg/B,GAIRx5G,OAAQ,SAAW9U,GAElB,MAAM0xH,EAAOxD,GAAkB51E,UAAUxjC,OAAOgkC,KAAMr5C,KAAMO,GAK5D,OAHA0xH,EAAK3gC,8BAA+B,EACpC2gC,EAAKpiC,iBAAmB7vF,KAAK6vF,iBAEtBoiC,KAkBTzyH,OAAOC,eAAgB8hK,GAAkB1oH,UAAW,cAAe,CAElEjwC,IAAK,SAAWjJ,IAEA,IAAVA,GAAiBK,KAAKqjD,aAM7B7jD,OAAOo5C,OAAQ2oH,GAAkB1oH,UAAW,CAE3Cu5B,qBAAqB,EAErB86E,UAAW,SAAW/hJ,GAIrB,OAFAnL,KAAKmL,OAASA,EAEPnL,MAIR4hK,QAAS,SAAW9hI,EAAMggD,GAKzB,OAHA9/E,KAAK8/B,KAAOA,EACZ9/B,KAAK8/E,YAAcA,EAEZ9/E,MAIR6hK,YAAa,SAAWn2F,GAIvB,OAFA1rE,KAAK0rE,SAAWA,EAET1rE,MAIR8hK,SAAU,SAAWx0G,GAIpB,OAFAttD,KAAKstD,MAAQA,EAENttD,QAiETR,OAAOo5C,OAAQ4oH,GAAU3oH,UAAW,CAEnCjwC,IAAK,SAAWqB,EAAQssB,GAIvBv2B,KAAKyxD,IAAI7oD,IAAKqB,EAAQssB,IAIvBwrI,cAAe,SAAWC,EAAQt2G,GAE5BA,GAAUA,EAAOwuB,qBAErBl6E,KAAKyxD,IAAIxnD,OAAO8iD,sBAAuBrB,EAAOK,aAC9C/rD,KAAKyxD,IAAIl7B,UAAU3tB,IAAKo5J,EAAOliK,EAAGkiK,EAAOjiK,EAAG,IAAM8rD,UAAWH,GAASniD,IAAKvJ,KAAKyxD,IAAIxnD,QAASiF,YAC7FlP,KAAK0rD,OAASA,GAEHA,GAAUA,EAAO0/D,sBAE5BprH,KAAKyxD,IAAIxnD,OAAOrB,IAAKo5J,EAAOliK,EAAGkiK,EAAOjiK,GAAK2rD,EAAO2M,KAAO3M,EAAO4M,MAAU5M,EAAO2M,KAAO3M,EAAO4M,MAAQzM,UAAWH,GAClH1rD,KAAKyxD,IAAIl7B,UAAU3tB,IAAK,EAAG,GAAK,GAAIojD,mBAAoBN,EAAOK,aAC/D/rD,KAAK0rD,OAASA,GAId/+C,QAAQu1B,MAAO,6CAA+CwpB,EAAO5rB,OAMvE6hI,gBAAiB,SAAW3zG,EAAQoR,EAAWu6E,GAE9C,MAAM76I,EAAa66I,GAAkB,GAMrC,OAJAgoB,GAAiB3zG,EAAQhuD,KAAMlB,EAAYsgE,GAE3CtgE,EAAWyD,KAAMm/J,IAEV5iK,GAIRmjK,iBAAkB,SAAWh1E,EAAS7tB,EAAWu6E,GAEhD,MAAM76I,EAAa66I,GAAkB,GAErC,IAAkC,IAA7B/jI,MAAMC,QAASo3E,GAGnB,OADAtgF,QAAQoK,KAAM,8DACPjY,EAIR,IAAM,IAAIe,EAAI,EAAGwO,EAAI4+E,EAAQ3qF,OAAQzC,EAAIwO,EAAGxO,IAE3C8hK,GAAiB10E,EAASptF,GAAKG,KAAMlB,EAAYsgE,GAMlD,OAFAtgE,EAAWyD,KAAMm/J,IAEV5iK,KAaT,MAAMojK,GAELh8J,YAAa+T,EAAS,EAAG2e,EAAM,EAAGI,EAAQ,GAMzC,OAJAh5B,KAAKia,OAASA,EACdja,KAAK44B,IAAMA,EACX54B,KAAKg5B,MAAQA,EAENh5B,KAIR4I,IAAKqR,EAAQ2e,EAAKI,GAMjB,OAJAh5B,KAAKia,OAASA,EACdja,KAAK44B,IAAMA,EACX54B,KAAKg5B,MAAQA,EAENh5B,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAMq/I,GAML,OAJAniK,KAAKia,OAASkoJ,EAAMloJ,OACpBja,KAAK44B,IAAMupI,EAAMvpI,IACjB54B,KAAKg5B,MAAQmpI,EAAMnpI,MAEZh5B,KAKRoiK,WAEC,MAAMh+B,EAAM,KAGZ,OAFApkI,KAAK44B,IAAMv1B,KAAK2B,IAAKo/H,EAAK/gI,KAAK4B,IAAK5B,KAAK6G,GAAKk6H,EAAKpkI,KAAK44B,MAEjD54B,KAIR64D,eAAgBxoD,GAEf,OAAOrQ,KAAKqiK,uBAAwBhyJ,EAAEvQ,EAAGuQ,EAAEtQ,EAAGsQ,EAAElQ,GAIjDkiK,uBAAwBviK,EAAGC,EAAGI,GAgB7B,OAdAH,KAAKia,OAAS5W,KAAKyG,KAAMhK,EAAIA,EAAIC,EAAIA,EAAII,EAAIA,GAExB,IAAhBH,KAAKia,QAETja,KAAKg5B,MAAQ,EACbh5B,KAAK44B,IAAM,IAIX54B,KAAKg5B,MAAQ31B,KAAK8G,MAAOrK,EAAGK,GAC5BH,KAAK44B,IAAMv1B,KAAKyuB,KAAM0nB,GAAUQ,MAAOj6C,EAAIC,KAAKia,QAAU,EAAG,KAIvDja,MAUT,MAAMsiK,GAELp8J,YAAa+T,EAAQ+e,EAAOj5B,GAM3B,OAJAC,KAAKia,YAAsBd,IAAXc,EAAyBA,EAAS,EAClDja,KAAKg5B,WAAoB7f,IAAV6f,EAAwBA,EAAQ,EAC/Ch5B,KAAKD,OAAYoZ,IAANpZ,EAAoBA,EAAI,EAE5BC,KAIR4I,IAAKqR,EAAQ+e,EAAOj5B,GAMnB,OAJAC,KAAKia,OAASA,EACdja,KAAKg5B,MAAQA,EACbh5B,KAAKD,EAAIA,EAEFC,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAMq/I,GAML,OAJAniK,KAAKia,OAASkoJ,EAAMloJ,OACpBja,KAAKg5B,MAAQmpI,EAAMnpI,MACnBh5B,KAAKD,EAAIoiK,EAAMpiK,EAERC,KAIR64D,eAAgBxoD,GAEf,OAAOrQ,KAAKqiK,uBAAwBhyJ,EAAEvQ,EAAGuQ,EAAEtQ,EAAGsQ,EAAElQ,GAIjDkiK,uBAAwBviK,EAAGC,EAAGI,GAM7B,OAJAH,KAAKia,OAAS5W,KAAKyG,KAAMhK,EAAIA,EAAIK,EAAIA,GACrCH,KAAKg5B,MAAQ31B,KAAK8G,MAAOrK,EAAGK,GAC5BH,KAAKD,EAAIA,EAEFC,MAMT,MAAMuiK,GAA0B,IAAIvmH,GAEpC,MAAMwmH,GAELt8J,YAAajB,EAAKD,GAEjBxF,OAAOC,eAAgBO,KAAM,SAAU,CAAEL,OAAO,IAEhDK,KAAKiF,SAAgBkU,IAARlU,EAAsBA,EAAM,IAAI+2C,GAAW54C,EAAAA,EAAYA,EAAAA,GACpEpD,KAAKgF,SAAgBmU,IAARnU,EAAsBA,EAAM,IAAIg3C,IAAW54C,EAAAA,GAAYA,EAAAA,GAIrEwF,IAAK3D,EAAKD,GAKT,OAHAhF,KAAKiF,IAAI6d,KAAM7d,GACfjF,KAAKgF,IAAI8d,KAAM9d,GAERhF,KAIRutD,cAAeC,GAEdxtD,KAAKytD,YAEL,IAAM,IAAI5tD,EAAI,EAAG6tD,EAAKF,EAAOlrD,OAAQzC,EAAI6tD,EAAI7tD,IAE5CG,KAAK2tD,cAAeH,EAAQ3tD,IAI7B,OAAOG,KAIR4tD,qBAAsBrjD,EAAQqV,GAE7B,MAAMiuC,EAAW00G,GAAUz/I,KAAMlD,GAAOhV,eAAgB,IAIxD,OAHA5K,KAAKiF,IAAI6d,KAAMvY,GAAShB,IAAKskD,GAC7B7tD,KAAKgF,IAAI8d,KAAMvY,GAAStB,IAAK4kD,GAEtB7tD,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAMorC,GAKL,OAHAluD,KAAKiF,IAAI6d,KAAMorC,EAAIjpD,KACnBjF,KAAKgF,IAAI8d,KAAMorC,EAAIlpD,KAEZhF,KAIRytD,YAKC,OAHAztD,KAAKiF,IAAInF,EAAIE,KAAKiF,IAAIlF,EAAMqD,EAAAA,EAC5BpD,KAAKgF,IAAIlF,EAAIE,KAAKgF,IAAIjF,GAAMqD,EAAAA,EAErBpD,KAIRmuD,UAIC,OAASnuD,KAAKgF,IAAIlF,EAAIE,KAAKiF,IAAInF,GAASE,KAAKgF,IAAIjF,EAAIC,KAAKiF,IAAIlF,EAI/D0O,UAAWyqC,GASV,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,mDACdmiC,EAAS,IAAI8C,IAIPh8C,KAAKmuD,UAAYjV,EAAOtwC,IAAK,EAAG,GAAMswC,EAAOkD,WAAYp8C,KAAKiF,IAAKjF,KAAKgF,KAAM4F,eAAgB,IAItGwjD,QAASlV,GASR,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,iDACdmiC,EAAS,IAAI8C,IAIPh8C,KAAKmuD,UAAYjV,EAAOtwC,IAAK,EAAG,GAAMswC,EAAOqD,WAAYv8C,KAAKgF,IAAKhF,KAAKiF,KAIhF0oD,cAAe19C,GAKd,OAHAjQ,KAAKiF,IAAIA,IAAKgL,GACdjQ,KAAKgF,IAAIA,IAAKiL,GAEPjQ,KAIRquD,eAAgBtwB,GAKf,OAHA/9B,KAAKiF,IAAIsE,IAAKw0B,GACd/9B,KAAKgF,IAAIiE,IAAK80B,GAEP/9B,KAIRsuD,eAAgBzjD,GAKf,OAHA7K,KAAKiF,IAAIo3C,WAAaxxC,GACtB7K,KAAKgF,IAAIq3C,UAAWxxC,GAEb7K,KAIR8qB,cAAe7a,GAEd,QAAOA,EAAMnQ,EAAIE,KAAKiF,IAAInF,GAAKmQ,EAAMnQ,EAAIE,KAAKgF,IAAIlF,GACjDmQ,EAAMlQ,EAAIC,KAAKiF,IAAIlF,GAAKkQ,EAAMlQ,EAAIC,KAAKgF,IAAIjF,GAI7C+uD,YAAaZ,GAEZ,OAAOluD,KAAKiF,IAAInF,GAAKouD,EAAIjpD,IAAInF,GAAKouD,EAAIlpD,IAAIlF,GAAKE,KAAKgF,IAAIlF,GACvDE,KAAKiF,IAAIlF,GAAKmuD,EAAIjpD,IAAIlF,GAAKmuD,EAAIlpD,IAAIjF,GAAKC,KAAKgF,IAAIjF,EAInDgvD,aAAc9+C,EAAOipC,GAYpB,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,sDACdmiC,EAAS,IAAI8C,IAIP9C,EAAOtwC,KACXqH,EAAMnQ,EAAIE,KAAKiF,IAAInF,IAAQE,KAAKgF,IAAIlF,EAAIE,KAAKiF,IAAInF,IACjDmQ,EAAMlQ,EAAIC,KAAKiF,IAAIlF,IAAQC,KAAKgF,IAAIjF,EAAIC,KAAKiF,IAAIlF,IAKrDivD,cAAed,GAId,QAAOA,EAAIlpD,IAAIlF,EAAIE,KAAKiF,IAAInF,GAAKouD,EAAIjpD,IAAInF,EAAIE,KAAKgF,IAAIlF,GACrDouD,EAAIlpD,IAAIjF,EAAIC,KAAKiF,IAAIlF,GAAKmuD,EAAIjpD,IAAIlF,EAAIC,KAAKgF,IAAIjF,GAIjDovD,WAAYl/C,EAAOipC,GASlB,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,oDACdmiC,EAAS,IAAI8C,IAIP9C,EAAOp2B,KAAM7S,GAAQ+pC,MAAOh6C,KAAKiF,IAAKjF,KAAKgF,KAInDmrD,gBAAiBlgD,GAGhB,OADqBsyJ,GAAUz/I,KAAM7S,GAAQ+pC,MAAOh6C,KAAKiF,IAAKjF,KAAKgF,KAC/CuE,IAAK0G,GAAQ3N,SAIlC+tD,UAAWnC,GAKV,OAHAluD,KAAKiF,IAAID,IAAKkpD,EAAIjpD,KAClBjF,KAAKgF,IAAIC,IAAKipD,EAAIlpD,KAEXhF,KAIR4uD,MAAOV,GAKN,OAHAluD,KAAKiF,IAAIA,IAAKipD,EAAIjpD,KAClBjF,KAAKgF,IAAIA,IAAKkpD,EAAIlpD,KAEXhF,KAIRuS,UAAWyJ,GAKV,OAHAhc,KAAKiF,IAAIgE,IAAK+S,GACdhc,KAAKgF,IAAIiE,IAAK+S,GAEPhc,KAIRnB,OAAQqvD,GAEP,OAAOA,EAAIjpD,IAAIpG,OAAQmB,KAAKiF,MAASipD,EAAIlpD,IAAInG,OAAQmB,KAAKgF,MAM5D,MAAMy9J,GAAwB,IAAI93G,GAC5B+3G,GAA0B,IAAI/3G,GAEpC,MAAMg4G,GAELz8J,YAAa1F,EAAOC,GAEnBT,KAAKQ,WAAoB2Y,IAAV3Y,EAAwBA,EAAQ,IAAImqD,GACnD3qD,KAAKS,SAAgB0Y,IAAR1Y,EAAsBA,EAAM,IAAIkqD,GAI9C/hD,IAAKpI,EAAOC,GAKX,OAHAT,KAAKQ,MAAMsiB,KAAMtiB,GACjBR,KAAKS,IAAIqiB,KAAMriB,GAERT,KAIR2J,QAEC,OAAO,IAAI3J,KAAKkG,aAAc4c,KAAM9iB,MAIrC8iB,KAAMxT,GAKL,OAHAtP,KAAKQ,MAAMsiB,KAAMxT,EAAK9O,OACtBR,KAAKS,IAAIqiB,KAAMxT,EAAK7O,KAEbT,KAIRyO,UAAWyqC,GASV,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,oDACdmiC,EAAS,IAAIyR,IAIPzR,EAAOkD,WAAYp8C,KAAKQ,MAAOR,KAAKS,KAAMmK,eAAgB,IAIlEwpB,MAAO8kB,GASN,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,gDACdmiC,EAAS,IAAIyR,IAIPzR,EAAOqD,WAAYv8C,KAAKS,IAAKT,KAAKQ,OAI1CoiK,aAEC,OAAO5iK,KAAKQ,MAAM+8C,kBAAmBv9C,KAAKS,KAI3CmJ,WAEC,OAAO5J,KAAKQ,MAAM88C,WAAYt9C,KAAKS,KAIpCixD,GAAIpkD,EAAG4rC,GASN,YAPgB//B,IAAX+/B,IAEJvsC,QAAQoK,KAAM,6CACdmiC,EAAS,IAAIyR,IAIP3qD,KAAKo0B,MAAO8kB,GAAStuC,eAAgB0C,GAAIrE,IAAKjJ,KAAKQ,OAI3DqiK,6BAA8B5yJ,EAAO6yJ,GAEpCL,GAAQlmH,WAAYtsC,EAAOjQ,KAAKQ,OAChCkiK,GAAUnmH,WAAYv8C,KAAKS,IAAKT,KAAKQ,OAErC,MAAMuiK,EAAYL,GAAUhiJ,IAAKgiJ,IAGjC,IAAIp1J,EAFoBo1J,GAAUhiJ,IAAK+hJ,IAEbM,EAQ1B,OANKD,IAEJx1J,EAAIksC,GAAUQ,MAAO1sC,EAAG,EAAG,IAIrBA,EAIRukD,oBAAqB5hD,EAAO6yJ,EAAa5pH,GAExC,MAAM5rC,EAAItN,KAAK6iK,6BAA8B5yJ,EAAO6yJ,GASpD,YAPgB3pJ,IAAX+/B,IAEJvsC,QAAQoK,KAAM,8DACdmiC,EAAS,IAAIyR,IAIP3qD,KAAKo0B,MAAO8kB,GAAStuC,eAAgB0C,GAAIrE,IAAKjJ,KAAKQ,OAI3DskD,aAActD,GAKb,OAHAxhD,KAAKQ,MAAMskD,aAActD,GACzBxhD,KAAKS,IAAIqkD,aAActD,GAEhBxhD,KAIRnB,OAAQyQ,GAEP,OAAOA,EAAK9O,MAAM3B,OAAQmB,KAAKQ,QAAW8O,EAAK7O,IAAI5B,OAAQmB,KAAKS,MAMlE,SAASuiK,GAAuBjkG,GAE/BtE,GAASphB,KAAMr5C,MAEfA,KAAK++D,SAAWA,EAChB/+D,KAAKg8E,OAAS,aAEdh8E,KAAKuoH,cAAe,EACpBvoH,KAAKwoH,YAAa,EAClBxoH,KAAK0oH,WAAY,EACjB1oH,KAAKyoH,QAAS,EAEdzoH,KAAK2oH,cAAgB,KACrB3oH,KAAK4oH,YAAc,KACnB5oH,KAAK8oH,WAAa,KAClB9oH,KAAK6oH,QAAU,KAEf7oH,KAAKstD,MAAQ,EAId01G,GAAsBnqH,UAAYr5C,OAAOkkD,OAAQ+W,GAAS5hB,WAC1DmqH,GAAsBnqH,UAAU3yC,YAAc88J,GAE9CA,GAAsBnqH,UAAUoxE,yBAA0B,EAE1D,MAAMg5C,GAA0B,IAAIt4G,GAEpC,MAAMu4G,WAAwBzoG,GAE7Bv0D,YAAasjG,EAAOrsF,GAEnBzM,QACA1Q,KAAKwpG,MAAQA,EACbxpG,KAAKwpG,MAAM/rC,oBAEXz9D,KAAKwhD,OAASgoD,EAAMz9C,YACpB/rD,KAAKgjD,kBAAmB,EAExBhjD,KAAKmd,MAAQA,EAEb,MAAMqxC,EAAW,IAAIkiB,GAEfgB,EAAY,CACjB,EAAG,EAAG,EAAI,EAAG,EAAG,EAChB,EAAG,EAAG,EAAI,EAAG,EAAG,EAChB,EAAG,EAAG,GAAK,EAAG,EAAG,EACjB,EAAG,EAAG,EAAI,EAAG,EAAG,EAChB,EAAG,EAAG,EAAI,GAAK,EAAG,GAGnB,IAAM,IAAI7xE,EAAI,EAAG4F,EAAI,EAAG4I,EAAI,GAAIxO,EAAIwO,EAAGxO,IAAM4F,IAAO,CAEnD,MAAMjB,EAAO3E,EAAIwO,EAAMhL,KAAK6G,GAAK,EAC3BzF,EAAOgB,EAAI4I,EAAMhL,KAAK6G,GAAK,EAEjCwnE,EAAUpwE,KACT+B,KAAKqH,IAAKlG,GAAMnB,KAAKsH,IAAKnG,GAAM,EAChCnB,KAAKqH,IAAKjG,GAAMpB,KAAKsH,IAAKlG,GAAM,GAKlC+pD,EAASjwC,aAAc,WAAY,IAAIsuD,GAAwB6E,EAAW,IAE1E,MAAM3S,EAAW,IAAI2nC,GAAmB,CAAElhC,KAAK,EAAOmC,YAAY,IAElE3nE,KAAKmjK,KAAO,IAAIpvC,GAAcvlE,EAAUuQ,GACxC/+D,KAAKiJ,IAAKjJ,KAAKmjK,MAEfnjK,KAAKyoD,SAINjE,UAECxkD,KAAKmjK,KAAK30G,SAAShK,UACnBxkD,KAAKmjK,KAAKpkG,SAASva,UAIpBiE,SAECzoD,KAAKwpG,MAAM/rC,oBAEX,MAAM2lG,EAAapjK,KAAKwpG,MAAM5/F,SAAW5J,KAAKwpG,MAAM5/F,SAAW,IACzDy5J,EAAYD,EAAa//J,KAAKL,IAAKhD,KAAKwpG,MAAMx/F,OAEpDhK,KAAKmjK,KAAK94J,MAAMzB,IAAKy6J,EAAWA,EAAWD,GAE3CH,GAAUl2G,sBAAuB/sD,KAAKwpG,MAAMtwD,OAAO6S,aAEnD/rD,KAAKmjK,KAAKxxG,OAAQsxG,SAEE9pJ,IAAfnZ,KAAKmd,MAETnd,KAAKmjK,KAAKpkG,SAAS5hD,MAAMvU,IAAK5I,KAAKmd,OAInCnd,KAAKmjK,KAAKpkG,SAAS5hD,MAAM2F,KAAM9iB,KAAKwpG,MAAMrsF,QAQ7C,MAAMmmJ,GAA0B,IAAI34G,GAC9B44G,GAA4B,IAAIrvG,GAChCsvG,GAAgC,IAAItvG,GAG1C,MAAMuvG,WAAuB1vC,GAE5B7tH,YAAa8nD,GAEZ,MAAMq5C,EAAQq8D,GAAa11G,GAErBQ,EAAW,IAAIkiB,GAEf5kE,EAAW,GACX0hE,EAAS,GAET3I,EAAS,IAAIh8B,GAAO,EAAG,EAAG,GAC1Bi8B,EAAS,IAAIj8B,GAAO,EAAG,EAAG,GAEhC,IAAM,IAAIhpC,EAAI,EAAGA,EAAIwnG,EAAM/kG,OAAQzC,IAAO,CAEzC,MAAMiyH,EAAOzqB,EAAOxnG,GAEfiyH,EAAKp3D,QAAUo3D,EAAKp3D,OAAOg3D,SAE/B5lH,EAASxK,KAAM,EAAG,EAAG,GACrBwK,EAASxK,KAAM,EAAG,EAAG,GACrBksE,EAAOlsE,KAAMujE,EAAOtgE,EAAGsgE,EAAO/7B,EAAG+7B,EAAOrjE,GACxCgsE,EAAOlsE,KAAMwjE,EAAOvgE,EAAGugE,EAAOh8B,EAAGg8B,EAAOtjE,IAM1CgtD,EAASjwC,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACzE0iD,EAASjwC,aAAc,QAAS,IAAIsuD,GAAwBW,EAAQ,IAIpE98D,MAAO89C,EAFU,IAAIk4C,GAAmB,CAAErhC,cAAc,EAAMgB,WAAW,EAAOC,YAAY,EAAOqB,YAAY,EAAO9B,aAAa,KAInI7lE,KAAK8/B,KAAO,iBACZ9/B,KAAK2jK,kBAAmB,EAExB3jK,KAAK80J,KAAO9mG,EACZhuD,KAAKqnG,MAAQA,EAEbrnG,KAAKwhD,OAASwM,EAAOjC,YACrB/rD,KAAKgjD,kBAAmB,EAIzBya,kBAAmBC,GAElB,MAAM2pC,EAAQrnG,KAAKqnG,MAEb74C,EAAWxuD,KAAKwuD,SAChB7uC,EAAW6uC,EAASrvC,aAAc,YAExCqkJ,GAAgB1gJ,KAAM9iB,KAAK80J,KAAK/oG,aAActL,SAE9C,IAAM,IAAI5gD,EAAI,EAAG4F,EAAI,EAAG5F,EAAIwnG,EAAM/kG,OAAQzC,IAAO,CAEhD,MAAMiyH,EAAOzqB,EAAOxnG,GAEfiyH,EAAKp3D,QAAUo3D,EAAKp3D,OAAOg3D,SAE/B6xC,GAAYpkH,iBAAkBqkH,GAAiB1xC,EAAK/lE,aACpDu3G,GAAUv2G,sBAAuBw2G,IACjC5jJ,EAASmuD,OAAQroE,EAAG69J,GAAUxjK,EAAGwjK,GAAUvjK,EAAGujK,GAAUnjK,GAExDojK,GAAYpkH,iBAAkBqkH,GAAiB1xC,EAAKp3D,OAAO3O,aAC3Du3G,GAAUv2G,sBAAuBw2G,IACjC5jJ,EAASmuD,OAAQroE,EAAI,EAAG69J,GAAUxjK,EAAGwjK,GAAUvjK,EAAGujK,GAAUnjK,GAE5DsF,GAAK,GAMP+oD,EAASrvC,aAAc,YAAaoyD,aAAc,EAElD7gE,MAAM+sD,kBAAmBC,IAO3B,SAASgmG,GAAa11G,GAErB,MAAM41G,EAAW,GAEZ51G,GAAUA,EAAO0jE,QAErBkyC,EAAStiK,KAAM0sD,GAIhB,IAAM,IAAInuD,EAAI,EAAGA,EAAImuD,EAAOa,SAASvsD,OAAQzC,IAE5C+jK,EAAStiK,KAAKgxB,MAAOsxI,EAAUF,GAAa11G,EAAOa,SAAUhvD,KAI9D,OAAO+jK,EAIR,MAAMC,WAAyBzuF,GAE9BlvE,YAAasjG,EAAOs6D,EAAY3mJ,GAK/BzM,MAHiB,IAAIi1H,GAAsBm+B,EAAY,EAAG,GACzC,IAAIl8F,GAAmB,CAAEW,WAAW,EAAM/C,KAAK,EAAOmC,YAAY,KAInF3nE,KAAKwpG,MAAQA,EACbxpG,KAAKwpG,MAAM/rC,oBAEXz9D,KAAKmd,MAAQA,EAEbnd,KAAK8/B,KAAO,mBAEZ9/B,KAAKwhD,OAASxhD,KAAKwpG,MAAMz9C,YACzB/rD,KAAKgjD,kBAAmB,EAExBhjD,KAAKyoD,SA4BNjE,UAECxkD,KAAKwuD,SAAShK,UACdxkD,KAAK++D,SAASva,UAIfiE,cAEqBtvC,IAAfnZ,KAAKmd,MAETnd,KAAK++D,SAAS5hD,MAAMvU,IAAK5I,KAAKmd,OAI9Bnd,KAAK++D,SAAS5hD,MAAM2F,KAAM9iB,KAAKwpG,MAAMrsF,QAuBxC,MAAM4mJ,GAA0B,IAAIp5G,GAC9Bq5G,GAAwB,IAAIn7H,GAC5Bo7H,GAAwB,IAAIp7H,GAElC,MAAMq7H,WAA8BzpG,GAEnCv0D,YAAasjG,EAAO5pF,EAAMzC,GAEzBzM,QACA1Q,KAAKwpG,MAAQA,EACbxpG,KAAKwpG,MAAM/rC,oBAEXz9D,KAAKwhD,OAASgoD,EAAMz9C,YACpB/rD,KAAKgjD,kBAAmB,EAExBhjD,KAAKmd,MAAQA,EAEb,MAAMqxC,EAAW,IAAIu1E,GAA0BnkH,GAC/C4uC,EAAS2N,QAAmB,GAAV94D,KAAK6G,IAEvBlK,KAAK++D,SAAW,IAAI6I,GAAmB,CAAEW,WAAW,EAAM/C,KAAK,EAAOmC,YAAY,SAC9DxuD,IAAfnZ,KAAKmd,QAAsBnd,KAAK++D,SAASsG,cAAe,GAE7D,MAAM1lD,EAAW6uC,EAASrvC,aAAc,YAClCquD,EAAS,IAAI9mD,aAA+B,EAAjB/G,EAAS2tC,OAE1CkB,EAASjwC,aAAc,QAAS,IAAIktD,GAAiB+B,EAAQ,IAE7DxtE,KAAKiJ,IAAK,IAAImsE,GAAM5mB,EAAUxuD,KAAK++D,WAEnC/+D,KAAKyoD,SAINjE,UAECxkD,KAAK6uD,SAAU,GAAIL,SAAShK,UAC5BxkD,KAAK6uD,SAAU,GAAIkQ,SAASva,UAI7BiE,SAEC,MAAMi0B,EAAO18E,KAAK6uD,SAAU,GAE5B,QAAoB11C,IAAfnZ,KAAKmd,MAETnd,KAAK++D,SAAS5hD,MAAMvU,IAAK5I,KAAKmd,WAExB,CAEN,MAAMqwD,EAASkP,EAAKluB,SAASrvC,aAAc,SAE3C6kJ,GAAQlhJ,KAAM9iB,KAAKwpG,MAAMrsF,OACzB8mJ,GAAQnhJ,KAAM9iB,KAAKwpG,MAAM/d,aAEzB,IAAM,IAAI5rF,EAAI,EAAGwO,EAAIm/D,EAAOlgB,MAAOztD,EAAIwO,EAAGxO,IAAO,CAEhD,MAAMsd,EAAUtd,EAAMwO,EAAI,EAAQ21J,GAAUC,GAE5Cz2F,EAAOM,OAAQjuE,EAAGsd,EAAM5Y,EAAG4Y,EAAM2rB,EAAG3rB,EAAM3b,GAI3CgsE,EAAO+D,aAAc,EAItBmL,EAAK/qB,OAAQoyG,GAAUh3G,sBAAuB/sD,KAAKwpG,MAAMz9C,aAAc5O,WAMzE,MAAMgnH,WAAmBpwC,GAExB7tH,YAAa0Z,EAAO,GAAIk6H,EAAY,GAAIj1E,EAAS,QAAUC,EAAS,SAEnED,EAAS,IAAIh8B,GAAOg8B,GACpBC,EAAS,IAAIj8B,GAAOi8B,GAEpB,MAAMv6D,EAASuvI,EAAY,EACrBrwF,EAAO7pC,EAAOk6H,EACdjsF,EAAWjuC,EAAO,EAElB9T,EAAW,GAAI0hE,EAAS,GAE9B,IAAM,IAAI3tE,EAAI,EAAG4F,EAAI,EAAGwX,GAAM4wC,EAAUhuD,GAAKi6I,EAAWj6I,IAAMod,GAAKwsC,EAAO,CAEzE39C,EAASxK,MAAQusD,EAAU,EAAG5wC,EAAG4wC,EAAU,EAAG5wC,GAC9CnR,EAASxK,KAAM2b,EAAG,GAAK4wC,EAAU5wC,EAAG,EAAG4wC,GAEvC,MAAM1wC,EAAQtd,IAAM0K,EAASs6D,EAASC,EAEtC3nD,EAAMugC,QAAS8vB,EAAQ/nE,GAAKA,GAAK,EACjC0X,EAAMugC,QAAS8vB,EAAQ/nE,GAAKA,GAAK,EACjC0X,EAAMugC,QAAS8vB,EAAQ/nE,GAAKA,GAAK,EACjC0X,EAAMugC,QAAS8vB,EAAQ/nE,GAAKA,GAAK,EAIlC,MAAM+oD,EAAW,IAAIkiB,GACrBliB,EAASjwC,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACzE0iD,EAASjwC,aAAc,QAAS,IAAIsuD,GAAwBW,EAAQ,IAIpE98D,MAAO89C,EAFU,IAAIk4C,GAAmB,CAAErhC,cAAc,EAAMsC,YAAY,KAI1E3nE,KAAK8/B,KAAO,cAMd,MAAMskI,WAAwBrwC,GAE7B7tH,YAAa+T,EAAS,GAAIoqJ,EAAU,GAAIC,EAAU,EAAGxqB,EAAY,GAAIj1E,EAAS,QAAUC,EAAS,SAEhGD,EAAS,IAAIh8B,GAAOg8B,GACpBC,EAAS,IAAIj8B,GAAOi8B,GAEpB,MAAMh5D,EAAW,GACX0hE,EAAS,GAIf,IAAM,IAAI3tE,EAAI,EAAGA,GAAKwkK,EAASxkK,IAAO,CAErC,MAAMwQ,EAAMxQ,EAAIwkK,GAAwB,EAAVhhK,KAAK6G,IAE7BpK,EAAIuD,KAAKsH,IAAK0F,GAAM4J,EACpB9Z,EAAIkD,KAAKqH,IAAK2F,GAAM4J,EAE1BnO,EAASxK,KAAM,EAAG,EAAG,GACrBwK,EAASxK,KAAMxB,EAAG,EAAGK,GAErB,MAAMgd,EAAc,EAAJtd,EAAUglE,EAASC,EAEnC0I,EAAOlsE,KAAM6b,EAAM5Y,EAAG4Y,EAAM2rB,EAAG3rB,EAAM3b,GACrCgsE,EAAOlsE,KAAM6b,EAAM5Y,EAAG4Y,EAAM2rB,EAAG3rB,EAAM3b,GAMtC,IAAM,IAAI3B,EAAI,EAAGA,GAAKykK,EAASzkK,IAAO,CAErC,MAAMsd,EAAc,EAAJtd,EAAUglE,EAASC,EAE7BvgE,EAAI0V,EAAWA,EAASqqJ,EAAUzkK,EAExC,IAAM,IAAI4F,EAAI,EAAGA,EAAIq0I,EAAWr0I,IAAO,CAItC,IAAI4K,EAAM5K,EAAIq0I,GAA0B,EAAVz2I,KAAK6G,IAE/BpK,EAAIuD,KAAKsH,IAAK0F,GAAM9L,EACpBpE,EAAIkD,KAAKqH,IAAK2F,GAAM9L,EAExBuH,EAASxK,KAAMxB,EAAG,EAAGK,GACrBqtE,EAAOlsE,KAAM6b,EAAM5Y,EAAG4Y,EAAM2rB,EAAG3rB,EAAM3b,GAIrC6O,GAAQ5K,EAAI,GAAMq0I,GAA0B,EAAVz2I,KAAK6G,IAEvCpK,EAAIuD,KAAKsH,IAAK0F,GAAM9L,EACpBpE,EAAIkD,KAAKqH,IAAK2F,GAAM9L,EAEpBuH,EAASxK,KAAMxB,EAAG,EAAGK,GACrBqtE,EAAOlsE,KAAM6b,EAAM5Y,EAAG4Y,EAAM2rB,EAAG3rB,EAAM3b,IAMvC,MAAMgtD,EAAW,IAAIkiB,GACrBliB,EAASjwC,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACzE0iD,EAASjwC,aAAc,QAAS,IAAIsuD,GAAwBW,EAAQ,IAIpE98D,MAAO89C,EAFU,IAAIk4C,GAAmB,CAAErhC,cAAc,EAAMsC,YAAY,KAI1E3nE,KAAK8/B,KAAO,mBAMd,MAAMykI,GAAsB,IAAI55G,GAC1B65G,GAAsB,IAAI75G,GAC1B85G,GAAsB,IAAI95G,GAEhC,MAAM+5G,WAA+BjqG,GAEpCv0D,YAAasjG,EAAO5pF,EAAMzC,GAEzBzM,QACA1Q,KAAKwpG,MAAQA,EACbxpG,KAAKwpG,MAAM/rC,oBAEXz9D,KAAKwhD,OAASgoD,EAAMz9C,YACpB/rD,KAAKgjD,kBAAmB,EAExBhjD,KAAKmd,MAAQA,OAEChE,IAATyG,IAAqBA,EAAO,GAEjC,IAAI4uC,EAAW,IAAIkiB,GACnBliB,EAASjwC,aAAc,WAAY,IAAIsuD,GAAwB,EAC5DjtD,EAAMA,EAAM,EACdA,EAAMA,EAAM,EACZA,GAAQA,EAAM,GACZA,GAAQA,EAAM,GACdA,EAAMA,EAAM,GACZ,IAEH,MAAMm/C,EAAW,IAAI2nC,GAAmB,CAAElhC,KAAK,EAAOmC,YAAY,IAElE3nE,KAAK2kK,WAAa,IAAI7qJ,GAAM00C,EAAUuQ,GACtC/+D,KAAKiJ,IAAKjJ,KAAK2kK,YAEfn2G,EAAW,IAAIkiB,GACfliB,EAASjwC,aAAc,WAAY,IAAIsuD,GAAwB,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,IAErF7sE,KAAK4kK,WAAa,IAAI9qJ,GAAM00C,EAAUuQ,GACtC/+D,KAAKiJ,IAAKjJ,KAAK4kK,YAEf5kK,KAAKyoD,SAINjE,UAECxkD,KAAK2kK,WAAWn2G,SAAShK,UACzBxkD,KAAK2kK,WAAW5lG,SAASva,UACzBxkD,KAAK4kK,WAAWp2G,SAAShK,UACzBxkD,KAAK4kK,WAAW7lG,SAASva,UAI1BiE,SAEC87G,GAAMx3G,sBAAuB/sD,KAAKwpG,MAAMz9C,aACxCy4G,GAAMz3G,sBAAuB/sD,KAAKwpG,MAAMtwD,OAAO6S,aAC/C04G,GAAMloH,WAAYioH,GAAOD,IAEzBvkK,KAAK2kK,WAAWhzG,OAAQ6yG,SAEJrrJ,IAAfnZ,KAAKmd,OAETnd,KAAK2kK,WAAW5lG,SAAS5hD,MAAMvU,IAAK5I,KAAKmd,OACzCnd,KAAK4kK,WAAW7lG,SAAS5hD,MAAMvU,IAAK5I,KAAKmd,SAIzCnd,KAAK2kK,WAAW5lG,SAAS5hD,MAAM2F,KAAM9iB,KAAKwpG,MAAMrsF,OAChDnd,KAAK4kK,WAAW7lG,SAAS5hD,MAAM2F,KAAM9iB,KAAKwpG,MAAMrsF,QAIjDnd,KAAK4kK,WAAWjzG,OAAQ6yG,IACxBxkK,KAAK4kK,WAAWv6J,MAAMlK,EAAIskK,GAAMniK,UAMlC,MAAMuiK,GAA0B,IAAIl6G,GAC9Bm6G,GAAwB,IAAIrrF,GASlC,MAAMsrF,WAAqBhxC,GAE1B7tH,YAAawlD,GAEZ,MAAM8C,EAAW,IAAIkiB,GACf3R,EAAW,IAAI2nC,GAAmB,CAAEvpF,MAAO,SAAUkoD,cAAc,EAAMsC,YAAY,IAErF77D,EAAW,GACX0hE,EAAS,GAETw3F,EAAW,GAIXC,EAAe,IAAIp8H,GAAO,UAC1Bq8H,EAAY,IAAIr8H,GAAO,UACvBs8H,EAAU,IAAIt8H,GAAO,OACrBu8H,EAAc,IAAIv8H,GAAO,UACzBw8H,EAAa,IAAIx8H,GAAO,SAiD9B,SAASy8H,EAAS/jK,EAAGC,EAAG2b,GAEvBooJ,EAAUhkK,EAAG4b,GACbooJ,EAAU/jK,EAAG2b,GAId,SAASooJ,EAAUvxJ,EAAImJ,GAEtBrR,EAASxK,KAAM,EAAG,EAAG,GACrBksE,EAAOlsE,KAAM6b,EAAM5Y,EAAG4Y,EAAM2rB,EAAG3rB,EAAM3b,QAEb2X,IAAnB6rJ,EAAUhxJ,KAEdgxJ,EAAUhxJ,GAAO,IAIlBgxJ,EAAUhxJ,GAAK1S,KAAQwK,EAASxJ,OAAS,EAAM,GA/DhDgjK,EAAS,KAAM,KAAML,GACrBK,EAAS,KAAM,KAAML,GACrBK,EAAS,KAAM,KAAML,GACrBK,EAAS,KAAM,KAAML,GAIrBK,EAAS,KAAM,KAAML,GACrBK,EAAS,KAAM,KAAML,GACrBK,EAAS,KAAM,KAAML,GACrBK,EAAS,KAAM,KAAML,GAIrBK,EAAS,KAAM,KAAML,GACrBK,EAAS,KAAM,KAAML,GACrBK,EAAS,KAAM,KAAML,GACrBK,EAAS,KAAM,KAAML,GAIrBK,EAAS,IAAK,KAAMJ,GACpBI,EAAS,IAAK,KAAMJ,GACpBI,EAAS,IAAK,KAAMJ,GACpBI,EAAS,IAAK,KAAMJ,GAIpBI,EAAS,KAAM,KAAMH,GACrBG,EAAS,KAAM,KAAMH,GACrBG,EAAS,KAAM,KAAMH,GAIrBG,EAAS,IAAK,IAAKF,GACnBE,EAAS,IAAK,IAAKD,GAInBC,EAAS,MAAO,MAAOD,GACvBC,EAAS,MAAO,MAAOD,GAEvBC,EAAS,MAAO,MAAOD,GACvBC,EAAS,MAAO,MAAOD,GAwBvB72G,EAASjwC,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACzE0iD,EAASjwC,aAAc,QAAS,IAAIsuD,GAAwBW,EAAQ,IAEpE98D,MAAO89C,EAAUuQ,GAEjB/+D,KAAK8/B,KAAO,eAEZ9/B,KAAK0rD,OAASA,EACT1rD,KAAK0rD,OAAOsuB,wBAAyBh6E,KAAK0rD,OAAOsuB,yBAEtDh6E,KAAKwhD,OAASkK,EAAOK,YACrB/rD,KAAKgjD,kBAAmB,EAExBhjD,KAAKglK,SAAWA,EAEhBhlK,KAAKyoD,SAINA,SAEC,MAAM+F,EAAWxuD,KAAKwuD,SAChBw2G,EAAWhlK,KAAKglK,SAOtBF,GAAQh5G,wBAAwBhpC,KAAM9iB,KAAK0rD,OAAOI,yBAIlD05G,GAAU,IAAKR,EAAUx2G,EAAUs2G,GAAS,EAAG,GAAK,GACpDU,GAAU,IAAKR,EAAUx2G,EAAUs2G,GAAS,EAAG,EAAG,GAIlDU,GAAU,KAAMR,EAAUx2G,EAAUs2G,IAd1B,GAAO,GAcwC,GACzDU,GAAU,KAAMR,EAAUx2G,EAAUs2G,GAf1B,GAAO,GAesC,GACvDU,GAAU,KAAMR,EAAUx2G,EAAUs2G,IAhB1B,EAAO,GAgBsC,GACvDU,GAAU,KAAMR,EAAUx2G,EAAUs2G,GAjB1B,EAAO,GAiBoC,GAIrDU,GAAU,KAAMR,EAAUx2G,EAAUs2G,IArB1B,GAAO,EAqBsC,GACvDU,GAAU,KAAMR,EAAUx2G,EAAUs2G,GAtB1B,GAAO,EAsBoC,GACrDU,GAAU,KAAMR,EAAUx2G,EAAUs2G,IAvB1B,EAAO,EAuBoC,GACrDU,GAAU,KAAMR,EAAUx2G,EAAUs2G,GAxB1B,EAAO,EAwBkC,GAInDU,GAAU,KAAMR,EAAUx2G,EAAUs2G,GAASx0J,GAASmK,KAAW,GACjE+qJ,GAAU,KAAMR,EAAUx2G,EAAUs2G,IAAS,GAAWrqJ,KAAW,GACnE+qJ,GAAU,KAAMR,EAAUx2G,EAAUs2G,GAAS,EAAGrqJ,GAAS,GAIzD+qJ,GAAU,MAAOR,EAAUx2G,EAAUs2G,IAlC3B,EAkCyC,EAAG,GACtDU,GAAU,MAAOR,EAAUx2G,EAAUs2G,GAnC3B,EAmCuC,EAAG,GACpDU,GAAU,MAAOR,EAAUx2G,EAAUs2G,GAAS,GApC7B,EAoCqC,GACtDU,GAAU,MAAOR,EAAUx2G,EAAUs2G,GAAS,EArC7B,EAqCmC,GAEpDU,GAAU,MAAOR,EAAUx2G,EAAUs2G,IAvC3B,EAuCyC,GAAK,GACxDU,GAAU,MAAOR,EAAUx2G,EAAUs2G,GAxC3B,EAwCuC,GAAK,GACtDU,GAAU,MAAOR,EAAUx2G,EAAUs2G,GAAS,GAzC7B,GAyCuC,GACxDU,GAAU,MAAOR,EAAUx2G,EAAUs2G,GAAS,EA1C7B,GA0CqC,GAEtDt2G,EAASrvC,aAAc,YAAaoyD,aAAc,GAOpD,SAASi0F,GAAUv1J,EAAO+0J,EAAUx2G,EAAU9C,EAAQ5rD,EAAGC,EAAGI,GAE3D0kK,GAAUj8J,IAAK9I,EAAGC,EAAGI,GAAI0rD,UAAWH,GAEpC,MAAM8B,EAASw3G,EAAU/0J,GAEzB,QAAgBkJ,IAAXq0C,EAAuB,CAE3B,MAAM7tC,EAAW6uC,EAASrvC,aAAc,YAExC,IAAM,IAAItf,EAAI,EAAGwO,EAAIm/C,EAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAE1C8f,EAASmuD,OAAQtgB,EAAQ3tD,GAAKglK,GAAU/kK,EAAG+kK,GAAU9kK,EAAG8kK,GAAU1kK,IAQrE,MAAMslK,GAAuB,IAAIt4G,GAEjC,MAAMu4G,WAAkB3xC,GAEvB7tH,YAAa8nD,EAAQ7wC,EAAQ,UAE5B,MAAMw2D,EAAU,IAAIpH,YAAa,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAClGmF,EAAY,IAAIhrD,aAAc,IAE9B8nC,EAAW,IAAIkiB,GACrBliB,EAASyiB,SAAU,IAAIxF,GAAiBkI,EAAS,IACjDnlB,EAASjwC,aAAc,WAAY,IAAIktD,GAAiBiG,EAAW,IAEnEhhE,MAAO89C,EAAU,IAAIk4C,GAAmB,CAAEvpF,MAAOA,EAAOwqD,YAAY,KAEpE3nE,KAAKguD,OAASA,EACdhuD,KAAK8/B,KAAO,YAEZ9/B,KAAKgjD,kBAAmB,EAExBhjD,KAAKyoD,SAINA,OAAQuF,GAcP,QAZgB70C,IAAX60C,GAEJrhD,QAAQoK,KAAM,4DAIMoC,IAAhBnZ,KAAKguD,QAETy3G,GAAO13G,cAAe/tD,KAAKguD,QAIvBy3G,GAAOt3G,UAAY,OAExB,MAAMlpD,EAAMwgK,GAAOxgK,IACbD,EAAMygK,GAAOzgK,IAkBb2a,EAAW3f,KAAKwuD,SAASmiB,WAAWhxD,SACpCw5B,EAAQx5B,EAASw5B,MAEvBA,EAAO,GAAMn0C,EAAIlF,EAAGq5C,EAAO,GAAMn0C,EAAIjF,EAAGo5C,EAAO,GAAMn0C,EAAI7E,EACzDg5C,EAAO,GAAMl0C,EAAInF,EAAGq5C,EAAO,GAAMn0C,EAAIjF,EAAGo5C,EAAO,GAAMn0C,EAAI7E,EACzDg5C,EAAO,GAAMl0C,EAAInF,EAAGq5C,EAAO,GAAMl0C,EAAIlF,EAAGo5C,EAAO,GAAMn0C,EAAI7E,EACzDg5C,EAAO,GAAMn0C,EAAIlF,EAAGq5C,EAAO,IAAOl0C,EAAIlF,EAAGo5C,EAAO,IAAOn0C,EAAI7E,EAC3Dg5C,EAAO,IAAOn0C,EAAIlF,EAAGq5C,EAAO,IAAOn0C,EAAIjF,EAAGo5C,EAAO,IAAOl0C,EAAI9E,EAC5Dg5C,EAAO,IAAOl0C,EAAInF,EAAGq5C,EAAO,IAAOn0C,EAAIjF,EAAGo5C,EAAO,IAAOl0C,EAAI9E,EAC5Dg5C,EAAO,IAAOl0C,EAAInF,EAAGq5C,EAAO,IAAOl0C,EAAIlF,EAAGo5C,EAAO,IAAOl0C,EAAI9E,EAC5Dg5C,EAAO,IAAOn0C,EAAIlF,EAAGq5C,EAAO,IAAOl0C,EAAIlF,EAAGo5C,EAAO,IAAOl0C,EAAI9E,EAE5Dwf,EAAS4xD,aAAc,EAEvBvxE,KAAKwuD,SAASijB,wBAKf1jB,cAAeC,GAKd,OAHAhuD,KAAKguD,OAASA,EACdhuD,KAAKyoD,SAEEzoD,KAIR8iB,KAAM+gC,GAML,OAJAkwE,GAAal7E,UAAU/1B,KAAKu2B,KAAMr5C,KAAM6jD,GAExC7jD,KAAKguD,OAASnK,EAAOmK,OAEdhuD,MAMT,MAAM2lK,WAAmB5xC,GAExB7tH,YAAagoD,EAAK/wC,EAAQ,UAEzB,MAAMw2D,EAAU,IAAIpH,YAAa,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAIlG/d,EAAW,IAAIkiB,GAErBliB,EAASyiB,SAAU,IAAIxF,GAAiBkI,EAAS,IAEjDnlB,EAASjwC,aAAc,WAAY,IAAIsuD,GANrB,CAAE,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,GAAK,GAAK,GAAK,GAAK,EAAG,GAAK,GAAK,GAMvC,IAE1En8D,MAAO89C,EAAU,IAAIk4C,GAAmB,CAAEvpF,MAAOA,EAAOwqD,YAAY,KAEpE3nE,KAAKkuD,IAAMA,EAEXluD,KAAK8/B,KAAO,aAEZ9/B,KAAKwuD,SAASijB,wBAIfhU,kBAAmBC,GAElB,MAAMxP,EAAMluD,KAAKkuD,IAEZA,EAAIC,YAETD,EAAIz/C,UAAWzO,KAAK2f,UAEpBuuC,EAAIE,QAASpuD,KAAKqK,OAElBrK,KAAKqK,MAAMO,eAAgB,IAE3B8F,MAAM+sD,kBAAmBC,KAM3B,MAAMkoG,WAAoB9rJ,GAEzB5T,YAAampD,EAAOzvC,EAAO,EAAGyjD,EAAM,UAEnC,MAAMlmD,EAAQkmD,EAIR7U,EAAW,IAAIkiB,GACrBliB,EAASjwC,aAAc,WAAY,IAAIsuD,GAHrB,CAAE,GAAK,EAAG,GAAK,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGjD,IAC1Ere,EAASijB,wBAET/gE,MAAO89C,EAAU,IAAIk4C,GAAmB,CAAEvpF,MAAOA,EAAOwqD,YAAY,KAEpE3nE,KAAK8/B,KAAO,cAEZ9/B,KAAKqvD,MAAQA,EAEbrvD,KAAK4f,KAAOA,EAEZ,MAEMi0D,EAAY,IAAInD,GACtBmD,EAAUt1D,aAAc,WAAY,IAAIsuD,GAHrB,CAAE,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,GAGR,IAC5EgH,EAAUpC,wBAEVzxE,KAAKiJ,IAAK,IAAImsE,GAAMvB,EAAW,IAAIjM,GAAmB,CAAEzqD,MAAOA,EAAOyoD,QAAS,GAAKC,aAAa,EAAMS,YAAY,EAAOqB,YAAY,MAIvIlK,kBAAmBC,GAElB,IAAIrzD,GAAUrK,KAAKqvD,MAAMC,SAEpBjsD,KAAKC,IAAK+G,GAAU,OAAOA,EAAQ,MAExCrK,KAAKqK,MAAMzB,IAAK,GAAM5I,KAAK4f,KAAM,GAAM5f,KAAK4f,KAAMvV,GAElDrK,KAAK6uD,SAAU,GAAIkQ,SAAS2G,KAASr7D,EAAQ,EAAMgjC,EAAWD,EAE9DptC,KAAK2xD,OAAQ3xD,KAAKqvD,MAAM73B,QAExB9mB,MAAM+sD,kBAAmBC,IAM3B,MAAMmoG,GAAsB,IAAIl7G,GAChC,IAAIm7G,GAAeC,GAEnB,MAAMC,WAAoBvrG,GAEzBv0D,YAAagiD,EAAKj+C,EAAQ3H,EAAQ6a,EAAO8oJ,EAAYC,GAEpDx1J,QAGA1Q,KAAK8/B,KAAO,mBAEC3mB,IAAR+uC,IAAoBA,EAAM,IAAIyC,GAAS,EAAG,EAAG,SAClCxxC,IAAXlP,IAAuBA,EAAS,IAAI0gD,GAAS,EAAG,EAAG,SACxCxxC,IAAX7W,IAAuBA,EAAS,QACtB6W,IAAVgE,IAAsBA,EAAQ,eACfhE,IAAf8sJ,IAA2BA,EAAa,GAAM3jK,QAChC6W,IAAd+sJ,IAA0BA,EAAY,GAAMD,QAE1B9sJ,IAAlB2sJ,KAEJA,GAAgB,IAAIp1F,GACpBo1F,GAAcvnJ,aAAc,WAAY,IAAIsuD,GAAwB,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,IAE1Fk5F,GAAgB,IAAIvsC,GAAwB,EAAG,GAAK,EAAG,EAAG,GAC1DusC,GAAcxzJ,UAAW,GAAK,GAAK,IAIpCvS,KAAK2f,SAASmD,KAAM7Y,GAEpBjK,KAAKsP,KAAO,IAAIwK,GAAMgsJ,GAAe,IAAIp/D,GAAmB,CAAEvpF,MAAOA,EAAOwqD,YAAY,KACxF3nE,KAAKsP,KAAK0zC,kBAAmB,EAC7BhjD,KAAKiJ,IAAKjJ,KAAKsP,MAEftP,KAAKmjK,KAAO,IAAI/tF,GAAM2wF,GAAe,IAAIn+F,GAAmB,CAAEzqD,MAAOA,EAAOwqD,YAAY,KACxF3nE,KAAKmjK,KAAKngH,kBAAmB,EAC7BhjD,KAAKiJ,IAAKjJ,KAAKmjK,MAEfnjK,KAAKmmK,aAAcj+G,GACnBloD,KAAKgP,UAAW1M,EAAQ2jK,EAAYC,GAIrCC,aAAcj+G,GAIb,GAAKA,EAAInoD,EAAI,OAEZC,KAAKsoD,WAAW1/C,IAAK,EAAG,EAAG,EAAG,QAExB,GAAKs/C,EAAInoD,GAAM,OAErBC,KAAKsoD,WAAW1/C,IAAK,EAAG,EAAG,EAAG,OAExB,CAENi9J,GAAMj9J,IAAKs/C,EAAI/nD,EAAG,GAAK+nD,EAAIpoD,GAAIoP,YAE/B,MAAMgsC,EAAU73C,KAAKyuB,KAAMo2B,EAAInoD,GAE/BC,KAAKsoD,WAAWU,iBAAkB68G,GAAO3qH,IAM3ClsC,UAAW1M,EAAQ2jK,EAAYC,QAEV/sJ,IAAf8sJ,IAA2BA,EAAa,GAAM3jK,QAChC6W,IAAd+sJ,IAA0BA,EAAY,GAAMD,GAEjDjmK,KAAKsP,KAAKjF,MAAMzB,IAAK,EAAGvF,KAAK2B,IAAK,KAAQ1C,EAAS2jK,GAAc,GACjEjmK,KAAKsP,KAAKs0C,eAEV5jD,KAAKmjK,KAAK94J,MAAMzB,IAAKs9J,EAAWD,EAAYC,GAC5ClmK,KAAKmjK,KAAKxjJ,SAAS5f,EAAIuC,EACvBtC,KAAKmjK,KAAKv/G,eAIXwiH,SAAUjpJ,GAETnd,KAAKsP,KAAKyvD,SAAS5hD,MAAMvU,IAAKuU,GAC9Bnd,KAAKmjK,KAAKpkG,SAAS5hD,MAAMvU,IAAKuU,GAI/B2F,KAAM+gC,GAOL,OALAnzC,MAAMoS,KAAM+gC,GAAQ,GAEpB7jD,KAAKsP,KAAKwT,KAAM+gC,EAAOv0C,MACvBtP,KAAKmjK,KAAKrgJ,KAAM+gC,EAAOs/G,MAEhBnjK,MAMT,MAAMqmK,WAAmBtyC,GAExB7tH,YAAa0Z,EAAO,GAEnB,MAAM9T,EAAW,CAChB,EAAG,EAAG,EAAG8T,EAAM,EAAG,EAClB,EAAG,EAAG,EAAG,EAAGA,EAAM,EAClB,EAAG,EAAG,EAAG,EAAG,EAAGA,GASV4uC,EAAW,IAAIkiB,GACrBliB,EAASjwC,aAAc,WAAY,IAAIsuD,GAAwB/gE,EAAU,IACzE0iD,EAASjwC,aAAc,QAAS,IAAIsuD,GARrB,CACd,EAAG,EAAG,EAAG,EAAG,GAAK,EACjB,EAAG,EAAG,EAAG,GAAK,EAAG,EACjB,EAAG,EAAG,EAAG,EAAG,GAAK,GAKkD,IAIpEn8D,MAAO89C,EAFU,IAAIk4C,GAAmB,CAAErhC,cAAc,EAAMsC,YAAY,KAI1E3nE,KAAK8/B,KAAO,cAMd,MAAMwmI,GAAa,IAAI5/I,aAAc,GAC/B6/I,GAAa,IAAI95F,WAAY65F,GAAWn7J,QAExCq7J,GAAY,CAIjBC,YAAa,SAAW3rI,GAQvBwrI,GAAY,GAAMxrI,EAClB,MAAMh7B,EAAIymK,GAAY,GAEtB,IAAIl+C,EAASvoH,GAAK,GAAO,MACrB8C,EAAM9C,GAAK,GAAO,KACtB,MAAM0D,EAAM1D,GAAK,GAAO,IAIxB,OAAK0D,EAAI,IAAa6kH,EAGjB7kH,EAAI,KAER6kH,GAAQ,MAGRA,IAAiB,KAAL7kH,EAAa,EAAI,IAAa,QAAJ1D,EAC/BuoH,GAKH7kH,EAAI,KAERZ,GAAK,KAGLylH,IAAUzlH,GAAO,IAAMY,IAAYZ,GAAO,IAAMY,EAAQ,GACjD6kH,IAIRA,GAAY7kH,EAAI,KAAS,GAASZ,GAAK,EAGvCylH,GAAY,EAAJzlH,EACDylH,KAQHq+C,GAAWrjK,KAAK0G,IAAK,EADX,GAOV48J,GAAkB,CAAE,KAAO,KAAO,IAAM,KAAO,KAAO,MAEtDC,GAAaC,EAAwBF,GAAgBrkK,OAIrDwkK,GAAc,GAEdC,GAAY,CACjB,CAAE3wH,IAAkB,EACpB,CAAEC,IAAgB,EAClB,CAAEE,IAAgB,EAClB,CAAEE,IAAiB,EACnB,CAAEC,IAAkB,EACpB,CAAEC,IAAgB,EAClB,CAAEL,IAAiB,GAGd0wH,GAA4B,IAAIhpB,IAChC,WAAEipB,GAAU,UAAEC,GAAS,QAAEC,IAA0BC,KACnDC,GAA4B,IAAIx+H,GACtC,IAAIy+H,GAAa,KAGjB,MAAMC,IAAQ,EAAIlkK,KAAKyG,KAAM,IAAQ,EAC/B09J,GAAU,EAAID,GAIdE,GAAkB,CACT,IAAI98G,GAAS,EAAG,EAAG,GACnB,IAAIA,IAAW,EAAG,EAAG,GACrB,IAAIA,GAAS,EAAG,GAAK,GACrB,IAAIA,IAAW,EAAG,GAAK,GACvB,IAAIA,GAAS,EAAG48G,GAAKC,IACrB,IAAI78G,GAAS,EAAG48G,IAAOC,IACvB,IAAI78G,GAAS68G,GAAS,EAAGD,IACzB,IAAI58G,IAAW68G,GAAS,EAAGD,IAC3B,IAAI58G,GAAS48G,GAAKC,GAAS,GAC3B,IAAI78G,IAAW48G,GAAKC,GAAS,IAc5C,MAAME,GAELxhK,YAAau1E,GAEZz7E,KAAKutG,UAAY9xB,EACjBz7E,KAAK2nK,sBAAwB,KAE7B3nK,KAAK4nK,cAwfP,SAAyB7zE,GAExB,MAAM8zE,EAAU,IAAInhJ,aAAcqtE,GAC5B+zE,EAAW,IAAIn9G,GAAS,EAAG,EAAG,GA6FpC,OA5FuB,IAAI89E,GAAmB,CAE7Cl5G,KAAM,wBAENopD,QAAS,CAAE,EAAKob,GAEhBxb,SAAU,CACT,OAAU,CAAE54E,MAAO,MACnB,QAAW,CAAEA,MAAO,GACpB,QAAW,CAAEA,MAAOkoK,GACpB,YAAe,CAAEloK,OAAO,GACxB,OAAU,CAAEA,MAAO,GACnB,OAAU,CAAEA,MAAO,GACnB,SAAY,CAAEA,MAAOmoK,GACrB,cAAiB,CAAEnoK,MAAOonK,GAAW3wH,KACrC,eAAkB,CAAEz2C,MAAOonK,GAAW3wH,MAGvCwiC,aAAcmvF,KAEdlvF,eAA0B,gVAetBmvF,myCAmDJviG,SAAUh4B,EACV44B,WAAW,EACXC,YAAY,IAplBS2hG,CAAgBnB,IACrC9mK,KAAKkoK,gBAAkB,KACvBloK,KAAKmoK,eAAiB,KAEtBnoK,KAAKooK,iBAAkBpoK,KAAK4nK,eAW7BS,UAAW3sF,EAAO4sF,EAAQ,EAAGjwG,EAAO,GAAKC,EAAM,KAE9CgvG,GAAatnK,KAAKutG,UAAUzxB,kBAC5B,MAAMysF,EAAqBvoK,KAAKwoK,mBAYhC,OAVAxoK,KAAKyoK,eAAgB/sF,EAAOrjB,EAAMC,EAAKiwG,GAClCD,EAAQ,GAEZtoK,KAAK0oK,MAAOH,EAAoB,EAAG,EAAGD,GAIvCtoK,KAAK2oK,YAAaJ,GAClBvoK,KAAK4oK,SAAUL,GAERA,EASRM,oBAAqBC,GAEpB,OAAO9oK,KAAK+oK,aAAcD,GAS3BE,YAAalzE,GAEZ,OAAO91F,KAAK+oK,aAAcjzE,GAQ3BmzE,uBAE8B,OAAxBjpK,KAAKmoK,iBAETnoK,KAAKmoK,eAAiBe,KACtBlpK,KAAKooK,iBAAkBpoK,KAAKmoK,iBAU9BgB,+BAE+B,OAAzBnpK,KAAKkoK,kBAETloK,KAAKkoK,gBAAkBkB,KACvBppK,KAAKooK,iBAAkBpoK,KAAKkoK,kBAW9B1jH,UAECxkD,KAAK4nK,cAAcpjH,UAEU,OAAxBxkD,KAAKmoK,gBAA0BnoK,KAAKmoK,eAAe3jH,UAC1B,OAAzBxkD,KAAKkoK,iBAA2BloK,KAAKkoK,gBAAgB1jH,UAE1D,IAAM,IAAI3kD,EAAI,EAAGA,EAAIonK,GAAW3kK,OAAQzC,IAEvConK,GAAYpnK,GAAI2kD,UAQlBokH,SAAUS,GAETrpK,KAAK2nK,sBAAsBnjH,UAC3BxkD,KAAKutG,UAAUxxB,gBAAiBurF,IAChC+B,EAAa/iH,aAAc,EAC3BgjH,GAAcD,EAAc,EAAG,EAAGA,EAAa/6J,MAAO+6J,EAAa96J,QAIpEw6J,aAAcxiH,GAEb+gH,GAAatnK,KAAKutG,UAAUzxB,kBAC5B,MAAMysF,EAAqBvoK,KAAKwoK,iBAAkBjiH,GAKlD,OAJAvmD,KAAKupK,iBAAkBhjH,EAASgiH,GAChCvoK,KAAK2oK,YAAaJ,GAClBvoK,KAAK4oK,SAAUL,GAERA,EAIRC,iBAAkBjiH,GAEjB,MAAMr+C,EAAS,CACdq6C,UAAW7R,GACX8R,UAAW9R,GACXuS,iBAAiB,EACjBnjB,KAAMsR,GACNqR,OAAQpQ,GACRsQ,SAAU6mH,GAAQjjH,GAAYA,EAAQ5D,SAAWpM,GACjDiQ,aAAa,GAGR+hH,EAAqBkB,GAAqBvhK,GAGhD,OAFAqgK,EAAmB/hH,aAAcD,EACjCvmD,KAAK2nK,sBAAwB8B,GAAqBvhK,GAC3CqgK,EAIRH,iBAAkBrpG,GAEjB,MAAM2qG,EAAU,IAAIt0F,GAAM6xF,GAAY,GAAKloG,GAC3C/+D,KAAKutG,UAAUmc,QAASggD,EAAS1C,IAIlCyB,eAAgB/sF,EAAOrjB,EAAMC,EAAKiwG,GAEjC,MAEMoB,EAAa,IAAIjwF,GAFX,GACG,EACwCrhB,EAAMC,GACvDsxG,EAAS,CAAE,GAAK,EAAG,EAAG,EAAG,EAAG,GAC5BC,EAAc,CAAE,EAAG,EAAG,GAAK,GAAK,GAAK,GACrCpuF,EAAWz7E,KAAKutG,UAEhBhJ,EAAiB9oB,EAAS8oB,eAC1BhW,EAAc9S,EAAS8S,YAC7B9S,EAASgS,cAAe45E,IACxB,MAAMj6E,EAAa3R,EAASkS,gBAE5BlS,EAAS8S,YAAc7+C,EACvB+rC,EAAS8oB,eAAiBnuD,GAE1B,IAAIi2C,EAAa3Q,EAAM2Q,WACvB,GAAKA,GAAcA,EAAWnpB,QAAU,CAEvCmpB,EAAWhoB,sBAEX,MAAMylG,EAAezmK,KAAK2B,IAAKqnF,EAAW9nF,EAAG8nF,EAAWvjD,EAAGujD,EAAW7qF,GAChEuoK,EAAO1mK,KAAK4B,IAAK5B,KAAK2B,IAAK3B,KAAKge,KAAMhe,KAAK2mK,KAAMF,KAAoB,KAAS,KACpFz9E,EAAaA,EAAWzhF,eAAgBvH,KAAK0G,IAAK,GAAOggK,IACzD,MAAM3/H,GAAU2/H,EAAO,KAAU,IACjCtuF,EAASiS,cAAerB,EAAYjiD,GACpCsxC,EAAM2Q,WAAa,KAIpB,IAAM,IAAIxsF,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B,MAAMoqK,EAAMpqK,EAAI,EACJ,GAAPoqK,GAEJN,EAAW36I,GAAGpmB,IAAK,EAAGghK,EAAQ/pK,GAAK,GACnC8pK,EAAWh4G,OAAQk4G,EAAahqK,GAAK,EAAG,IAEtB,GAAPoqK,GAEXN,EAAW36I,GAAGpmB,IAAK,EAAG,EAAGghK,EAAQ/pK,IACjC8pK,EAAWh4G,OAAQ,EAAGk4G,EAAahqK,GAAK,KAIxC8pK,EAAW36I,GAAGpmB,IAAK,EAAGghK,EAAQ/pK,GAAK,GACnC8pK,EAAWh4G,OAAQ,EAAG,EAAGk4G,EAAahqK,KAIvCypK,GAAcf,EACb0B,EAAMvD,GAAU7mK,EAAI,EAAI6mK,GAAW,EAAGA,GAAUA,IACjDjrF,EAASM,gBAAiBwsF,GAC1B9sF,EAASO,OAAQN,EAAOiuF,GAIzBluF,EAAS8S,YAAcA,EACvB9S,EAAS8oB,eAAiBA,EAC1B9oB,EAASiS,cAAe25E,GAAaj6E,GAItCm8E,iBAAkBhjH,EAASgiH,GAE1B,MAAM9sF,EAAWz7E,KAAKutG,UAEjBhnD,EAAQg2B,cAEgB,MAAvBv8E,KAAKmoK,iBAETnoK,KAAKmoK,eAAiBe,MAMM,MAAxBlpK,KAAKkoK,kBAETloK,KAAKkoK,gBAAkBkB,MAMzB,MAAMrqG,EAAWxY,EAAQg2B,cAAgBv8E,KAAKmoK,eAAiBnoK,KAAKkoK,gBAC9DxrF,EAAO,IAAItH,GAAM6xF,GAAY,GAAKloG,GAElCwZ,EAAWxZ,EAASwZ,SAE1BA,EAAmB,OAAE54E,MAAQ4mD,EAEtBA,EAAQg2B,eAEdhE,EAAsB,UAAE54E,MAAMiJ,IAAK,EAAM29C,EAAQ7mC,MAAMpR,MAAO,EAAMi4C,EAAQ7mC,MAAMnR,QAInFgqE,EAA0B,cAAE54E,MAAQonK,GAAWxgH,EAAQ5D,UACvD41B,EAA2B,eAAE54E,MAAQonK,GAAWwB,EAAmBhiH,QAAQ5D,UAE3E2mH,GAAcf,EAAoB,EAAG,EAAG,EAAI7B,GAAU,EAAIA,IAE1DjrF,EAASM,gBAAiBwsF,GAC1B9sF,EAASO,OAAQU,EAAMsqF,IAIxB2B,YAAaJ,GAEZ,MAAM9sF,EAAWz7E,KAAKutG,UAChBpf,EAAY1S,EAAS0S,UAC3B1S,EAAS0S,WAAY,EAErB,IAAM,IAAItuF,EAAI,EAAGA,EAAI+mK,GAAY/mK,IAAO,CAEvC,MAAMyoK,EAAQjlK,KAAKyG,KAAMq9J,GAAStnK,GAAMsnK,GAAStnK,GAAMsnK,GAAStnK,EAAI,GAAMsnK,GAAStnK,EAAI,IAEjFioK,EAAWL,IAAmB5nK,EAAI,GAAM4nK,GAAgBnlK,QAE9DtC,KAAK0oK,MAAOH,EAAoB1oK,EAAI,EAAGA,EAAGyoK,EAAOR,GAIlDrsF,EAAS0S,UAAYA,EAWtBu6E,MAAOH,EAAoB2B,EAAOC,EAAQ7B,EAAOR,GAEhD,MAAMsC,EAAuBpqK,KAAK2nK,sBAElC3nK,KAAKqqK,UACJ9B,EACA6B,EACAF,EACAC,EACA7B,EACA,cACAR,GAED9nK,KAAKqqK,UACJD,EACA7B,EACA4B,EACAA,EACA7B,EACA,eACAR,GAIFuC,UAAWC,EAAUC,EAAWL,EAAOC,EAAQK,EAAcj0I,EAAWuxI,GAEvE,MAAMrsF,EAAWz7E,KAAKutG,UAChBk9D,EAAezqK,KAAK4nK,cAEP,gBAAdrxI,GAA6C,iBAAdA,GAEnC5pB,QAAQu1B,MACP,8DAKF,MAEMwoI,EAAW,IAAIt1F,GAAM6xF,GAAYkD,GAAUM,GAC3CE,EAAeF,EAAalyF,SAE5BqyF,EAAS1D,GAAWgD,GAAU,EAC9BW,EAAkBC,SAAUN,GAAiBnnK,KAAK6G,IAAO,EAAI0gK,GAAW,EAAIvnK,KAAK6G,GAAK,GACtF6gK,EAAcP,EAAeK,EAC7BjkH,EAAUkkH,SAAUN,GAAiB,EAAInnK,KAAK+pB,MARxB,EAQqD29I,GAAgBjE,GAE5FlgH,EAAUkgH,IAEdn6J,QAAQoK,KAAM,iBACbyzJ,kDACA5jH,2CAIF,MAAMihH,EAAU,GAChB,IAAIriK,EAAM,EAEV,IAAM,IAAI3F,EAAI,EAAGA,EAAIinK,KAAgBjnK,EAAI,CAExC,MAAMC,EAAID,EAAIkrK,EACRx5C,EAASluH,KAAK2nK,KAAOlrK,EAAIA,EAAI,GACnC+nK,EAAQvmK,KAAMiwH,GAEJ,GAAL1xH,EAEJ2F,GAAO+rH,EAEI1xH,EAAI+mD,IAEfphD,GAAO,EAAI+rH,GAMb,IAAM,IAAI1xH,EAAI,EAAGA,EAAIgoK,EAAQvlK,OAAQzC,IAEpCgoK,EAAShoK,GAAMgoK,EAAShoK,GAAM2F,EAI/BmlK,EAAuB,OAAEhrK,MAAQ2qK,EAAS/jH,QAC1CokH,EAAwB,QAAEhrK,MAAQinD,EAClC+jH,EAAwB,QAAEhrK,MAAQkoK,EAClC8C,EAA4B,YAAEhrK,MAAsB,gBAAd42B,EAEjCuxI,IAEJ6C,EAAyB,SAAEhrK,MAAQmoK,GAIpC6C,EAAuB,OAAEhrK,MAAQkrK,EACjCF,EAAuB,OAAEhrK,MApcX,EAoc6BuqK,EAC3CS,EAA8B,cAAEhrK,MAAQonK,GAAWuD,EAAS/jH,QAAQ5D,UACpEgoH,EAA+B,eAAEhrK,MAAQonK,GAAWuD,EAAS/jH,QAAQ5D,UAErE,MAAMsoH,EAAa/D,GAAWiD,GAI9Bb,GAAciB,EAHJ,EAAIlnK,KAAK2B,IAAK,EAAG0hK,GAAW,EAAIuE,IACnB,IAAXd,EAAe,EAAI,EAAIzD,IAAa,EAAIuE,GAAed,EAAStD,EAAoBsD,EA1clF,EADA,EA2c+G,GAE9F,EAAIc,EAAY,EAAIA,GACnDxvF,EAASM,gBAAiBwuF,GAC1B9uF,EAASO,OAAQ0uF,EAAU1D,KAM7B,SAASwC,GAAQjjH,GAEhB,YAAiBptC,IAAZotC,GAAyBA,EAAQzmB,OAASsR,KAExCmV,EAAQ5D,WAAavM,IAAkBmQ,EAAQ5D,WAAatM,IAAgBkQ,EAAQ5D,WAAarM,IAIzG,SAAS8wH,KAER,MAAMH,EAAa,GACbC,EAAY,GACZC,EAAU,GAEhB,IAAI+D,EAleW,EAoef,IAAM,IAAIrrK,EAAI,EAAGA,EAAI+mK,GAAY/mK,IAAO,CAEvC,MAAMsrK,EAAU9nK,KAAK0G,IAAK,EAAGmhK,GAC7BhE,EAAU5lK,KAAM6pK,GAChB,IAAI7C,EAAQ,EAAM6C,EAEbtrK,EAAIgnK,EAERyB,EAAQ3B,GAAiB9mK,EA5eZ,EADA,EA6eoC,GAEjC,GAALA,IAEXyoK,EAAQ,GAITnB,EAAQ7lK,KAAMgnK,GAEd,MAAM8C,EAAY,GAAQD,EAAU,GAC9BlmK,GAAQmmK,EAAY,EACpBpmK,EAAM,EAAIomK,EAAY,EACtB1pG,EAAM,CAAEz8D,EAAKA,EAAKD,EAAKC,EAAKD,EAAKA,EAAKC,EAAKA,EAAKD,EAAKA,EAAKC,EAAKD,GAE/DqmK,EAAY,EACZv/J,EAAW,EACXw/J,EAAe,EACfC,EAAS,EACTC,EAAgB,EAEhB7rJ,EAAW,IAAI+G,aAAc4kJ,EAAex/J,EAAWu/J,GACvD3mH,EAAK,IAAIh+B,aAAc6kJ,EAASz/J,EAAWu/J,GAC3Cn1F,EAAY,IAAIxvD,aAAc8kJ,EAAgB1/J,EAAWu/J,GAE/D,IAAM,IAAIn8F,EAAO,EAAGA,EAAOm8F,EAAWn8F,IAAU,CAE/C,MAAMpvE,EAAMovE,EAAO,EAAM,EAAI,EAAI,EAC3BnvE,EAAImvE,EAAO,EAAI,GAAM,EACrBu8F,EAAc,CACnB3rK,EAAGC,EAAG,EACND,EAAI,EAAI,EAAGC,EAAG,EACdD,EAAI,EAAI,EAAGC,EAAI,EAAG,EAClBD,EAAGC,EAAG,EACND,EAAI,EAAI,EAAGC,EAAI,EAAG,EAClBD,EAAGC,EAAI,EAAG,GAEX4f,EAAS/W,IAAK6iK,EAAaH,EAAex/J,EAAWojE,GACrDxqB,EAAG97C,IAAK84D,EAAK6pG,EAASz/J,EAAWojE,GACjC,MAAM7qD,EAAO,CAAE6qD,EAAMA,EAAMA,EAAMA,EAAMA,EAAMA,GAC7CgH,EAAUttE,IAAKyb,EAAMmnJ,EAAgB1/J,EAAWojE,GAIjD,MAAMgO,EAAS,IAAIxM,GACnBwM,EAAO3+D,aAAc,WAAY,IAAIktD,GAAiB9rD,EAAU2rJ,IAChEpuF,EAAO3+D,aAAc,KAAM,IAAIktD,GAAiB/mB,EAAI6mH,IACpDruF,EAAO3+D,aAAc,YAAa,IAAIktD,GAAiByK,EAAWs1F,IAClEvE,EAAW3lK,KAAM47E,GAEZguF,EA/hBS,GAiiBbA,IAMF,MAAO,CAAEjE,WAAAA,EAAYC,UAAAA,EAAWC,QAAAA,GAIjC,SAASsC,GAAqBvhK,GAE7B,MAAMqgK,EAAqB,IAAIniH,GAAmB,EAAIsgH,GAAU,EAAIA,GAAUx+J,GAI9E,OAHAqgK,EAAmBhiH,QAAQpE,QAAU9R,GACrCk4H,EAAmBhiH,QAAQh3B,KAAO,eAClCg5I,EAAmBjiH,aAAc,EAC1BiiH,EAIR,SAASe,GAAcpwH,EAAQp5C,EAAGC,EAAGuO,EAAOC,GAE3C2qC,EAAO9xB,SAASxe,IAAK9I,EAAGC,EAAGuO,EAAOC,GAClC2qC,EAAOmN,QAAQz9C,IAAK9I,EAAGC,EAAGuO,EAAOC,GAwGlC,SAAS66J,KA8DR,OA3DuB,IAAI3gC,GAAmB,CAE7Cl5G,KAAM,0BAENgpD,SAAU,CACT,OAAU,CAAE54E,MAAO,MACnB,UAAa,CAAEA,MAPC,IAAIq8C,GAAS,EAAG,IAQhC,cAAiB,CAAEr8C,MAAOonK,GAAW3wH,KACrC,eAAkB,CAAEz2C,MAAOonK,GAAW3wH,MAGvCwiC,aAAcmvF,KAEdlvF,eAA0B,uLAUtBmvF,63BA8BJviG,SAAUh4B,EACV44B,WAAW,EACXC,YAAY,IAQd,SAAS4iG,KAwCR,OAtCuB,IAAIzgC,GAAmB,CAE7Cl5G,KAAM,kBAENgpD,SAAU,CACT,OAAU,CAAE54E,MAAO,MACnB,cAAiB,CAAEA,MAAOonK,GAAW3wH,KACrC,eAAkB,CAAEz2C,MAAOonK,GAAW3wH,MAGvCwiC,aAAcmvF,KAEdlvF,eAA0B,0JAStBmvF,mSAWJviG,SAAUh4B,EACV44B,WAAW,EACXC,YAAY,IAQd,SAASyhG,KAER,MAAiB,+rCA6DlB,SAASC,KAER,MAAiB,29CAoFlB,SAAS0D,GAAOnqK,EAAGC,EAAGC,EAAG4S,EAAGmjB,EAAQra,EAAOgoD,GAG1C,OADAx4D,QAAQoK,KAAM,wEACP,IAAImuD,GAAO3jE,EAAGC,EAAGC,EAAG+1B,EAAQra,EAAOgoD,GAI3C,MAAMwmG,GAAY,EACZC,GAAa,EACbC,GAAW,EACXC,GAAa,EACbC,GAAe,EAErB,SAASC,GAAkBluG,GAG1B,OADAnxD,QAAQoK,KAAM,kEACP+mD,EAIR,SAASmuG,GAAenuG,EAAY,IAWnC,OATAnxD,QAAQoK,KAAM,+DACd+mD,EAAUqY,iBAAkB,EAC5BrY,EAAUA,UAAYA,EACtBA,EAAUn0D,MAAQ,WAEjB,OAAOm0D,EAAU1kB,SAIX0kB,EAIR,SAAS2jG,GAAYjzG,EAAUuQ,GAG9B,OADApyD,QAAQoK,KAAM,sDACP,IAAIs9G,GAAQ7lE,EAAUuQ,GAI9B,SAASmtG,GAAUntG,GAGlB,OADApyD,QAAQoK,KAAM,oDACP,IAAIg5G,GAAQhxD,GAIpB,SAASotG,GAAgB39G,EAAUuQ,GAGlC,OADApyD,QAAQoK,KAAM,0DACP,IAAIs9G,GAAQ7lE,EAAUuQ,GAI9B,SAASqtG,GAAoB3tG,GAG5B,OADA9xD,QAAQoK,KAAM,sEACP,IAAI6vF,GAAgBnoC,GAI5B,SAAS4tG,GAAuB5tG,GAG/B,OADA9xD,QAAQoK,KAAM,yEACP,IAAI6vF,GAAgBnoC,GAI5B,SAAS6tG,GAAwB7tG,GAGhC,OADA9xD,QAAQoK,KAAM,0EACP,IAAI6vF,GAAgBnoC,GAI5B,SAASn2D,GAAQxI,EAAGC,EAAGI,GAGtB,OADAwM,QAAQoK,KAAM,6DACP,IAAI4zC,GAAS7qD,EAAGC,EAAGI,GAM3B,SAASosK,GAAwBpzH,EAAOuyB,GAGvC,OADA/+D,QAAQoK,KAAM,8HACP,IAAI00D,GAAiBtyB,EAAOuyB,GAAWwB,SAAUj1B,IAIzD,SAASu0H,GAAerzH,EAAOuyB,GAG9B,OADA/+D,QAAQoK,KAAM,sFACP,IAAI+0D,GAAqB3yB,EAAOuyB,GAIxC,SAAS+gG,GAAgBtzH,EAAOuyB,GAG/B,OADA/+D,QAAQoK,KAAM,wFACP,IAAIi1D,GAAsB7yB,EAAOuyB,GAIzC,SAASghG,GAAuBvzH,EAAOuyB,GAGtC,OADA/+D,QAAQoK,KAAM,sGACP,IAAIm1D,GAA6B/yB,EAAOuyB,GAIhD,SAASihG,GAAgBxzH,EAAOuyB,GAG/B,OADA/+D,QAAQoK,KAAM,wFACP,IAAIq1D,GAAsBjzB,EAAOuyB,GAIzC,SAASkhG,GAAiBzzH,EAAOuyB,GAGhC,OADA/+D,QAAQoK,KAAM,0FACP,IAAIu1D,GAAuBnzB,EAAOuyB,GAI1C,SAASmhG,GAAgB1zH,EAAOuyB,GAG/B,OADA/+D,QAAQoK,KAAM,wFACP,IAAIy1D,GAAsBrzB,EAAOuyB,GAIzC,SAASohG,GAAiB3zH,EAAOuyB,GAGhC,OADA/+D,QAAQoK,KAAM,0FACP,IAAI21D,GAAuBvzB,EAAOuyB,GAI1C,SAASqhG,GAAkB5zH,EAAOuyB,GAGjC,OADA/+D,QAAQoK,KAAM,4FACP,IAAI81D,GAAwB1zB,EAAOuyB,GAI3C,SAASshG,GAAkB7zH,EAAOuyB,GAGjC,OADA/+D,QAAQoK,KAAM,4FACP,IAAI+1D,GAAwB3zB,EAAOuyB,GA8E3C,SAASuhG,GAAoBz/G,GAE5B7gD,QAAQoK,KAAM,qFAEdkkI,GAAiB5hG,KAAMr5C,KAAMwtD,GAC7BxtD,KAAK8/B,KAAO,aACZ9/B,KAAKsnI,QAAS,EAQf,SAAS4lC,GAAc1/G,GAEtB7gD,QAAQoK,KAAM,+EAEdkkI,GAAiB5hG,KAAMr5C,KAAMwtD,GAC7BxtD,KAAK8/B,KAAO,aAQb,SAASqtI,GAAQ3/G,GAEhB7gD,QAAQoK,KAAM,sEAEdkkI,GAAiB5hG,KAAMr5C,KAAMwtD,GAC7BxtD,KAAK8/B,KAAO,aA4Bb,SAASstI,GAAYxtJ,GAGpB,OADAjT,QAAQoK,KAAM,0DACP,IAAIsvJ,GAAYzmJ,GAIxB,SAASytJ,GAAmBr/G,EAAQ7wC,GAGnC,OADAxQ,QAAQoK,KAAM,oFACP,IAAI2uJ,GAAW13G,EAAQ7wC,GAI/B,SAASmwJ,GAAat/G,EAAQqV,GAG7B,OADA12D,QAAQoK,KAAM,wEACP,IAAIg9G,GAAc,IAAIqI,GAAepuE,EAAOQ,UAAY,IAAIk4C,GAAmB,CAAEvpF,WAAehE,IAARkqD,EAAoBA,EAAM,YAgB1H,SAASkqG,GAAiBv/G,EAAQqV,GAGjC,OADA12D,QAAQoK,KAAM,gFACP,IAAIg9G,GAAc,IAAIiU,GAAmBh6E,EAAOQ,UAAY,IAAIk4C,GAAmB,CAAEvpF,WAAehE,IAARkqD,EAAoBA,EAAM,YAiC9H,SAASmqG,GAAWx4B,GAGnB,OADAroI,QAAQoK,KAAM,yDACP,IAAIi/H,GAAYhB,GAIxB,SAASy4B,GAAqBz4B,GAG7B,OADAroI,QAAQoK,KAAM,0EACP,IAAIs/H,GAAmBrB,GA07C/B,SAAS04B,GAAuBp/J,EAAOC,EAAQrD,GAG9C,OADAyB,QAAQoK,KAAM,wGACP,IAAIolE,GAAuB7tE,EAAOpD,GAhpD1CqrI,GAAM7yF,OAAS,SAAWiqH,EAAWz5J,GAQpC,OANAvH,QAAQC,IAAK,4CAEb+gK,EAAU90H,UAAYr5C,OAAOkkD,OAAQ6yF,GAAM19F,WAC3C80H,EAAU90H,UAAU3yC,YAAcynK,EAClCA,EAAU90H,UAAU3kC,SAAWA,EAExBy5J,GAMRnuK,OAAOo5C,OAAQkkG,GAAUjkG,UAAW,CAEnC+0H,qBAAsB,SAAW9zB,GAEhCntI,QAAQoK,KAAM,wHAId,MAAMwmH,EAAMv9H,KAAK65I,UAAWC,GAC5B,OAAO95I,KAAK6tK,eAAgBtwC,IAI7BuwC,2BAA4B,SAAWh0B,GAEtCntI,QAAQoK,KAAM,8HAId,MAAMwmH,EAAMv9H,KAAKi/H,gBAAiB6a,GAClC,OAAO95I,KAAK6tK,eAAgBtwC,IAI7BswC,eAAgB,SAAWrgH,GAE1B7gD,QAAQoK,KAAM,kHAEd,MAAMy3C,EAAW,IAAIgnE,GAErB,IAAM,IAAI31H,EAAI,EAAGwO,EAAIm/C,EAAOlrD,OAAQzC,EAAIwO,EAAGxO,IAAO,CAEjD,MAAMoQ,EAAQu9C,EAAQ3tD,GACtB2uD,EAAS1iD,SAASxK,KAAM,IAAIqpD,GAAS16C,EAAMnQ,EAAGmQ,EAAMlQ,EAAGkQ,EAAM9P,GAAK,IAInE,OAAOquD,KAQThvD,OAAOo5C,OAAQokG,GAAKnkG,UAAW,CAE9Bk1H,WAAY,SAAWvgH,GAGtB,OADA7gD,QAAQoK,KAAM,mEACP/W,KAAKutD,cAAeC,MAkB7By/G,GAAmBp0H,UAAYr5C,OAAOkkD,OAAQu3F,GAAiBpiG,WAa/Dq0H,GAAar0H,UAAYr5C,OAAOkkD,OAAQu3F,GAAiBpiG,WAazDs0H,GAAOt0H,UAAYr5C,OAAOkkD,OAAQu3F,GAAiBpiG,WAEnDr5C,OAAOo5C,OAAQu0H,GAAOt0H,UAAW,CAEhCm1H,cAAe,WAEdrhK,QAAQu1B,MAAO,qDAGhB+rI,sBAAuB,WAEtBthK,QAAQu1B,MAAO,6DAGhBgsI,yBAA0B,WAEzBvhK,QAAQu1B,MAAO,kEA6BjBiiI,GAAWtrH,UAAUs1H,UAAY,WAEhCxhK,QAAQu1B,MAAO,6FAIhBuhI,GAAe5qH,UAAU4P,OAAS,WAEjC97C,QAAQu1B,MAAO,iEAahB1iC,OAAOo5C,OAAQm8F,GAAOl8F,UAAW,CAEhCuoG,eAAgB,SAAW98F,GAG1B,OADA33C,QAAQoK,KAAM,wGACP+pI,GAAYM,eAAgB98F,MAMrCywF,GAAOq5B,SAAW,CAEjBnlK,IAAK,WAEJ0D,QAAQu1B,MAAO,4FAIhBtkB,IAAK,WAEJjR,QAAQu1B,MAAO,6FAsBjB1iC,OAAOo5C,OAAQ4pH,GAAK3pH,UAAW,CAE9BtuC,OAAQ,SAAWovI,GAGlB,OADAhtI,QAAQoK,KAAM,2DACP/W,KAAKyO,UAAWkrI,IAGxB00B,MAAO,WAGN,OADA1hK,QAAQoK,KAAM,wDACP/W,KAAKmuD,WAGbmgH,kBAAmB,SAAWpgH,GAG7B,OADAvhD,QAAQoK,KAAM,0EACP/W,KAAKgvD,cAAed,IAG5BtuC,KAAM,SAAW+5H,GAGhB,OADAhtI,QAAQoK,KAAM,uDACP/W,KAAKouD,QAASurF,MAKvBn6I,OAAOo5C,OAAQuU,GAAKtU,UAAW,CAE9BtuC,OAAQ,SAAWovI,GAGlB,OADAhtI,QAAQoK,KAAM,2DACP/W,KAAKyO,UAAWkrI,IAGxB00B,MAAO,WAGN,OADA1hK,QAAQoK,KAAM,wDACP/W,KAAKmuD,WAGbmgH,kBAAmB,SAAWpgH,GAG7B,OADAvhD,QAAQoK,KAAM,0EACP/W,KAAKgvD,cAAed,IAG5BqgH,qBAAsB,SAAWr/G,GAGhC,OADAviD,QAAQoK,KAAM,gFACP/W,KAAKivD,iBAAkBC,IAG/BtvC,KAAM,SAAW+5H,GAGhB,OADAhtI,QAAQoK,KAAM,uDACP/W,KAAKouD,QAASurF,MAKvBn6I,OAAOo5C,OAAQ8X,GAAO7X,UAAW,CAEhCw1H,MAAO,WAGN,OADA1hK,QAAQoK,KAAM,0DACP/W,KAAKmuD,aAMd4uB,GAAQlkC,UAAU21H,cAAgB,SAAW5rK,GAG5C,OADA+J,QAAQoK,KAAM,mFACP/W,KAAKo9E,wBAAyBx6E,IAItC+/J,GAAM9pH,UAAUtuC,OAAS,SAAWovI,GAGnC,OADAhtI,QAAQoK,KAAM,4DACP/W,KAAKyO,UAAWkrI,IAIxBn6I,OAAOo5C,OAAQY,GAAW,CAEzBi1H,SAAU,WAGT,OADA9hK,QAAQoK,KAAM,2EACP1T,KAAKiI,UAIbojK,kBAAmB,SAAW/uK,GAG7B,OADAgN,QAAQoK,KAAM,4EACPyiC,GAAU8B,gBAAiB37C,IAInCgvK,eAAgB,SAAWhvK,GAG1B,OADAgN,QAAQoK,KAAM,wEACPyiC,GAAU4B,eAAgBz7C,MAMnCH,OAAOo5C,OAAQoF,GAAQnF,UAAW,CAEjC+1H,qBAAsB,SAAWz1H,EAAOn9B,GAGvC,OADArP,QAAQoK,KAAM,uFACP/W,KAAK09C,QAASvE,EAAOn9B,IAG7B6yJ,gBAAiB,SAAW9wI,GAG3B,OADApxB,QAAQoK,KAAM,kGACPgnB,EAAO6e,aAAc58C,OAG7B8uK,qBAAsB,WAErBniK,QAAQu1B,MAAO,6DAGhB6sI,uBAAwB,SAAWnxH,GAGlC,OADAjxC,QAAQoK,KAAM,4GACP6mC,EAAUhB,aAAc58C,OAGhCgvK,oBAAqB,WAEpBriK,QAAQu1B,MAAO,4DAGhB+sI,WAAY,SAAWztH,GAGtB,OADA70C,QAAQoK,KAAM,kGACP/W,KAAK8iB,KAAM0+B,GAASf,YAM7BjhD,OAAOo5C,OAAQsb,GAAQrb,UAAW,CAEjCq2H,gBAAiB,SAAWtsK,GAG3B,OADA+J,QAAQoK,KAAM,0EACP/W,KAAK00D,aAAc9xD,IAG3BgsK,qBAAsB,SAAWz1H,EAAOn9B,GAGvC,OADArP,QAAQoK,KAAM,uFACP/W,KAAK09C,QAASvE,EAAOn9B,IAG7BmzJ,YAAa,WAGZ,OADAxiK,QAAQoK,KAAM,yGACP,IAAI4zC,IAAUsC,oBAAqBjtD,KAAM,IAGjD+7D,0BAA2B,SAAWx4D,GAGrC,OADAoJ,QAAQoK,KAAM,kGACP/W,KAAKy1D,2BAA4BlyD,IAGzC6rK,gBAAiB,WAEhBziK,QAAQoK,KAAM,wDAGf83J,gBAAiB,SAAW9wI,GAG3B,OADApxB,QAAQoK,KAAM,kGACPgnB,EAAO+mB,aAAc9kD,OAG7BqvK,gBAAiB,SAAWtxI,GAG3B,OADApxB,QAAQoK,KAAM,kGACPgnB,EAAO+mB,aAAc9kD,OAG7B8uK,qBAAsB,WAErBniK,QAAQu1B,MAAO,6DAGhBotI,WAAY,SAAWj/J,GAEtB1D,QAAQoK,KAAM,oGACd1G,EAAE27C,mBAAoBhsD,OAGvBuvK,YAAa,SAAWxxI,GAGvB,OADApxB,QAAQoK,KAAM,8FACPgnB,EAAO+mB,aAAc9kD,OAG7BuS,UAAW,WAEV5F,QAAQu1B,MAAO,kDAGhBg6B,QAAS,WAERvvD,QAAQu1B,MAAO,gDAGhBi6B,QAAS,WAERxvD,QAAQu1B,MAAO,gDAGhBk6B,QAAS,WAERzvD,QAAQu1B,MAAO,gDAGhBstI,aAAc,WAEb7iK,QAAQu1B,MAAO,qDAGhB6sI,uBAAwB,SAAWnxH,GAGlC,OADAjxC,QAAQoK,KAAM,4GACP6mC,EAAUkH,aAAc9kD,OAGhCgvK,oBAAqB,WAEpBriK,QAAQu1B,MAAO,4DAGhButI,YAAa,SAAWjxI,EAAM25B,EAAOC,EAAQ35B,EAAK45B,EAAMC,GAGvD,OADA3rD,QAAQoK,KAAM,wHACP/W,KAAKk4D,gBAAiB15B,EAAM25B,EAAO15B,EAAK25B,EAAQC,EAAMC,IAG9D22G,WAAY,SAAWztH,GAGtB,OADA70C,QAAQoK,KAAM,kGACP/W,KAAK8iB,KAAM0+B,GAASf,YAM7B+e,GAAM3mB,UAAU62H,mBAAqB,SAAWpgK,GAG/C,OADA3C,QAAQoK,KAAM,6EACP/W,KAAKggE,eAAgB1wD,IAI7B9P,OAAOo5C,OAAQmO,GAAWlO,UAAW,CAEpCg2H,gBAAiB,SAAW9wI,GAG3B,OADApxB,QAAQoK,KAAM,mHACPgnB,EAAO+sB,gBAAiB9qD,OAGhC4Q,QAAS,WAGR,OADAjE,QAAQoK,KAAM,8DACP/W,KAAKygD,YAMdjhD,OAAOo5C,OAAQ4Y,GAAI3Y,UAAW,CAE7By1H,kBAAmB,SAAWpgH,GAG7B,OADAvhD,QAAQoK,KAAM,yEACP/W,KAAKgvD,cAAed,IAG5ByhH,oBAAqB,SAAWtgH,GAG/B,OADA1iD,QAAQoK,KAAM,6EACP/W,KAAKovD,gBAAiBC,IAG9Bk/G,qBAAsB,SAAWr/G,GAGhC,OADAviD,QAAQoK,KAAM,+EACP/W,KAAKivD,iBAAkBC,MAMhC1vD,OAAOo5C,OAAQzvB,GAAS0vB,UAAW,CAElCj6C,KAAM,WAGL,OADA+N,QAAQoK,KAAM,2DACP/W,KAAKqpB,WAGbumJ,mBAAoB,SAAW3/J,EAAOipC,GAGrC,OADAvsC,QAAQoK,KAAM,8EACP/W,KAAKwhE,aAAcvxD,EAAOipC,IAGlC22H,SAAU,SAAW32H,GAGpB,OADAvsC,QAAQoK,KAAM,mEACP/W,KAAKiiE,YAAa/oB,IAG1B1hB,OAAQ,SAAW0hB,GAGlB,OADAvsC,QAAQoK,KAAM,+DACP/W,KAAKkiE,UAAWhpB,IAGxBmW,MAAO,SAAWnW,GAGjB,OADAvsC,QAAQoK,KAAM,6DACP/W,KAAKmiE,SAAUjpB,MAMxB15C,OAAOo5C,OAAQzvB,GAAU,CAExBymJ,mBAAoB,SAAW3/J,EAAO1O,EAAGC,EAAGC,EAAGy3C,GAG9C,OADAvsC,QAAQoK,KAAM,8EACPoS,GAASq4C,aAAcvxD,EAAO1O,EAAGC,EAAGC,EAAGy3C,IAG/C1hB,OAAQ,SAAWj2B,EAAGC,EAAGC,EAAGy3C,GAG3B,OADAvsC,QAAQoK,KAAM,+DACPoS,GAAS+4C,UAAW3gE,EAAGC,EAAGC,EAAGy3C,MAMtC15C,OAAOo5C,OAAQskG,GAAMrkG,UAAW,CAE/Bi3H,iBAAkB,SAAWh2B,GAG5B,OADAntI,QAAQoK,KAAM,oFACP/W,KAAKo/H,cAAe0a,IAG5Bi2B,QAAS,SAAW7kK,GAGnB,OADAyB,QAAQoK,KAAM,4EACP,IAAIqsH,GAAiBpjI,KAAMkL,IAGnC8kK,aAAc,SAAW9kK,GAGxB,OADAyB,QAAQoK,KAAM,+EACP,IAAI0uH,GAAezlI,KAAMkL,MAMlC1L,OAAOo5C,OAAQoD,GAAQnD,UAAW,CAEjCo3H,cAAe,SAAWryH,EAAWzxC,EAAO6P,GAG3C,OADArP,QAAQoK,KAAM,+EACP/W,KAAK29C,oBAAqBC,EAAWzxC,EAAO6P,IAGpDk0J,oBAAqB,SAAW7/J,GAG/B,OADA1D,QAAQoK,KAAM,qFACP/W,KAAKw9C,oBAAqBntC,IAGlC8/J,gBAAiB,WAGhB,OADAxjK,QAAQoK,KAAM,6EACP/W,KAAKq9C,qBAMd79C,OAAOo5C,OAAQ+R,GAAQ9R,UAAW,CAEjCu3H,2BAA4B,WAE3BzjK,QAAQu1B,MAAO,8GAGhBmuI,uBAAwB,WAEvB1jK,QAAQu1B,MAAO,sGAGhBouI,sBAAuB,SAAW1tK,GAGjC,OADA+J,QAAQoK,KAAM,yFACP/W,KAAK+sD,sBAAuBnqD,IAGpC2tK,mBAAoB,SAAW3tK,GAG9B,OADA+J,QAAQoK,KAAM,mFACP/W,KAAKgtD,mBAAoBpqD,IAGjC4tK,oBAAqB,SAAWrkK,EAAOq1C,GAGtC,OADA70C,QAAQoK,KAAM,qFACP/W,KAAKitD,oBAAqBzL,EAAQr1C,IAG1CskK,gBAAiB,SAAW7tK,GAG3B,OADA+J,QAAQoK,KAAM,uFACP/W,KAAK8kD,aAAcliD,IAG3BqtK,cAAe,SAAWryH,EAAWzxC,EAAO6P,GAG3C,OADArP,QAAQoK,KAAM,+EACP/W,KAAK29C,oBAAqBC,EAAWzxC,EAAO6P,IAGpDk0J,oBAAqB,SAAW7/J,GAG/B,OADA1D,QAAQoK,KAAM,qFACP/W,KAAKw9C,oBAAqBntC,IAGlC8/J,gBAAiB,WAGhB,OADAxjK,QAAQoK,KAAM,6EACP/W,KAAKq9C,qBAMd79C,OAAOo5C,OAAQ+L,GAAQ9L,UAAW,CAEjCo3H,cAAe,SAAWryH,EAAWzxC,EAAO6P,GAG3C,OADArP,QAAQoK,KAAM,+EACP/W,KAAK29C,oBAAqBC,EAAWzxC,EAAO6P,IAGpDm0J,gBAAiB,WAGhB,OADAxjK,QAAQoK,KAAM,6EACP/W,KAAKq9C,qBAQd79C,OAAOo5C,OAAQ48E,GAAS38E,UAAW,CAElC63H,gBAAiB,WAEhB/jK,QAAQu1B,MAAO,yDAGhBmxF,qBAAsB,WAErB1mH,QAAQu1B,MAAO,6GAGhByuI,YAAa,SAAWnvH,GAGvB,OADA70C,QAAQoK,KAAM,uEACP/W,KAAK8kD,aAActD,MAM5BhiD,OAAOo5C,OAAQ6hB,GAAS5hB,UAAW,CAElC+3H,eAAgB,SAAWrhJ,GAG1B,OADA5iB,QAAQoK,KAAM,6EACP/W,KAAKg9D,gBAAiBztC,IAG9BshJ,YAAa,WAEZlkK,QAAQoK,KAAM,8EAGfxE,UAAW,SAAW3I,EAAUgtB,GAG/B,OADAjqB,QAAQoK,KAAM,kGACP/W,KAAKq8D,gBAAiBzlC,EAAMhtB,IAGpCknK,iBAAkB,WAEjBnkK,QAAQu1B,MAAO,mHAGhByuI,YAAa,SAAWnvH,GAGvB,OADA70C,QAAQoK,KAAM,uEACP/W,KAAK8kD,aAActD,MAM5BhiD,OAAOo7D,iBAAkBH,GAAS5hB,UAAW,CAE5Ck4H,WAAY,CACXnzJ,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,uDACP/W,KAAKghB,SAAS0nB,OAGtB9/B,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,uDACd/W,KAAKghB,SAAS0nB,MAAQ/oC,IAIxBqxK,cAAe,CACdpzJ,IAAK,WAEJjR,QAAQoK,KAAM,kGAGfnO,IAAK,WAEJ+D,QAAQoK,KAAM,qGAOjBvX,OAAOo5C,OAAQw8B,GAAKv8B,UAAW,CAE9Bo4H,YAAa,WAEZtkK,QAAQu1B,MAAO,gMAMjB1iC,OAAOo7D,iBAAkBwa,GAAKv8B,UAAW,CAExCq4H,SAAU,CACTtzJ,IAAK,WAGJ,OADAjR,QAAQu1B,MAAO,oGACR+T,IAGRrtC,IAAK,WAEJ+D,QAAQu1B,MAAO,4LAOlB1iC,OAAOo7D,iBAAkBy1D,GAAIx3E,UAAW,CAEvCo0C,QAAS,CACRrvE,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,oDACP/W,KAAKuwH,WAOf/wH,OAAOC,eAAgBoyH,GAASh5E,UAAW,mBAAoB,CAE9Dj7B,IAAK,WAEJjR,QAAQoK,KAAM,uDAGfnO,IAAK,WAEJ+D,QAAQoK,KAAM,yDAMhBi6G,GAAYn4E,UAAUs4H,UAAY,WAEjCxkK,QAAQu1B,MAAO,qDAIhB1iC,OAAOC,eAAgB82I,GAAM19F,UAAW,uBAAwB,CAE/Dj7B,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,kEACP/W,KAAKw2I,oBAGb5tI,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,kEACd/W,KAAKw2I,mBAAqB72I,KAQ5B+5E,GAAkB7gC,UAAUu4H,QAAU,SAAWh3F,EAAaN,GAE7DntE,QAAQoK,KAAM,oHAGKoC,IAAd2gE,IAA0B95E,KAAK85E,UAAYA,GAChD95E,KAAKm6E,eAAgBC,IAMtB56E,OAAOo7D,iBAAkBuiF,GAAMtkG,UAAW,CACzCw4H,WAAY,CACXzoK,IAAK,WAEJ+D,QAAQoK,KAAM,gDAIhBu6J,gBAAiB,CAChB1oK,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,4DACd/W,KAAK6sF,OAAOnhC,OAAOiuB,IAAMh6E,IAI3B4xK,iBAAkB,CACjB3oK,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,8DACd/W,KAAK6sF,OAAOnhC,OAAOltB,KAAO7+B,IAI5B6xK,kBAAmB,CAClB5oK,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,gEACd/W,KAAK6sF,OAAOnhC,OAAOyM,MAAQx4D,IAI7B8xK,gBAAiB,CAChB7oK,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,4DACd/W,KAAK6sF,OAAOnhC,OAAOjtB,IAAM9+B,IAI3B+xK,mBAAoB,CACnB9oK,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,kEACd/W,KAAK6sF,OAAOnhC,OAAO0M,OAASz4D,IAI9BwrF,iBAAkB,CACjBviF,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,8DACd/W,KAAK6sF,OAAOnhC,OAAO2M,KAAO14D,IAI5ByrF,gBAAiB,CAChBxiF,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,4DACd/W,KAAK6sF,OAAOnhC,OAAO4M,IAAM34D,IAI3BgyK,oBAAqB,CACpB/oK,IAAK,WAEJ+D,QAAQoK,KAAM,oHAIhBqzE,WAAY,CACXxhF,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,iDACd/W,KAAK6sF,OAAO8e,KAAOhsG,IAIrBiyK,eAAgB,CACfhpK,IAAK,WAEJ+D,QAAQoK,KAAM,oDAIhB86J,eAAgB,CACfjpK,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,8DACd/W,KAAK6sF,OAAOgf,QAAQv9F,MAAQ3O,IAI9BmyK,gBAAiB,CAChBlpK,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,gEACd/W,KAAK6sF,OAAOgf,QAAQt9F,OAAS5O,MAQhCH,OAAOo7D,iBAAkB6Q,GAAgB5yB,UAAW,CAEnDv2C,OAAQ,CACPsb,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,2EACP/W,KAAKm5C,MAAM72C,SAIpByvK,QAAS,CACRn0J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,4EACP/W,KAAK4rE,QAAU3zB,IAGvBrvC,IAAK,WAEJ+D,QAAQoK,KAAM,4EACd/W,KAAKktE,SAAUj1B,QAOlBz4C,OAAOo5C,OAAQ6yB,GAAgB5yB,UAAW,CACzCm5H,WAAY,SAAWryK,GAItB,OAFAgN,QAAQoK,KAAM,sFACd/W,KAAKktE,UAAoB,IAAVvtE,EAAiBs4C,GAAmBD,IAC5Ch4C,MAGRiyK,iBAAkB,WAEjBtlK,QAAQu1B,MAAO,iEAGhBgwI,SAAU,WAETvlK,QAAQu1B,MAAO,8HAKjB1iC,OAAOo5C,OAAQ83B,GAAe73B,UAAW,CAExCs5H,SAAU,SAAWhmK,GAEpBQ,QAAQoK,KAAM,sEACd/W,KAAKixE,SAAU9kE,IAGhBimK,aAAc,SAAW7iJ,EAAMquB,GAI9B,OAFAjxC,QAAQoK,KAAM,8EAEL6mC,GAAaA,EAAUovB,mBAA2BpvB,GAAaA,EAAU6hC,6BAQpE,UAATlwD,GAEJ5iB,QAAQoK,KAAM,2EACd/W,KAAKixE,SAAUrzB,GAER59C,MAIDA,KAAKue,aAAcgR,EAAMquB,IAf/BjxC,QAAQoK,KAAM,0EAEP/W,KAAKue,aAAcgR,EAAM,IAAIk8C,GAAiBl5C,UAAW,GAAKA,UAAW,OAgBlF8/I,YAAa,SAAW7xK,EAAO8sD,EAAO83E,QAEhBjsH,IAAhBisH,GAEJz4H,QAAQoK,KAAM,wEAIfpK,QAAQoK,KAAM,4DACd/W,KAAKoxE,SAAU5wE,EAAO8sD,IAGvBglH,eAAgB,WAEf3lK,QAAQoK,KAAM,kEACd/W,KAAKqxE,eAGNq/F,gBAAiB,WAEhB/jK,QAAQoK,KAAM,+DAGfw7J,eAAgB,WAEf5lK,QAAQoK,KAAM,8DAGfy7J,gBAAiB,SAAWjjJ,GAI3B,OAFA5iB,QAAQoK,KAAM,oFAEP/W,KAAKkxE,gBAAiB3hD,IAG9BohJ,YAAa,SAAWnvH,GAGvB,OADA70C,QAAQoK,KAAM,6EACP/W,KAAK8kD,aAActD,MAM5BhiD,OAAOo7D,iBAAkB8V,GAAe73B,UAAW,CAElDmpG,UAAW,CACVpkI,IAAK,WAGJ,OADAjR,QAAQu1B,MAAO,iEACRliC,KAAKsuE,SAId2zE,QAAS,CACRrkI,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,+DACP/W,KAAKsuE,WAOf9uE,OAAOo7D,iBAAkB0mF,GAAwBzoG,UAAW,CAE3D45H,kBAAmB,CAClB70J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,yFACP/W,KAAKw3F,eAGb5uF,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,yFACd/W,KAAKw3F,cAAgB73F,MAOxBH,OAAOo7D,iBAAkB4mG,GAAU3oH,UAAW,CAE7C65H,cAAe,CACd90J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,4FACP/W,KAAKkI,OAAO4R,KAAKpM,WAGzB9E,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,4FACd/W,KAAKkI,OAAO4R,KAAKpM,UAAY/N,MAOhCH,OAAOo7D,iBAAkB6zD,GAAkB51E,UAAW,CAErDk5H,QAAS,CACRn0J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,6EACP/W,KAAK4rE,QAAU3zB,IAGvBrvC,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,6EACd/W,KAAKktE,SAAUvtE,OAOlBH,OAAOo5C,OAAQ61E,GAAkB51E,UAAW,CAC3Cm5H,WAAY,SAAWryK,GAItB,OAFAgN,QAAQoK,KAAM,wFACd/W,KAAKktE,UAAoB,IAAVvtE,EAAiBs4C,GAAmBD,IAC5Ch4C,MAGRkyK,SAAU,WAETvlK,QAAQu1B,MAAO,gIAOjB1iC,OAAOo5C,OAAQilF,GAAsBhlF,UAAW,CAE/C85H,UAAW,WAEVhmK,QAAQu1B,MAAO,gEAIhB0wI,aAAc,WAEbjmK,QAAQu1B,MAAO,mEAIhB67F,SAAU,WAETpxH,QAAQu1B,MAAO,iEAQjB1iC,OAAOo5C,OAAQ41E,GAAM31E,UAAW,CAE/B2L,QAAS,WAER73C,QAAQu1B,MAAO,gDAQjB1iC,OAAOo7D,iBAAkBymG,GAAQxoH,UAAW,CAE3Ck5H,QAAS,CACRnpK,IAAK,WAEJ+D,QAAQoK,KAAM,oFAIhBusC,SAAU,CACT3jD,MAAO,WAGN,OADAgN,QAAQoK,KAAM,qFACP/W,SASVR,OAAOo7D,iBAAkB2K,GAAS1sB,UAAW,CAE5Cg6H,WAAY,CACXj1J,IAAK,WAEJjR,QAAQoK,KAAM,kDAGfnO,IAAK,WAEJ+D,QAAQoK,KAAM,mDAKhB+7J,SAAU,CACTl1J,IAAK,WAEJjR,QAAQoK,KAAM,gDAGfnO,IAAK,WAEJ+D,QAAQoK,KAAM,iDAKhBg8J,QAAS,CACRn1J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,8CACP,IAAI8xB,KAKb+3G,QAAS,CACRhjI,IAAK,WAEJjR,QAAQu1B,MAAO,SAAWliC,KAAK8/B,KAAO,uEAGvCl3B,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,SAAW/W,KAAK8/B,KAAO,sEACrC9/B,KAAK2lE,YAAgBhmE,IAAU4tC,IAKjCklE,YAAa,CACZ70F,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,SAAW/W,KAAK8/B,KAAO,kEAC9B9/B,KAAK0mE,iBAGb99D,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,SAAW/W,KAAK8/B,KAAO,kEACrC9/B,KAAK0mE,gBAAkB/mE,MAO1BH,OAAOo7D,iBAAkByrC,GAAkBxtD,UAAW,CAErDm6H,MAAO,CACNp1J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,8FACP,GAGRnO,IAAK,WAEJ+D,QAAQoK,KAAM,gGAOjBvX,OAAOo7D,iBAAkB4rC,GAAqB3tD,UAAW,CAExDo6H,aAAc,CACbr1J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,gFACP/W,KAAK64F,cAGbjwF,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,gFACd/W,KAAK64F,aAAel5F,MAOvBH,OAAOo7D,iBAAkB8d,GAAe7/B,UAAW,CAElDogC,YAAa,CACZr7D,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,iFACP/W,KAAKg5E,WAAWC,aAGxBrwE,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,kFACd/W,KAAKg5E,WAAWC,YAAct5E,MASjCH,OAAOo5C,OAAQwqE,GAAcvqE,UAAW,CAEvCq6H,YAAa,SAAWj4F,EAAc99D,EAAOw5D,EAAOiG,GAEnDjwE,QAAQoK,KAAM,yGACd/W,KAAK+7E,gBAAiBd,GACtBj7E,KAAKgf,MAAO7B,EAAOw5D,EAAOiG,IAG3Bu2F,QAAS,SAAWhiJ,GAEnBxkB,QAAQoK,KAAM,+DACd/W,KAAKk/E,iBAAkB/tD,IAGxBiiJ,uBAAwB,WAGvB,OADAzmK,QAAQoK,KAAM,6EACP/W,KAAK87E,mBAGb8X,iBAAkB,WAGjB,OADAjnF,QAAQoK,KAAM,qFACP/W,KAAKq/E,aAAauU,oBAG1By/E,aAAc,WAGb,OADA1mK,QAAQoK,KAAM,wEACP/W,KAAKq/E,aAAajY,WAG1BksG,aAAc,WAGb,OADA3mK,QAAQoK,KAAM,+DACP/W,KAAKgtF,MAAMkD,SAGnBqjF,sBAAuB,WAGtB,OADA5mK,QAAQoK,KAAM,gGACP/W,KAAKg5E,WAAWp7D,IAAK,sBAG7B41J,0BAA2B,WAG1B,OADA7mK,QAAQoK,KAAM,yGACP/W,KAAKg5E,WAAWp7D,IAAK,2BAG7B61J,4BAA6B,WAG5B,OADA9mK,QAAQoK,KAAM,6GACP/W,KAAKg5E,WAAWp7D,IAAK,6BAG7B81J,8BAA+B,WAG9B,OADA/mK,QAAQoK,KAAM,oHACP/W,KAAKg5E,WAAWp7D,IAAK,kCAG7B+1J,+BAAgC,WAG/B,OADAhnK,QAAQoK,KAAM,sHACP/W,KAAKg5E,WAAWp7D,IAAK,mCAG7Bg2J,oBAAqB,WAGpB,OADAjnK,QAAQoK,KAAM,6FACP/W,KAAKg5E,WAAWp7D,IAAK,qBAG7B0lF,uBAAwB,WAGvB,OADA32F,QAAQoK,KAAM,uFACP/W,KAAKq/E,aAAaqU,gBAG1BmgF,wBAAyB,WAGxB,OADAlnK,QAAQoK,KAAM,uGACP/W,KAAKg5E,WAAWp7D,IAAK,2BAG7Bk2J,kBAAmB,SAAW7rD,GAE7Bt7G,QAAQoK,KAAM,uEACd/W,KAAKswG,eAAgB2X,IAGtB4B,aAAc,WAEbl9G,QAAQoK,KAAM,2DAGfg9J,aAAc,WAEbpnK,QAAQoK,KAAM,2DAGfi9J,cAAe,WAEdrnK,QAAQoK,KAAM,4DAGfk9J,gBAAiB,WAEhBtnK,QAAQoK,KAAM,8DAGfm9J,eAAgB,WAEfvnK,QAAQoK,KAAM,6DAGfo9J,iBAAkB,WAEjBxnK,QAAQoK,KAAM,+DAGfq9J,WAAY,WAEXznK,QAAQoK,KAAM,yDAGfshG,aAAc,WAEb1rG,QAAQoK,KAAM,2DAGf2hG,eAAgB,WAEf/rG,QAAQoK,KAAM,6DAGfs9J,qBAAsB,WAGrB,OADA1nK,QAAQoK,KAAM,gFACP/W,KAAKkwG,0BAMd1wG,OAAOo7D,iBAAkBwoD,GAAcvqE,UAAW,CAEjDmrD,iBAAkB,CACjBpmF,IAAK,WAEJ,OAAO5d,KAAKgoG,UAAUntB,SAGvBjyE,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,qEACd/W,KAAKgoG,UAAUntB,QAAUl7E,IAI3B2hG,cAAe,CACd1jF,IAAK,WAEJ,OAAO5d,KAAKgoG,UAAUloE,MAGvBl3B,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,+DACd/W,KAAKgoG,UAAUloE,KAAOngC,IAIxB20K,kBAAmB,CAClB12J,IAAK,WAEJjR,QAAQoK,KAAM,+FAIfnO,IAAK,WAEJ+D,QAAQoK,KAAM,gGAIhBwM,QAAS,CACR3F,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,8EACP/W,KAAKo+B,eAIdm2I,GAAI,CACH32J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,oDACP/W,KAAK47E,KAId44F,WAAY,CACX52J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,mHACP,GAGRnO,IAAK,WAEJ+D,QAAQoK,KAAM,oHAIhB09J,YAAa,CACZ72J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,kGACP,GAGRnO,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,iGACd/W,KAAKukG,gBAA6B,IAAV5kG,EAAmB02C,GAAeD,KAI5Ds+H,sBAAuB,CACtB92J,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,iEACP,GAGRnO,IAAK,WAEJ+D,QAAQoK,KAAM,qEAOjBvX,OAAOo7D,iBAAkB0yC,GAAez0D,UAAW,CAElDq8D,SAAU,CACTt3F,IAAK,WAEJjR,QAAQoK,KAAM,gGAIfnO,IAAK,WAEJ+D,QAAQoK,KAAM,iGAIhB49J,mBAAoB,CACnB/2J,IAAK,WAEJjR,QAAQoK,KAAM,0GAIfnO,IAAK,WAEJ+D,QAAQoK,KAAM,2GAIhB69J,kBAAmB,CAClBh3J,IAAK,WAEJjR,QAAQoK,KAAM,yGAIfnO,IAAK,WAEJ+D,QAAQoK,KAAM,4GAgBjBvX,OAAOo7D,iBAAkBxU,GAAkBvN,UAAW,CAErDwJ,MAAO,CACNzkC,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,0DACP/W,KAAKumD,QAAQlE,OAGrBz5C,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,0DACd/W,KAAKumD,QAAQlE,MAAQ1iD,IAIvB2iD,MAAO,CACN1kC,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,0DACP/W,KAAKumD,QAAQjE,OAGrB15C,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,0DACd/W,KAAKumD,QAAQjE,MAAQ3iD,IAIvB4iD,UAAW,CACV3kC,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,kEACP/W,KAAKumD,QAAQhE,WAGrB35C,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,kEACd/W,KAAKumD,QAAQhE,UAAY5iD,IAI3B6iD,UAAW,CACV5kC,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,kEACP/W,KAAKumD,QAAQ/D,WAGrB55C,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,kEACd/W,KAAKumD,QAAQ/D,UAAY7iD,IAI3B+iD,WAAY,CACX9kC,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,oEACP/W,KAAKumD,QAAQ7D,YAGrB95C,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,oEACd/W,KAAKumD,QAAQ7D,WAAa/iD,IAI5Bqc,OAAQ,CACP4B,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,4DACP/W,KAAKumD,QAAQvqC,QAGrBpT,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,4DACd/W,KAAKumD,QAAQvqC,OAASrc,IAIxBojD,OAAQ,CACPnlC,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,4DACP/W,KAAKumD,QAAQxD,QAGrBn6C,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,4DACd/W,KAAKumD,QAAQxD,OAASpjD,IAIxB8iD,OAAQ,CACP7kC,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,4DACP/W,KAAKumD,QAAQ9D,QAGrB75C,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,4DACd/W,KAAKumD,QAAQ9D,OAAS9iD,IAIxBmgC,KAAM,CACLliB,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,wDACP/W,KAAKumD,QAAQzmB,MAGrBl3B,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,wDACd/W,KAAKumD,QAAQzmB,KAAOngC,IAItBsjD,gBAAiB,CAChBrlC,IAAK,WAGJ,OADAjR,QAAQoK,KAAM,8EACP/W,KAAKumD,QAAQtD,iBAGrBr6C,IAAK,SAAWjJ,GAEfgN,QAAQoK,KAAM,8EACd/W,KAAKumD,QAAQtD,gBAAkBtjD,MASlCH,OAAOo7D,iBAAkB+wF,GAAM9yG,UAAW,CAEzCw8F,KAAM,CACL11I,MAAO,SAAW8zI,GAEjB9mI,QAAQoK,KAAM,0EACd,MAAMggE,EAAQ/2E,KAOd,OANoB,IAAIgoJ,IACZ3S,KAAM5B,GAAM,SAAWtoI,GAElC4rE,EAAMm2E,UAAW/hJ,MAGXnL,OAIT0wI,UAAW,CACV9nI,IAAK,WAEJ+D,QAAQoK,KAAM,sDAOjBi5I,GAAcn3G,UAAUg8H,QAAU,WAGjC,OADAloK,QAAQoK,KAAM,+DACP/W,KAAKswJ,oBAMbt1E,GAAWniC,UAAUi8H,cAAgB,SAAWr5F,EAAUC,GAGzD,OADA/uE,QAAQoK,KAAM,wDACP/W,KAAKyoD,OAAQgzB,EAAUC,IAI/BV,GAAWniC,UAAU75B,MAAQ,SAAWy8D,EAAUt+D,EAAOw5D,EAAOiG,GAG/D,OADAjwE,QAAQoK,KAAM,4DACP/W,KAAKi7E,aAAaj8D,MAAOy8D,EAAUt+D,EAAOw5D,EAAOiG,IAMzD,MAAMm4F,GAAgB,CAErB3hG,MAAO,SAAW4hG,EAAWnhG,EAAWyiD,GAGvC,IAAI90E,EADJ70C,QAAQoK,KAAM,mIAGT88D,EAAUvV,SAEduV,EAAU7wB,kBAAoB6wB,EAAUjwB,eAExCpC,EAASqyB,EAAUryB,OACnBqyB,EAAYA,EAAUrlB,UAIvBwmH,EAAU5hG,MAAOS,EAAWryB,EAAQ80E,IAIrC/rH,OAAQ,SAAWikD,GAGlB,OADA7hD,QAAQoK,KAAM,6FACPy3C,EAASjkD,WAoDlB,SAAS0qK,KAERtoK,QAAQu1B,MAAO,yCAMhB,SAASgzI,KAERvoK,QAAQu1B,MAAO,sCAxDhBwf,GAAWuzF,iBAAc97H,EAEzBuoC,GAAWu3F,YAAc,SAAW30F,EAAKnC,EAASwxF,EAAQE,GAEzDlnI,QAAQoK,KAAM,wFAEd,MAAM29H,EAAS,IAAI4B,GACnB5B,EAAOgB,eAAgB11I,KAAKi1I,aAE5B,MAAM1uF,EAAUmuF,EAAOW,KAAM/wF,EAAKqvF,OAAQx6H,EAAW06H,GAIrD,OAFK1xF,IAAUoE,EAAQpE,QAAUA,GAE1BoE,GAIR7E,GAAWyzH,gBAAkB,SAAW57B,EAAMp3F,EAASwxF,EAAQE,GAE9DlnI,QAAQoK,KAAM,gGAEd,MAAM29H,EAAS,IAAI0B,GACnB1B,EAAOgB,eAAgB11I,KAAKi1I,aAE5B,MAAM1uF,EAAUmuF,EAAOW,KAAMkE,EAAM5F,OAAQx6H,EAAW06H,GAItD,OAFK1xF,IAAUoE,EAAQpE,QAAUA,GAE1BoE,GAIR7E,GAAW0zH,sBAAwB,WAElCzoK,QAAQu1B,MAAO,0FAIhBwf,GAAW2zH,0BAA4B,WAEtC1oK,QAAQu1B,MAAO,8FAsBhB,MAAMozI,GAAa,CAElBC,0BAA2B,WAE1B5oK,QAAQu1B,MAAO,yEAIhBszI,OAAQ,WAEP7oK,QAAQu1B,MAAO,yEAIhB26B,OAAQ,WAEPlwD,QAAQu1B,MAAO,0EAQjB,SAASuzI,KAER9oK,QAAQu1B,MAAO,wEAImB,oBAAvBuqF,oBAGXA,mBAAmBxzE,cAAe,IAAIyzE,YAAa,WAAY,CAAEC,OAAQ,CACxE+oD,SAAUzpI,O,qECrvkDR0jB,EAAM,IAAI,EAAAhF,QACViF,EAAM,IAAI,EAAAjF,QACV4U,EAAgB,IAAI,EAAAvhB,QACpB23H,EAAQ,CAAE,IAAK,IAAK,KAExB,SAASC,EAAqB5nH,EAAQpuC,EAAMyjD,GAE3CrjE,KAAKguD,OAASA,EAEdhuD,KAAK4f,UAAkBzG,IAATyG,EAAuBA,EAAO,GAE5C,IAAIzC,OAAkBhE,IAARkqD,EAAsBA,EAAM,SAItCwyG,EAAW,EAEXC,EAAc91K,KAAKguD,OAAOQ,SAEzBsnH,GAAeA,EAAYlkG,WAE/BikG,EAAsC,EAA3BC,EAAY7mG,MAAM3sE,OAElBwzK,GAAeA,EAAY/kG,mBAEtC8kG,EAAWC,EAAYnlG,WAAWn5C,OAAO81B,OAM1C,IAAIkB,EAAW,IAAI,EAAAkiB,eAEfgB,EAAY,IAAI,EAAA7E,uBAAmC,EAAXgpG,EAAe,EAAG,GAE9DrnH,EAASjwC,aAAc,WAAYmzD,GAEnC,EAAAqiD,aAAA,KAAmB/zH,KAAMwuD,EAAU,IAAI,EAAAk4C,kBAAmB,CAAEvpF,MAAOA,EAAOwqD,YAAY,KAEtF3nE,KAAK8/B,KAAO,sBAIZ9/B,KAAKgjD,kBAAmB,EAExBhjD,KAAKyoD,SAINmtH,EAAoB/8H,UAAYr5C,OAAOkkD,OAAQ,EAAAqwE,aAAA,WAC/C6hD,EAAoB/8H,UAAU3yC,YAAc0vK,EAE5CA,EAAoB/8H,UAAU4P,OAAS,WAEtCzoD,KAAKguD,OAAOyP,mBAAmB,GAE/B8B,EAAcve,gBAAiBhhD,KAAKguD,OAAOjC,aAE3C,IAAIA,EAAc/rD,KAAKguD,OAAOjC,YAE1BpsC,EAAW3f,KAAKwuD,SAASmiB,WAAWhxD,SAIpCm2J,EAAc91K,KAAKguD,OAAOQ,SAE9B,GAAKsnH,GAAeA,EAAYlkG,WAQ/B,IANA,IAAI9lE,EAAWgqK,EAAYhqK,SAEvBmjE,EAAQ6mG,EAAY7mG,MAEpB0oD,EAAM,EAEA93H,EAAI,EAAGwO,EAAI4gE,EAAM3sE,OAAQzC,EAAIwO,EAAGxO,IAIzC,IAFA,IAAIqvE,EAAOD,EAAOpvE,GAER4F,EAAI,EAAG6sE,EAAKpD,EAAK9J,cAAc9iE,OAAQmD,EAAI6sE,EAAI7sE,IAAO,CAE/D,IAAIiB,EAASoF,EAAUojE,EAAMymG,EAAOlwK,KAEhC+xB,EAAS03C,EAAK9J,cAAe3/D,GAEjCkqD,EAAI7sC,KAAMpc,GAASo+C,aAAciH,GAEjC6D,EAAI9sC,KAAM0U,GAASolB,aAAc2iB,GAAgBrwD,YAAYtE,eAAgB5K,KAAK4f,MAAO3W,IAAK0mD,GAE9FhwC,EAASmuD,OAAQ6pD,EAAKhoE,EAAI7vD,EAAG6vD,EAAI5vD,EAAG4vD,EAAIxvD,GAExCw3H,GAAY,EAEZh4G,EAASmuD,OAAQ6pD,EAAK/nE,EAAI9vD,EAAG8vD,EAAI7vD,EAAG6vD,EAAIzvD,GAExCw3H,GAAY,OAMR,GAAKm+C,GAAeA,EAAY/kG,iBAEtC,KAAIglG,EAASD,EAAYnlG,WAAWhxD,SAEhCq2J,EAAUF,EAAYnlG,WAAWn5C,OAMrC,IAJImgG,EAAM,EAIAlyH,EAAI,EAAG6sE,EAAKyjG,EAAOzoH,MAAO7nD,EAAI6sE,EAAI7sE,IAE3CkqD,EAAI/mD,IAAKmtK,EAAOl4H,KAAMp4C,GAAKswK,EAAOj4H,KAAMr4C,GAAKswK,EAAO7vH,KAAMzgD,IAAMq/C,aAAciH,GAE9E6D,EAAIhnD,IAAKotK,EAAQn4H,KAAMp4C,GAAKuwK,EAAQl4H,KAAMr4C,GAAKuwK,EAAQ9vH,KAAMzgD,IAE7DmqD,EAAIhT,aAAc2iB,GAAgBrwD,YAAYtE,eAAgB5K,KAAK4f,MAAO3W,IAAK0mD,GAE/EhwC,EAASmuD,OAAQ6pD,EAAKhoE,EAAI7vD,EAAG6vD,EAAI5vD,EAAG4vD,EAAIxvD,GAExCw3H,GAAY,EAEZh4G,EAASmuD,OAAQ6pD,EAAK/nE,EAAI9vD,EAAG8vD,EAAI7vD,EAAG6vD,EAAIzvD,GAExCw3H,GAAY,EAMdh4G,EAAS4xD,aAAc,I,YCrIxB/xE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQu2K,qBAAkB,EAE1B,IAAIC,EAAQ,EAAQ,KAChBC,EAAqB,EAAQ,KAC7BC,EAAc,EAAQ,KACtBH,EAAiC,WACjC,SAASA,EAAgBI,EAAgBC,EAAgBC,GACrDv2K,KAAKq2K,eAAiBA,EACtBr2K,KAAKs2K,eAAiBA,EACtBt2K,KAAKu2K,WAAaA,EAClBv2K,KAAKw2K,cAAgB,GACrBx2K,KAAKy2K,mBAAqB,GAC1Bz2K,KAAK02K,SAAW,CAAC,IA+MrB,OA1MAT,EAAgBp9H,UAAU89H,UAAY,SAAUC,GAC5C52K,KAAK42K,gBAAkBA,EACvB52K,KAAK62K,WAAa72K,KAAKq2K,eAAepnG,MAAM2nG,GAC5C52K,KAAK82K,cAAgB92K,KAAKq2K,eAAejnG,cAAc,GAAGwnG,GAC1D52K,KAAK+2K,YAAc,GACnB/2K,KAAKk2H,YAAc,GACnBl2H,KAAKg3K,QAAU,IAGnBf,EAAgBp9H,UAAUo+H,QAAU,WAChC,IAAItjG,EAAU3zE,KAAK+2K,YAAYx9I,KAAI,SAAUptB,EAAOtM,GAChD,OAAOA,KAEXG,KAAK01H,QAAQ/hD,IAGjBsiG,EAAgBp9H,UAAUq+H,WAAa,WACnC,IAAI3yD,EAAQvkH,KACPA,KAAK02K,SAAS,GAAGp0K,SAGtB,EAAI6zK,EAAmBgB,gBAAgBn3K,KAAK02K,UACvCl5J,SAAQ,SAAUu5J,GACNxyD,EAAM8R,WAAW0gD,GACnBr2J,IAAI6jG,EAAMgyD,WAAW/+I,QAAU,IACtCu/I,EAAYvkK,UAEhB+xG,EAAMoyD,YACNpyD,EAAMwyD,YAAcA,EACpBxyD,EAAM0yD,YACPj3K,OAGPi2K,EAAgBp9H,UAAU5sC,UAAY,SAAU9F,GAC5CnG,KAAKo3K,MAAMjxK,GACXnG,KAAKq3K,UAAUlxK,GACf,IACImxK,EADAnrK,EAAQnM,KAAK62K,WAAW1wK,GAE5B,GAAInG,KAAKw2K,cAAcnvI,eAAel7B,GAClCmrK,EAAWt3K,KAAKw2K,cAAcrqK,OAE7B,CACD,IAAIzF,EAAS1G,KAAKq2K,eAAevqK,SAASK,GAC1CnM,KAAKs2K,eAAexqK,SAASxK,KAAKoF,GAClC4wK,EAAWt3K,KAAKs2K,eAAexqK,SAASxJ,OAAS,EACjDtC,KAAKw2K,cAAcrqK,GAASmrK,EAEhCt3K,KAAK+2K,YAAYz1K,KAAKg2K,IAG1BrB,EAAgBp9H,UAAU0+H,gBAAkB,SAAUjoE,EAAMC,EAAMioE,EAAWC,GACzE,IAAInqK,EAAIjK,KAAKC,IAAIk0K,IAAcn0K,KAAKC,IAAIk0K,GAAan0K,KAAKC,IAAIm0K,IAC9Dz3K,KAAK03K,kBAAkBpoE,EAAMC,EAAMjiG,GACnCtN,KAAK23K,sBAAsBroE,EAAMC,EAAMjiG,GACvC,IAGInB,EAHAi2H,EAASpiI,KAAK62K,WAAWvnE,GACzB+yB,EAASriI,KAAK62K,WAAWtnE,GACzBv7F,EAAKhU,KAAK43K,eAAex1C,EAAQC,GAErC,GAAIriI,KAAKy2K,mBAAmBpvI,eAAerzB,GACvC7H,EAAQnM,KAAKy2K,mBAAmBziK,OAE/B,CACD,IAAI6jK,EAAU73K,KAAKq2K,eAAevqK,SAASs2H,GACvC01C,EAAU93K,KAAKq2K,eAAevqK,SAASu2H,GACvC01C,EAAYF,EAAQluK,QAAQ0wC,KAAKy9H,EAASxqK,GAC9CtN,KAAKs2K,eAAexqK,SAASxK,KAAKy2K,GAClC5rK,EAAQnM,KAAKs2K,eAAexqK,SAASxJ,OAAS,EAC9CtC,KAAKy2K,mBAAmBziK,GAAM7H,EAElCnM,KAAK+2K,YAAYz1K,KAAK6K,GACtBnM,KAAKg4K,eAAe7rK,IAGxB8pK,EAAgBp9H,UAAUu+H,MAAQ,SAAUjxK,GACxC,GAAKnG,KAAK82K,cAAV,CAGA,IAAI3qK,EAAQnM,KAAKi4K,SAAS9xK,GACtBu+C,EAAK1kD,KAAK82K,cAAc3qK,GAC5BnM,KAAKg3K,QAAQ11K,KAAKojD,KAGtBuxH,EAAgBp9H,UAAU6+H,kBAAoB,SAAUpoE,EAAMC,EAAMjiG,GAChE,GAAKtN,KAAK82K,cAAV,CAGA,IAAI10C,EAASpiI,KAAKi4K,SAAS3oE,GACvB+yB,EAASriI,KAAKi4K,SAAS1oE,GACvBgsB,EAAMv7H,KAAK82K,cAAc10C,GACzB5G,EAAMx7H,KAAK82K,cAAcz0C,GACzB39E,EAAK62E,EAAI5xH,QAAQ0wC,KAAKmhF,EAAKluH,GAC/BtN,KAAKg3K,QAAQ11K,KAAKojD,KAGtBuxH,EAAgBp9H,UAAUw+H,UAAY,SAAUlxK,GAC5C,GAAKnG,KAAK62K,WAAWzxG,cAAc9iE,OAAnC,CAGA,IAAI6J,EAAQnM,KAAKi4K,SAAS9xK,GACtBqxB,EAASx3B,KAAK62K,WAAWzxG,cAAcj5D,GAC3CnM,KAAKk2H,YAAY50H,KAAKk2B,KAG1By+I,EAAgBp9H,UAAU8+H,sBAAwB,SAAUroE,EAAMC,EAAMjiG,GACpE,GAAKtN,KAAK62K,WAAWzxG,cAAc9iE,OAAnC,CAGA,IAAI8/H,EAASpiI,KAAKi4K,SAAS3oE,GACvB+yB,EAASriI,KAAKi4K,SAAS1oE,GACvB2oE,EAAUl4K,KAAK62K,WAAWzxG,cAAcg9D,GACxC+1C,EAAUn4K,KAAK62K,WAAWzxG,cAAci9D,GACxC7qG,EAAS0gJ,EAAQvuK,QAAQ0wC,KAAK89H,EAAS7qK,GAAG4B,YAC9ClP,KAAKk2H,YAAY50H,KAAKk2B,KAG1By+I,EAAgBp9H,UAAU68E,QAAU,SAAU/hD,GAC1C,IAAI4wC,EAAQvkH,KACZ,GAAuB,IAAnB2zE,EAAQrxE,OAAZ,CAKA,IADA,IAAI81K,EAAQ,GACHv4K,EAAI,EAAGA,EAAI8zE,EAAQrxE,OAAQzC,IAChC,IAAK,IAAI4F,EAAI5F,EAAI,EAAG4F,EAAIkuE,EAAQrxE,OAAQmD,IAAK,CACzC,IAAI4J,EAAOhM,KAAKC,IAAIzD,EAAI4F,GACpB4J,EAAO,GAAKA,EAAOskE,EAAQrxE,OAAS,GACpC81K,EAAM92K,KAAK,CAACqyE,EAAQ9zE,GAAI8zE,EAAQluE,KAI5C2yK,EAAM71K,KAAK,SAAW81K,EAAOC,GAGzB,OAFc/zD,EAAMg0D,eAAeF,EAAM,GAAIA,EAAM,IACrC9zD,EAAMg0D,eAAeD,EAAM,GAAIA,EAAM,KAEpDzlJ,KAAK7yB,OACR,IAAIuB,EAAIoyE,EAAQ1uD,QAAQmzJ,EAAM,GAAG,IAE7B52K,GADJmyE,EAAUA,EAAQv6B,MAAM73C,GAAGka,OAAOk4D,EAAQv6B,MAAM,EAAG73C,KACnC0jB,QAAQmzJ,EAAM,GAAG,IAC7BI,EAAW7kG,EAAQv6B,MAAM,EAAG53C,EAAI,GAChCi3K,EAAW9kG,EAAQv6B,MAAM53C,GAAGia,OAAOk4D,EAAQv6B,MAAM,EAAG,IACxDp5C,KAAK01H,QAAQ8iD,GACbx4K,KAAK01H,QAAQ+iD,QAvBTz4K,KAAK04K,YAAY/kG,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,KA0BzDsiG,EAAgBp9H,UAAU6/H,YAAc,SAAUn3K,EAAGC,EAAGC,GACpD,IAAI0sE,EAAU,KACVnuE,KAAKk2H,YAAY5zH,SACjB6rE,EAAU,CACNnuE,KAAKk2H,YAAY30H,GACjBvB,KAAKk2H,YAAY10H,GACjBxB,KAAKk2H,YAAYz0H,KAGzB,IAAIytE,EAAO,IAAIgnG,EAAMhxG,MAAMllE,KAAK+2K,YAAYx1K,GAAIvB,KAAK+2K,YAAYv1K,GAAIxB,KAAK+2K,YAAYt1K,GAAI0sE,GAC1FnuE,KAAKs2K,eAAernG,MAAM3tE,KAAK4tE,GAC1BlvE,KAAK82K,eAGV92K,KAAKs2K,eAAelnG,cAAc,GAAG9tE,KAAK,CACtCtB,KAAKg3K,QAAQz1K,GACbvB,KAAKg3K,QAAQx1K,GACbxB,KAAKg3K,QAAQv1K,MAIrBw0K,EAAgBp9H,UAAU0/H,eAAiB,SAAUh3K,EAAGC,GACpD,IAAI4gI,EAASpiI,KAAK+2K,YAAYx1K,GAC1B8gI,EAASriI,KAAK+2K,YAAYv1K,GAC1Bq2K,EAAU73K,KAAKs2K,eAAexqK,SAASs2H,GACvC01C,EAAU93K,KAAKs2K,eAAexqK,SAASu2H,GAC3C,OAAOw1C,EAAQt6H,kBAAkBu6H,IAGrC7B,EAAgBp9H,UAAU++H,eAAiB,SAAUx1C,EAAQC,GACzD,MAAO,CAACD,EAAQC,GAAQ9/H,OAAO6I,KAAK,MAGxC6qK,EAAgBp9H,UAAUo/H,SAAW,SAAU9xK,GAC3C,OAAOiwK,EAAYuC,UAAU1zJ,QAAQ9e,IAGzC8vK,EAAgBp9H,UAAUm/H,eAAiB,SAAU7rK,GACjD,IAAIysK,EAAY54K,KAAK02K,SAASp0K,OAAS,EACnC2lI,EAAOjoI,KAAK02K,SAASkC,GACrB3wC,EAAK3lI,OAAS,EACd2lI,EAAK3mI,KAAK6K,GAGVnM,KAAK02K,SAASp1K,KAAK,CAAC6K,KAI5B8pK,EAAgBp9H,UAAUw9E,WAAa,SAAU0gD,GAC7C,IAAIxyD,EAAQvkH,KACR8L,EAAWirK,EAAYx9I,IAAI,SAAWptB,GACtC,OAAOo4G,EAAM+xD,eAAexqK,SAASK,IACtC0mB,KAAK7yB,OACJ64K,EAAQ/sK,EAAS,GAAGnC,QAAQJ,IAAIuC,EAAS,IACzCgtK,EAAQhtK,EAAS,GAAGnC,QAAQJ,IAAIuC,EAAS,IAC7C,OAAO+sK,EAAM7mJ,MAAM8mJ,GAAO5pK,aAGvB+mK,EAtNyB,GAwNpCv2K,EAAQu2K,gBAAkBA,G,YCnO1Bz2K,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQi5K,UAAYj5K,EAAQq5K,GAAKr5K,EAAQs5K,KAAOt5K,EAAQu5K,WAAQ,EAChEv5K,EAAQu5K,MAAQ,QAChBv5K,EAAQs5K,KAAO,OACft5K,EAAQq5K,GAAK,KACbr5K,EAAQi5K,UAAY,CAAC,IAAK,IAAK,M,YCA/Bn5K,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQy3K,oBAAiB,EAUzBz3K,EAAQy3K,eATa,SAAUjvC,GAO3B,OANagxC,EAAUhxC,GAAO1uG,OAAO2/I,GAClB5/I,KAAI,SAAU6/I,GAC7B,OAAOA,EAAM7/I,KAAI,SAAU0uG,GACvB,OAAOA,EAAK,UAMxB,IAAIixC,EAAY,SAAUhxC,GAKtB,IAJA,IAAIzQ,GAAU,EACV4hD,EAASnxC,EAAM3uG,KAAI,SAAU0uG,GAC7B,MAAO,CAACA,MAELxQ,GACHA,EAAU6hD,EAAcD,GAK5B,OAHAA,EAASA,EAAO7/I,QAAO,SAAU4/I,GAC7B,OAAOA,EAAM92K,WAIjBg3K,EAAgB,SAAUD,GAU1B,OATAA,EAAO77J,SAAQ,SAAU+7J,EAAQ15K,GAC7Bw5K,EAAO77J,SAAQ,SAAUg8J,EAAQ/zK,GAE7B,GADag0K,EAAYF,EAAQC,GAG7B,cADOH,EAAO5zK,IACP,SAIZ,GAEPg0K,EAAc,SAAUF,EAAQC,GAChC,OAAID,IAAWC,IAGXE,EAAWH,KAAYI,EAASH,IAChCD,EAAO/qF,QAAQl8D,MAAMinJ,EAAQC,IACtB,GAEPE,EAAWH,KAAYG,EAAWF,IAClCI,EAAaJ,GACbD,EAAO/qF,QAAQl8D,MAAMinJ,EAAQC,IACtB,GAEPG,EAASJ,KAAYG,EAAWF,IAChCD,EAAOj4K,KAAKgxB,MAAMinJ,EAAQC,IACnB,GAEPG,EAASJ,KAAYI,EAASH,KAC9BI,EAAaJ,GACbD,EAAOj4K,KAAKgxB,MAAMinJ,EAAQC,IACnB,KAIXE,EAAa,SAAUN,GACvB,OAAOA,EAAM,GAAG,IAEhBO,EAAW,SAAUP,GACrB,OAAOA,EAAMA,EAAM92K,OAAS,GAAG,IAE/Bs3K,EAAe,SAAUR,GACzBA,EAAM5mK,UACN4mK,EAAM57J,SAAQ,SAAUyqH,GACpBA,EAAKz1H,cAGT2mK,EAAY,SAAUC,GACtB,OAAOM,EAAWN,KAAWO,EAASP,GAAS,EAAI,I,cC/EvD55K,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQm6K,mBAAgB,EAExB,IAAI3D,EAAQ,EAAQ,KAChB4D,EAAoB,EAAQ,GAC5B1D,EAAc,EAAQ,KAwD1B12K,EAAQm6K,cAvDY,SAAUrrH,EAAUa,EAAO6nH,GAC3C,IAAI6C,EAAS,IAAI7D,EAAM1gD,SACnBwkD,EAAU,IAAIF,EAAkB7D,gBAAgBznH,EAAUurH,EAAQ1qH,GAClE4qH,EAAY,GACZvoG,EAAY,GAiDhB,OAhDAljB,EAAS1iD,SAAS0R,SAAQ,SAAU9W,GAChC,IAAIkD,EAAWswK,EAAaxzK,EAAQ2oD,GAChC1vC,EAAWw6J,EAAmBvwK,GAClCqwK,EAAU34K,KAAKsI,GACf8nE,EAAUpwE,KAAKqe,MAEnB6uC,EAASygB,MAAMzxD,SAAQ,SAAU0xD,EAAMgH,GACnC,IAAIkkG,EAAgBhE,EAAYuC,UAAUp/I,KAAI,SAAUpzB,GACpD,OAAOurE,EAAUxC,EAAK/oE,OAE1B,IAAkD,IAA9Ci0K,EAAcn1J,QAAQmxJ,EAAY6C,SACW,IAA7CmB,EAAcn1J,QAAQmxJ,EAAY4C,MADtC,CAIAgB,EAAQrD,UAAUzgG,GAClB,IAAImkG,EAAUjE,EAAYuC,UAAUvC,EAAYuC,UAAUr2K,OAAS,GAC/D47F,EAAYhvB,EAAKmrG,GACjBC,EAAeL,EAAU/7E,GACzBq8E,EAAe7oG,EAAUwsB,GAC7Bk4E,EAAYuC,UAAUp/I,KAAI,SAAUpzB,GAChC,IAAIgG,EAAQ+iE,EAAK/oE,GACbyD,EAAWqwK,EAAU9tK,GACrBwT,EAAW+xD,EAAUvlE,GACrBwT,IAAay2J,EAAY6C,QACrBsB,IAAiBnE,EAAY4C,MAC7BgB,EAAQzC,gBAAgB8C,EAASl0K,EAAKm0K,EAAc1wK,GACpDowK,EAAQ/tK,UAAU9F,IAGlB6zK,EAAQ/tK,UAAU9F,IAGtBwZ,IAAay2J,EAAY2C,IACzBiB,EAAQ/tK,UAAU9F,GAElBwZ,IAAay2J,EAAY4C,MAAQuB,IAAiBnE,EAAY6C,OAC9De,EAAQzC,gBAAgB8C,EAASl0K,EAAKm0K,EAAc1wK,GAExDywK,EAAUl0K,EACV+3F,EAAY/xF,EACZouK,EAAe56J,EACf26J,EAAe1wK,KAEnBowK,EAAQ/C,cAERC,GACA8C,EAAQ9C,aAEL6C,GAGX,IAAII,EAAqB,SAAUvwK,GAC/B,OAAIA,EAAW,EACJwsK,EAAY4C,KAEnBpvK,EAAW,EACJwsK,EAAY6C,MAEhB7C,EAAY2C,IAEnBmB,EAAe,SAAUxzK,EAAQ2oD,GACjC,OAAOA,EAAMc,gBAAgBzpD","sources":["webpack://ngdg/./node_modules/earcut-typescript/src/cjs/earcut.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/UIDGenerator.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/VertexAttr.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/VertexListeners.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/Vertex.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/Polygon.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/Bounds.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/VertTuple.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/Vector.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/CubicBezierCurve.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/BezierPath.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/Line.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/Circle.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/CircleSector.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/drawutilssvg.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/draw.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/drawgl.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/Triangle.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/geomutils.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/Grid.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/KeyHandler.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/MouseHandler.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/PBImage.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/PBText.js","webpack://ngdg/./node_modules/alloyfinger-typescript/src/esm/alloy_finger.js","webpack://ngdg/./node_modules/alloyfinger-typescript/src/esm/index.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/VEllipse.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/VEllipseSector.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/PlotBoilerplate.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/SVGBuilder.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/utils/WebColors.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/utils/WebColorsContrast.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/utils/WebColorsMalachite.js","webpack://ngdg/./node_modules/plotboilerplate/src/esm/utils/datastructures/Color.js","webpack://ngdg/./node_modules/three/build/three.module.js","webpack://ngdg/./node_modules/three/examples/jsm/helpers/VertexNormalsHelper.js","webpack://ngdg/./node_modules/threejs-slice-geometry-typescript/src/cjs/GeometryBuilder.js","webpack://ngdg/./node_modules/threejs-slice-geometry-typescript/src/cjs/constants.js","webpack://ngdg/./node_modules/threejs-slice-geometry-typescript/src/cjs/faces-from-edges.js","webpack://ngdg/./node_modules/threejs-slice-geometry-typescript/src/cjs/slice.js"],"sourcesContent":["\"use strict\";\n// Original algorithm by https://github.com/mapbox/earcut\n//\n// Ported to TypeScript by Ikaros Kappler\n// @date 2020-12-08\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.earcut = void 0;\n;\nexports.earcut = (function () {\n    /**\n     * Nodes of a linked list, each node representing a vertex of a ring (a polygon).\n     */\n    var Node = /** @class */ (function () {\n        function Node(i, x, y) {\n            // vertex index in coordinates array\n            this.i = i;\n            // vertex coordinates\n            this.x = x;\n            this.y = y;\n            // previous and next vertex nodes in a polygon ring\n            this.prev = null;\n            this.next = null;\n            // z-order curve value\n            this.z = null;\n            // previous and next nodes in z-order\n            this.prevZ = null;\n            this.nextZ = null;\n            // indicates whether this is a steiner point\n            this.steiner = false;\n        }\n        return Node;\n    }());\n    ;\n    var earcut = function (data, holeIndices, dim) {\n        if (dim === void 0) { dim = 2; }\n        dim = dim || 2;\n        var hasHoles = holeIndices && holeIndices.length > 0;\n        var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n        var outerNode = linkedList(data, 0, outerLen, dim, true);\n        var triangles = []; // [t0a, t0b, t0c,  t1a, t2a, t3a, ... ]\n        if (!outerNode || outerNode.next === outerNode.prev)\n            return triangles;\n        var minX;\n        var minY;\n        var maxX;\n        var maxY;\n        var x;\n        var y;\n        var invSize;\n        if (hasHoles) {\n            outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n        }\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n        // TODO: use Bounds class for calculation?\n        if (data.length > 80 * dim) {\n            minX = maxX = data[0];\n            minY = maxY = data[1];\n            for (var i = dim; i < outerLen; i += dim) {\n                x = data[i];\n                y = data[i + 1];\n                if (x < minX)\n                    minX = x;\n                if (y < minY)\n                    minY = y;\n                if (x > maxX)\n                    maxX = x;\n                if (y > maxY)\n                    maxY = y;\n            }\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n            invSize = Math.max(maxX - minX, maxY - minY);\n            invSize = invSize !== 0 ? 1 / invSize : 0;\n        }\n        earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n        return triangles;\n    };\n    // create a circular doubly linked list from polygon points in the specified winding order\n    var linkedList = function (data, start, end, dim, clockwise) {\n        var i;\n        var last;\n        if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n            for (i = start; i < end; i += dim) {\n                last = insertNode(i, data[i], data[i + 1], last);\n            }\n        }\n        else {\n            for (i = end - dim; i >= start; i -= dim) {\n                last = insertNode(i, data[i], data[i + 1], last);\n            }\n        }\n        if (last && equals(last, last.next)) {\n            removeNode(last);\n            last = last.next;\n        }\n        return last;\n    };\n    // eliminate colinear or duplicate points\n    var filterPoints = function (start, end) {\n        if (!start)\n            return start;\n        if (!end)\n            end = start;\n        // Remember starting node\n        var p = start;\n        var again = false;\n        do {\n            // TODO: move into 'else' branch?\n            again = false;\n            if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n                removeNode(p);\n                p = end = p.prev;\n                if (p === p.next)\n                    break;\n                again = true;\n            }\n            else {\n                p = p.next;\n            }\n        } while (again || p !== end);\n        return end;\n    };\n    // main ear slicing loop which triangulates a polygon (given as a linked list)\n    var earcutLinked = function (ear, triangles, dim, minX, minY, invSize, pass) {\n        if (!ear)\n            return;\n        // interlink polygon nodes in z-order\n        if (!pass && invSize) {\n            indexCurve(ear, minX, minY, invSize);\n        }\n        var stop = ear;\n        var prev;\n        var next;\n        // iterate through ears, slicing them one by one\n        while (ear.prev !== ear.next) {\n            prev = ear.prev;\n            next = ear.next;\n            if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n                // cut off the triangle\n                triangles.push(prev.i / dim);\n                triangles.push(ear.i / dim);\n                triangles.push(next.i / dim);\n                removeNode(ear);\n                // skipping the next vertex leads to less sliver triangles\n                ear = next.next;\n                stop = next.next;\n                continue;\n            }\n            ear = next;\n            // if we looped through the whole remaining polygon and can't find any more ears\n            if (ear === stop) {\n                // try filtering points and slicing again\n                if (!pass) {\n                    earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n                    // if this didn't work, try curing all small self-intersections locally\n                }\n                else if (pass === 1) {\n                    ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                    earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n                    // as a last resort, try splitting the remaining polygon into two\n                }\n                else if (pass === 2) {\n                    splitEarcut(ear, triangles, dim, minX, minY, invSize);\n                }\n                break;\n            }\n        }\n    }; // END earcutLinked\n    // check whether a polygon node forms a valid ear with adjacent nodes\n    var isEar = function (ear) {\n        var a = ear.prev;\n        var b = ear;\n        var c = ear.next;\n        if (area(a, b, c) >= 0)\n            return false; // reflex, can't be an ear\n        // now make sure we don't have other points inside the potential ear\n        var p = ear.next.next;\n        while (p !== ear.prev) {\n            if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n                area(p.prev, p, p.next) >= 0)\n                return false;\n            p = p.next;\n        }\n        return true;\n    };\n    var isEarHashed = function (ear, minX, minY, invSize) {\n        var a = ear.prev;\n        var b = ear;\n        var c = ear.next;\n        if (area(a, b, c) >= 0)\n            return false; // reflex, can't be an ear\n        // triangle bbox; min & max are calculated like this for speed\n        // TODO: use Triangle.bounds\n        var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x), minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y), maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x), maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n        // z-order range for the current triangle bbox;\n        var minZ = zOrder(minTX, minTY, minX, minY, invSize), maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n        var p = ear.prevZ, n = ear.nextZ;\n        // look for points inside the triangle in both directions\n        while (p && p.z >= minZ && n && n.z <= maxZ) {\n            if (p !== ear.prev && p !== ear.next &&\n                // TODO: use Triangle.utils.pointIsInTriangle\n                pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n                area(p.prev, p, p.next) >= 0)\n                return false;\n            p = p.prevZ;\n            if (n !== ear.prev && n !== ear.next &&\n                // TODO: use Triangle.utils.pointIsInTriangle\n                pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n                area(n.prev, n, n.next) >= 0)\n                return false;\n            n = n.nextZ;\n        }\n        // look for remaining points in decreasing z-order\n        while (p && p.z >= minZ) {\n            if (p !== ear.prev && p !== ear.next &&\n                // TODO: use Triangle.utils.pointIsInTriangle\n                pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n                area(p.prev, p, p.next) >= 0)\n                return false;\n            p = p.prevZ;\n        }\n        // look for remaining points in increasing z-order\n        while (n && n.z <= maxZ) {\n            if (n !== ear.prev && n !== ear.next &&\n                // TODO: use Triangle.utils.pointIsInTriangle\n                pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n                area(n.prev, n, n.next) >= 0)\n                return false;\n            n = n.nextZ;\n        }\n        return true;\n    };\n    // go through all polygon nodes and cure small local self-intersections\n    var cureLocalIntersections = function (start, triangles, dim) {\n        var p = start;\n        do {\n            var a = p.prev;\n            var b = p.next.next;\n            if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n                triangles.push(a.i / dim);\n                triangles.push(p.i / dim);\n                triangles.push(b.i / dim);\n                // remove two nodes involved\n                removeNode(p);\n                removeNode(p.next);\n                p = start = b;\n            }\n            p = p.next;\n        } while (p !== start);\n        return filterPoints(p);\n    };\n    // try splitting polygon into two and triangulate them independently\n    var splitEarcut = function (start, triangles, dim, minX, minY, invSize) {\n        // look for a valid diagonal that divides the polygon into two\n        var a = start;\n        do {\n            var b = a.next.next;\n            while (b !== a.prev) {\n                if (a.i !== b.i && isValidDiagonal(a, b)) {\n                    // split the polygon in two by the diagonal\n                    var c = splitPolygon(a, b);\n                    // filter colinear points around the cuts\n                    a = filterPoints(a, a.next);\n                    c = filterPoints(c, c.next);\n                    // run earcut on each half\n                    earcutLinked(a, triangles, dim, minX, minY, invSize);\n                    earcutLinked(c, triangles, dim, minX, minY, invSize);\n                    return;\n                }\n                b = b.next;\n            }\n            a = a.next;\n        } while (a !== start);\n    };\n    // link every hole into the outer loop, producing a single-ring polygon without holes\n    var eliminateHoles = function (data, holeIndices, outerNode, dim) {\n        var queue = [];\n        var i;\n        var len = holeIndices.length;\n        var start;\n        var end;\n        var list;\n        for (i = 0; i < len; i++) {\n            start = holeIndices[i] * dim;\n            end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            list = linkedList(data, start, end, dim, false);\n            if (list === list.next)\n                list.steiner = true;\n            queue.push(getLeftmost(list));\n        }\n        queue.sort(compareX);\n        // process holes from left to right\n        for (i = 0; i < queue.length; i++) {\n            eliminateHole(queue[i], outerNode);\n            outerNode = filterPoints(outerNode, outerNode.next);\n        }\n        return outerNode;\n    };\n    var compareX = function (a, b) {\n        return a.x - b.x;\n    };\n    // find a bridge between vertices that connects hole with an outer ring and and link it\n    var eliminateHole = function (hole, outerNode) {\n        var bridge = findHoleBridge(hole, outerNode);\n        if (!bridge) {\n            return outerNode;\n        }\n        var bridgeReverse = splitPolygon(bridge, hole);\n        // filter collinear points around the cuts\n        var filteredBridge = filterPoints(bridge, bridge.next);\n        filterPoints(bridgeReverse, bridgeReverse.next);\n        // Check if input node was removed by the filtering\n        return outerNode === bridge ? filteredBridge : outerNode;\n        // }\n    };\n    // David Eberly's algorithm for finding a bridge between hole and outer polygon\n    var findHoleBridge = function (hole, outerNode) {\n        var p = outerNode;\n        var hx = hole.x;\n        var hy = hole.y;\n        var qx = -Infinity;\n        var m;\n        // find a segment intersected by a ray from the hole's leftmost point to the left;\n        // segment's endpoint with lesser x will be potential connection point\n        do {\n            if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n                var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n                if (x <= hx && x > qx) {\n                    qx = x;\n                    if (x === hx) {\n                        if (hy === p.y)\n                            return p;\n                        if (hy === p.next.y)\n                            return p.next;\n                    }\n                    m = p.x < p.next.x ? p : p.next;\n                }\n            }\n            p = p.next;\n        } while (p !== outerNode);\n        if (!m) {\n            return null;\n        }\n        if (hx === qx) {\n            return m; // hole touches outer segment; pick leftmost endpoint\n        }\n        // look for points inside the triangle of hole point, segment intersection and endpoint;\n        // if there are no points found, we have a valid connection;\n        // otherwise choose the point of the minimum angle with the ray as connection point\n        var stop = m;\n        var mx = m.x;\n        var my = m.y;\n        var tanMin = Infinity;\n        var tan;\n        p = m;\n        do {\n            if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n                tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n                if (locallyInside(p, hole) &&\n                    (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                    m = p;\n                    tanMin = tan;\n                }\n            }\n            p = p.next;\n        } while (p !== stop);\n        return m;\n    };\n    // whether sector in vertex m contains sector in vertex p in the same coordinates\n    var sectorContainsSector = function (m, p) {\n        return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n    };\n    // interlink polygon nodes in z-order\n    var indexCurve = function (start, minX, minY, invSize) {\n        var p = start;\n        do {\n            if (p.z === null)\n                p.z = zOrder(p.x, p.y, minX, minY, invSize);\n            p.prevZ = p.prev;\n            p.nextZ = p.next;\n            p = p.next;\n        } while (p !== start);\n        p.prevZ.nextZ = null;\n        p.prevZ = null;\n        sortLinked(p);\n    };\n    // Simon Tatham's linked list merge sort algorithm\n    // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n    var sortLinked = function (list) {\n        var i;\n        var p;\n        var q;\n        var e;\n        var tail;\n        var numMerges;\n        var pSize;\n        var qSize;\n        var inSize = 1;\n        do {\n            p = list;\n            list = null;\n            tail = null;\n            numMerges = 0;\n            while (p) {\n                numMerges++;\n                q = p;\n                pSize = 0;\n                for (i = 0; i < inSize; i++) {\n                    pSize++;\n                    q = q.nextZ;\n                    if (!q)\n                        break;\n                }\n                qSize = inSize;\n                while (pSize > 0 || (qSize > 0 && q)) {\n                    if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                        e = p;\n                        p = p.nextZ;\n                        pSize--;\n                    }\n                    else {\n                        e = q;\n                        q = q.nextZ;\n                        qSize--;\n                    }\n                    if (tail)\n                        tail.nextZ = e;\n                    else\n                        list = e;\n                    e.prevZ = tail;\n                    tail = e;\n                }\n                p = q;\n            }\n            tail.nextZ = null;\n            inSize *= 2;\n        } while (numMerges > 1);\n        return list;\n    };\n    // z-order of a point given coords and inverse of the longer side of data bbox\n    var zOrder = function (x, y, minX, minY, invSize) {\n        // coords are transformed into non-negative 15-bit integer range\n        x = 32767 * (x - minX) * invSize;\n        y = 32767 * (y - minY) * invSize;\n        x = (x | (x << 8)) & 0x00FF00FF;\n        x = (x | (x << 4)) & 0x0F0F0F0F;\n        x = (x | (x << 2)) & 0x33333333;\n        x = (x | (x << 1)) & 0x55555555;\n        y = (y | (y << 8)) & 0x00FF00FF;\n        y = (y | (y << 4)) & 0x0F0F0F0F;\n        y = (y | (y << 2)) & 0x33333333;\n        y = (y | (y << 1)) & 0x55555555;\n        return x | (y << 1);\n    };\n    // find the leftmost node of a polygon ring\n    var getLeftmost = function (start) {\n        var p = start;\n        var leftmost = start;\n        do {\n            if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) {\n                leftmost = p;\n            }\n            p = p.next;\n        } while (p !== start);\n        return leftmost;\n    };\n    // check if a point lies within a convex triangle\n    // TODO: use Triangle.containsPoint\n    var pointInTriangle = function (ax, ay, bx, by, cx, cy, px, py) {\n        return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n            (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n            (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n    };\n    // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n    var isValidDiagonal = function (a, b) {\n        return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n            (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n                (area(a.prev, a, b.prev) != 0 || area(a, b.prev, b)) != 0 || // does not create opposite-facing sectors\n                equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n    };\n    // signed area of a triangle\n    var area = function (p, q, r) {\n        return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n    };\n    // check if two points are equal\n    // TODO: as member function of vertex\n    var equals = function (p1, p2) {\n        return p1.x === p2.x && p1.y === p2.y;\n    };\n    // check if two segments intersect\n    // TODO: use Line.intersects\n    var intersects = function (p1, q1, p2, q2) {\n        var o1 = sign(area(p1, q1, p2));\n        var o2 = sign(area(p1, q1, q2));\n        var o3 = sign(area(p2, q2, p1));\n        var o4 = sign(area(p2, q2, q1));\n        if (o1 !== o2 && o3 !== o4)\n            return true; // general case\n        if (o1 === 0 && onSegment(p1, p2, q1))\n            return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n        if (o2 === 0 && onSegment(p1, q2, q1))\n            return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n        if (o3 === 0 && onSegment(p2, p1, q2))\n            return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n        if (o4 === 0 && onSegment(p2, q1, q2))\n            return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n        return false;\n    };\n    // for collinear points p, q, r, check if point q lies on segment pr\n    var onSegment = function (p, q, r) {\n        return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n    };\n    var sign = function (num) {\n        return num > 0 ? 1 : num < 0 ? -1 : 0;\n    };\n    // check if a polygon diagonal intersects any polygon segments\n    var intersectsPolygon = function (a, b) {\n        var p = a;\n        do {\n            if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) {\n                return true;\n            }\n            p = p.next;\n        } while (p !== a);\n        return false;\n    };\n    // check if a polygon diagonal is locally inside the polygon\n    var locallyInside = function (a, b) {\n        return area(a.prev, a, a.next) < 0 ?\n            area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n            area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n    };\n    // check if the middle point of a polygon diagonal is inside the polygon\n    var middleInside = function (a, b) {\n        var p = a;\n        var inside = false;\n        var px = (a.x + b.x) / 2;\n        var py = (a.y + b.y) / 2;\n        // TODO: call Polygon.contains here?\n        do {\n            if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n                inside = !inside;\n            p = p.next;\n        } while (p !== a);\n        return inside;\n    };\n    // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n    // if one belongs to the outer ring and another to a hole, it merges it into a single ring\n    var splitPolygon = function (a, b) {\n        var a2 = new Node(a.i, a.x, a.y);\n        var b2 = new Node(b.i, b.x, b.y);\n        var an = a.next;\n        var bp = b.prev;\n        a.next = b;\n        b.prev = a;\n        a2.next = an;\n        an.prev = a2;\n        b2.next = a2;\n        a2.prev = b2;\n        bp.next = b2;\n        b2.prev = bp;\n        return b2;\n    };\n    // create a node and optionally link it with previous one (in a circular doubly linked list)\n    var insertNode = function (i, x, y, last) {\n        var p = new Node(i, x, y);\n        if (!last) {\n            p.prev = p;\n            p.next = p;\n        }\n        else {\n            p.next = last.next;\n            p.prev = last;\n            last.next.prev = p;\n            last.next = p;\n        }\n        return p;\n    };\n    var removeNode = function (p) {\n        p.next.prev = p.prev;\n        p.prev.next = p.next;\n        if (p.prevZ)\n            p.prevZ.nextZ = p.nextZ;\n        if (p.nextZ)\n            p.nextZ.prevZ = p.prevZ;\n    };\n    var signedArea = function (data, start, end, dim) {\n        var sum = 0;\n        for (var i = start, j = end - dim; i < end; i += dim) {\n            sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n            j = i;\n        }\n        return sum;\n    };\n    return earcut;\n})();\n//# sourceMappingURL=earcut.js.map","/**\n * @classdesc A static UIDGenerator.\n *\n * @author  Ikaros Kappler\n * @date    2021-01-20\n * @version 1.0.0\n */\nexport class UIDGenerator {\n    static next() {\n        return `${UIDGenerator.current++}`;\n    }\n}\nUIDGenerator.current = 0;\n//# sourceMappingURL=UIDGenerator.js.map","/**\n * @author   Ikaros Kappler\n * @date     2018-08-26\n * @modified 2018-11-17 Added the 'isSelected' attribute.\n * @modified 2018-11-27 Added the global model for instantiating with custom attributes.\n * @modified 2019-03-20 Added JSDoc tags.\n * @modified 2020-02-29 Added the 'selectable' attribute.\n * @modified 2020-03-23 Ported to Typescript from JS.\n * @version  1.1.1\n *\n * @file VertexAttr\n * @public\n **/\n/**\n * @classdesc The VertexAttr is a helper class to wrap together additional attributes\n * to vertices that do not belong to the 'standard canonical' vertex implementation.<br>\n * <br>\n * This is some sort of 'userData' object, but the constructor uses a global model\n * to obtain a (configurable) default attribute set to all instances.<br>\n */\nexport class VertexAttr {\n    /**\n     * The constructor.\n     *\n     * Attributes will be initialized as defined in the model object\n     * which serves as a singleton.\n     *\n     * @constructor\n     * @name VertexAttr\n     **/\n    constructor() {\n        this.draggable = true;\n        this.selectable = true;\n        this.isSelected = false;\n        this.visible = true;\n        for (var key in VertexAttr.model)\n            this[key] = VertexAttr.model[key];\n    }\n    ;\n}\n/**\n * This is the global attribute model. Set these object on the initialization\n * of your app to gain all VertexAttr instances have these attributes.\n *\n * @type {object}\n **/\nVertexAttr.model = {\n    draggable: true,\n    selectable: true,\n    isSelected: false,\n    visible: true\n};\n//# sourceMappingURL=VertexAttr.js.map","/**\n * @author   Ikaros Kappler\n * @date     2018-08-27\n * @modified 2018-11-28 Added the vertex-param to the constructor and extended the event. Vertex events now have a 'params' attribute object.\n * @modified 2019-03-20 Added JSDoc tags.\n * @modified 2020-02-22 Added 'return this' to the add* functions (for chanining).\n * @modified 2020-03-23 Ported to Typescript from JS.\n * @modified 2020-11-17 Added the `click` handler.\n * @version  1.1.0\n *\n * @file VertexListeners\n * @public\n **/\n/**\n * @classdesc An event listeners wrapper. This is just a set of three listener\n *              queues (drag, dragStart, dragEnd) and their respective firing\n *              functions.\n *\n */\nexport class VertexListeners {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name VertexListeners\n     * @param {Vertex} vertex - The vertex to use these listeners on (just a backward reference).\n     **/\n    constructor(vertex) {\n        this.click = [];\n        this.drag = [];\n        this.dragStart = [];\n        this.dragEnd = [];\n        this.vertex = vertex;\n    }\n    ;\n    /**\n     * Add a click listener.\n     *\n     * @method addClickListener\n     * @param {VertexListeners~dragListener} listener - The click listener to add (a callback).\n     * @return {VertexListeners} this (for chaining)\n     * @instance\n     * @memberof VertexListeners\n     **/\n    addClickListener(listener) {\n        VertexListeners._addListener(this.click, listener);\n        return this;\n    }\n    ;\n    /**\n     * The click listener is a function with a single drag event param.\n     * @callback VertexListeners~clickListener\n     * @param {Event} e - The (extended) click event.\n     */\n    /**\n     * Remove a drag listener.\n     *\n     * @method removeDragListener\n     * @param {VertexListeners~dragListener} listener - The drag listener to remove (a callback).\n     * @return {VertexListeners} this (for chaining)\n     * @instance\n     * @memberof VertexListeners\n     **/\n    removeClickListener(listener) {\n        this.click = VertexListeners._removeListener(this.click, listener);\n        return this;\n    }\n    ;\n    /**\n     * The click listener is a function with a single drag event param.\n     * @callback VertexListeners~clickListener\n     * @param {Event} e - The (extended) click event.\n     */\n    /**\n     * Add a drag listener.\n     *\n     * @method addDragListener\n     * @param {VertexListeners~dragListener} listener - The drag listener to add (a callback).\n     * @return {VertexListeners} this (for chaining)\n     * @instance\n     * @memberof VertexListeners\n     **/\n    addDragListener(listener) {\n        VertexListeners._addListener(this.drag, listener);\n        return this;\n    }\n    ;\n    /**\n     * The drag listener is a function with a single drag event param.\n     * @callback VertexListeners~dragListener\n     * @param {Event} e - The (extended) drag event.\n     */\n    /**\n     * Remove a drag listener.\n     *\n     * @method removeDragListener\n     * @param {VertexListeners~dragListener} listener - The drag listener to remove (a callback).\n     * @return {VertexListeners} this (for chaining)\n     * @instance\n     * @memberof VertexListeners\n     **/\n    removeDragListener(listener) {\n        this.drag = VertexListeners._removeListener(this.drag, listener);\n        return this;\n    }\n    ;\n    /**\n     * Add a dragStart listener.\n     *\n     * @method addDragListener\n     * @param {VertexListeners~dragStartListener} listener - The drag-start listener to add (a callback).\n     * @return {VertexListeners} this (for chaining)\n     * @instance\n     * @memberof VertexListeners\n     **/\n    addDragStartListener(listener) {\n        VertexListeners._addListener(this.dragStart, listener);\n        return this;\n    }\n    ;\n    /**\n     * The drag-start listener is a function with a single drag event param.\n     * @callback VertexListeners~dragStartListener\n     * @param {Event} e - The (extended) drag event.\n     */\n    /**\n     * Remove a dragStart listener.\n     *\n     * @method addDragStartListener\n     * @param {VertexListeners~dragListener} listener - The drag listener to remove (a callback).\n     * @return {VertexListeners} this (for chaining)\n     * @instance\n     * @memberof VertexListeners\n     **/\n    removeDragStartListener(listener) {\n        this.dragStart = VertexListeners._removeListener(this.dragStart, listener);\n        return this;\n    }\n    ;\n    /**\n     * Add a dragEnd listener.\n     *\n     * @method addDragListener\n     * @param {VertexListeners~dragEndListener} listener - The drag-end listener to add (a callback).\n     * @return {VertexListeners} this (for chaining)\n     * @instance\n     * @memberof VertexListeners\n     **/\n    addDragEndListener(listener) {\n        // this.dragEnd.push( listener );\n        VertexListeners._addListener(this.dragEnd, listener);\n        return this;\n    }\n    ;\n    /**\n     * The drag-end listener is a function with a single drag event param.\n     * @callback VertexListeners~dragEndListener\n     * @param {Event} e - The (extended) drag event.\n     */\n    /**\n    * Remove a drag listener.\n    *\n    * @method removeDragEndListener\n    * @param {VertexListeners~clickListener} listener - The drag listener to remove (a callback).\n    * @return {VertexListeners} this (for chaining)\n    * @instance\n    * @memberof VertexListeners\n    **/\n    removeDragEndListener(listener) {\n        // this.drag.push( listener );\n        this.dragEnd = VertexListeners._removeListener(this.dragEnd, listener);\n        return this;\n    }\n    ;\n    /**\n     * Fire a click event with the given event instance to all\n     * installed click listeners.\n     *\n     * @method fireClickEvent\n     * @param {VertEvent|XMouseEvent} e - The click event itself to be fired to all installed drag listeners.\n     * @return {void}\n     * @instance\n     * @memberof VertexListeners\n     **/\n    fireClickEvent(e) {\n        VertexListeners._fireEvent(this, this.click, e);\n    }\n    ;\n    /**\n     * Fire a drag event with the given event instance to all\n     * installed drag listeners.\n     *\n     * @method fireDragEvent\n     * @param {VertEvent|XMouseEvent} e - The drag event itself to be fired to all installed drag listeners.\n     * @return {void}\n     * @instance\n     * @memberof VertexListeners\n     **/\n    fireDragEvent(e) {\n        VertexListeners._fireEvent(this, this.drag, e);\n    }\n    ;\n    /**\n     * Fire a dragStart event with the given event instance to all\n     * installed drag-start listeners.\n     *\n     * @method fireDragStartEvent\n     * @param {VertEvent|XMouseEvent} e - The drag-start event itself to be fired to all installed dragStart listeners.\n     * @return {void}\n     * @instance\n     * @memberof VertexListeners\n     **/\n    fireDragStartEvent(e) {\n        VertexListeners._fireEvent(this, this.dragStart, e);\n    }\n    ;\n    /**\n     * Fire a dragEnd event with the given event instance to all\n     * installed drag-end listeners.\n     *\n     * @method fireDragEndEvent\n     * @param {VertEvent|XMouseEvent} e - The drag-end event itself to be fired to all installed dragEnd listeners.\n     * @return {void}\n     * @instance\n     * @memberof VertexListeners\n     **/\n    fireDragEndEvent(e) {\n        VertexListeners._fireEvent(this, this.dragEnd, e);\n    }\n    ;\n    /**\n     * @private\n     **/\n    static _fireEvent(_self, listeners, e) {\n        const ve = e;\n        if (typeof ve.params == 'undefined')\n            ve.params = { vertex: _self.vertex };\n        else\n            ve.params.vertex = _self.vertex;\n        for (var i in listeners) {\n            listeners[i](ve);\n        }\n    }\n    ;\n    /**\n     * @private\n     */\n    static _addListener(listeners, newListener) {\n        for (var i in listeners) {\n            if (listeners[i] == newListener)\n                return false;\n        }\n        listeners.push(newListener);\n        return true;\n    }\n    ;\n    /**\n     * @private\n     */\n    static _removeListener(listeners, oldListener) {\n        for (var i = 0; i < listeners.length; i++) {\n            if (listeners[i] == oldListener)\n                return listeners.splice(i, 1);\n        }\n        return listeners;\n    }\n    ;\n}\n//# sourceMappingURL=VertexListeners.js.map","/**\n * @author   Ikaros Kappler\n * @date     2012-10-17\n * @modified 2018-04-03 Refactored the code of october 2012 into a new class.\n * @modified 2018-04-28 Added some documentation.\n * @modified 2018-08-16 Added the set() function.\n * @modified 2018-08-26 Added VertexAttr.\n * @modified 2018-10-31 Extended the constructor by object{x,y}.\n * @modified 2018-11-19 Extended the set(number,number) function to set(Vertex).\n * @modified 2018-11-28 Added 'this' to the VertexAttr constructor.\n * @modified 2018-12-05 Added the sub(...) function. Changed the signature of the add() function! add(Vertex) and add(number,number) are now possible.\n * @modified 2018-12-21 (It's winter solstice) Added the inv()-function.\n * @modified 2019-01-30 Added the setX(Number) and setY(Number) functions.\n * @modified 2019-02-19 Added the difference(Vertex) function.\n * @modified 2019-03-20 Added JSDoc tags.\n * @modified 2019-04-24 Added the randomVertex(ViewPort) function.\n * @modified 2019-11-07 Added toSVGString(object) function.\n * @modified 2019-11-18 Added the rotate(number,Vertex) function.\n * @modified 2019-11-21 Fixed a bug in the rotate(...) function (elements were moved).\n * @modified 2020-03-06 Added functions invX() and invY().\n * @modified 2020-03-23 Ported to Typescript from JS.\n * @modified 2020-05-26 Added functions addX(number) and addY(number).\n * @modified 2020-10-30 Changed the warnings in `sub(...)` and `add(...)` into real errors.\n * @modified 2021-03-01 Changed the second param `center` in the `rotate` function from Vertex to XYCoords.\n * @version  2.4.2\n *\n * @file Vertex\n * @public\n **/\nimport { VertexAttr } from \"./VertexAttr\";\nimport { UIDGenerator } from \"./UIDGenerator\";\nimport { VertexListeners } from \"./VertexListeners\";\n/**\n * @classdesc A vertex is a pair of two numbers.<br>\n * <br>\n * It is used to identify a 2-dimensional point on the x-y-plane.\n *\n * @requires IVertexAttr\n * @requires SVGSerializable\n * @requires UID\n * @requires UIDGenerator\n * @requires VertexAttr\n * @requires VertexListeners\n * @requires XYCoords\n *\n */\nexport class Vertex {\n    /**\n     * The constructor for the vertex class.\n     *\n     * @constructor\n     * @name Vertex\n     * @param {number} x - The x-coordinate of the new vertex.\n     * @param {number} y - The y-coordinate of the new vertex.\n     **/\n    constructor(x, y) {\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"Vertex\";\n        this.uid = UIDGenerator.next();\n        if (typeof x == \"undefined\") {\n            this.x = 0;\n            this.y = 0;\n        }\n        else if (typeof x == \"number\" && typeof y == \"number\") {\n            this.x = x;\n            this.y = y;\n        }\n        else {\n            const tuple = x;\n            if (typeof tuple.x == \"number\" && typeof tuple.y == \"number\") {\n                this.x = tuple.x;\n                this.y = tuple.y;\n            }\n            else {\n                if (typeof x == \"number\")\n                    this.x = x;\n                else if (typeof x == \"undefined\")\n                    this.x = 0;\n                else\n                    this.x = NaN;\n                if (typeof y == \"number\")\n                    this.y = y;\n                else if (typeof y == \"undefined\")\n                    this.y = 0;\n                else\n                    this.y = NaN;\n            }\n        }\n        this.attr = new VertexAttr();\n        this.listeners = new VertexListeners(this);\n    }\n    /**\n     * Set the x- and y- component of this vertex.\n     *\n     * @method set\n     * @param {number} x - The new x-component.\n     * @param {number} y - The new y-component.\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    set(x, y) {\n        if (typeof x == \"number\" && typeof y == \"number\") {\n            this.x = x;\n            this.y = y;\n        }\n        else {\n            const tuple = x;\n            if (typeof tuple.x == \"number\" && typeof tuple.y == \"number\") {\n                this.x = tuple.x;\n                this.y = tuple.y;\n            }\n            else {\n                if (typeof x == \"number\")\n                    this.x = x;\n                else if (typeof x == \"undefined\")\n                    this.x = 0;\n                else\n                    this.x = NaN;\n                if (typeof y == \"number\")\n                    this.y = y;\n                else if (typeof y == \"undefined\")\n                    this.y = 0;\n                else\n                    this.y = NaN;\n            }\n        }\n        return this;\n    }\n    /**\n     * Set the x-component of this vertex.\n     *\n     * @method setX\n     * @param {number} x - The new x-component.\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /**\n     * Set the y-component of this vertex.\n     *\n     * @method setY\n     * @param {number} y - The new y-component.\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /**\n     * Set the x-component if this vertex to the inverse of its value.\n     *\n     * @method invX\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    invX() {\n        this.x = -this.x;\n        return this;\n    }\n    /**\n     * Set the y-component if this vertex to the inverse of its value.\n     *\n     * @method invY\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    invY() {\n        this.y = -this.y;\n        return this;\n    }\n    /**\n     * Add the passed amount to x- and y- component of this vertex.<br>\n     * <br>\n     * This function works with add( {number}, {number} ) and\n     * add( {Vertex} ), as well.\n     *\n     * @method add\n     * @param {(number|Vertex)} x - The amount to add to x (or a vertex itself).\n     * @param {number=} y - The amount to add to y.\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    add(x, y) {\n        if (typeof x == \"number\" && typeof y == \"number\") {\n            this.x += x;\n            this.y += y;\n        }\n        else {\n            const tuple = x;\n            if (typeof tuple.x == \"number\" && typeof tuple.y == \"number\") {\n                this.x += tuple.x;\n                this.y += tuple.y;\n            }\n            else {\n                if (typeof x == \"number\")\n                    this.x += x;\n                else\n                    throw `Cannot add ${typeof x} to numeric x component!`;\n                if (typeof y == \"number\")\n                    this.y += y;\n                else\n                    throw `Cannot add ${typeof y} to numeric y component!`;\n            }\n        }\n        return this;\n    }\n    /**\n     * Add the passed amounts to the x- and y- components of this vertex.\n     *\n     * @method addXY\n     * @param {number} x - The amount to add to x.\n     * @param {number} y - The amount to add to y.\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    addXY(amountX, amountY) {\n        this.x += amountX;\n        this.y += amountY;\n        return this;\n    }\n    /**\n     * Add the passed amounts to the x-component of this vertex.\n     *\n     * @method addX\n     * @param {number} x - The amount to add to x.\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    addX(amountX) {\n        this.x += amountX;\n        return this;\n    }\n    /**\n     * Add the passed amounts to the y-component of this vertex.\n     *\n     * @method addY\n     * @param {number} y - The amount to add to y.\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    addY(amountY) {\n        this.y += amountY;\n        return this;\n    }\n    /**\n     * Substract the passed amount from x- and y- component of this vertex.<br>\n     * <br>\n     * This function works with sub( {number}, {number} ) and\n     * sub( {Vertex} ), as well.\n     *\n     * @method sub\n     * @param {(number|Vertex)} x - The amount to substract from x (or a vertex itself).\n     * @param {number=} y - The amount to substract from y.\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    sub(x, y) {\n        if (typeof x == \"number\" && typeof y == \"number\") {\n            this.x -= x;\n            this.y -= y;\n        }\n        else {\n            const tuple = x;\n            if (typeof tuple.x == \"number\" && typeof tuple.y == \"number\") {\n                this.x -= tuple.x;\n                this.y -= tuple.y;\n            }\n            else {\n                if (typeof x == \"number\")\n                    this.x -= x;\n                else\n                    throw `Cannot add ${typeof x} to numeric x component!`;\n                if (typeof y == \"number\")\n                    this.y -= y;\n                else\n                    throw `Cannot add ${typeof y} to numeric y component!`;\n            }\n        }\n        return this;\n    }\n    /**\n     * Check if this vertex equals the passed one.\n     * <br>\n     * This function uses an internal epsilon as tolerance.\n     *\n     * @method equals\n     * @param {Vertex} vertex - The vertex to compare this with.\n     * @return {boolean}\n     * @instance\n     * @memberof Vertex\n     **/\n    equals(vertex) {\n        var eqX = Math.abs(this.x - vertex.x) < Vertex.EPSILON;\n        var eqY = Math.abs(this.y - vertex.y) < Vertex.EPSILON;\n        var result = eqX && eqY;\n        return result;\n    }\n    /**\n     * Create a copy of this vertex.\n     *\n     * @method clone\n     * @return {Vertex} A new vertex, an exact copy of this.\n     * @instance\n     * @memberof Vertex\n     **/\n    clone() {\n        return new Vertex(this.x, this.y);\n    }\n    /**\n     * Get the distance to the passed point (in euclidean metric)\n     *\n     * @method distance\n     * @param {XYCoords} vert - The vertex to measure the distance to.\n     * @return {number}\n     * @instance\n     * @memberof Vertex\n     **/\n    distance(vert) {\n        return Math.sqrt(Math.pow(vert.x - this.x, 2) + Math.pow(vert.y - this.y, 2));\n    }\n    /**\n     * Get the angle of this point (relative to (0,0) or to the given other origin point).\n     *\n     * @method angle\n     * @param {XYCoords} origin - The vertex to measure the angle from.\n     * @return {number}\n     * @instance\n     * @memberof Vertex\n     **/\n    angle(origin) {\n        const a = typeof origin === \"undefined\"\n            ? Math.PI / 2 - Math.atan2(this.x, this.y)\n            : Math.PI / 2 - Math.atan2(origin.x - this.x, origin.y - this.y);\n        // Map to positive value\n        return a < 0 ? Math.PI * 2 + a : a;\n    }\n    /**\n     * Get the difference to the passed point.<br>\n     * <br>\n     * The difference is (vert.x-this.x, vert.y-this.y).\n     *\n     * @method difference\n     * @param {Vertex} vert - The vertex to measure the x-y-difference to.\n     * @return {Vertex} A new vertex.\n     * @instance\n     * @memberof Vertex\n     **/\n    difference(vert) {\n        return new Vertex(vert.x - this.x, vert.y - this.y);\n    }\n    /**\n     * This is a vector-like behavior and 'scales' this vertex\n     * towards/from a given center.\n     *\n     * @method scale\n     * @param {number} factor - The factor to 'scale' this vertex; 1.0 means no change.\n     * @param {Vertex=} center - The origin of scaling; default is (0,0).\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    scale(factor, center) {\n        if (!center || typeof center === \"undefined\")\n            center = new Vertex(0, 0);\n        this.x = center.x + (this.x - center.x) * factor;\n        this.y = center.y + (this.y - center.y) * factor;\n        return this;\n    }\n    /**\n     * This is a vector-like behavior and 'rotates' this vertex\n     * around given center.\n     *\n     * @method rotate\n     * @param {number} angle - The angle to 'rotate' this vertex; 0.0 means no change.\n     * @param {XYCoords=} center - The center of rotation; default is (0,0).\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    rotate(angle, center) {\n        if (!center || typeof center === \"undefined\") {\n            center = { x: 0, y: 0 };\n        }\n        this.sub(center);\n        angle += Math.atan2(this.y, this.x);\n        let len = this.distance(Vertex.ZERO); // {x:0,y:0});\n        this.x = len * Math.cos(angle);\n        this.y = len * Math.sin(angle);\n        this.add(center);\n        return this;\n    }\n    /**\n     * Multiply both components of this vertex with the given scalar.<br>\n     * <br>\n     * Note: as in<br>\n     *    https://threejs.org/docs/#api/math/Vector2.multiplyScalar\n     *\n     * @method multiplyScalar\n     * @param {number} scalar - The scale factor; 1.0 means no change.\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    multiplyScalar(scalar) {\n        this.x *= scalar;\n        this.y *= scalar;\n        return this;\n    }\n    /**\n     * Round the two components x and y of this vertex.\n     *\n     * @method round\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    round() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n    /**\n     * Change this vertex (x,y) to its inverse (-x,-y).\n     *\n     * @method inv\n     * @return {Vertex} this\n     * @instance\n     * @memberof Vertex\n     **/\n    inv() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    /**\n     * Get a string representation of this vertex.\n     *\n     * @method toString\n     * @return {string} The string representation of this vertex.\n     * @instance\n     * @memberof Vertex\n     **/\n    toString() {\n        return \"(\" + this.x + \",\" + this.y + \")\";\n    }\n    /**\n     * Convert this vertex to SVG code.\n     *\n     * @deprecated DEPRECATION Please use the drawutilssvg library and an XMLSerializer instead.\n     * @method toSVGString\n     * @param {object=} options - An optional set of options, like 'className'.\n     * @return {string} A string representing the SVG code for this vertex.\n     * @instance\n     * @memberof Vertex\n     **/\n    toSVGString(options) {\n        options = options || {};\n        var buffer = [];\n        buffer.push(\"<circle\");\n        if (options.className)\n            buffer.push(' class=\"' + options.className + '\"');\n        buffer.push(' cx=\"' + this.x + '\"');\n        buffer.push(' cy=\"' + this.y + '\"');\n        buffer.push(' r=\"2\"');\n        buffer.push(\" />\");\n        return buffer.join(\"\");\n    }\n    // END Vertex\n    /**\n     * Create a new random vertex inside the given viewport.\n     *\n     * @param {ViewPort} viewPort - A {min:Vertex, max:Vertex} viewport specifying the bounds.\n     * @return A new vertex with a random position.\n     **/\n    static randomVertex(viewPort) {\n        return new Vertex(viewPort.min.x + Math.random() * (viewPort.max.x - viewPort.min.x), viewPort.min.y + Math.random() * (viewPort.max.y - viewPort.min.y));\n    }\n}\nVertex.ZERO = new Vertex(0, 0);\n/**\n * An epsilon for comparison\n *\n * @private\n * @readonly\n **/\nVertex.EPSILON = 1.0e-6;\nVertex.utils = {\n    /**\n     * Generate a four-point arrow head, starting at the vector end minus the\n     * arrow head length.\n     *\n     * The first vertex in the returned array is guaranteed to be the located\n     * at the vector line end minus the arrow head length.\n     *\n     *\n     * Due to performance all params are required.\n     *\n     * The params scaleX and scaleY are required for the case that the scaling is not uniform (x and y\n     * scaling different). Arrow heads should not look distored on non-uniform scaling.\n     *\n     * If unsure use 1.0 for scaleX and scaleY (=no distortion).\n     * For headlen use 8, it's a good arrow head size.\n     *\n     * Example:\n     *    buildArrowHead( new Vertex(0,0), new Vertex(50,100), 8, 1.0, 1.0 )\n     *\n     * @param {Vertex} zA - The start vertex of the vector to calculate the arrow head for.\n     * @param {Vertex} zB - The end vertex of the vector.\n     * @param {number} headlen - The length of the arrow head (along the vector direction. A good value is 12).\n     * @param {number} scaleX  - The horizontal scaling during draw.\n     * @param {number} scaleY  - the vertical scaling during draw.\n     **/\n    // @DEPRECATED: use Vector.utils.buildArrowHead instead!!!\n    buildArrowHead: (zA, zB, headlen, scaleX, scaleY) => {\n        // console.warn('This function is deprecated! Use Vector.utils.buildArrowHead instead!');\n        var angle = Math.atan2((zB.y - zA.y) * scaleY, (zB.x - zA.x) * scaleX);\n        var vertices = [];\n        vertices.push(new Vertex(zB.x * scaleX - headlen * Math.cos(angle), zB.y * scaleY - headlen * Math.sin(angle)));\n        vertices.push(new Vertex(zB.x * scaleX - headlen * 1.35 * Math.cos(angle - Math.PI / 8), zB.y * scaleY - headlen * 1.35 * Math.sin(angle - Math.PI / 8)));\n        vertices.push(new Vertex(zB.x * scaleX, zB.y * scaleY));\n        vertices.push(new Vertex(zB.x * scaleX - headlen * 1.35 * Math.cos(angle + Math.PI / 8), zB.y * scaleY - headlen * 1.35 * Math.sin(angle + Math.PI / 8)));\n        return vertices;\n    }\n};\n//# sourceMappingURL=Vertex.js.map","/**\n * @author   Ikaros Kappler\n * @date     2018-04-14\n * @modified 2018-11-17 Added the containsVert function.\n * @modified 2018-12-04 Added the toSVGString function.\n * @modified 2019-03-20 Added JSDoc tags.\n * @modified 2019-10-25 Added the scale function.\n * @modified 2019-11-06 JSDoc update.\n * @modified 2019-11-07 Added toCubicBezierPath(number) function.\n * @modified 2019-11-22 Added the rotate(number,Vertex) function.\n * @modified 2020-03-24 Ported this class from vanilla-JS to Typescript.\n * @modified 2020-10-30 Added the `addVertex` function.\n * @modified 2020-10-31 Added the `getVertexAt` function.\n * @modified 2020-11-06 Added the `move` function.\n * @modified 2020-11-10 Added the `getBounds` function.\n * @modified 2020-11-11 Generalized `move(Vertex)` to `move(XYCoords)`.\n * @modified 2021-01-20 Added UID.\n * @modified 2021-01-29 Added the `signedArea` function (was global function in the demos before).\n * @modified 2021-01-29 Added the `isClockwise` function.\n * @modified 2021-01-29 Added the `area` function.\n * @modified 2021-01-29 Changed the param type for `containsVert` from Vertex to XYCoords.\n * @version 1.7.0\n *\n * @file Polygon\n * @public\n **/\nimport { BezierPath } from \"./BezierPath\";\nimport { Bounds } from \"./Bounds\";\nimport { UIDGenerator } from \"./UIDGenerator\";\nimport { Vertex } from \"./Vertex\";\n/**\n * @classdesc A polygon class. Any polygon consists of an array of vertices; polygons can be open or closed.\n *\n * @requires BezierPath\n * @requires Bounds\n * @requires SVGSerializabe\n * @requires UID\n * @requires UIDGenerator\n * @requires Vertex\n * @requires XYCoords\n */\nexport class Polygon {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name Polygon\n     * @param {Vertex[]} vertices - An array of 2d vertices that shape the polygon.\n     * @param {boolean} isOpen - Indicates if the polygon should be rendered as an open or closed shape.\n     **/\n    constructor(vertices, isOpen) {\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"Polygon\";\n        this.uid = UIDGenerator.next();\n        if (typeof vertices == 'undefined')\n            vertices = [];\n        this.vertices = vertices;\n        this.isOpen = isOpen;\n    }\n    ;\n    /**\n     * Add a vertex to the end of the `vertices` array.\n     *\n     * @method addVert\n     * @param {Vertex} vert - The vertex to add.\n     * @instance\n     * @memberof Polygon\n     **/\n    addVertex(vert) {\n        this.vertices.push(vert);\n    }\n    ;\n    /**\n     * Get the polygon vertex at the given position (index).\n     *\n     * The index may exceed the total vertex count, and will be wrapped around then (modulo).\n     *\n     * For k >= 0:\n     *  - getVertexAt( vertices.length )     == getVertexAt( 0 )\n     *  - getVertexAt( vertices.length + k ) == getVertexAt( k )\n     *  - getVertexAt( -k )                  == getVertexAt( vertices.length -k )\n     *\n     * @metho getVertexAt\n     * @param {number} index - The index of the desired vertex.\n     * @instance\n     * @memberof Polygon\n     * @return {Vertex} At the given index.\n     **/\n    getVertexAt(index) {\n        if (index < 0)\n            return this.vertices[this.vertices.length - (Math.abs(index) % this.vertices.length)];\n        else\n            return this.vertices[index % this.vertices.length];\n    }\n    ;\n    /**\n     * Move the polygon's vertices by the given amount.\n     *\n     * @method move\n     * @param {XYCoords} amount - The amount to move.\n     * @instance\n     * @memberof Polygon\n     * @return {Polygon} this for chaining\n     **/\n    move(vert) {\n        for (var i in this.vertices) {\n            this.vertices[i].add(vert);\n        }\n        return this;\n    }\n    ;\n    /**\n     * Check if the given vertex is inside this polygon.<br>\n     * <br>\n     * Ray-casting algorithm found at<br>\n     *    https://stackoverflow.com/questions/22521982/check-if-point-inside-a-polygon\n     *\n     * @method containsVert\n     * @param {XYCoords} vert - The vertex to check. The new x-component.\n     * @return {boolean} True if the passed vertex is inside this polygon. The polygon is considered closed.\n     * @instance\n     * @memberof Polygon\n     **/\n    containsVert(vert) {\n        // ray-casting algorithm based on\n        //    http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n        var inside = false;\n        for (var i = 0, j = this.vertices.length - 1; i < this.vertices.length; j = i++) {\n            let xi = this.vertices[i].x, yi = this.vertices[i].y;\n            let xj = this.vertices[j].x, yj = this.vertices[j].y;\n            var intersect = ((yi > vert.y) != (yj > vert.y))\n                && (vert.x < (xj - xi) * (vert.y - yi) / (yj - yi) + xi);\n            if (intersect)\n                inside = !inside;\n        }\n        return inside;\n    }\n    ;\n    /**\n     * Calculate the area of the given polygon (unsigned).\n     *\n     * Note that this does not work for self-intersecting polygons.\n     *\n     * @method area\n     * @instance\n     * @memberof Polygon\n     * @return {number}\n     */\n    area() {\n        return Polygon.utils.area(this.vertices);\n    }\n    ;\n    /**\n     * Calulate the signed polyon area by interpreting the polygon as a matrix\n     * and calculating its determinant.\n     *\n     * @method signedArea\n     * @instance\n     * @memberof Polygon\n     * @return {number}\n     */\n    signedArea() {\n        return Polygon.utils.signedArea(this.vertices);\n    }\n    ;\n    /**\n     * Get the winding order of this polgon: clockwise or counterclockwise.\n     *\n     * @method isClockwise\n     * @instance\n     * @memberof Polygon\n     * @return {boolean}\n     */\n    isClockwise() {\n        return Polygon.utils.signedArea(this.vertices) < 0;\n    }\n    ;\n    /**\n     * Scale the polygon relative to the given center.\n     *\n     * @method scale\n     * @param {number} factor - The scale factor.\n     * @param {Vertex} center - The center of scaling.\n     * @return {Polygon} this, for chaining.\n     * @instance\n     * @memberof Polygon\n     **/\n    scale(factor, center) {\n        for (var i in this.vertices) {\n            if (typeof this.vertices[i].scale == 'function')\n                this.vertices[i].scale(factor, center);\n            else\n                console.log('There seems to be a null vertex!', this.vertices[i]);\n        }\n        return this;\n    }\n    ;\n    /**\n     * Rotate the polygon around the given center.\n     *\n     * @method rotate\n     * @param {number} angle  - The rotation angle.\n     * @param {Vertex} center - The center of rotation.\n     * @instance\n     * @memberof Polygon\n     * @return {Polygon} this, for chaining.\n     **/\n    rotate(angle, center) {\n        for (var i in this.vertices) {\n            this.vertices[i].rotate(angle, center);\n        }\n        return this;\n    }\n    ;\n    /**\n     * Get the bounding box (bounds) of this polygon.\n     *\n     * @method getBounds\n     * @instance\n     * @memberof Polygon\n     * @return {Bounds} The rectangular bounds of this polygon.\n     **/\n    getBounds() {\n        return Bounds.computeFromVertices(this.vertices);\n    }\n    ;\n    /**\n     * Convert this polygon to a sequence of quadratic Bézier curves.<br>\n     * <br>\n     * The first vertex in the returned array is the start point.<br>\n     * The following sequence are pairs of control-point-and-end-point:\n     * <pre>startPoint, controlPoint0, pathPoint1, controlPoint1, pathPoint2, controlPoint2, ..., endPoint</pre>\n     *\n     * @method toQuadraticBezierData\n     * @return {Vertex[]}  An array of 2d vertices that shape the quadratic Bézier curve.\n     * @instance\n     * @memberof Polygon\n     **/\n    toQuadraticBezierData() {\n        if (this.vertices.length < 3)\n            return [];\n        var qbezier = [];\n        var cc0 = this.vertices[0];\n        var cc1 = this.vertices[1];\n        var edgeCenter = new Vertex(cc0.x + (cc1.x - cc0.x) / 2, cc0.y + (cc1.y - cc0.y) / 2);\n        qbezier.push(edgeCenter);\n        var limit = this.isOpen ? this.vertices.length : this.vertices.length + 1;\n        for (var t = 1; t < limit; t++) {\n            cc0 = this.vertices[t % this.vertices.length];\n            cc1 = this.vertices[(t + 1) % this.vertices.length];\n            var edgeCenter = new Vertex(cc0.x + (cc1.x - cc0.x) / 2, cc0.y + (cc1.y - cc0.y) / 2);\n            qbezier.push(cc0);\n            qbezier.push(edgeCenter);\n            cc0 = cc1;\n        }\n        return qbezier;\n    }\n    ;\n    /**\n     * Convert this polygon to a quadratic bezier curve, represented as an SVG data string.\n     *\n     * @method toQuadraticBezierSVGString\n     * @return {string} The 'd' part for an SVG 'path' element.\n     * @instance\n     * @memberof Polygon\n     **/\n    toQuadraticBezierSVGString() {\n        var qdata = this.toQuadraticBezierData();\n        if (qdata.length == 0)\n            return \"\";\n        var buffer = ['M ' + qdata[0].x + ' ' + qdata[0].y];\n        for (var i = 1; i < qdata.length; i += 2) {\n            buffer.push('Q ' + qdata[i].x + ' ' + qdata[i].y + ', ' + qdata[i + 1].x + ' ' + qdata[i + 1].y);\n        }\n        return buffer.join(' ');\n    }\n    ;\n    /**\n     * Convert this polygon to a sequence of cubic Bézier curves.<br>\n     * <br>\n     * The first vertex in the returned array is the start point.<br>\n     * The following sequence are triplets of (first-control-point, secnond-control-point, end-point):<br>\n     * <pre>startPoint, controlPoint0_0, controlPoint1_1, pathPoint1, controlPoint1_0, controlPoint1_1, ..., endPoint</pre>\n     *\n     * @method toCubicBezierData\n     * @param {number=} threshold - An optional threshold (default=1.0) how strong the curve segments\n     *                              should over-/under-drive. Should be between 0.0 and 1.0 for best\n     *                              results but other values are allowed.\n     * @return {Vertex[]}  An array of 2d vertices that shape the cubic Bézier curve.\n     * @instance\n     * @memberof Polygon\n     **/\n    toCubicBezierData(threshold) {\n        if (typeof threshold == 'undefined')\n            threshold = 1.0;\n        if (this.vertices.length < 3)\n            return [];\n        var cbezier = [];\n        var a = this.vertices[0];\n        var b = this.vertices[1];\n        var edgeCenter = new Vertex(a.x + (b.x - a.x) / 2, a.y + (b.y - a.y) / 2);\n        cbezier.push(edgeCenter);\n        var limit = this.isOpen ? this.vertices.length - 1 : this.vertices.length;\n        for (var t = 0; t < limit; t++) {\n            var a = this.vertices[t % this.vertices.length];\n            var b = this.vertices[(t + 1) % this.vertices.length];\n            var c = this.vertices[(t + 2) % this.vertices.length];\n            var aCenter = new Vertex(a.x + (b.x - a.x) / 2, a.y + (b.y - a.y) / 2);\n            var bCenter = new Vertex(b.x + (c.x - b.x) / 2, b.y + (c.y - b.y) / 2);\n            var a2 = new Vertex(aCenter.x + (b.x - aCenter.x) * threshold, aCenter.y + (b.y - aCenter.y) * threshold);\n            var b0 = new Vertex(bCenter.x + (b.x - bCenter.x) * threshold, bCenter.y + (b.y - bCenter.y) * threshold);\n            cbezier.push(a2);\n            cbezier.push(b0);\n            cbezier.push(bCenter);\n        }\n        return cbezier;\n    }\n    ;\n    /**\n     * Convert this polygon to a cubic bezier curve, represented as an SVG data string.\n     *\n     * @method toCubicBezierSVGString\n     * @return {string} The 'd' part for an SVG 'path' element.\n     * @instance\n     * @memberof Polygon\n     **/\n    toCubicBezierSVGString(threshold) {\n        var qdata = this.toCubicBezierData(threshold);\n        if (qdata.length == 0)\n            return \"\";\n        var buffer = ['M ' + qdata[0].x + ' ' + qdata[0].y];\n        for (var i = 1; i < qdata.length; i += 3) {\n            buffer.push('C ' + qdata[i].x + ' ' + qdata[i].y + ', ' + qdata[i + 1].x + ' ' + qdata[i + 1].y + ', ' + qdata[i + 2].x + ' ' + qdata[i + 2].y);\n        }\n        return buffer.join(' ');\n    }\n    ;\n    /**\n     * Convert this polygon to a cubic bezier path instance.\n     *\n     * @method toCubicBezierPath\n     * @param {number} threshold - The threshold, usually from 0.0 to 1.0.\n     * @return {BezierPath}      - A bezier path instance.\n     * @instance\n     * @memberof Polygon\n     **/\n    toCubicBezierPath(threshold) {\n        var qdata = this.toCubicBezierData(threshold);\n        // Conver the linear path vertices to a two-dimensional path array\n        var pathdata = [];\n        for (var i = 0; i + 3 < qdata.length; i += 3) {\n            pathdata.push([qdata[i], qdata[i + 3], qdata[i + 1], qdata[i + 2]]);\n        }\n        return BezierPath.fromArray(pathdata);\n    }\n    ;\n    /**\n     * Create an SVG representation of this polygon.\n     *\n     * @deprecated DEPRECATION Please use the drawutilssvg library and an XMLSerializer instead.\n     * @method toSVGString\n     * @param {object=} options - An optional set of options, like 'className'.\n     * @return {string} The SVG string.\n     * @instance\n     * @memberof Polygon\n     **/\n    toSVGString(options) {\n        options = options || {};\n        var buffer = [];\n        buffer.push('<path');\n        if (options.className)\n            buffer.push(' class=\"' + options.className + '\"');\n        buffer.push(' d=\"');\n        if (this.vertices.length > 0) {\n            buffer.push('M ');\n            buffer.push(this.vertices[0].x.toString());\n            buffer.push(' ');\n            buffer.push(this.vertices[0].y.toString());\n            for (var i = 1; i < this.vertices.length; i++) {\n                buffer.push(' L ');\n                buffer.push(this.vertices[i].x.toString());\n                buffer.push(' ');\n                buffer.push(this.vertices[i].y.toString());\n            }\n            if (!this.isOpen) {\n                buffer.push(' Z');\n            }\n        }\n        buffer.push('\" />');\n        return buffer.join('');\n    }\n    ;\n}\nPolygon.utils = {\n    /**\n     * Calculate the area of the given polygon (unsigned).\n     *\n     * Note that this does not work for self-intersecting polygons.\n     *\n     * @name area\n     * @return {number}\n     */\n    area(vertices) {\n        // Found at:\n        //    https://stackoverflow.com/questions/16285134/calculating-polygon-area\n        let total = 0.0;\n        for (var i = 0, l = vertices.length; i < l; i++) {\n            const addX = vertices[i].x;\n            const addY = vertices[(i + 1) % l].y;\n            const subX = vertices[(i + 1) % l].x;\n            const subY = vertices[i].y;\n            total += (addX * addY * 0.5);\n            total -= (subX * subY * 0.5);\n        }\n        return Math.abs(total);\n    },\n    /**\n     * Calulate the signed polyon area by interpreting the polygon as a matrix\n     * and calculating its determinant.\n     *\n     * @name signedArea\n     * @return {number}\n     */\n    signedArea(vertices) {\n        let sum = 0;\n        const n = vertices.length;\n        for (var i = 0; i < n; i++) {\n            const j = (i + 1) % n;\n            sum += (vertices[j].x - vertices[i].x) * (vertices[i].y + vertices[j].y);\n        }\n        return sum;\n    }\n};\n//# sourceMappingURL=Polygon.js.map","/**\n * @author   Ikaros Kappler\n * @date     2020-05-11\n * @modified 2020-10-30 Added the static computeFromVertices function.\n * @modified 2020-11-19 Set min, max, width and height to private.\n * @modified 2021-02-02 Added the `toPolygon` method.\n * @modified 2021-06-21 (mid-summer) Added `getCenter` method.\n * @version  1.3.0\n **/\nimport { Polygon } from \"./Polygon\";\nimport { Vertex } from \"./Vertex\";\n/**\n * @classdesc A bounds class with min and max values. Implementing IBounds.\n *\n * @requires XYCoords\n * @requires Vertex\n * @requires IBounds\n **/\nexport class Bounds {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name Bounds\n     * @param {XYCoords} min - The min values (x,y) as a XYCoords tuple.\n     * @param {XYCoords} max - The max values (x,y) as a XYCoords tuple.\n     **/\n    constructor(min, max) {\n        this.min = min;\n        this.max = max;\n        this.width = max.x - min.x;\n        this.height = max.y - min.y;\n    }\n    /**\n     * Convert this rectangular bounding box to a polygon with four vertices.\n     *\n     * @method toPolygon\n     * @instance\n     * @memberof Bounds\n     * @return {Polygon} This bound rectangle as a polygon.\n     */\n    toPolygon() {\n        return new Polygon([new Vertex(this.min), new Vertex(this.max.x, this.min.y), new Vertex(this.max), new Vertex(this.min.x, this.max.y)], false);\n    }\n    getCenter() {\n        return new Vertex(this.min.x + (this.max.x - this.min.x) / 2.0, this.min.y + (this.max.y - this.min.y) / 2);\n    }\n    /**\n     * Compute the minimal bounding box for a given set of vertices.\n     *\n     * An empty vertex array will return an empty bounding box located at (0,0).\n     *\n     * @static\n     * @method computeFromVertices\n     * @memberof Bounds\n     * @param {Array<Vertex>} vertices - The set of vertices you want to get the bounding box for.\n     * @return The minimal Bounds for the given vertices.\n     **/\n    static computeFromVertices(vertices) {\n        if (vertices.length == 0)\n            return new Bounds(new Vertex(0, 0), new Vertex(0, 0));\n        let xMin = vertices[0].x;\n        let xMax = vertices[0].x;\n        let yMin = vertices[0].y;\n        let yMax = vertices[0].y;\n        let vert;\n        for (var i in vertices) {\n            vert = vertices[i];\n            xMin = Math.min(xMin, vert.x);\n            xMax = Math.max(xMax, vert.x);\n            yMin = Math.min(yMin, vert.y);\n            yMax = Math.max(yMax, vert.y);\n        }\n        return new Bounds(new Vertex(xMin, yMin), new Vertex(xMax, yMax));\n    }\n} // END class bounds\n//# sourceMappingURL=Bounds.js.map","/**\n * @author Ikaros Kappler\n * @date   2020-03-24\n * @modified 2020-05-04 Fixed a serious bug in the pointDistance function.\n * @modified 2020-05-12 The angle(line) param was still not optional. Changed that.\n * @modified 2020-11-11 Generalized the `add` and `sub` param from `Vertex` to `XYCoords`.\n * @modified 2020-12-04 Changed`vtutils.dist2` params from `Vertex` to `XYCoords` (generalized).\n * @modified 2020-12-04 Changed `getClosestT` param from `Vertex` to `XYCoords` (generalized).\n * @modified 2020-12-04 Added the `hasPoint(XYCoords)` function.\n * @modified 2021-01-20 Added UID.\n * @version 1.1.0\n */\nimport { Vertex } from \"./Vertex\";\nimport { UIDGenerator } from \"./UIDGenerator\";\n/**\n * @classdesc An abstract base classes for vertex tuple constructs, like Lines or Vectors.\n * @abstract\n * @requires UID\n * @requires Vertex\n * @requires XYCoords\n */\nexport class VertTuple {\n    /**\n     * Creates an instance.\n     *\n     * @constructor\n     * @name VertTuple\n     * @param {Vertex} a The tuple's first point.\n     * @param {Vertex} b The tuple's second point.\n     **/\n    constructor(a, b, factory) {\n        this.uid = UIDGenerator.next();\n        this.a = a;\n        this.b = b;\n        this.factory = factory;\n    }\n    /**\n     * Get the length of this line.\n     *\n     * @method length\n     * @instance\n     * @memberof VertTuple\n     **/\n    length() {\n        return Math.sqrt(Math.pow(this.b.x - this.a.x, 2) + Math.pow(this.b.y - this.a.y, 2));\n    }\n    ;\n    /**\n     * Set the length of this vector to the given amount. This only works if this\n     * vector is not a null vector.\n     *\n     * @method setLength\n     * @param {number} length - The desired length.\n     * @memberof VertTuple\n     * @return {T} this (for chaining)\n     **/\n    setLength(length) {\n        return this.scale(length / this.length());\n    }\n    ;\n    /**\n     * Substract the given vertex from this line's end points.\n     *\n     * @method sub\n     * @param {XYCoords} amount The amount (x,y) to substract.\n     * @return {VertTuple} this\n     * @instance\n     * @memberof VertTuple\n     **/\n    sub(amount) {\n        this.a.sub(amount);\n        this.b.sub(amount);\n        return this;\n    }\n    ;\n    /**\n     * Add the given vertex to this line's end points.\n     *\n     * @method add\n     * @param {XYCoords} amount The amount (x,y) to add.\n     * @return {Line} this\n     * @instance\n     * @memberof VertTuple\n     **/\n    add(amount) {\n        this.a.add(amount);\n        this.b.add(amount);\n        return this;\n    }\n    ;\n    /**\n     * Normalize this line (set to length 1).\n     *\n     * @method normalize\n     * @return {VertTuple} this\n     * @instance\n     * @memberof VertTuple\n     **/\n    normalize() {\n        this.b.set(this.a.x + (this.b.x - this.a.x) / this.length(), this.a.y + (this.b.y - this.a.y) / this.length());\n        return this;\n    }\n    ;\n    /**\n     * Scale this line by the given factor.\n     *\n     * @method scale\n     * @param {number} factor The factor for scaling (1.0 means no scale).\n     * @return {VertTuple} this\n     * @instance\n     * @memberof VertTuple\n     **/\n    scale(factor) {\n        this.b.set(this.a.x + (this.b.x - this.a.x) * factor, this.a.y + (this.b.y - this.a.y) * factor);\n        return this;\n    }\n    ;\n    /**\n     * Move this line to a new location.\n     *\n     * @method moveTo\n     * @param {Vertex} newA - The new desired location of 'a'. Vertex 'b' will be moved, too.\n     * @return {VertTuple} this\n     * @instance\n     * @memberof VertTuple\n     **/\n    moveTo(newA) {\n        let diff = this.a.difference(newA);\n        this.a.add(diff);\n        this.b.add(diff);\n        return this;\n    }\n    ;\n    /**\n     * Get the angle between this and the passed line (in radians).\n     *\n     * @method angle\n     * @param {VertTuple} line - (optional) The line to calculate the angle to. If null the baseline (x-axis) will be used.\n     * @return {number} this\n     * @instance\n     * @memberof VertTuple\n     **/\n    angle(line) {\n        if (line == null || typeof line == 'undefined') {\n            line = this.factory(new Vertex(0, 0), new Vertex(100, 0));\n        }\n        // Compute the angle from x axis and the return the difference :)\n        const v0 = this.b.clone().sub(this.a);\n        const v1 = line.b.clone().sub(line.a);\n        // Thank you, Javascript, for this second atan function. No additional math is needed here!\n        // The result might be negative, but isn't it usually nicer to determine angles in positive values only?\n        return Math.atan2(v1.x, v1.y) - Math.atan2(v0.x, v0.y);\n    }\n    ;\n    /**\n     * Get line point at position t in [0 ... 1]:<br>\n     * <pre>[P(0)]=[A]--------------------[P(t)]------[B]=[P(1)]</pre><br>\n     * <br>\n     * The counterpart of this function is Line.getClosestT(Vertex).\n     *\n     * @method vertAt\n     * @param {number} t The position scalar.\n     * @return {Vertex} The vertex a position t.\n     * @instance\n     * @memberof VertTuple\n     **/\n    vertAt(t) {\n        return new Vertex(this.a.x + (this.b.x - this.a.x) * t, this.a.y + (this.b.y - this.a.y) * t);\n    }\n    ;\n    /**\n     * Get the denominator of this and the given line.\n     *\n     * If the denominator is zero (or close to zero) both line are co-linear.\n     *\n     * @method denominator\n     * @param {VertTuple} line\n     * @instance\n     * @memberof VertTuple\n     * @return {Number}\n     **/\n    denominator(line) {\n        // http://jsfiddle.net/justin_c_rounds/Gd2S2/\n        return ((line.b.y - line.a.y) * (this.b.x - this.a.x)) - ((line.b.x - line.a.x) * (this.b.y - this.a.y));\n    }\n    ;\n    /**\n     * Checks if this and the given line are co-linear.\n     *\n     * The constant Vertex.EPSILON is used for tolerance.\n     *\n     * @method colinear\n     * @param {VertTuple} line\n     * @instance\n     * @memberof VertTuple\n     * @return true if both lines are co-linear.\n     */\n    colinear(line) {\n        return Math.abs(this.denominator(line)) < Vertex.EPSILON;\n    }\n    ;\n    /**\n     * Get the closest position T from this line to the specified point.\n     *\n     * The counterpart for this function is Line.vertAt(Number).\n     *\n     * @name getClosetT\n     * @method getClosestT\n     * @param {XYCoords} p The point (vertex) to measure the distance to.\n     * @return {number} The line position t of minimal distance to p.\n     * @instance\n     * @memberof VertTuple\n     **/\n    getClosestT(p) {\n        var l2 = VertTuple.vtutils.dist2(this.a, this.b);\n        if (l2 === 0)\n            return 0;\n        var t = ((p.x - this.a.x) * (this.b.x - this.a.x) + (p.y - this.a.y) * (this.b.y - this.a.y)) / l2;\n        // Do not wrap to [0,1] here.\n        // Other results are of interest, too.\n        // t = Math.max(0, Math.min(1, t));\n        return t;\n    }\n    ;\n    /**\n     * Check if the given point is located on this line. Optionally also check if\n     * that point is located between point `a` and `b`.\n     *\n     * @method hasPoint\n     * @param {Vertex} point The point to check.\n     * @param {boolean=} insideBoundsOnly If set to to true (default=false) the point must be between start and end point of the line.\n     * @return {boolean} True if the given point is on this line.\n     * @instance\n     * @memberof VertTuple\n     */\n    hasPoint(point, insideBoundsOnly) {\n        const t = this.getClosestT(point);\n        // Compare to pointDistance?\n        if (typeof insideBoundsOnly !== \"undefined\" && insideBoundsOnly) {\n            const distance = Math.sqrt(VertTuple.vtutils.dist2(point, this.vertAt(t)));\n            return distance < Vertex.EPSILON && t >= 0 && t <= 1;\n        }\n        else {\n            return t >= 0 && t <= 1;\n        }\n    }\n    /**\n     * Get the closest point on this line to the specified point.\n     *\n     * @method getClosestPoint\n     * @param {Vertex} p The point (vertex) to measre the distance to.\n     * @return {Vertex} The point on the line that is closest to p.\n     * @instance\n     * @memberof VertTuple\n     **/\n    getClosestPoint(p) {\n        var t = this.getClosestT(p);\n        return this.vertAt(t);\n    }\n    ;\n    /**\n     * The the minimal distance between this line and the specified point.\n     *\n     * @method pointDistance\n     * @param {Vertex} p The point (vertex) to measre the distance to.\n     * @return {number} The absolute minimal distance.\n     * @instance\n     * @memberof VertTuple\n     **/\n    pointDistance(p) {\n        // Taken From:\n        // https://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\n        return Math.sqrt(VertTuple.vtutils.dist2(p, this.vertAt(this.getClosestT(p))));\n    }\n    ;\n    /**\n     * Create a deep clone of this instance.\n     *\n     * @method cloneLine\n     * @return {T} A type safe clone if this instance.\n     * @instance\n     * @memberof VertTuple\n     **/\n    clone() {\n        return this.factory(this.a.clone(), this.b.clone());\n    }\n    ;\n    /**\n     * Create a string representation of this line.\n     *\n     * @method totring\n     * @return {string} The string representing this line.\n     * @instance\n     * @memberof VertTuple\n     **/\n    toString() {\n        return \"{ a : \" + this.a.toString() + \", b : \" + this.b.toString() + \" }\";\n    }\n    ;\n}\n/**\n * @private\n **/\nVertTuple.vtutils = {\n    dist2: (v, w) => {\n        return (v.x - w.x) * (v.x - w.x) + (v.y - w.y) * (v.y - w.y);\n    }\n};\n//# sourceMappingURL=VertTuple.js.map","/**\n * @author   Ikaros Kappler\n * @date     2019-01-30\n * @modified 2019-02-23 Added the toSVGString function, overriding Line.toSVGString.\n * @modified 2019-03-20 Added JSDoc tags.\n * @modified 2019-04-19 Added the clone function (overriding Line.clone()).\n * @modified 2019-09-02 Added the Vector.perp() function.\n * @modified 2019-09-02 Added the Vector.inverse() function.\n * @modified 2019-12-04 Added the Vector.inv() function.\n * @modified 2020-03-23 Ported to Typescript from JS.\n * @modified 2021-01-20 Added UID.\n * @version  1.3.0\n *\n * @file Vector\n * @public\n **/\nimport { VertTuple } from \"./VertTuple\";\nimport { Vertex } from \"./Vertex\";\n/**\n * @classdesc A vector (Vertex,Vertex) is a line with a visible direction.<br>\n *            <br>\n *            Vectors are drawn with an arrow at their end point.<br>\n *            <b>The Vector class extends the Line class.</b>\n *\n * @requires VertTuple\n * @requires Vertex\n **/\nexport class Vector extends VertTuple {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name Vector\n     * @extends Line\n     * @param {Vertex} vertA - The start vertex of the vector.\n     * @param {Vertex} vertB - The end vertex of the vector.\n     **/\n    constructor(vertA, vertB) {\n        super(vertA, vertB, (a, b) => new Vector(a, b));\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"Vector\";\n    }\n    ;\n    /**\n     * Get the perpendicular of this vector which is located at a.\n     *\n     * @param {Number} t The position on the vector.\n     * @return {Vector} A new vector being the perpendicular of this vector sitting on a.\n     **/\n    perp() {\n        var v = this.clone();\n        v.sub(this.a);\n        v = new Vector(new Vertex(), new Vertex(-v.b.y, v.b.x));\n        v.a.add(this.a);\n        v.b.add(this.a);\n        return v;\n    }\n    ;\n    /**\n     * The inverse of a vector is a vector witht the same magnitude but oppose direction.\n     *\n     * Please not that the origin of this vector changes here: a->b becomes b->a.\n     *\n     * @return {Vector}\n     **/\n    inverse() {\n        var tmp = this.a;\n        this.a = this.b;\n        this.b = tmp;\n        return this;\n    }\n    ;\n    /**\n     * This function computes the inverse of the vector, which means 'a' stays untouched.\n     *\n     * @return {Vector} this for chaining.\n     **/\n    inv() {\n        this.b.x = this.a.x - (this.b.x - this.a.x);\n        this.b.y = this.a.y - (this.b.y - this.a.y);\n        return this;\n    }\n    ;\n    /**\n     * Get the intersection if this vector and the specified vector.\n     *\n     * @method intersection\n     * @param {Vector} line The second vector.\n     * @return {Vertex} The intersection (may lie outside the end-points).\n     * @instance\n     * @memberof Line\n     **/\n    intersection(line) {\n        var denominator = this.denominator(line);\n        if (denominator == 0)\n            return null;\n        var a = this.a.y - line.a.y;\n        var b = this.a.x - line.a.x;\n        var numerator1 = ((line.b.x - line.a.x) * a) - ((line.b.y - line.a.y) * b);\n        var numerator2 = ((this.b.x - this.a.x) * a) - ((this.b.y - this.a.y) * b);\n        a = numerator1 / denominator; // NaN if parallel lines\n        b = numerator2 / denominator;\n        // TODO:\n        // FOR A VECTOR THE LINE-INTERSECTION MUST BE ON BOTH VECTORS\n        // if we cast these lines infinitely in both directions, they intersect here:\n        return new Vertex(this.a.x + (a * (this.b.x - this.a.x)), this.a.y + (a * (this.b.y - this.a.y)));\n    }\n    ;\n    /**\n     * Create an SVG representation of this line.\n     *\n     * @deprecated DEPRECATION Please use the drawutilssvg library and an XMLSerializer instead.\n     * @method toSVGString\n     * @override\n     * @param {object=} options - A set of options, like 'className'.\n     * @return {string} The SVG string representation.\n     * @instance\n     * @memberof Vector\n     **/\n    toSVGString(options) {\n        options = options || {};\n        var buffer = [];\n        var vertices = Vector.utils.buildArrowHead(this.a, this.b, 8, 1.0, 1.0);\n        buffer.push('<g');\n        if (options.className)\n            buffer.push(' class=\"' + options.className + '\"');\n        buffer.push('>');\n        buffer.push('   <line');\n        buffer.push(' x1=\"' + this.a.x + '\"');\n        buffer.push(' y1=\"' + this.a.y + '\"');\n        buffer.push(' x2=\"' + vertices[0].x + '\"');\n        buffer.push(' y2=\"' + vertices[0].y + '\"');\n        buffer.push(' />');\n        // Add arrow head\n        buffer.push('   <polygon points=\"');\n        for (var i = 0; i < vertices.length; i++) {\n            if (i > 0)\n                buffer.push(' ');\n            buffer.push('' + vertices[i].x + ',' + vertices[i].y);\n        }\n        buffer.push('\"/>');\n        buffer.push('</g>');\n        return buffer.join('');\n    }\n    ;\n}\nVector.utils = {\n    /**\n     * Generate a four-point arrow head, starting at the vector end minus the\n     * arrow head length.\n     *\n     * The first vertex in the returned array is guaranteed to be the located\n     * at the vector line end minus the arrow head length.\n     *\n     *\n     * Due to performance all params are required.\n     *\n     * The params scaleX and scaleY are required for the case that the scaling is not uniform (x and y\n     * scaling different). Arrow heads should not look distored on non-uniform scaling.\n     *\n     * If unsure use 1.0 for scaleX and scaleY (=no distortion).\n     * For headlen use 8, it's a good arrow head size.\n     *\n     * Example:\n     *    buildArrowHead( new Vertex(0,0), new Vertex(50,100), 8, 1.0, 1.0 )\n     *\n     * @param {Vertex} zA - The start vertex of the vector to calculate the arrow head for.\n     * @param {Vertex} zB - The end vertex of the vector.\n     * @param {number} headlen - The length of the arrow head (along the vector direction. A good value is 12).\n     * @param {number} scaleX  - The horizontal scaling during draw.\n     * @param {number} scaleY  - the vertical scaling during draw.\n     **/\n    buildArrowHead: (zA, zB, headlen, scaleX, scaleY) => {\n        var angle = Math.atan2((zB.y - zA.y) * scaleY, (zB.x - zA.x) * scaleX);\n        var vertices = [];\n        vertices.push(new Vertex(zB.x * scaleX - (headlen) * Math.cos(angle), zB.y * scaleY - (headlen) * Math.sin(angle)));\n        vertices.push(new Vertex(zB.x * scaleX - (headlen * 1.35) * Math.cos(angle - Math.PI / 8), zB.y * scaleY - (headlen * 1.35) * Math.sin(angle - Math.PI / 8)));\n        vertices.push(new Vertex(zB.x * scaleX, zB.y * scaleY));\n        vertices.push(new Vertex(zB.x * scaleX - (headlen * 1.35) * Math.cos(angle + Math.PI / 8), zB.y * scaleY - (headlen * 1.35) * Math.sin(angle + Math.PI / 8)));\n        return vertices;\n    }\n};\n//# sourceMappingURL=Vector.js.map","/**\n * @author   Ikaros Kappler\n * @date     2013-08-15\n * @modified 2018-08-16 Added a closure. Removed the wrapper class 'IKRS'. Replaced class THREE.Vector2 by Vertex class.\n * @modified 2018-11-19 Added the fromArray(Array) function.\n * @modified 2018-11-28 Added the locateCurveByPoint(Vertex) function.\n * @modified 2018-12-04 Added the toSVGPathData() function.\n * @modified 2019-03-20 Added JSDoc tags.\n * @modified 2019-03-23 Changed the signatures of getPoint, getPointAt and getTangent (!version 2.0).\n * @modified 2019-12-02 Fixed the updateArcLength function. It used the wrong pointAt function (was renamed before).\n * @modified 2020-02-06 Added the getSubCurveAt(number,number) function.\n * @modified 2020-02-06 Fixed a serious bug in the arc lenght calculation (length was never reset, urgh).\n * @modified 2020-02-07 Added the isInstance(any) function.\n * @modified 2020-02-10 Added the reverse() function.\n * @modified 2020-02-10 Fixed the translate(...) function (returning 'this' was missing).\n * @modified 2020-03-24 Ported this class from vanilla JS to Typescript.\n * @modified 2020-06-03 Added the getBounds() function.\n * @modified 2020-07-14 Changed the moveCurvePoint(...,Vertex) to moveCurvePoint(...,XYCoords), which is more generic.\n * @modified 2020-07-24 Added the getClosestT function and the helper function locateIntervalByDistance(...).\n * @modified 2021-01-20 Added UID.\n * @version 2.5.0\n *\n * @file CubicBezierCurve\n * @public\n **/\nimport { Bounds } from \"./Bounds\";\nimport { UIDGenerator } from \"./UIDGenerator\";\nimport { Vertex } from \"./Vertex\";\nimport { Vector } from \"./Vector\";\n/**\n * @classdesc A refactored cubic bezier curve class.\n *\n * @requires Bounds\n * @requires Vertex\n * @requires Vector\n * @requires XYCoords\n * @requires UID\n * @requires UIDGenerator\n */\nexport class CubicBezierCurve {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name CubicBezierCurve\n     * @param {Vertex} startPoint - The Bézier curve's start point.\n     * @param {Vertex} endPoint   - The Bézier curve's end point.\n     * @param {Vertex} startControlPoint - The Bézier curve's start control point.\n     * @param {Vertex} endControlPoint   - The Bézier curve's end control point.\n     **/\n    constructor(startPoint, endPoint, startControlPoint, endControlPoint) {\n        /** @constant {number} */\n        this.START_POINT = CubicBezierCurve.START_POINT;\n        /** @constant {number} */\n        this.START_CONTROL_POINT = CubicBezierCurve.START_CONTROL_POINT;\n        /** @constant {number} */\n        this.END_CONTROL_POINT = CubicBezierCurve.END_CONTROL_POINT;\n        /** @constant {number} */\n        this.END_POINT = CubicBezierCurve.END_POINT;\n        this.uid = UIDGenerator.next();\n        this.startPoint = startPoint;\n        this.startControlPoint = startControlPoint;\n        this.endPoint = endPoint;\n        this.endControlPoint = endControlPoint;\n        this.curveIntervals = 30;\n        // An array of vertices\n        this.segmentCache = [];\n        // An array of floats\n        this.segmentLengths = [];\n        // float\n        this.arcLength = null;\n        this.updateArcLengths();\n    }\n    ;\n    /**\n     * Move the given curve point (the start point, end point or one of the two\n     * control points).\n     *\n     * @method moveCurvePoint\n     * @param {number} pointID - The numeric identicator of the point to move. Use one of the four eBezierPoint constants.\n     * @param {XYCoords} moveAmount - The amount to move the specified point by.\n     * @param {boolean} moveControlPoint - Move the control points along with their path point (if specified point is a path point).\n     * @param {boolean} updateArcLengths - Specifiy if the internal arc segment buffer should be updated.\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {void}\n     **/\n    moveCurvePoint(pointID, moveAmount, moveControlPoint, updateArcLengths) {\n        if (pointID == this.START_POINT) {\n            this.getStartPoint().add(moveAmount);\n            if (moveControlPoint)\n                this.getStartControlPoint().add(moveAmount);\n        }\n        else if (pointID == this.START_CONTROL_POINT) {\n            this.getStartControlPoint().add(moveAmount);\n        }\n        else if (pointID == this.END_CONTROL_POINT) {\n            this.getEndControlPoint().add(moveAmount);\n        }\n        else if (pointID == this.END_POINT) {\n            this.getEndPoint().add(moveAmount);\n            if (moveControlPoint)\n                this.getEndControlPoint().add(moveAmount);\n        }\n        else {\n            console.log(`[CubicBezierCurve.moveCurvePoint] pointID '${pointID}' invalid.`);\n        }\n        if (updateArcLengths)\n            this.updateArcLengths();\n    }\n    ;\n    /**\n     * Translate the whole curve by the given {x,y} amount: moves all four points.\n     *\n     * @method translate\n     * @param {Vertex} amount - The amount to translate this curve by.\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {CubicBezierCurve} this (for chaining).\n     **/\n    translate(amount) {\n        this.startPoint.add(amount);\n        this.startControlPoint.add(amount);\n        this.endControlPoint.add(amount);\n        this.endPoint.add(amount);\n        return this;\n    }\n    ;\n    /**\n     * Reverse this curve, means swapping start- and end-point and swapping\n     * start-control- and end-control-point.\n     *\n     * @method reverse\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {CubicBezierCurve} this (for chaining).\n     **/\n    reverse() {\n        let tmp = this.startPoint;\n        this.startPoint = this.endPoint;\n        this.endPoint = tmp;\n        tmp = this.startControlPoint;\n        this.startControlPoint = this.endControlPoint;\n        this.endControlPoint = tmp;\n        return this;\n    }\n    ;\n    /**\n     * Get the total curve length.<br>\n     * <br>\n     * As not all Bézier curved have a closed formula to calculate their lengths, this\n     * implementation uses a segment buffer (with a length of 30 segments). So the\n     * returned length is taken from the arc segment buffer.<br>\n     * <br>\n     * Note that if the curve points were changed and the segment buffer was not\n     * updated this function might return wrong (old) values.\n     *\n     * @method getLength\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {number} >= 0\n     **/\n    getLength() {\n        return this.arcLength;\n    }\n    ;\n    /**\n     * Uptate the internal arc segment buffer and their lengths.<br>\n     * <br>\n     * All class functions update the buffer automatically; if any\n     * curve point is changed by other reasons you should call this\n     * function to keep actual values in the buffer.\n     *\n     * @method updateArcLengths\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {void}\n     **/\n    updateArcLengths() {\n        let pointA = this.startPoint.clone();\n        let pointB = new Vertex(0, 0);\n        let curveStep = 1.0 / this.curveIntervals;\n        // Clear segment cache\n        this.segmentCache = [];\n        // Push start point into buffer\n        this.segmentCache.push(this.startPoint);\n        this.segmentLengths = [];\n        let newLength = 0.0;\n        var t = 0.0;\n        let tmpLength;\n        while (t <= 1.0) {\n            pointB = this.getPointAt(t);\n            // Store point into cache\n            this.segmentCache.push(pointB);\n            // Calculate segment length\n            tmpLength = pointA.distance(pointB);\n            this.segmentLengths.push(tmpLength);\n            newLength += tmpLength;\n            pointA = pointB;\n            t += curveStep;\n        }\n        this.arcLength = newLength;\n    }\n    ;\n    /**\n     * Get a 't' (relative position on curve) with the closest distance to point 'p'.\n     *\n     * The returned number is 0.0 <= t <= 1.0. Use the getPointAt(t) function to retrieve the actual curve point.\n     *\n     * This function uses a recursive approach by cutting the curve into several linear segments.\n     *\n     * @param {Vertex} p - The point to find the closest position ('t' on the curve).\n     * @return {number}\n     **/\n    getClosestT(p) {\n        // We would like to have an error that's not larger than 1.0.\n        var desiredEpsilon = 1.0;\n        var result = { t: 0, tPrev: 0.0, tNext: 1.0 };\n        var iteration = 0;\n        do {\n            result = this.locateIntervalByDistance(p, result.tPrev, result.tNext, this.curveIntervals);\n            iteration++;\n            // Be sure: stop after 4 iterations\n        } while (iteration < 4 && this.getPointAt(result.tPrev).distance(this.getPointAt(result.tNext)) > desiredEpsilon);\n        return result.t;\n    }\n    ;\n    /**\n     * This helper function locates the 't' on a fixed step interval with the minimal distance\n     * between the curve (at 't') and the given point.\n     *\n     * Furthermore you must specify a sub curve (start 't' and end 't') you want to search on.\n     * Using tStart=0.0 and tEnd=1.0 will search on the full curve.\n     *\n     * @param {Vertex} p - The point to find the closest curve point for.\n     * @param {number} tStart - The start position (start 't' of the sub curve). Should be >= 0.0.\n     * @param {number} tEnd - The end position (end 't' of the sub curve). Should be <= 1.0.\n     * @param {number} stepCount - The number of steps to check within the interval.\n     *\n     * @return {object} - An object with t, tPrev and tNext (numbers).\n     **/\n    locateIntervalByDistance(p, tStart, tEnd, stepCount) {\n        var minIndex = -1;\n        var minDist = 0;\n        var t = 0.0;\n        const tDiff = tEnd - tStart;\n        for (var i = 0; i <= stepCount; i++) {\n            t = tStart + tDiff * (i / stepCount);\n            var vert = this.getPointAt(t);\n            var dist = vert.distance(p);\n            if (minIndex == -1 || dist < minDist) {\n                minIndex = i;\n                minDist = dist;\n            }\n        }\n        return { t: tStart + tDiff * (minIndex / stepCount),\n            tPrev: tStart + tDiff * (Math.max(0, minIndex - 1) / stepCount),\n            tNext: tStart + tDiff * (Math.min(stepCount, minIndex + 1) / stepCount)\n        };\n    }\n    ;\n    /**\n     * Get the bounds of this bezier curve.\n     *\n     * The bounds are approximated by the underlying segment buffer; the more segment there are,\n     * the more accurate will be the returned bounds.\n     *\n     * @return {Bounds} The bounds of this curve.\n     **/\n    getBounds() {\n        var min = new Vertex(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\n        var max = new Vertex(Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\n        let v;\n        for (var i = 0; i < this.segmentCache.length; i++) {\n            v = this.segmentCache[i];\n            min.x = Math.min(min.x, v.x);\n            min.y = Math.min(min.y, v.y);\n            max.x = Math.max(max.x, v.x);\n            max.y = Math.max(max.y, v.y);\n        }\n        return new Bounds(min, max);\n    }\n    ;\n    /**\n     * Get the start point of the curve.<br>\n     * <br>\n     * This function just returns this.startPoint.\n     *\n     * @method getStartPoint\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex} this.startPoint\n     **/\n    getStartPoint() {\n        return this.startPoint;\n    }\n    ;\n    /**\n     * Get the end point of the curve.<br>\n     * <br>\n     * This function just returns this.endPoint.\n     *\n     * @method getEndPoint\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex} this.endPoint\n     **/\n    getEndPoint() {\n        return this.endPoint;\n    }\n    ;\n    /**\n     * Get the start control point of the curve.<br>\n     * <br>\n     * This function just returns this.startControlPoint.\n     *\n     * @method getStartControlPoint\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex} this.startControlPoint\n     **/\n    getStartControlPoint() {\n        return this.startControlPoint;\n    }\n    ;\n    /**\n     * Get the end control point of the curve.<br>\n     * <br>\n     * This function just returns this.endControlPoint.\n     *\n     * @method getEndControlPoint\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex} this.endControlPoint\n     **/\n    getEndControlPoint() {\n        return this.endControlPoint;\n    }\n    ;\n    /**\n     * Get one of the four curve points specified by the passt point ID.\n     *\n     * @method getEndControlPoint\n     * @param {number} id - One of START_POINT, START_CONTROL_POINT, END_CONTROL_POINT or END_POINT.\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex}\n     **/\n    getPointByID(id) {\n        if (id == this.START_POINT)\n            return this.startPoint;\n        if (id == this.END_POINT)\n            return this.endPoint;\n        if (id == this.START_CONTROL_POINT)\n            return this.startControlPoint;\n        if (id == this.END_CONTROL_POINT)\n            return this.endControlPoint;\n        throw new Error(`Invalid point ID '${id}'.`);\n    }\n    ;\n    /**\n     * Get the curve point at a given position t, where t is in [0,1].<br>\n     * <br>\n     * @see Line.pointAt\n     *\n     * @method getPointAt\n     * @param {number} t - The position on the curve in [0,1] (0 means at\n     *                     start point, 1 means at end point, other values address points in bertween).\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex}\n     **/\n    getPointAt(t) {\n        // Perform some powerful math magic\n        const x = this.startPoint.x * Math.pow(1.0 - t, 3) + this.startControlPoint.x * 3 * t * Math.pow(1.0 - t, 2)\n            + this.endControlPoint.x * 3 * Math.pow(t, 2) * (1.0 - t) + this.endPoint.x * Math.pow(t, 3);\n        const y = this.startPoint.y * Math.pow(1.0 - t, 3) + this.startControlPoint.y * 3 * t * Math.pow(1.0 - t, 2)\n            + this.endControlPoint.y * 3 * Math.pow(t, 2) * (1.0 - t) + this.endPoint.y * Math.pow(t, 3);\n        return new Vertex(x, y);\n    }\n    ;\n    /**\n     * Get the curve point at a given position u, where u is in [0,arcLength].<br>\n     * <br>\n     * @see CubicBezierCurve.getPointAt\n     *\n     * @method getPoint\n     * @param {number} u - The position on the curve in [0,arcLength] (0 means at\n     *                     start point, arcLength means at end point, other values address points in bertween).\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex}\n     **/\n    getPoint(u) {\n        return this.getPointAt(u / this.arcLength);\n    }\n    ;\n    /**\n     * Get the curve tangent vector at a given absolute curve position t in [0,1].<br>\n     * <br>\n     * Note that the returned tangent vector (end point) is not normalized and relative to (0,0).\n     *\n     * @method getTangent\n     * @param {number} t - The position on the curve in [0,1].\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex}\n     **/\n    getTangentAt(t) {\n        const a = this.getStartPoint();\n        const b = this.getStartControlPoint();\n        const c = this.getEndControlPoint();\n        const d = this.getEndPoint();\n        // This is the shortened one\n        const t2 = t * t;\n        // (1 - t)^2 = (1-t)*(1-t) = 1 - t - t + t^2 = 1 - 2*t + t^2\n        const nt2 = 1 - 2 * t + t2;\n        const tX = -3 * a.x * nt2 +\n            b.x * (3 * nt2 - 6 * (t - t2)) +\n            c.x * (6 * (t - t2) - 3 * t2) +\n            3 * d.x * t2;\n        const tY = -3 * a.y * nt2 +\n            b.y * (3 * nt2 - 6 * (t - t2)) +\n            c.y * (6 * (t - t2) - 3 * t2) +\n            3 * d.y * t2;\n        // Note: my implementation does NOT normalize tangent vectors!\n        return new Vertex(tX, tY);\n    }\n    ;\n    /**\n     * Get a sub curve at the given start end end offsets (values between 0.0 and 1.0).\n     *\n     * tStart >= tEnd is allowed, you will get a reversed sub curve then.\n     *\n     * @method getSubCurveAt\n     * @param {number} tStart – The start offset of the desired sub curve (must be in [0..1]).\n     * @param {number} tEnd – The end offset if the desired cub curve (must be in [0..1]).\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {CubicBezierCurve} The sub curve as a new curve.\n     **/\n    getSubCurveAt(tStart, tEnd) {\n        const startVec = new Vector(this.getPointAt(tStart), this.getTangentAt(tStart));\n        const endVec = new Vector(this.getPointAt(tEnd), this.getTangentAt(tEnd).inv());\n        // Tangents are relative. Make absolute.\n        startVec.b.add(startVec.a);\n        endVec.b.add(endVec.a);\n        // This 'splits' the curve at the given point at t.\n        startVec.scale(0.33333333 * (tEnd - tStart));\n        endVec.scale(0.33333333 * (tEnd - tStart));\n        // Draw the bezier curve\n        // pb.draw.cubicBezier( startVec.a, endVec.a, startVec.b, endVec.b, '#8800ff', 2 );\n        return new CubicBezierCurve(startVec.a, endVec.a, startVec.b, endVec.b);\n    }\n    ;\n    /**\n     * Convert a relative curve position u to the absolute curve position t.\n     *\n     * @method convertU2t\n     * @param {number} u - The relative position on the curve in [0,arcLength].\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {number}\n     **/\n    convertU2T(u) {\n        return Math.max(0.0, Math.min(1.0, (u / this.arcLength)));\n    }\n    ;\n    /**\n     * Get the curve tangent vector at a given relative position u in [0,arcLength].<br>\n     * <br>\n     * Note that the returned tangent vector (end point) is not normalized.\n     *\n     * @method getTangent\n     * @param {number} u - The position on the curve in [0,arcLength].\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex}\n     **/\n    getTangent(u) {\n        return this.getTangentAt(this.convertU2T(u));\n    }\n    ;\n    /**\n     * Get the curve perpendicular at a given relative position u in [0,arcLength] as a vector.<br>\n     * <br>\n     * Note that the returned vector (end point) is not normalized.\n     *\n     * @method getPerpendicular\n     * @param {number} u - The relative position on the curve in [0,arcLength].\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex}\n     **/\n    getPerpendicular(u) {\n        return this.getPerpendicularAt(this.convertU2T(u));\n    }\n    ;\n    /**\n     * Get the curve perpendicular at a given absolute position t in [0,1] as a vector.<br>\n     * <br>\n     * Note that the returned vector (end point) is not normalized.\n     *\n     * @method getPerpendicularAt\n     * @param {number} u - The absolute position on the curve in [0,1].\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {Vertex}\n     **/\n    getPerpendicularAt(t) {\n        const tangentVector = this.getTangentAt(t);\n        return new Vertex(tangentVector.y, -tangentVector.x);\n    }\n    ;\n    /**\n     * Clone this Bézier curve (deep clone).\n     *\n     * @method clone\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {CubicBezierCurve}\n     **/\n    clone() {\n        return new CubicBezierCurve(this.getStartPoint().clone(), this.getEndPoint().clone(), this.getStartControlPoint().clone(), this.getEndControlPoint().clone());\n    }\n    ;\n    /**\n     * Check if this and the specified curve are equal.<br>\n     * <br>\n     * All four points need to be equal for this, the Vertex.equals function is used.<br>\n     * <br>\n     * Please note that this function is not type safe (comparison with any object will fail).\n     *\n     * @method clone\n     * @param {CubicBezierCurve} curve - The curve to compare with.\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {boolean}\n     **/\n    equals(curve) {\n        // Note: in the earlier vanilla-JS version this was callable with plain objects.\n        //       Let's see if this restricted version works out.\n        if (!curve)\n            return false;\n        if (!curve.startPoint ||\n            !curve.endPoint ||\n            !curve.startControlPoint ||\n            !curve.endControlPoint)\n            return false;\n        return this.startPoint.equals(curve.startPoint)\n            && this.endPoint.equals(curve.endPoint)\n            && this.startControlPoint.equals(curve.startControlPoint)\n            && this.endControlPoint.equals(curve.endControlPoint);\n    }\n    ;\n    /**\n     * Quick check for class instance.\n     * Is there a better way?\n     *\n     * @method isInstance\n     * @param {any} obj - Check if the passed object/value is an instance of CubicBezierCurve.\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {boolean}\n     **/\n    static isInstance(obj) {\n        // Note: check this again\n        /* OLD VANILLA JS IMPLEMENTATION */\n        /* if( typeof obj != \"object\" )\n            return false;\n        function hasXY(v) {\n            return typeof v != \"undefined\" && typeof v.x == \"number\" && typeof v.y == \"number\";\n        }\n        return typeof obj.startPoint == \"object\" && hasXY(obj.startPoint)\n            && typeof obj.endPoint == \"object\" && hasXY(obj.endPoint)\n            && typeof obj.startControlPoint == \"object\" && hasXY(obj.startControlPoint)\n            && typeof obj.endControlPoint == \"object\" && hasXY(obj.endControlPoint);\n        */\n        return obj instanceof CubicBezierCurve;\n    }\n    ;\n    /**\n     * Create an SVG path data representation of this bézier curve.\n     *\n     * Path data string format is:<br>\n     *  <pre>'M x0 y1 C dx0 dy1 dx1 dy1 x1 x2'</pre><br>\n     * or in other words<br>\n     *   <pre>'M startoint.x startPoint.y C startControlPoint.x startControlPoint.y endControlPoint.x endControlPoint.y endPoint.x endPoint.y'</pre>\n     *\n     * @method toSVGPathData\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {string}  The SVG path data string.\n     **/\n    toSVGPathData() {\n        var buffer = [];\n        buffer.push('M ');\n        buffer.push(this.startPoint.x.toString());\n        buffer.push(' ');\n        buffer.push(this.startPoint.y.toString());\n        buffer.push(' C ');\n        buffer.push(this.startControlPoint.x.toString());\n        buffer.push(' ');\n        buffer.push(this.startControlPoint.y.toString());\n        buffer.push(' ');\n        buffer.push(this.endControlPoint.x.toString());\n        buffer.push(' ');\n        buffer.push(this.endControlPoint.y.toString());\n        buffer.push(' ');\n        buffer.push(this.endPoint.x.toString());\n        buffer.push(' ');\n        buffer.push(this.endPoint.y.toString());\n        return buffer.join('');\n    }\n    ;\n    /**\n     * Convert this curve to a JSON string.\n     *\n     * @method toJSON\n     * @param {boolean=} [prettyFormat=false] - If set to true the function will add line breaks.\n     * @instance\n     * @memberof CubicBezierCurve\n     * @return {string} The JSON data.\n     **/\n    toJSON(prettyFormat) {\n        var jsonString = \"{ \" + // begin object\n            (prettyFormat ? \"\\n\\t\" : \"\") +\n            \"\\\"startPoint\\\" : [\" + this.getStartPoint().x + \",\" + this.getStartPoint().y + \"], \" +\n            (prettyFormat ? \"\\n\\t\" : \"\") +\n            \"\\\"endPoint\\\" : [\" + this.getEndPoint().x + \",\" + this.getEndPoint().y + \"], \" +\n            (prettyFormat ? \"\\n\\t\" : \"\") +\n            \"\\\"startControlPoint\\\": [\" + this.getStartControlPoint().x + \",\" + this.getStartControlPoint().y + \"], \" +\n            (prettyFormat ? \"\\n\\t\" : \"\") +\n            \"\\\"endControlPoint\\\" : [\" + this.getEndControlPoint().x + \",\" + this.getEndControlPoint().y + \"]\" +\n            (prettyFormat ? \"\\n\\t\" : \"\") +\n            \" }\"; // end object\n        return jsonString;\n    }\n    ;\n    /**\n     * Parse a Bézier curve from the given JSON string.\n     *\n     * @method fromJSON\n     * @param {string} jsonString - The JSON data to parse.\n     * @memberof CubicBezierCurve\n     * @static\n     * @throws An exception if the JSON string is malformed.\n     * @return {CubicBezierCurve}\n     **/\n    static fromJSON(jsonString) {\n        var obj = JSON.parse(jsonString);\n        return CubicBezierCurve.fromObject(obj);\n    }\n    ;\n    /**\n     * Try to convert the passed object to a CubicBezierCurve.\n     *\n     * @method fromObject\n     * @param {object} obj - The object to convert.\n     * @memberof CubicBezierCurve\n     * @static\n     * @throws An exception if the passed object is malformed.\n     * @return {CubicBezierCurve}\n     **/\n    static fromObject(obj) {\n        if (typeof obj !== \"object\")\n            throw \"Can only build from object.\";\n        if (!obj.startPoint)\n            throw \"Object member \\\"startPoint\\\" missing.\";\n        if (!obj.endPoint)\n            throw \"Object member \\\"endPoint\\\" missing.\";\n        if (!obj.startControlPoint)\n            throw \"Object member \\\"startControlPoint\\\" missing.\";\n        if (!obj.endControlPoint)\n            throw \"Object member \\\"endControlPoint\\\" missing.\";\n        return new CubicBezierCurve(new Vertex(obj.startPoint[0], obj.startPoint[1]), new Vertex(obj.endPoint[0], obj.endPoint[1]), new Vertex(obj.startControlPoint[0], obj.startControlPoint[1]), new Vertex(obj.endControlPoint[0], obj.endControlPoint[1]));\n    }\n    ;\n    /**\n     * Convert a 4-element array of vertices to a cubic bézier curve.\n     *\n     * @method fromArray\n     * @param {Vertex[]} arr -  [ startVertex, endVertex, startControlVertex, endControlVertex ]\n     * @memberof CubicBezierCurve\n     * @throws An exception if the passed array is malformed.\n     * @return {CubicBezierCurve}\n     **/\n    static fromArray(arr) {\n        if (!Array.isArray(arr))\n            throw \"Can only build from object.\";\n        if (arr.length != 4)\n            throw \"Can only build from array with four elements.\";\n        return new CubicBezierCurve(arr[0], arr[1], arr[2], arr[3]);\n    }\n    ;\n}\n/** @constant {number} */\nCubicBezierCurve.START_POINT = 0;\n/** @constant {number} */\nCubicBezierCurve.START_CONTROL_POINT = 1;\n/** @constant {number} */\nCubicBezierCurve.END_CONTROL_POINT = 2;\n/** @constant {number} */\nCubicBezierCurve.END_POINT = 3;\n//# sourceMappingURL=CubicBezierCurve.js.map","/**\n * @author Ikaros Kappler\n * @date 2013-08-19\n * @modified 2018-08-16 Added closure. Removed the 'IKRS' wrapper.\n * @modified 2018-11-20 Added circular auto-adjustment.\n * @modified 2018-11-25 Added the point constants to the BezierPath class itself.\n * @modified 2018-11-28 Added the locateCurveByStartPoint() function.\n * @modified 2018-12-04 Added the toSVGString() function.\n * @modified 2019-03-23 Added JSDoc tags.\n * @modified 2019-03-23 Changed the fuctions getPoint and getPointAt to match semantics in the Line class.\n * @modified 2019-11-18 Fixed the clone function: adjustCircular attribute was not cloned.\n * @modified 2019-12-02 Removed some excessive comments.\n * @modified 2019-12-04 Fixed the missing obtainHandleLengths behavior in the adjustNeightbourControlPoint function.\n * @modified 2020-02-06 Added function locateCurveByEndPoint( Vertex ).\n * @modified 2020-02-11 Added 'return this' to the scale(Vertex,number) and to the translate(Vertex) function.\n * @modified 2020-03-24 Ported this class from vanilla-JS to Typescript.\n * @modified 2020-06-03 Made the private helper function _locateUIndex to a private function.\n * @modified 2020-06-03 Added the getBounds() function.\n * @modified 2020-07-14 Changed the moveCurvePoint(...,Vertex) to moveCurvePoint(...,XYCoords).\n * @modified 2020-07-24 Added the getClosestT(Vertex) function.\n * @modified 2020-12-29 Constructor is now private (no explicit use intended).\n * @modified 2021-05-25 Added BezierPath.fromReducedList( Array<number> ).\n * @version 2.3.1\n *\n * @file BezierPath\n * @public\n **/\nimport { Bounds } from \"./Bounds\";\nimport { CubicBezierCurve } from \"./CubicBezierCurve\";\nimport { UIDGenerator } from \"./UIDGenerator\";\nimport { Vertex } from \"./Vertex\";\n/**\n * @classdesc A BezierPath class.\n *\n * This was refactored from an older project.\n *\n * @requires Bounds\n * @requires Vertex\n * @requires CubicBezierCurve\n * @requires XYCoords\n * @requires SVGSerializable\n * @requires UID\n * @requires UIDGenerator\n **/\nexport class BezierPath {\n    /**\n     * The constructor.<br>\n     * <br>\n     * This constructor expects a sequence of path points and will approximate\n     * the location of control points by picking some between the points.<br>\n     * You should consider just constructing empty paths and then add more curves later using\n     * the addCurve() function.\n     *\n     * @constructor\n     * @name BezierPath\n     * @param {Vertex[]} pathPoints - An array of path vertices (no control points).\n     **/\n    constructor(pathPoints) {\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"BezierPath\";\n        /** @constant {number} */\n        this.START_POINT = 0;\n        /** @constant {number} */\n        this.START_CONTROL_POINT = 1;\n        /** @constant {number} */\n        this.END_CONTROL_POINT = 2;\n        /** @constant {number} */\n        this.END_POINT = 3;\n        this.uid = UIDGenerator.next();\n        if (!pathPoints)\n            pathPoints = [];\n        this.totalArcLength = 0.0;\n        // Set this flag to true if you want the first point and\n        // last point of the path to be auto adjusted, too.\n        this.adjustCircular = false;\n        this.bezierCurves = [];\n    }\n    /**\n     * Add a cubic bezier curve to the end of this path.\n     *\n     * @method addCurve\n     * @param {CubicBezierCurve} curve - The curve to be added to the end of the path.\n     * @instance\n     * @memberof BezierPath\n     * @return {void}\n     **/\n    addCurve(curve) {\n        if (curve == null || typeof curve == \"undefined\")\n            throw \"Cannot add null curve to bézier path.\";\n        this.bezierCurves.push(curve);\n        if (this.bezierCurves.length > 1) {\n            curve.startPoint = this.bezierCurves[this.bezierCurves.length - 2].endPoint;\n            this.adjustSuccessorControlPoint(this.bezierCurves.length - 2, // curveIndex,\n            true, // obtainHandleLength,\n            true // updateArcLengths\n            );\n        }\n        else {\n            this.totalArcLength += curve.getLength();\n        }\n    }\n    /**\n     * Locate the curve with the given start point (function returns the index).\n     *\n     * @method locateCurveByStartPoint\n     * @param {Vertex} point - The (curve start-) point to look for.\n     * @instance\n     * @memberof BezierPath\n     * @return {number} The curve index or -1 if curve (start-) point not found\n     **/\n    locateCurveByStartPoint(point) {\n        // for( var i in this.bezierCurves ) {\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            if (this.bezierCurves[i].startPoint.equals(point))\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Locate the curve with the given end point (function returns the index).\n     *\n     * @method locateCurveByEndPoint\n     * @param {Vertex} point - The (curve end-) point to look for.\n     * @instance\n     * @memberof BezierPath\n     * @return {number} The curve index or -1 if curve (end-) point not found\n     **/\n    locateCurveByEndPoint(point) {\n        // for( var i in this.bezierCurves ) {\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            if (this.bezierCurves[i].endPoint.equals(point))\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Locate the curve with the given start point (function returns the index).\n     *\n     * @method locateCurveByStartControlPoint\n     * @param {Vertex} point - The (curve endt-) point to look for.\n     * @instance\n     * @memberof BezierPath\n     * @return {number} The curve index or -1 if curve (end-) point not found\n     **/\n    locateCurveByStartControlPoint(point) {\n        // for( var i in this.bezierCurves ) {\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            if (this.bezierCurves[i].startControlPoint.equals(point))\n                return i;\n        }\n        return -1;\n    }\n    // +---------------------------------------------------------------------------------\n    // | Locate the curve with the given end control point.\n    // |\n    // | @param point:Vertex The point to look for.\n    // | @return Number The index or -1 if not found.\n    // +-------------------------------\n    locateCurveByEndControlPoint(point) {\n        // for( var i in this.bezierCurves ) {\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            if (this.bezierCurves[i].endControlPoint.equals(point))\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Get the total length of this path.<br>\n     * <br>\n     * Note that the returned value comes from the curve buffer. Unregistered changes\n     * to the curve points will result in invalid path length values.\n     *\n     * @method getLength\n     * @instance\n     * @memberof BezierPath\n     * @return {number} The (buffered) length of the path.\n     **/\n    getLength() {\n        return this.totalArcLength;\n    }\n    /**\n     * This function is internally called whenever the curve or path configuration\n     * changed. It updates the attribute that stores the path length information.<br>\n     * <br>\n     * If you perform any unregistered changes to the curve points you should call\n     * this function afterwards to update the curve buffer. Not updating may\n     * result in unexpected behavior.\n     *\n     * @method updateArcLengths\n     * @instance\n     * @memberof BezierPath\n     * @return {void}\n     **/\n    updateArcLengths() {\n        this.totalArcLength = 0.0;\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            this.bezierCurves[i].updateArcLengths();\n            this.totalArcLength += this.bezierCurves[i].getLength();\n        }\n    }\n    /**\n     * Get the number of curves in this path.\n     *\n     * @method getCurveCount\n     * @instance\n     * @memberof BezierPath\n     * @return {number} The number of curves in this path.\n     **/\n    getCurveCount() {\n        return this.bezierCurves.length;\n    }\n    /**\n     * Get the cubic bezier curve at the given index.\n     *\n     * @method getCurveAt\n     * @param {number} index - The curve index from 0 to getCurveCount()-1.\n     * @instance\n     * @memberof BezierPath\n     * @return {CubicBezierCurve} The curve at the specified index.\n     **/\n    getCurveAt(curveIndex) {\n        return this.bezierCurves[curveIndex];\n    }\n    /**\n     * Remove the end point of this path (which removes the last curve from this path).<br>\n     * <br>\n     * Please note that this function does never remove the first curve, thus the path\n     * cannot be empty after this call.\n     *\n     * @method removeEndPoint\n     * @instance\n     * @memberof BezierPath\n     * @return {boolean} Indicating if the last curve was removed.\n     **/\n    /*\n      BezierPath.prototype.removeEndPoint = function() {\n      if( this.bezierCurves.length <= 1 )\n          return false;\n      \n      var newArray = [ this.bezierCurves.length-1 ];\n      for( var i = 0; i < this.bezierCurves.length-1; i++ ) {\n          newArray[i] = this.bezierCurves[i];\n      }\n      \n      // Update arc length\n      this.totalArcLength -= this.bezierCurves[ this.bezierCurves.length-1 ].getLength();\n      this.bezierCurves = newArray;\n      return true;\n      }\n      */\n    /**\n     * Remove the start point of this path (which removes the first curve from this path).<br>\n     * <br>\n     * Please note that this function does never remove the last curve, thus the path\n     * cannot be empty after this call.<br>\n     *\n     * @method removeStartPoint\n     * @instance\n     * @memberof BezierPath\n     * @return {boolean} Indicating if the first curve was removed.\n     **/\n    /*\n      BezierPath.prototype.removeStartPoint = function() {\n  \n      if( this.bezierCurves.length <= 1 )\n          return false;\n  \n      var newArray = [ this.bezierCurves.length-1 ];\n      for( var i = 1; i < this.bezierCurves.length; i++ ) {\n  \n          newArray[i-1] = this.bezierCurves[i];\n  \n      }\n      \n      // Update arc length\n      this.totalArcLength -= this.bezierCurves[ 0 ].getLength();\n      this.bezierCurves = newArray;\n      \n      return true;\n      }\n      */\n    /**\n     * Removes a path point inside the path.\n     *\n     * This function joins the bezier curve at the given index with\n     * its predecessor, which means that the start point at the given\n     * curve index will be removed.\n     *\n     * @method joinAt\n     * @param {number} curveIndex - The index of the curve to be joined with its predecessor.\n     * @instance\n     * @memberof BezierPath\n     * @return {boolean} True if the passed index indicated an inner vertex and the two curves were joined.\n     **/\n    /*\n      BezierPath.prototype.joinAt = function( curveIndex ) {\n  \n      if( curveIndex < 0 || curveIndex >= this.bezierCurves.length )\n          return false;\n      \n      var leftCurve  = this.bezierCurves[ curveIndex-1 ];\n      var rightCurve = this.bezierCurves[ curveIndex ];\n  \n      // Make the length of the new handle double that long\n      var leftControlPoint = leftCurve.getStartControlPoint().clone();\n      leftControlPoint.sub( leftCurve.getStartPoint() );\n      leftControlPoint.multiplyScalar( 2.0 );\n      leftControlPoint.add( leftCurve.getStartPoint() );\n      \n      var rightControlPoint = rightCurve.getEndControlPoint().clone();\n      rightControlPoint.sub( rightCurve.getEndPoint() );\n      rightControlPoint.multiplyScalar( 2.0 );\n      rightControlPoint.add( rightCurve.getEndPoint() );\n  \n      var newCurve = new IKRS.CubicBezierCurve( leftCurve.getStartPoint(),\n                            rightCurve.getEndPoint(),\n                            leftControlPoint,\n                            rightControlPoint\n                          );\n      // Place into array\n      var newArray = [ this.bezierCurves.length - 1 ];\n  \n      for( var i = 0; i < curveIndex-1; i++ )\n          newArray[ i ] = this.bezierCurves[i];\n      \n      newArray[ curveIndex-1 ] = newCurve;\n      \n      // Shift trailing curves left\n      for( var i = curveIndex; i+1 < this.bezierCurves.length; i++ )\n          newArray[ i ] = this.bezierCurves[ i+1 ];\n          \n      this.bezierCurves = newArray;\n      this.updateArcLengths();\n  \n      return true;\n      }\n      */\n    /**\n     * Add a new inner curve point to the path.<br>\n     * <br>\n     * This function splits the bezier curve at the given index and given\n     * curve segment index.\n     *\n     * @method splitAt\n     * @param {number} curveIndex - The index of the curve to split.\n     * @param {nunber} segmentIndex - The index of the curve segment where the split should be performed.\n     * @instance\n     * @memberof BezierPath\n     * @return {boolean} True if the passed indices were valid and the path was split.\n     **/\n    /*\n      BezierPath.prototype.splitAt = function( curveIndex,\n                           segmentIndex\n                         ) {\n      // Must be a valid curve index\n      if( curveIndex < 0 || curveIndex >= this.bezierCurves.length )\n          return false;\n  \n      var oldCurve = this.bezierCurves[ curveIndex ];\n  \n      // Segment must be an INNER point!\n      // (the outer points are already bezier end/start points!)\n      if( segmentIndex < 1 || segmentIndex-1 >= oldCurve.segmentCache.length )\n          return false;\n  \n      // Make room for a new curve\n      for( var c = this.bezierCurves.length; c > curveIndex; c-- ) {\n          // Move one position to the right\n          this.bezierCurves[ c ] = this.bezierCurves[ c-1 ];\n      }\n  \n      // Accumulate segment lengths\n      var u = 0;\n      for( var i = 0; i < segmentIndex; i++ )\n          u += oldCurve.segmentLengths[i];\n      //var tangent = oldCurve.getTangentAt( u );\n      var tangent = oldCurve.getTangent( u );\n      tangent = tangent.multiplyScalar( 0.25 );\n  \n      var leftEndControlPoint = oldCurve.segmentCache[ segmentIndex ].clone();\n      leftEndControlPoint.sub( tangent );\n      \n      var rightStartControlPoint = oldCurve.segmentCache[ segmentIndex ].clone();\n      rightStartControlPoint.add( tangent );\n      \n      // Make the old existing handles a quarter that long\n      var leftStartControlPoint = oldCurve.getStartControlPoint().clone();\n      // move to (0,0)\n      leftStartControlPoint.sub( oldCurve.getStartPoint() );\n      leftStartControlPoint.multiplyScalar( 0.25 );\n      leftStartControlPoint.add( oldCurve.getStartPoint() );\n  \n      var rightEndControlPoint = oldCurve.getEndControlPoint().clone();\n      // move to (0,0)\n      rightEndControlPoint.sub( oldCurve.getEndPoint() );\n      rightEndControlPoint.multiplyScalar( 0.25 );\n      rightEndControlPoint.add( oldCurve.getEndPoint() );\n  \n      var newLeft  = new CubicBezierCurve( oldCurve.getStartPoint(),                      // old start point\n                           oldCurve.segmentCache[ segmentIndex ],         // new end point\n                           leftStartControlPoint,                         // old start control point\n                           leftEndControlPoint                            // new end control point\n                         );\n      var newRight = new CubicBezierCurve( oldCurve.segmentCache[ segmentIndex ],         // new start point\n                           oldCurve.getEndPoint(),                        // old end point\n                           rightStartControlPoint,                        // new start control point\n                           rightEndControlPoint                           // old end control point\n                         );\n      \n      // Insert split curve(s) at free index\n      this.bezierCurves[ curveIndex ]     = newLeft;\n      this.bezierCurves[ curveIndex + 1 ] = newRight;\n      \n      // Update total arc length, even if there is only a very little change!\n      this.totalArcLength -= oldCurve.getLength();\n      this.totalArcLength += newLeft.getLength();\n      this.totalArcLength += newRight.getLength();\n  \n      return true;\n      };\n      */\n    /*\n      insertVertexAt( t:number ) : void {\n      console.log('Inserting vertex at', t );\n      // Find the curve index\n      var u : number = 0;\n      var curveIndex : number = -1;\n      var localT : number = 0.0;\n      for( var i = 0; curveIndex == -1 && i < this.bezierCurves.length; i++ ) {\n          \n      }\n      }; */\n    /**\n     * Move the whole bezier path by the given (x,y)-amount.\n     *\n     * @method translate\n     * @param {Vertex} amount - The amount to be added (amount.x and amount.y)\n     *                          to each vertex of the curve.\n     * @instance\n     * @memberof BezierPath\n     * @return {BezierPath} this for chaining\n     **/\n    translate(amount) {\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            var curve = this.bezierCurves[i];\n            curve.getStartPoint().add(amount);\n            curve.getStartControlPoint().add(amount);\n            curve.getEndControlPoint().add(amount);\n        }\n        // Don't forget to translate the last curve's last point\n        var curve = this.bezierCurves[this.bezierCurves.length - 1];\n        curve.getEndPoint().add(amount);\n        this.updateArcLengths();\n        return this;\n    }\n    /**\n     * Scale the whole bezier path by the given (x,y)-factors.\n     *\n     * @method scale\n     * @param {Vertex} anchor - The scale origin to scale from.\n     * @param {number} amount - The scalar to be multiplied with.\n     * @instance\n     * @memberof BezierPath\n     * @return {BezierPath} this for chaining.\n     **/\n    scale(anchor, scaling) {\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            var curve = this.bezierCurves[i];\n            curve.getStartPoint().scale(scaling, anchor);\n            curve.getStartControlPoint().scale(scaling, anchor);\n            curve.getEndControlPoint().scale(scaling, anchor);\n            // Do NOT scale the end point here!\n            // Don't forget that the curves are connected and on curve's end point\n            // the the successor's start point (same instance)!\n        }\n        // Finally move the last end point (was not scaled yet)\n        if (this.bezierCurves.length > 0 && !this.adjustCircular) {\n            this.bezierCurves[this.bezierCurves.length - 1].getEndPoint().scale(scaling, anchor);\n        }\n        this.updateArcLengths();\n        return this;\n    }\n    /**\n     * Rotate the whole bezier path around a point..\n     *\n     * @method rotate\n     * @param {Vertex} angle  - The angle to rotate this path by.\n     * @param {Vertex} center - The rotation center.\n     * @instance\n     * @memberof BezierPath\n     * @return {void}\n     **/\n    rotate(angle, center) {\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            var curve = this.bezierCurves[i];\n            curve.getStartPoint().rotate(angle, center);\n            curve.getStartControlPoint().rotate(angle, center);\n            curve.getEndControlPoint().rotate(angle, center);\n            // Do NOT rotate the end point here!\n            // Don't forget that the curves are connected and on curve's end point\n            // the the successor's start point (same instance)!\n        }\n        // Finally move the last end point (was not scaled yet)\n        if (this.bezierCurves.length > 0 && !this.adjustCircular) {\n            this.bezierCurves[this.bezierCurves.length - 1].getEndPoint().rotate(angle, center);\n        }\n    }\n    /**\n     * Get the 't' position on this curve with the minimal distance to point p.\n     *\n     * @param {Vertex} p - The point to find the closest curve point for.\n     * @return {number} A value t with 0.0 <= t <= 1.0.\n     **/\n    getClosestT(p) {\n        // Find the spline to extract the value from\n        var minIndex = -1;\n        var minDist = 0.0;\n        var dist = 0.0;\n        var curveT = 0.0;\n        var uMin = 0.0;\n        var u = 0.0;\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            curveT = this.bezierCurves[i].getClosestT(p);\n            dist = this.bezierCurves[i].getPointAt(curveT).distance(p);\n            if (minIndex == -1 || dist < minDist) {\n                minIndex = i;\n                minDist = dist;\n                uMin = u + curveT * this.bezierCurves[i].getLength();\n            }\n            u += this.bezierCurves[i].getLength();\n        }\n        return Math.max(0.0, Math.min(1.0, uMin / this.totalArcLength));\n    }\n    /**\n     * Get the point on the bézier path at the given relative path location.\n     *\n     * @method getPoint\n     * @param {number} u - The relative path position: <pre>0 <= u <= this.getLength()</pre>\n     * @instance\n     * @memberof BezierPath\n     * @return {Vertex} The point at the relative path position.\n     **/\n    getPoint(u) {\n        if (u < 0 || u > this.totalArcLength) {\n            console.warn(\"[BezierPath.getPoint(u)] u is out of bounds: \" + u + \".\");\n            u = Math.min(this.totalArcLength, Math.max(u, 0));\n        }\n        // Find the spline to extract the value from\n        var i = 0;\n        var uTemp = 0.0;\n        while (i < this.bezierCurves.length && uTemp + this.bezierCurves[i].getLength() < u) {\n            uTemp += this.bezierCurves[i].getLength();\n            i++;\n        }\n        // if u == arcLength\n        //   -> i is max\n        if (i >= this.bezierCurves.length)\n            return this.bezierCurves[this.bezierCurves.length - 1].getEndPoint().clone();\n        var bCurve = this.bezierCurves[i];\n        var relativeU = u - uTemp;\n        return bCurve.getPoint(relativeU);\n    }\n    /**\n     * Get the point on the bézier path at the given path fraction.\n     *\n     * @method getPointAt\n     * @param {number} t - The absolute path position: <pre>0.0 <= t <= 1.0</pre>\n     * @instance\n     * @memberof BezierPath\n     * @return {Vertex} The point at the absolute path position.\n     **/\n    getPointAt(t) {\n        return this.getPoint(t * this.totalArcLength);\n    }\n    /**\n     * Get the tangent of the bézier path at the given path fraction.<br>\n     * <br>\n     * Note that the returned vector is not normalized.\n     *\n     * @method getTangentAt\n     * @param {number} t - The absolute path position: <pre>0.0 <= t <= 1.0</pre>\n     * @instance\n     * @memberof BezierPath\n     * @return {Vertex} The tangent vector at the absolute path position.\n     **/\n    getTangentAt(t) {\n        return this.getTangent(t * this.totalArcLength);\n    }\n    /**\n     *  Get the tangent of the bézier path at the given path location.<br>\n     * <br>\n     * Note that the returned vector is not normalized.\n     *\n     * @method getTangent\n     * @param {number} u - The relative path position: <pre>0 <= u <= getLength()</pre>\n     * @instance\n     * @memberof BezierPath\n     * @return {Vertex} The tangent vector at the relative path position.\n     **/\n    getTangent(u) {\n        if (u < 0 || u > this.totalArcLength) {\n            console.warn(\"[BezierPath.getTangent(u)] u is out of bounds: \" + u + \".\");\n            // return undefined;\n            u = Math.min(this.totalArcLength, Math.max(0, u));\n        }\n        // Find the spline to extract the value from\n        var i = 0;\n        var uTemp = 0.0;\n        while (i < this.bezierCurves.length && uTemp + this.bezierCurves[i].getLength() < u) {\n            uTemp += this.bezierCurves[i].getLength();\n            i++;\n        }\n        var bCurve = this.bezierCurves[i];\n        var relativeU = u - uTemp;\n        return bCurve.getTangent(relativeU);\n    }\n    /**\n     * Get the perpendicular of the bézier path at the given absolute path location (fraction).<br>\n     * <br>\n     * Note that the returned vector is not normalized.\n     *\n     * @method getPerpendicularAt\n     * @param {number} t - The absolute path position: <pre>0.0 <= t <= 1.0</pre>\n     * @instance\n     * @memberof BezierPath\n     * @return {Vertex} The perpendicluar vector at the absolute path position.\n     **/\n    getPerpendicularAt(t) {\n        return this.getPerpendicular(t * this.totalArcLength);\n    }\n    /**\n     * Get the perpendicular of the bézier path at the given relative path location.<br>\n     * <br>\n     * Note that the returned vector is not normalized.\n     *\n     * @method getPerpendicular\n     * @param {number} u - The relative path position: <pre>0 <= u <= getLength()</pre>\n     * @instance\n     * @memberof BezierPath\n     * @return {Vertex} The perpendicluar vector at the relative path position.\n     **/\n    getPerpendicular(u) {\n        if (u < 0 || u > this.totalArcLength) {\n            console.log(\"[BezierPath.getPerpendicular(u)] u is out of bounds: \" + u + \".\");\n            u = Math.min(this.totalArcLength, Math.max(0, u));\n        }\n        // Find the spline to extract the value from\n        var uResult = BezierPath._locateUIndex(this, u);\n        var bCurve = this.bezierCurves[uResult.i];\n        var relativeU = u - uResult.uPart;\n        return bCurve.getPerpendicular(relativeU);\n    }\n    /**\n     * This is a helper function to locate the curve index for a given\n     * absolute path position u.\n     *\n     * I decided to put this into privat scope as it is really specific. Maybe\n     * put this into a utils wrapper.\n     *\n     * Returns:\n     * - {number} i - the index of the containing curve.\n     * - {number} uPart - the absolute curve length sum (length from the beginning to u, should equal u itself).\n     * - {number} uBefore - the absolute curve length for all segments _before_ the matched curve (usually uBefore <= uPart).\n     **/\n    static _locateUIndex(path, u) {\n        var i = 0;\n        var uTemp = 0.0;\n        var uBefore = 0.0;\n        while (i < path.bezierCurves.length && uTemp + path.bezierCurves[i].getLength() < u) {\n            uTemp += path.bezierCurves[i].getLength();\n            if (i + 1 < path.bezierCurves.length)\n                uBefore += path.bezierCurves[i].getLength();\n            i++;\n        }\n        return { i: i, uPart: uTemp, uBefore: uBefore };\n    }\n    /**\n     * Get a specific sub path from this path. The start and end position are specified by\n     * ratio number in [0..1].\n     *\n     * 0.0 is at the beginning of the path.\n     * 1.0 is at the end of the path.\n     *\n     * Values below 0 or beyond 1 are cropped down to the [0..1] interval.\n     *\n     * startT > endT is allowed, the returned sub path will have inverse direction then.\n     *\n     * @method getSubPathAt\n     * @param {number} startT - The start position of the sub path.\n     * @param {number} endT - The end position of the sub path.\n     * @instance\n     * @memberof BezierPath\n     * @return {BezierPath} The desired sub path in the bounds [startT..endT].\n     **/\n    getSubPathAt(startT, endT) {\n        startT = Math.max(0, startT);\n        endT = Math.min(1.0, endT);\n        let startU = startT * this.totalArcLength;\n        let endU = endT * this.totalArcLength;\n        var uStartResult = BezierPath._locateUIndex(this, startU); // { i:int, uPart:float, uBefore:float }\n        var uEndResult = BezierPath._locateUIndex(this, endU); // { i:int, uPart:float, uBefore:float }\n        var firstT = (startU - uStartResult.uBefore) / this.bezierCurves[uStartResult.i].getLength();\n        if (uStartResult.i == uEndResult.i) {\n            // Subpath begins and ends in the same path segment (just get a simple sub curve from that path element).\n            var lastT = (endU - uEndResult.uBefore) / this.bezierCurves[uEndResult.i].getLength();\n            var firstCurve = this.bezierCurves[uStartResult.i].getSubCurveAt(firstT, lastT);\n            return BezierPath.fromArray([firstCurve]);\n        }\n        else {\n            var curves = [];\n            if (uStartResult.i > uEndResult.i) {\n                // Back to front direction\n                var firstCurve = this.bezierCurves[uStartResult.i].getSubCurveAt(firstT, 0.0);\n                curves.push(firstCurve);\n                for (var i = uStartResult.i - 1; i > uEndResult.i; i--) {\n                    curves.push(this.bezierCurves[i].clone().reverse());\n                }\n                var lastT = (endU - uEndResult.uBefore) / this.bezierCurves[uEndResult.i].getLength();\n                curves.push(this.bezierCurves[uEndResult.i].getSubCurveAt(1.0, lastT));\n            }\n            else {\n                // Front to back direction\n                var firstCurve = this.bezierCurves[uStartResult.i].getSubCurveAt(firstT, 1.0);\n                curves.push(firstCurve);\n                for (var i = uStartResult.i + 1; i < uEndResult.i && i < this.bezierCurves.length; i++) {\n                    curves.push(this.bezierCurves[i].clone());\n                }\n                var lastT = (endU - uEndResult.uBefore) / this.bezierCurves[uEndResult.i].getLength();\n                curves.push(this.bezierCurves[uEndResult.i].getSubCurveAt(0, lastT));\n            }\n            return BezierPath.fromArray(curves);\n        }\n    }\n    /**\n     * This function moves the addressed curve point (or control point) with\n     * keeping up the path's curve integrity.<br>\n     * <br>\n     * Thus is done by moving neighbour- and control- points as needed.\n     *\n     * @method moveCurvePoint\n     * @param {number} curveIndex - The curve index to move a point from.\n     * @param {number} pointID - One of the curve's four point IDs (START_POINT,\n     *                           START_CONTROL_POINT, END_CONTRO_POINT or END_POINT).\n     * @param {XYCoords} moveAmount - The amount to move the addressed vertex by.\n     * @instance\n     * @memberof BezierPath\n     * @return {void}\n     **/\n    moveCurvePoint(curveIndex, pointID, moveAmount) {\n        var bCurve = this.getCurveAt(curveIndex);\n        bCurve.moveCurvePoint(pointID, moveAmount, true, // move control point, too\n        true // updateArcLengths\n        );\n        // If inner point and NOT control point\n        //  --> move neightbour\n        if (pointID == this.START_POINT && (curveIndex > 0 || this.adjustCircular)) {\n            // Set predecessor's control point!\n            var predecessor = this.getCurveAt(curveIndex - 1 < 0 ? this.bezierCurves.length + (curveIndex - 1) : curveIndex - 1);\n            predecessor.moveCurvePoint(this.END_CONTROL_POINT, moveAmount, true, // move control point, too\n            false // updateArcLengths\n            );\n        }\n        else if (pointID == this.END_POINT && (curveIndex + 1 < this.bezierCurves.length || this.adjustCircular)) {\n            // Set successcor\n            var successor = this.getCurveAt((curveIndex + 1) % this.bezierCurves.length);\n            successor.moveCurvePoint(this.START_CONTROL_POINT, moveAmount, true, // move control point, too\n            false // updateArcLengths\n            );\n        }\n        else if (pointID == this.START_CONTROL_POINT && curveIndex > 0) {\n            this.adjustPredecessorControlPoint(curveIndex, true, // obtain handle length?\n            false // update arc lengths\n            );\n        }\n        else if (pointID == this.END_CONTROL_POINT && curveIndex + 1 < this.getCurveCount()) {\n            this.adjustSuccessorControlPoint(curveIndex, true, // obtain handle length?\n            false // update arc lengths\n            );\n        }\n        // Don't forget to update the arc lengths!\n        // Note: this can be optimized as only two curves have changed their lengths!\n        this.updateArcLengths();\n    }\n    /**\n     * This helper function adjusts the given point's predecessor's control point.\n     *\n     * @method adjustPredecessorControlPoint\n     * @param {number} curveIndex - The curve index to move a point from.\n     * @param {boolean} obtainHandleLength - Moves the point with keeping the original handle length.\n     * @param {boolean} updateArcLength - The amount to move the addressed vertex by.\n     * @instance\n     * @private\n     * @memberof BezierPath\n     * @return {void}\n     **/\n    adjustPredecessorControlPoint(curveIndex, obtainHandleLength, updateArcLengths) {\n        if (!this.adjustCircular && curveIndex <= 0)\n            return; // false;\n        var mainCurve = this.getCurveAt(curveIndex);\n        var neighbourCurve = this.getCurveAt(curveIndex - 1 < 0 ? this.getCurveCount() + (curveIndex - 1) : curveIndex - 1);\n        BezierPath.adjustNeighbourControlPoint(mainCurve, neighbourCurve, mainCurve.getStartPoint(), // the reference point\n        mainCurve.getStartControlPoint(), // the dragged control point\n        neighbourCurve.getEndPoint(), // the neighbour's point\n        neighbourCurve.getEndControlPoint(), // the neighbour's control point to adjust\n        obtainHandleLength, updateArcLengths);\n    }\n    /**\n     * This helper function adjusts the given point's successor's control point.\n     *\n     * @method adjustSuccessorControlPoint\n     * @param {number} curveIndex - The curve index to move a point from.\n     * @param {boolean} obtainHandleLength - Moves the point with keeping the original handle length.\n     * @param {boolean} updateArcLength - The amount to move the addressed vertex by.\n     * @instance\n     * @private\n     * @memberof BezierPath\n     * @return {void}\n     **/\n    adjustSuccessorControlPoint(curveIndex, obtainHandleLength, updateArcLengths) {\n        if (!this.adjustCircular && curveIndex + 1 > this.getCurveCount())\n            return; //  false;\n        var mainCurve = this.getCurveAt(curveIndex);\n        var neighbourCurve = this.getCurveAt((curveIndex + 1) % this.getCurveCount());\n        /* return */ BezierPath.adjustNeighbourControlPoint(mainCurve, neighbourCurve, mainCurve.getEndPoint(), // the reference point\n        mainCurve.getEndControlPoint(), // the dragged control point\n        neighbourCurve.getStartPoint(), // the neighbour's point\n        neighbourCurve.getStartControlPoint(), // the neighbour's control point to adjust\n        obtainHandleLength, updateArcLengths);\n    }\n    /**\n     * This helper function adjusts the given point's successor's control point.\n     *\n     * @method adjustNeighbourControlPoint\n     * @param {CubicBezierCurve} mainCurve\n     * @param {CubicBezierCurve} neighbourCurve\n     * @param {Vertex} mainPoint\n     * @param {Vertex} mainControlPoint\n     * @param {Vertex} neighbourPoint\n     * @param {Vertex} neighbourControlPoint\n     * @param {boolean} obtainHandleLengths\n     * @param {boolean} updateArcLengths\n     * @instance\n     * @private\n     * @memberof BezierPath\n     * @return {void}\n     **/\n    static adjustNeighbourControlPoint(_mainCurve, // TODO: remove param\n    neighbourCurve, mainPoint, mainControlPoint, neighbourPoint, neighbourControlPoint, obtainHandleLengths, _updateArcLengths // TODO: remove param\n    ) {\n        // Calculate start handle length\n        var mainHandleBounds = new Vertex(mainControlPoint.x - mainPoint.x, mainControlPoint.y - mainPoint.y);\n        var neighbourHandleBounds = new Vertex(neighbourControlPoint.x - neighbourPoint.x, neighbourControlPoint.y - neighbourPoint.y);\n        var mainHandleLength = Math.sqrt(Math.pow(mainHandleBounds.x, 2) + Math.pow(mainHandleBounds.y, 2));\n        var neighbourHandleLength = Math.sqrt(Math.pow(neighbourHandleBounds.x, 2) + Math.pow(neighbourHandleBounds.y, 2));\n        if (mainHandleLength <= 0.1)\n            return; // no secure length available for division? What about zoom? Use EPSILON?\n        // Just invert the main handle (keep length or not?\n        if (obtainHandleLengths) {\n            neighbourControlPoint.set(neighbourPoint.x - mainHandleBounds.x * (neighbourHandleLength / mainHandleLength), neighbourPoint.y - mainHandleBounds.y * (neighbourHandleLength / mainHandleLength));\n        }\n        else {\n            neighbourControlPoint.set(neighbourPoint.x - mainHandleBounds.x, neighbourPoint.y - mainHandleBounds.y);\n        }\n        neighbourCurve.updateArcLengths();\n    }\n    /**\n     * Get the bounds of this Bézier path.\n     *\n     * Note the the curves' underlyung segment buffers are used to determine the bounds. The more\n     * elements the segment buffers have, the more precise the returned bounds will be.\n     *\n     * @return {Bounds} The bounds of this Bézier path.\n     **/\n    getBounds() {\n        const min = new Vertex(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\n        const max = new Vertex(Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\n        var b;\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            b = this.bezierCurves[i].getBounds();\n            min.x = Math.min(min.x, b.min.x);\n            min.y = Math.min(min.y, b.min.y);\n            max.x = Math.max(max.x, b.max.x);\n            max.y = Math.max(max.y, b.max.y);\n        }\n        return new Bounds(min, max);\n    }\n    /**\n     * Clone this BezierPath (deep clone).\n     *\n     * @method clone\n     * @instance\n     * @memberof BezierPath\n     * @return {BezierPath}\n     **/\n    clone() {\n        var path = new BezierPath(undefined);\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            path.bezierCurves.push(this.bezierCurves[i].clone());\n            // Connect splines\n            if (i > 0)\n                path.bezierCurves[i - 1].endPoint = path.bezierCurves[i].startPoint;\n        }\n        path.updateArcLengths();\n        path.adjustCircular = this.adjustCircular;\n        return path;\n    }\n    /**\n     * Compare this and the passed Bézier path.\n     *\n     * @method equals\n     * @param {BezierPath} path - The pass to compare with.\n     * @instance\n     * @memberof BezierPath\n     * @return {boolean}\n     **/\n    equals(path) {\n        if (!path)\n            return false;\n        // Check if path contains the credentials\n        if (!path.bezierCurves)\n            return false;\n        if (typeof path.bezierCurves.length == \"undefined\")\n            return false;\n        if (path.bezierCurves.length != this.bezierCurves.length)\n            return false;\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            if (!this.bezierCurves[i].equals(path.bezierCurves[i]))\n                return false;\n        }\n        return true;\n    }\n    /**\n     * Create a <pre>&lt;path&gt;</pre> SVG representation of this bézier curve.\n     *\n     * @deprecated DEPRECATION Please use the drawutilssvg library and an XMLSerializer instead.\n     * @method toSVGString\n     * @param {object=} [options={}] - Like options.className\n     * @param {string=} [options.className] - The classname to use for the SVG item.\n     * @instance\n     * @memberof BezierPath\n     * @return {string} The SVG string.\n     **/\n    toSVGString(options) {\n        options = options || {};\n        var buffer = [];\n        buffer.push(\"<path\");\n        if (options.className)\n            buffer.push(' class=\"' + options.className + '\"');\n        buffer.push(' d=\"');\n        for (var c = 0; c < this.bezierCurves.length; c++) {\n            if (c > 0)\n                buffer.push(\" \");\n            buffer.push(this.bezierCurves[c].toSVGPathData());\n        }\n        buffer.push('\" />');\n        return buffer.join(\"\");\n    }\n    /**\n     * Create a JSON string representation of this bézier curve.\n     *\n     * @method toJSON\n     * @param {boolean} prettyFormat - If true then the function will add line breaks.\n     * @instance\n     * @memberof BezierPath\n     * @return {string} The JSON string.\n     **/\n    toJSON(prettyFormat) {\n        var buffer = [];\n        buffer.push(\"[\"); // array begin\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            if (i > 0)\n                buffer.push(\",\");\n            if (prettyFormat)\n                buffer.push(\"\\n\\t\");\n            else\n                buffer.push(\" \");\n            buffer.push(this.bezierCurves[i].toJSON(prettyFormat));\n        }\n        if (this.bezierCurves.length != 0)\n            buffer.push(\" \");\n        buffer.push(\"]\"); // array end\n        return buffer.join(\"\"); // Convert to string, with empty separator.\n    }\n    /**\n     * Parse a BezierPath from the given JSON string.\n     *\n     * @method fromJSON\n     * @param {string} jsonString - The string with the JSON data.\n     * @throw An error if the string is not JSON or does not contain a bezier path object.\n     * @static\n     * @memberof BezierPath\n     * @return {BezierPath} The parsed bezier path instance.\n     **/\n    static fromJSON(jsonString) {\n        var obj = JSON.parse(jsonString);\n        return BezierPath.fromArray(obj);\n    }\n    /**\n     * Create a BezierPath instance from the given array.\n     *\n     * @method fromArray\n     * @param {Vertex[][]} arr - A two-dimensional array containing the bezier path vertices.\n     * @throw An error if the array does not contain proper bezier path data.\n     * @static\n     * @memberof BezierPath\n     * @return {BezierPath} The bezier path instance retrieved from the array data.\n     **/\n    static fromArray(obj) {\n        if (!Array.isArray(obj))\n            throw \"[BezierPath.fromArray] Passed object must be an array.\";\n        const arr = obj; // FORCE?\n        if (arr.length < 1)\n            throw \"[BezierPath.fromArray] Passed array must contain at least one bezier curve (has \" + arr.length + \").\";\n        // Create an empty bezier path\n        var bPath = new BezierPath(undefined);\n        var lastCurve = null;\n        for (var i = 0; i < arr.length; i++) {\n            // Convert object (or array?) to bezier curve\n            var bCurve;\n            if (CubicBezierCurve.isInstance(arr[i])) {\n                bCurve = arr[i].clone();\n            }\n            else if (0 in arr[i] && 1 in arr[i] && 2 in arr[i] && 3 in arr[i]) {\n                if (!arr[i][0] || !arr[i][1] || !arr[i][2] || !arr[i][3])\n                    throw \"Cannot convert path data to BezierPath instance. At least one element is undefined (index=\" + i + \"): \" + arr[i];\n                bCurve = CubicBezierCurve.fromArray(arr[i]);\n            }\n            else {\n                bCurve = CubicBezierCurve.fromObject(arr[i]);\n            }\n            // Set curve start point?\n            // (avoid duplicate point instances!)\n            if (lastCurve)\n                bCurve.startPoint = lastCurve.endPoint;\n            // Add to path's internal list\n            bPath.bezierCurves.push(bCurve);\n            // bPath.totalArcLength += bCurve.getLength();\n            lastCurve = bCurve;\n        }\n        bPath.updateArcLengths();\n        // Bezier segments added. Done\n        return bPath;\n    }\n    /**\n     * This function converts the bezier path into a string containing\n     * integer values only.\n     * The points' float values are rounded to 1 digit after the comma.\n     *\n     * The returned string represents a JSON array (with leading '[' and\n     * trailing ']', the separator is ',').\n     *\n     * @method toReducedListRepresentation\n     * @param {number} digits - The number of digits to be used after the comma '.'.\n     * @instance\n     * @memberof BezierPath\n     * @return {string} The reduced list representation of this path.\n     **/\n    toReducedListRepresentation(digits) {\n        if (typeof digits == \"undefined\")\n            digits = 1;\n        var buffer = [];\n        buffer.push(\"[\"); // array begin\n        for (var i = 0; i < this.bezierCurves.length; i++) {\n            var curve = this.bezierCurves[i];\n            buffer.push(curve.getStartPoint().x.toFixed(digits));\n            buffer.push(\",\");\n            buffer.push(curve.getStartPoint().y.toFixed(digits));\n            buffer.push(\",\");\n            buffer.push(curve.getStartControlPoint().x.toFixed(digits));\n            buffer.push(\",\");\n            buffer.push(curve.getStartControlPoint().y.toFixed(digits));\n            buffer.push(\",\");\n            buffer.push(curve.getEndControlPoint().x.toFixed(digits));\n            buffer.push(\",\");\n            buffer.push(curve.getEndControlPoint().y.toFixed(digits));\n            buffer.push(\",\");\n        }\n        if (this.bezierCurves.length != 0) {\n            var curve = this.bezierCurves[this.bezierCurves.length - 1];\n            buffer.push(curve.getEndPoint().x.toFixed(digits));\n            buffer.push(\",\");\n            buffer.push(curve.getEndPoint().y.toFixed(digits));\n        }\n        buffer.push(\"]\"); // array end\n        return buffer.join(\"\"); // Convert to string, with empty separator.\n    }\n    /**\n     * Parse a BezierPath instance from the reduced list representation.<br>\n     * <br>\n     * The passed string must represent a JSON array containing numbers only.\n     *\n     * @method fromReducedListRepresentation\n     * @param {string} listJSON - The number of digits to be used after the floating point.\n     * @throw An error if the string is malformed.\n     * @instance\n     * @memberof BezierPath\n     * @return {BezierPath} The bezier path instance retrieved from the string.\n     **/\n    static fromReducedListRepresentation(listJSON, adjustCircular) {\n        // Parse the array\n        var pointArray = JSON.parse(listJSON);\n        if (!pointArray.length) {\n            console.log(\"Cannot parse bezier path from non-array object nor from empty point list.\");\n            throw \"Cannot parse bezier path from non-array object nor from empty point list.\";\n        }\n        if (pointArray.length < 8) {\n            console.log(\"Cannot build bezier path. The passed array must contain at least 8 elements (numbers).\");\n            throw \"Cannot build bezier path. The passed array must contain at least 8 elements (numbers).\";\n        }\n        return BezierPath.fromReducedList(pointArray, adjustCircular);\n    }\n    /**\n     * Convert a reduced list representation (array of numeric coordinates) to a BezierPath instance.\n     *\n     * The array's length must be 6*n + 2:\n     *  - [sx, sy,  scx, scy,  ecx, ecy, ... , ex,  ey ]\n     *     |                               |   |     |\n     *     +--- sequence of curves --------+   +-end-+\n     *\n     * @param {number[]} pointArray\n     * @returns BezierPath\n     */\n    static fromReducedList(pointArray, adjustCircular) {\n        // Convert to object\n        var bezierPath = new BezierPath(null); // No points yet\n        // var firstStartPoint: Vertex;\n        var startPoint;\n        var startControlPoint;\n        var endControlPoint;\n        var endPoint;\n        var i = 0;\n        do {\n            if (i == 0) {\n                // firstStartPoint =\n                startPoint = new Vertex(pointArray[i], pointArray[i + 1]);\n            }\n            startControlPoint = new Vertex(pointArray[i + 2], pointArray[i + 3]);\n            endControlPoint = new Vertex(pointArray[i + 4], pointArray[i + 5]);\n            // if (i + 8 >= pointArray.length) {\n            //   endPoint = firstStartPoint;\n            // } else {\n            endPoint = new Vertex(pointArray[i + 6], pointArray[i + 7]);\n            // }\n            var bCurve = new CubicBezierCurve(startPoint, endPoint, startControlPoint, endControlPoint);\n            bezierPath.bezierCurves.push(bCurve);\n            startPoint = endPoint;\n            i += 6;\n        } while (i + 2 < pointArray.length);\n        bezierPath.adjustCircular = adjustCircular;\n        if (adjustCircular) {\n            bezierPath.bezierCurves[bezierPath.bezierCurves.length - 1].endPoint = bezierPath.bezierCurves[0].startPoint;\n        }\n        bezierPath.updateArcLengths();\n        return bezierPath;\n    }\n}\n// +---------------------------------------------------------------------------------\n// | These constants equal the values from CubicBezierCurve.\n// +-------------------------------\n/** @constant {number} */\nBezierPath.START_POINT = 0;\n/** @constant {number} */\nBezierPath.START_CONTROL_POINT = 1;\n/** @constant {number} */\nBezierPath.END_CONTROL_POINT = 2;\n/** @constant {number} */\nBezierPath.END_POINT = 3;\n//# sourceMappingURL=BezierPath.js.map","/**\n * @author   Ikaros Kappler\n * @date     2016-03-12\n * @modified 2018-12-05 Refactored the code from the morley-triangle script.\n * @modified 2019-03-20 Added JSDoc tags.\n * @modified 2019-04-28 Fixed a bug in the Line.sub( Vertex ) function (was not working).\n * @modified 2019-09-02 Added the Line.add( Vertex ) function.\n * @modified 2019-09-02 Added the Line.denominator( Line ) function.\n * @modified 2019-09-02 Added the Line.colinear( Line ) function.\n * @modified 2019-09-02 Fixed an error in the Line.intersection( Line ) function (class Point was renamed to Vertex).\n * @modified 2019-12-15 Added the Line.moveTo(Vertex) function.\n * @modified 2020-03-16 The Line.angle(Line) parameter is now optional. The baseline (x-axis) will be used if not defined.\n * @modified 2020-03-23 Ported to Typescript from JS.\n * @modified 2020-12-04 The `intersection` function returns undefined if both lines are parallel.\n * @version  2.1.3\n *\n * @file Line\n * @public\n **/\nimport { VertTuple } from \"./VertTuple\";\nimport { Vertex } from \"./Vertex\";\n/**\n * @classdesc A line consists of two vertices a and b.<br>\n * <br>\n * This is some refactored code from my 'Morley Triangle' test<br>\n *   https://github.com/IkarosKappler/morleys-trisector-theorem\n *\n * @requires Vertex\n */\nexport class Line extends VertTuple {\n    /**\n     * Creates an instance of Line.\n     *\n     * @constructor\n     * @name Line\n     * @param {Vertex} a The line's first point.\n     * @param {Vertex} b The line's second point.\n     **/\n    constructor(a, b) {\n        super(a, b, (a, b) => new Line(a, b));\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"Line\";\n    }\n    /**\n     * Get the intersection if this line and the specified line.\n     *\n     * @method intersection\n     * @param {Line} line The second line.\n     * @return {Vertex|undefined} The intersection (may lie outside the end-points) or `undefined` if both lines are parallel.\n     * @instance\n     * @memberof Line\n     **/\n    // !!! DO NOT MOVE TO VertTuple\n    intersection(line) {\n        const denominator = this.denominator(line);\n        if (denominator == 0)\n            return null;\n        let a = this.a.y - line.a.y;\n        let b = this.a.x - line.a.x;\n        const numerator1 = ((line.b.x - line.a.x) * a) - ((line.b.y - line.a.y) * b);\n        const numerator2 = ((this.b.x - this.a.x) * a) - ((this.b.y - this.a.y) * b);\n        a = numerator1 / denominator; // NaN if parallel lines\n        b = numerator2 / denominator;\n        // Catch NaN?\n        const x = this.a.x + (a * (this.b.x - this.a.x));\n        const y = this.a.y + (a * (this.b.y - this.a.y));\n        if (isNaN(a) || isNaN(x) || isNaN(y)) {\n            return undefined;\n        }\n        // if we cast these lines infinitely in both directions, they intersect here:\n        return new Vertex(x, y);\n    }\n    ;\n    /**\n     * Create an SVG representation of this line.\n     *\n     * @deprecated DEPRECATION Please use the drawutilssvg library and an XMLSerializer instead.\n     * @method toSVGString\n     * @param {options} p - A set of options, like the 'classname' to use\n     *                      for the line object.\n     * @return {string} The SVG string representing this line.\n     * @instance\n     * @memberof Line\n     **/\n    toSVGString(options) {\n        options = options || {};\n        var buffer = [];\n        buffer.push('<line');\n        if (options.className)\n            buffer.push(' class=\"' + options.className + '\"');\n        buffer.push(' x1=\"' + this.a.x + '\"');\n        buffer.push(' y1=\"' + this.a.y + '\"');\n        buffer.push(' x2=\"' + this.b.x + '\"');\n        buffer.push(' y2=\"' + this.b.y + '\"');\n        buffer.push(' />');\n        return buffer.join('');\n    }\n    ;\n}\n//# sourceMappingURL=Line.js.map","/**\n * @author   Ikaros Kappler\n * @date     2020-05-04\n * @modified 2020-05-09 Ported to typescript.\n * @modified 2020-05-25 Added the vertAt and tangentAt functions.\n * @mofidied 2020-09-07 Added the circleIntersection(Circle) function.\n * @modified 2020-09-07 Changed the vertAt function by switching sin and cos! The old version did not return the correct vertex (by angle) accoring to the assumed circle math.\n * @modified 2020-10-16 Added the containsCircle(...) function.\n * @modified 2021-01-20 Added UID.\n * @version  1.2.0\n **/\nimport { Line } from \"./Line\";\nimport { UIDGenerator } from \"./UIDGenerator\";\nimport { Vector } from \"./Vector\";\nimport { Vertex } from \"./Vertex\";\n/**\n * @classdesc A simple circle: center point and radius.\n *\n * @requires Line\n * @requires Vector\n * @requires VertTuple\n * @requires Vertex\n * @requires SVGSerializale\n * @requires UID\n * @requires UIDGenerator\n **/\nexport class Circle {\n    /**\n     * Create a new circle with given center point and radius.\n     *\n     * @constructor\n     * @name Circle\n     * @param {Vertex} center - The center point of the circle.\n     * @param {number} radius - The radius of the circle.\n     */\n    constructor(center, radius) {\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"Circle\";\n        this.uid = UIDGenerator.next();\n        this.center = center;\n        this.radius = radius;\n    }\n    ;\n    /**\n     * Check if the given circle is fully contained inside this circle.\n     *\n     * @method containsCircle\n     * @param {Circle} circle - The circle to check if it is contained in this circle.\n     * @instance\n     * @memberof Circle\n     * @return {boolean} `true` if any only if the given circle is completely inside this circle.\n     */\n    containsCircle(circle) {\n        return this.center.distance(circle.center) + circle.radius < this.radius;\n    }\n    ;\n    /**\n     * Calculate the distance from this circle to the given line.\n     *\n     * * If the line does not intersect this ciecle then the returned\n     *   value will be the minimal distance.\n     * * If the line goes through this circle then the returned value\n     *   will be max inner distance and it will be negative.\n     *\n     * @method lineDistance\n     * @param {Line} line - The line to measure the distance to.\n     * @return {number} The minimal distance from the outline of this circle to the given line.\n     * @instance\n     * @memberof Circle\n     */\n    lineDistance(line) {\n        const closestPointOnLine = line.getClosestPoint(this.center);\n        return closestPointOnLine.distance(this.center) - this.radius;\n    }\n    ;\n    /**\n     * Get the vertex on the this circle for the given angle.\n     *\n     * @method vertAt\n     * @param {number} angle - The angle (in radians) to use.\n     * @return {Vertex} The vertex (point) at the given angle.\n     * @instance\n     * @memberof Circle\n     **/\n    vertAt(angle) {\n        // Find the point on the circle respective the angle. Then move relative to center.\n        return Circle.circleUtils.vertAt(angle, this.radius).add(this.center);\n    }\n    ;\n    /**\n     * Get a tangent line of this circle for a given angle.\n     *\n     * Point a of the returned line is located on the circle, the length equals the radius.\n     *\n     * @method tangentAt\n     * @instance\n     * @param {number} angle - The angle (in radians) to use.\n     * @return {Line} The tangent line.\n     * @memberof Circle\n     **/\n    tangentAt(angle) {\n        const pointA = Circle.circleUtils.vertAt(angle, this.radius);\n        // Construct the perpendicular of the line in point a. Then move relative to center.\n        return new Vector(pointA, new Vertex(0, 0)).add(this.center).perp();\n    }\n    ;\n    /**\n     * Calculate the intersection points (if exists) with the given circle.\n     *\n     * @method circleIntersection\n     * @instance\n     * @memberof Circle\n     * @param {Circle} circle\n     * @return {Line|null} The intersection points (as a line) or null if the two circles do not intersect.\n     **/\n    circleIntersection(circle) {\n        // Circles do not intersect at all?\n        if (this.center.distance(circle.center) > this.radius + circle.radius) {\n            return null;\n        }\n        // One circle is fully inside the other?\n        if (this.center.distance(circle.center) < Math.abs(this.radius - circle.radius)) {\n            return null;\n        }\n        // Based on the C++ implementation by Robert King\n        //    https://stackoverflow.com/questions/3349125/circle-circle-intersection-points\n        // and the 'Circles and spheres' article by Paul Bourke.\n        //    http://paulbourke.net/geometry/circlesphere/\n        //\n        // This is the original C++ implementation:\n        //\n        // pair<Point, Point> intersections(Circle c) {\n        //    Point P0(x, y);\n        //    Point P1(c.x, c.y);\n        //    float d, a, h;\n        //    d = P0.distance(P1);\n        //    a = (r*r - c.r*c.r + d*d)/(2*d);\n        //    h = sqrt(r*r - a*a);\n        //    Point P2 = P1.sub(P0).scale(a/d).add(P0);\n        //    float x3, y3, x4, y4;\n        //    x3 = P2.x + h*(P1.y - P0.y)/d;\n        //    y3 = P2.y - h*(P1.x - P0.x)/d;\n        //    x4 = P2.x - h*(P1.y - P0.y)/d;\n        //    y4 = P2.y + h*(P1.x - P0.x)/d;\n        //    return pair<Point, Point>(Point(x3, y3), Point(x4, y4));\n        // } \n        var p0 = this.center;\n        var p1 = circle.center;\n        var d = p0.distance(p1);\n        var a = (this.radius * this.radius - circle.radius * circle.radius + d * d) / (2 * d);\n        var h = Math.sqrt(this.radius * this.radius - a * a);\n        var p2 = p1.clone().scale(a / d, p0);\n        var x3 = p2.x + h * (p1.y - p0.y) / d;\n        var y3 = p2.y - h * (p1.x - p0.x) / d;\n        var x4 = p2.x - h * (p1.y - p0.y) / d;\n        var y4 = p2.y + h * (p1.x - p0.x) / d;\n        return new Line(new Vertex(x3, y3), new Vertex(x4, y4));\n    }\n    ;\n    /**\n      * Create an SVG representation of this circle.\n      *\n      * @deprecated DEPRECATION Please use the drawutilssvg library and an XMLSerializer instead.\n      * @method toSVGString\n      * @param {object=} options - An optional set of options, like 'className'.\n      * @return {string} A string representing the SVG code for this vertex.\n      * @instance\n      * @memberof Circle\n      */\n    toSVGString(options) {\n        options = options || {};\n        var buffer = [];\n        buffer.push('<circle');\n        if (options.className)\n            buffer.push(' class=\"' + options.className + '\"');\n        buffer.push(' cx=\"' + this.center.x + '\"');\n        buffer.push(' cy=\"' + this.center.y + '\"');\n        buffer.push(' r=\"' + this.radius + '\"');\n        buffer.push(' />');\n        return buffer.join('');\n    }\n    ;\n} // END class\nCircle.circleUtils = {\n    vertAt: (angle, radius) => {\n        /* return new Vertex( Math.sin(angle) * radius,\n                   Math.cos(angle) * radius ); */\n        return new Vertex(Math.cos(angle) * radius, Math.sin(angle) * radius);\n    }\n};\n//# sourceMappingURL=Circle.js.map","/**\n * @author   Ikaros Kappler\n * @date     2020-12-17\n * @modified 2021-01-20 Added UID.\n * @modified 2021-02-26 Fixed an error in the svg-arc-calculation (case angle<90deg and anti-clockwise).\n * @version  1.1.1\n **/\nimport { UIDGenerator } from \"./UIDGenerator\";\n/**\n * @classdesc A simple circle sector: circle, start- and end-angle.\n *\n * @requires Line\n * @requires SVGSerializale\n * @requires UID\n * @requires UIDGenerator\n * @requires XYCoords\n **/\nexport class CircleSector {\n    /**\n     * Create a new circle sector with given circle, start- and end-angle.\n     *\n     * @constructor\n     * @name CircleSector\n     * @param {Circle} circle - The circle.\n     * @param {number} startAngle - The start angle of the sector.\n     * @param {number} endAngle - The end angle of the sector.\n     */\n    constructor(circle, startAngle, endAngle) {\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"CircleSector\";\n        this.uid = UIDGenerator.next();\n        this.circle = circle;\n        this.startAngle = startAngle;\n        this.endAngle = endAngle;\n    }\n    ;\n    /**\n      * Create an SVG representation of this circle.\n      *\n      * @method toSVGString\n      * @param {object=} options - An optional set of options, like 'className'.\n      * @return {string} A string representing the SVG code for this vertex.\n      * @instance\n      * @memberof Circle\n      */\n    toSVGString(options) {\n        options = options || {};\n        var buffer = [];\n        buffer.push('<path ');\n        if (options.className)\n            buffer.push(' class=\"' + options.className + '\"');\n        const data = CircleSector.circleSectorUtils.describeSVGArc(this.circle.center.x, this.circle.center.y, this.circle.radius, this.startAngle, this.endAngle);\n        buffer.push(' d=\"' + data.join(\" \") + '\" />');\n        return buffer.join('');\n    }\n    ;\n} // END class\nCircleSector.circleSectorUtils = {\n    /**\n     * Helper function to convert polar circle coordinates to cartesian coordinates.\n     *\n     * TODO: generalize for ellipses (two radii).\n     *\n     * @param {number} angle - The angle in radians.\n    */\n    polarToCartesian: (centerX, centerY, radius, angle) => {\n        return {\n            x: centerX + (radius * Math.cos(angle)),\n            y: centerY + (radius * Math.sin(angle))\n        };\n    },\n    /**\n     * Helper function to convert a circle section as SVG arc params (for the `d` attribute).\n     * Found at: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\n     *\n     * TODO: generalize for ellipses (two radii).\n     *\n     * @param {boolean} options.moveToStart - If false (default=true) the initial 'Move' command will not be used.\n     * @return [ 'A', radiusx, radiusy, rotation=0, largeArcFlag=1|0, sweepFlag=0, endx, endy ]\n     */\n    describeSVGArc: (x, y, radius, startAngle, endAngle, options) => {\n        if (typeof options === 'undefined')\n            options = { moveToStart: true };\n        const end = CircleSector.circleSectorUtils.polarToCartesian(x, y, radius, endAngle);\n        const start = CircleSector.circleSectorUtils.polarToCartesian(x, y, radius, startAngle);\n        // Split full circles into two halves.\n        // Some browsers have problems to render full circles (described by start==end).\n        if (Math.PI * 2 - Math.abs(startAngle - endAngle) < 0.001) {\n            const firstHalf = CircleSector.circleSectorUtils.describeSVGArc(x, y, radius, startAngle, startAngle + (endAngle - startAngle) / 2, options);\n            const secondHalf = CircleSector.circleSectorUtils.describeSVGArc(x, y, radius, startAngle + (endAngle - startAngle) / 2, endAngle, options);\n            return firstHalf.concat(secondHalf);\n        }\n        // Boolean stored as integers (0|1).\n        const diff = endAngle - startAngle;\n        var largeArcFlag;\n        var sweepFlag;\n        if (diff < 0) {\n            largeArcFlag = Math.abs(diff) < Math.PI ? 1 : 0;\n            sweepFlag = 1;\n        }\n        else {\n            largeArcFlag = Math.abs(diff) > Math.PI ? 1 : 0;\n            sweepFlag = 1;\n        }\n        const pathData = [];\n        if (options.moveToStart) {\n            pathData.push('M', start.x, start.y);\n        }\n        pathData.push(\"A\", radius, radius, 0, largeArcFlag, sweepFlag, end.x, end.y);\n        return pathData;\n    }\n};\n//# sourceMappingURL=CircleSector.js.map","/**\n * Draws elements into an SVG node.\n *\n * Note that this library uses buffers and draw cycles. To draw onto an SVG canvas, do this:\n *   const drawLib = new drawutilssvg( svgNode, ... );\n *   const fillLib = drawLib.copyInstance(true);\n *   // Begin draw cycle\n *   drawLib.beginDrawCycle(time);\n *   // ... draw or fill your stuff ...\n *   drawLib.endDrawCycle(time); // Here the elements become visible\n *\n * @author   Ikaros Kappler\n * @date     2021-01-03\n * @modified 2021-01-24 Fixed the `fillShapes` attribute in the copyInstance function.\n * @modified 2021-01-26 Changed the `isPrimary` (default true) attribute to `isSecondary` (default false).\n * @modified 2021-02-03 Added the static `createSvg` function.\n * @modified 2021-02-03 Fixed the currentId='background' bug on the clear() function.\n * @modified 2021-02-03 Fixed CSSProperty `stroke-width` (was line-width before, which is wrong).\n * @modified 2021-02-03 Added the static `HEAD_XML` attribute.\n * @modified 2021-02-19 Added the static helper function `transformPathData(...)` for svg path transformations (scale and translate).\n * @modified 2021-02-22 Added the static helper function `copyPathData(...)`.\n * @modified 2021-02-22 Added the `path` drawing function to draw SVG path data.\n * @modified 2021-03-01 Fixed a bug in the `clear` function (curClassName was not cleared).\n * @modified 2021-03-29 Fixed a bug in the `text` function (second y param was wrong, used x here).\n * @modified 2021-03-29 Moved this file from `src/ts/utils/helpers/` to `src/ts/`.\n * @modified 2021-03-31 Added 'ellipseSector' the the class names.\n * @modified 2021-03-31 Implemented buffering using a buffer <g> node and the beginDrawCycle and endDrawCycle methods.\n * @modified 2021-05-31 Added the `setConfiguration` function from `DrawLib`.\n * @modified 2021-11-15 Adding more parameters tot the `text()` function: fontSize, textAlign, fontFamily, lineHeight.\n * @modified 2021-11-19 Fixing the `label(text,x,y)` position.\n * @modified 2021-11-19 Added the `color` param to the `label(...)` function.\n * @version  1.4.0\n **/\nimport { CircleSector } from \"./CircleSector\";\nimport { CubicBezierCurve } from \"./CubicBezierCurve\";\nimport { Vertex } from \"./Vertex\";\nconst RAD_TO_DEG = 180 / Math.PI;\n/**\n * @classdesc A helper class for basic SVG drawing operations. This class should\n * be compatible to the default 'draw' class.\n *\n * @requires CubicBzierCurvce\n * @requires Polygon\n * @requires Vertex\n * @requires XYCoords\n */\nexport class drawutilssvg {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name drawutilssvg\n     * @param {SVGElement} svgNode - The SVG node to use.\n     * @param {XYCoords} offset - The draw offset to use.\n     * @param {XYCoords} scale - The scale factors to use.\n     * @param {XYDimension} canvasSize - The initial canvas size (use setSize to change).\n     * @param {boolean} fillShapes - Indicates if the constructed drawutils should fill all drawn shapes (if possible).\n     * @param {DrawConfig} drawConfig - The default draw config to use for CSS fallback styles.\n     * @param {boolean=} isSecondary - (optional) Indicates if this is the primary or secondary instance. Only primary instances manage child nodes.\n     * @param {SVGGElement=} gNode - (optional) Primary and seconday instances share the same &lt;g> node.\n     **/\n    constructor(svgNode, offset, scale, canvasSize, fillShapes, drawConfig, isSecondary, gNode, bufferGNode) {\n        this.svgNode = svgNode;\n        this.offset = new Vertex(0, 0).set(offset);\n        this.scale = new Vertex(1, 1).set(scale);\n        this.fillShapes = fillShapes;\n        this.isSecondary = isSecondary;\n        this.drawlibConfiguration = {};\n        this.cache = new Map();\n        this.setSize(canvasSize);\n        if (isSecondary) {\n            this.gNode = gNode;\n            this.bufferGNode = bufferGNode;\n        }\n        else {\n            this.addStyleDefs(drawConfig);\n            this.gNode = this.createSVGNode(\"g\");\n            this.bufferGNode = this.createSVGNode(\"g\");\n            this.svgNode.appendChild(this.gNode);\n        }\n    }\n    addStyleDefs(drawConfig) {\n        this.nodeStyle = this.createSVGNode(\"style\");\n        this.svgNode.appendChild(this.nodeStyle);\n        // Which default styles to add? -> All from the DrawConfig.\n        // Compare with DrawConfig interface\n        const keys = {\n            \"polygon\": \"Polygon\",\n            \"triangle\": \"Triangle\",\n            \"ellipse\": \"Ellipse\",\n            \"ellipseSector\": \"EllipseSector\",\n            \"circle\": \"Circle\",\n            \"circleSector\": \"CircleSector\",\n            \"vertex\": \"Vertex\",\n            \"line\": \"Line\",\n            \"vector\": \"Vector\",\n            \"image\": \"Image\",\n            \"text\": \"Text\"\n        };\n        // Question: why isn't this working if the svgNode is created dynamically? (nodeStyle.sheet is null)\n        const rules = [];\n        for (var k in keys) {\n            const className = keys[k];\n            const drawSettings = drawConfig[k];\n            if (drawSettings) {\n                rules.push(`.${className} { fill : none; stroke: ${drawSettings.color}; stroke-width: ${drawSettings.lineWidth}px }`);\n            }\n            else {\n                console.warn(`Warning: your draw config is missing the key '${k}' which is required.`);\n            }\n        }\n        this.nodeStyle.innerHTML = rules.join(\"\\n\");\n    }\n    /**\n     * This is a simple way to include custom CSS class mappings to the style defs of the generated SVG.\n     *\n     * The mapping should be of the form\n     *   [style-class] -> [style-def-string]\n     *\n     * Example:\n     *   \"rect.red\" -> \"fill: #ff0000; border: 1px solid red\"\n     *\n     * @param {Map<string,string>} defs\n     */\n    addCustomStyleDefs(defs) {\n        const buffer = [];\n        defs.forEach((value, key) => {\n            buffer.push(key + \" { \" + value + \" }\");\n        });\n        this.nodeStyle.innerHTML += \"\\n/* Custom styles */\\n\" + buffer.join(\"\\n\");\n    }\n    /**\n     * Retieve an old (cached) element.\n     * Only if both – key and nodeName – match, the element will be returned (null otherwise).\n     *\n     * @method findElement\n     * @private\n     * @memberof drawutilssvg\n     * @instance\n     * @param {UID} key - The key of the desired element (used when re-drawing).\n     * @param {string} nodeName - The expected node name.\n     */\n    findElement(key, nodeName) {\n        var node = this.cache.get(key);\n        if (node && node.nodeName.toUpperCase() === nodeName.toUpperCase()) {\n            this.cache.delete(key);\n            return node;\n        }\n        return null;\n    }\n    /**\n     * Create a new DOM node &lt;svg&gt; in the SVG namespace.\n     *\n     * @method createSVGNode\n     * @private\n     * @memberof drawutilssvg\n     * @instance\n     * @param {string} nodeName - The node name (tag-name).\n     * @return {SVGElement} A new element in the SVG namespace with the given node name.\n     */\n    createSVGNode(nodeName) {\n        return document.createElementNS(\"http://www.w3.org/2000/svg\", nodeName);\n    }\n    /**\n     * Make a new SVG node (or recycle an old one) with the given node name (circle, path, line, rect, ...).\n     *\n     * This function is used in draw cycles to re-use old DOM nodes (in hope to boost performance).\n     *\n     * @method makeNode\n     * @private\n     * @instance\n     * @memberof drawutilssvg\n     * @param {string} nodeName - The node name.\n     * @return {SVGElement} The new node, which is not yet added to any document.\n     */\n    makeNode(nodeName) {\n        // Try to find node in current DOM cache.\n        // Unique node keys are strictly necessary.\n        // Try to recycle an old element from cache.\n        var node = this.findElement(this.curId, nodeName);\n        if (!node) {\n            // If no such old elements exists (key not found, tag name not matching),\n            // then create a new one.\n            node = this.createSVGNode(nodeName);\n        }\n        if (this.drawlibConfiguration.blendMode) {\n            node.style[\"mix-blend-mode\"] = this.drawlibConfiguration.blendMode;\n        }\n        return node;\n    }\n    /**\n     * This is the final helper function for drawing and filling stuff and binding new\n     * nodes to the SVG document.\n     * It is not intended to be used from the outside.\n     *\n     * When in draw mode it draws the current shape.\n     * When in fill mode it fills the current shape.\n     *\n     * This function is usually only called internally.\n     *\n     * @method _bindFillDraw\n     * @private\n     * @instance\n     * @memberof drawutilssvg\n     * @param {SVGElement} node - The node to draw/fill and bind.\n     * @param {string} className - The class name(s) to use.\n     * @param {string} color - A stroke/fill color to use.\n     * @param {number=1} lineWidth - (optional) A line width to use for drawing (default is 1).\n     * @return {SVGElement} The node itself (for chaining).\n     */\n    _bindFillDraw(node, className, color, lineWidth) {\n        if (this.curClassName) {\n            node.setAttribute(\"class\", `${className} ${this.curClassName}`);\n        }\n        else {\n            node.setAttribute(\"class\", className);\n        }\n        node.setAttribute(\"fill\", this.fillShapes ? color : \"none\");\n        node.setAttribute(\"stroke\", this.fillShapes ? \"none\" : color);\n        node.setAttribute(\"stroke-width\", `${lineWidth || 1}`);\n        if (this.curId) {\n            node.setAttribute(\"id\", `${this.curId}`); // Maybe React-style 'key' would be better?\n        }\n        if (!node.parentNode) {\n            // Attach to DOM only if not already attached\n            this.bufferGNode.appendChild(node);\n        }\n        return node;\n    }\n    /**\n     * Sets the size and view box of the document. Call this if canvas size changes.\n     *\n     * @method setSize\n     * @instance\n     * @memberof drawutilssvg\n     * @param {XYDimension} canvasSize - The new canvas size.\n     */\n    setSize(canvasSize) {\n        this.canvasSize = canvasSize;\n        this.svgNode.setAttribute(\"viewBox\", `0 0 ${this.canvasSize.width} ${this.canvasSize.height}`);\n        this.svgNode.setAttribute(\"width\", `${this.canvasSize.width}`);\n        this.svgNode.setAttribute(\"height\", `${this.canvasSize.height}`);\n    }\n    /**\n     * Creates a 'shallow' (non deep) copy of this instance. This implies\n     * that under the hood the same gl context and gl program will be used.\n     */\n    copyInstance(fillShapes) {\n        var copy = new drawutilssvg(this.svgNode, this.offset, this.scale, this.canvasSize, fillShapes, null, // no DrawConfig\n        true, // isSecondary\n        this.gNode, this.bufferGNode);\n        return copy;\n    }\n    /**\n     * Set the current drawlib configuration.\n     *\n     * @name setConfiguration\n     * @method\n     * @param {DrawLibConfiguration} configuration - The new configuration settings to use for the next render methods.\n     */\n    setConfiguration(configuration) {\n        this.drawlibConfiguration = configuration;\n    }\n    /**\n     * This method shouled be called each time the currently drawn `Drawable` changes.\n     * It is used by some libraries for identifying elemente on re-renders.\n     *\n     * @name setCurrentId\n     * @method\n     * @param {UID} uid - A UID identifying the currently drawn element(s).\n     * @instance\n     * @memberof drawutilssvg\n     **/\n    setCurrentId(uid) {\n        this.curId = uid;\n    }\n    /**\n     * This method shouled be called each time the currently drawn `Drawable` changes.\n     * Determine the class name for further usage here.\n     *\n     * @name setCurrentClassName\n     * @method\n     * @param {string} className - A class name for further custom use cases.\n     * @instance\n     * @memberof drawutilssvg\n     **/\n    setCurrentClassName(className) {\n        this.curClassName = className;\n    }\n    /**\n     * Called before each draw cycle.\n     * This is required for compatibility with other draw classes in the library.\n     *\n     * @name beginDrawCycle\n     * @method\n     * @param {UID=} uid - (optional) A UID identifying the currently drawn element(s).\n     * @instance\n     * @memberof drawutilssvg\n     **/\n    beginDrawCycle(renderTime) {\n        // Clear non-recycable elements from last draw cycle.\n        this.cache.clear();\n        // Clearing an SVG is equivalent to removing all its child elements.\n        for (var i = 0; i < this.bufferGNode.childNodes.length; i++) {\n            // Hide all nodes here. Don't throw them away.\n            // We can probably re-use them in the next draw cycle.\n            var child = this.bufferGNode.childNodes[i];\n            this.cache.set(child.getAttribute(\"id\"), child);\n        }\n        this.removeAllChildNodes();\n    }\n    /**\n     * Called after each draw cycle.\n     *\n     * This is required for compatibility with other draw classes in the library (like drawgl).\n     *\n     * @name endDrawCycle\n     * @method\n     * @param {number} renderTime\n     * @instance\n     **/\n    endDrawCycle(renderTime) {\n        if (!this.isSecondary) {\n            // All elements are drawn into the buffer; they are NOT yet visible, not did the browser perform any\n            // layout updates.\n            // Replace the old <g>-node with the buffer node.\n            //   https://stackoverflow.com/questions/27442464/how-to-update-a-svg-image-without-seeing-a-blinking\n            this.svgNode.replaceChild(this.bufferGNode, this.gNode);\n        }\n        let tmp = this.gNode;\n        this.gNode = this.bufferGNode;\n        this.bufferGNode = tmp;\n    }\n    _x(x) {\n        return this.offset.x + this.scale.x * x;\n    }\n    _y(y) {\n        return this.offset.y + this.scale.y * y;\n    }\n    /**\n     * Draw the line between the given two points with the specified (CSS-) color.\n     *\n     * @method line\n     * @param {Vertex} zA - The start point of the line.\n     * @param {Vertex} zB - The end point of the line.\n     * @param {string} color - Any valid CSS color string.\n     * @param {number=1} lineWidth? - [optional] The line's width.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     **/\n    line(zA, zB, color, lineWidth) {\n        const line = this.makeNode(\"line\");\n        line.setAttribute(\"x1\", `${this._x(zA.x)}`);\n        line.setAttribute(\"y1\", `${this._y(zA.y)}`);\n        line.setAttribute(\"x2\", `${this._x(zB.x)}`);\n        line.setAttribute(\"y2\", `${this._y(zB.y)}`);\n        return this._bindFillDraw(line, \"line\", color, lineWidth || 1);\n    }\n    /**\n     * Draw a line and an arrow at the end (zB) of the given line with the specified (CSS-) color.\n     *\n     * @method arrow\n     * @param {Vertex} zA - The start point of the arrow-line.\n     * @param {Vertex} zB - The end point of the arrow-line.\n     * @param {string} color - Any valid CSS color string.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     **/\n    arrow(zA, zB, color, lineWidth) {\n        const node = this.makeNode(\"path\");\n        var headlen = 8; // length of head in pixels\n        var vertices = Vertex.utils.buildArrowHead(zA, zB, headlen, this.scale.x, this.scale.y);\n        const d = [\"M\", this._x(zA.x), this._y(zA.y)];\n        for (var i = 0; i <= vertices.length; i++) {\n            d.push(\"L\");\n            // Note: only use offset here (the vertices are already scaled)\n            d.push(this.offset.x + vertices[i % vertices.length].x);\n            d.push(this.offset.y + vertices[i % vertices.length].y);\n        }\n        node.setAttribute(\"d\", d.join(\" \"));\n        return this._bindFillDraw(node, \"arrow\", color, lineWidth || 1);\n    }\n    /**\n     * Draw an image at the given position with the given size.<br>\n     * <br>\n     * Note: SVG images may have resizing issues at the moment.Draw a line and an arrow at the end (zB) of the given line with the specified (CSS-) color.\n     *\n     * @method image\n     * @param {Image} image - The image object to draw.\n     * @param {Vertex} position - The position to draw the the upper left corner at.\n     * @param {Vertex} size - The x/y-size to draw the image with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     **/\n    image(image, position, size) {\n        const node = this.makeNode(\"image\");\n        // We need to re-adjust the image if it was not yet fully loaded before.\n        const setImageSize = (image) => {\n            if (image.naturalWidth) {\n                const ratioX = size.x / image.naturalWidth;\n                const ratioY = size.y / image.naturalHeight;\n                node.setAttribute(\"width\", `${image.naturalWidth * this.scale.x}`);\n                node.setAttribute(\"height\", `${image.naturalHeight * this.scale.y}`);\n                node.setAttribute(\"display\", null); // Dislay when loaded\n                node.setAttribute(\"transform\", `translate(${this._x(position.x)} ${this._y(position.y)}) scale(${ratioX} ${ratioY})`);\n            }\n        };\n        image.addEventListener(\"load\", event => {\n            setImageSize(image);\n        });\n        // Safari has a transform-origin bug.\n        // Use x=0, y=0 and translate/scale instead (see above)\n        node.setAttribute(\"x\", `${0}`);\n        node.setAttribute(\"y\", `${0}`);\n        node.setAttribute(\"display\", \"none\"); // Hide before loaded\n        setImageSize(image);\n        node.setAttribute(\"href\", image.src);\n        return this._bindFillDraw(node, \"image\", null, null);\n    }\n    /**\n     * Draw the given (cubic) bézier curve.\n     *\n     * @method cubicBezier\n     * @param {Vertex} startPoint - The start point of the cubic Bézier curve\n     * @param {Vertex} endPoint   - The end point the cubic Bézier curve.\n     * @param {Vertex} startControlPoint - The start control point the cubic Bézier curve.\n     * @param {Vertex} endControlPoint   - The end control point the cubic Bézier curve.\n     * @param {string} color - The CSS color to draw the curve with.\n     * @param {number} lineWidth - (optional) The line width to use.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    cubicBezier(startPoint, endPoint, startControlPoint, endControlPoint, color, lineWidth) {\n        if (startPoint instanceof CubicBezierCurve) {\n            return this.cubicBezier(startPoint.startPoint, startPoint.endPoint, startPoint.startControlPoint, startPoint.endControlPoint, color, lineWidth);\n        }\n        const node = this.makeNode(\"path\");\n        // Draw curve\n        const d = [\n            \"M\",\n            this._x(startPoint.x),\n            this._y(startPoint.y),\n            \"C\",\n            this._x(startControlPoint.x),\n            this._y(startControlPoint.y),\n            this._x(endControlPoint.x),\n            this._y(endControlPoint.y),\n            this._x(endPoint.x),\n            this._y(endPoint.y)\n        ];\n        node.setAttribute(\"d\", d.join(\" \"));\n        return this._bindFillDraw(node, \"cubierBezier\", color, lineWidth);\n    }\n    /**\n     * Draw the given (cubic) Bézier path.\n     *\n     * The given path must be an array with n*3+1 vertices, where n is the number of\n     * curves in the path:\n     * <pre> [ point1, point1_startControl, point2_endControl, point2, point2_startControl, point3_endControl, point3, ... pointN_endControl, pointN ]</pre>\n     *\n     * @method cubicBezierPath\n     * @param {Vertex[]} path - The cubic bezier path as described above.\n     * @param {string} color - The CSS colot to draw the path with.\n     * @param {number=1} lineWidth - (optional) The line width to use.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    cubicBezierPath(path, color, lineWidth) {\n        const node = this.makeNode(\"path\");\n        if (!path || path.length == 0)\n            return node;\n        // Draw curve\n        const d = [\"M\", this._x(path[0].x), this._y(path[0].y)];\n        // Draw curve path\n        var endPoint;\n        var startControlPoint;\n        var endControlPoint;\n        for (var i = 1; i < path.length; i += 3) {\n            startControlPoint = path[i];\n            endControlPoint = path[i + 1];\n            endPoint = path[i + 2];\n            d.push(\"C\", this._x(startControlPoint.x), this._y(startControlPoint.y), this._x(endControlPoint.x), this._y(endControlPoint.y), this._x(endPoint.x), this._y(endPoint.y));\n        }\n        node.setAttribute(\"d\", d.join(\" \"));\n        return this._bindFillDraw(node, \"cubicBezierPath\", color, lineWidth || 1);\n    }\n    /**\n     * Draw the given handle and handle point (used to draw interactive Bézier curves).\n     *\n     * The colors for this are fixed and cannot be specified.\n     *\n     * @method handle\n     * @param {Vertex} startPoint - The start of the handle.\n     * @param {Vertex} endPoint - The end point of the handle.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    handle(startPoint, endPoint) {\n        // TODO: redefine methods like these into an abstract class?\n        this.point(startPoint, \"rgb(0,32,192)\");\n        this.square(endPoint, 5, \"rgba(0,128,192,0.5)\");\n    }\n    /**\n     * Draw a handle line (with a light grey).\n     *\n     * @method handleLine\n     * @param {Vertex} startPoint - The start point to draw the handle at.\n     * @param {Vertex} endPoint - The end point to draw the handle at.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    handleLine(startPoint, endPoint) {\n        this.line(startPoint, endPoint, \"rgb(192,192,192)\");\n    }\n    /**\n     * Draw a 1x1 dot with the specified (CSS-) color.\n     *\n     * @method dot\n     * @param {Vertex} p - The position to draw the dot at.\n     * @param {string} color - The CSS color to draw the dot with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    dot(p, color) {\n        const node = this.makeNode(\"line\");\n        return this._bindFillDraw(node, \"dot\", color, 1);\n    }\n    /**\n     * Draw the given point with the specified (CSS-) color and radius 3.\n     *\n     * @method point\n     * @param {Vertex} p - The position to draw the point at.\n     * @param {string} color - The CSS color to draw the point with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    point(p, color) {\n        var radius = 3;\n        const node = this.makeNode(\"circle\");\n        node.setAttribute(\"cx\", `${this._x(p.x)}`);\n        node.setAttribute(\"cy\", `${this._y(p.y)}`);\n        node.setAttribute(\"r\", `${radius}`);\n        return this._bindFillDraw(node, \"point\", color, 1);\n    }\n    /**\n     * Draw a circle with the specified (CSS-) color and radius.<br>\n     * <br>\n     * Note that if the x- and y- scales are different the result will be an ellipse rather than a circle.\n     *\n     * @method circle\n     * @param {Vertex} center - The center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {string} color - The CSS color to draw the circle with.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    circle(center, radius, color, lineWidth) {\n        // Todo: draw ellipse when scalex!=scaley\n        const node = this.makeNode(\"circle\");\n        node.setAttribute(\"cx\", `${this._x(center.x)}`);\n        node.setAttribute(\"cy\", `${this._y(center.y)}`);\n        node.setAttribute(\"r\", `${radius * this.scale.x}`); // y?\n        return this._bindFillDraw(node, \"circle\", color, lineWidth || 1);\n    }\n    /**\n     * Draw a circular arc (section of a circle) with the given CSS color.\n     *\n     * @method circleArc\n     * @param {Vertex} center - The center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {number} startAngle - The angle to start at.\n     * @param {number} endAngle - The angle to end at.\n     * @param {string} color - The CSS color to draw the circle with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    circleArc(center, radius, startAngle, endAngle, color, lineWidth) {\n        const node = this.makeNode(\"path\");\n        const arcData = CircleSector.circleSectorUtils.describeSVGArc(this._x(center.x), this._y(center.y), radius * this.scale.x, // y?\n        startAngle, endAngle);\n        node.setAttribute(\"d\", arcData.join(\" \"));\n        return this._bindFillDraw(node, \"circleArc\", color, lineWidth || 1);\n    }\n    /**\n     * Draw an ellipse with the specified (CSS-) color and thw two radii.\n     *\n     * @method ellipse\n     * @param {Vertex} center - The center of the ellipse.\n     * @param {number} radiusX - The radius of the ellipse.\n     * @param {number} radiusY - The radius of the ellipse.\n     * @param {string} color - The CSS color to draw the ellipse with.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @param {number=} rotation - (optional, default=0) The rotation of the ellipse.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    ellipse(center, radiusX, radiusY, color, lineWidth, rotation) {\n        if (typeof rotation === \"undefined\") {\n            rotation = 0.0;\n        }\n        const node = this.makeNode(\"ellipse\");\n        node.setAttribute(\"cx\", `${this._x(center.x)}`);\n        node.setAttribute(\"cy\", `${this._y(center.y)}`);\n        node.setAttribute(\"rx\", `${radiusX * this.scale.x}`);\n        node.setAttribute(\"ry\", `${radiusY * this.scale.y}`);\n        // node.setAttribute( 'style', `transform: rotate(${rotation} ${center.x} ${center.y})` );\n        node.setAttribute(\"transform\", `rotate(${(rotation * 180) / Math.PI} ${this._x(center.x)} ${this._y(center.y)})`);\n        return this._bindFillDraw(node, \"ellipse\", color, lineWidth || 1);\n    }\n    /**\n     * Draw square at the given center, size and with the specified (CSS-) color.<br>\n     * <br>\n     * Note that if the x-scale and the y-scale are different the result will be a rectangle rather than a square.\n     *\n     * @method square\n     * @param {XYCoords} center - The center of the square.\n     * @param {Vertex} size - The size of the square.\n     * @param {string} color - The CSS color to draw the square with.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    square(center, size, color, lineWidth) {\n        const node = this.makeNode(\"rectangle\");\n        node.setAttribute(\"x\", `${this._x(center.x - size / 2.0)}`);\n        node.setAttribute(\"y\", `${this._y(center.y - size / 2.0)}`);\n        node.setAttribute(\"width\", `${size * this.scale.x}`);\n        node.setAttribute(\"height\", `${size * this.scale.y}`);\n        return this._bindFillDraw(node, \"square\", color, lineWidth || 1);\n    }\n    /**\n     * Draw a rectangle.\n     *\n     * @param {XYCoords} position - The upper left corner of the rectangle.\n     * @param {number} width - The width of the rectangle.\n     * @param {number} height - The height of the rectangle.\n     * @param {string} color - The color to use.\n     * @param {number=1} lineWidth - (optional) The line with to use (default is 1).\n     **/\n    rect(position, width, height, color, lineWidth) {\n        const node = this.makeNode(\"rect\");\n        node.setAttribute(\"x\", `${this._x(position.x)}`);\n        node.setAttribute(\"y\", `${this._y(position.y)}`);\n        node.setAttribute(\"width\", `${width * this.scale.x}`);\n        node.setAttribute(\"height\", `${height * this.scale.y}`);\n        return this._bindFillDraw(node, \"rect\", color, lineWidth || 1);\n    }\n    /**\n     * Draw a grid of horizontal and vertical lines with the given (CSS-) color.\n     *\n     * @method grid\n     * @param {Vertex} center - The center of the grid.\n     * @param {number} width - The total width of the grid (width/2 each to the left and to the right).\n     * @param {number} height - The total height of the grid (height/2 each to the top and to the bottom).\n     * @param {number} sizeX - The horizontal grid size.\n     * @param {number} sizeY - The vertical grid size.\n     * @param {string} color - The CSS color to draw the grid with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    grid(center, width, height, sizeX, sizeY, color) {\n        const node = this.makeNode(\"path\");\n        const d = [];\n        var yMin = -Math.ceil((height * 0.5) / sizeY) * sizeY;\n        var yMax = height / 2;\n        for (var x = -Math.ceil((width * 0.5) / sizeX) * sizeX; x < width / 2; x += sizeX) {\n            d.push(\"M\", this._x(center.x + x), this._y(center.y + yMin));\n            d.push(\"L\", this._x(center.x + x), this._y(center.y + yMax));\n        }\n        var xMin = -Math.ceil((width * 0.5) / sizeX) * sizeX;\n        var xMax = width / 2;\n        for (var y = -Math.ceil((height * 0.5) / sizeY) * sizeY; y < height / 2; y += sizeY) {\n            d.push(\"M\", this._x(center.x + xMin), this._y(center.y + y));\n            d.push(\"L\", this._x(center.x + xMax), this._y(center.y + y));\n        }\n        node.setAttribute(\"d\", d.join(\" \"));\n        return this._bindFillDraw(node, \"grid\", color, 1);\n    }\n    /**\n     * Draw a raster of crosshairs in the given grid.<br>\n     *\n     * This works analogue to the grid() function\n     *\n     * @method raster\n     * @param {Vertex} center - The center of the raster.\n     * @param {number} width - The total width of the raster (width/2 each to the left and to the right).\n     * @param {number} height - The total height of the raster (height/2 each to the top and to the bottom).\n     * @param {number} sizeX - The horizontal raster size.\n     * @param {number} sizeY - The vertical raster size.\n     * @param {string} color - The CSS color to draw the raster with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    raster(center, width, height, sizeX, sizeY, color) {\n        const node = this.makeNode(\"path\");\n        const d = [];\n        for (var x = -Math.ceil((width * 0.5) / sizeX) * sizeX; x < width / 2; x += sizeX) {\n            for (var y = -Math.ceil((height * 0.5) / sizeY) * sizeY; y < height / 2; y += sizeY) {\n                // Draw a crosshair\n                d.push(\"M\", this._x(center.x + x) - 4, this._y(center.y + y));\n                d.push(\"L\", this._x(center.x + x) + 4, this._y(center.y + y));\n                d.push(\"M\", this._x(center.x + x), this._y(center.y + y) - 4);\n                d.push(\"L\", this._x(center.x + x), this._y(center.y + y) + 4);\n            }\n        }\n        node.setAttribute(\"d\", d.join(\" \"));\n        return this._bindFillDraw(node, \"raster\", color, 1);\n    }\n    /**\n     * Draw a diamond handle (square rotated by 45°) with the given CSS color.\n     *\n     * It is an inherent featur of the handle functions that the drawn elements are not scaled and not\n     * distorted. So even if the user zooms in or changes the aspect ratio, the handles will be drawn\n     * as even shaped diamonds.\n     *\n     * @method diamondHandle\n     * @param {Vertex} center - The center of the diamond.\n     * @param {Vertex} size - The x/y-size of the diamond.\n     * @param {string} color - The CSS color to draw the diamond with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    diamondHandle(center, size, color) {\n        const node = this.makeNode(\"path\");\n        const d = [\n            \"M\",\n            this._x(center.x) - size / 2.0,\n            this._y(center.y),\n            \"L\",\n            this._x(center.x),\n            this._y(center.y) - size / 2.0,\n            \"L\",\n            this._x(center.x) + size / 2.0,\n            this._y(center.y),\n            \"L\",\n            this._x(center.x),\n            this._y(center.y) + size / 2.0,\n            \"Z\"\n        ];\n        node.setAttribute(\"d\", d.join(\" \"));\n        return this._bindFillDraw(node, \"diamondHandle\", color, 1);\n    }\n    /**\n     * Draw a square handle with the given CSS color.<br>\n     * <br>\n     * It is an inherent featur of the handle functions that the drawn elements are not scaled and not\n     * distorted. So even if the user zooms in or changes the aspect ratio, the handles will be drawn\n     * as even shaped squares.\n     *\n     * @method squareHandle\n     * @param {Vertex} center - The center of the square.\n     * @param {Vertex} size - The x/y-size of the square.\n     * @param {string} color - The CSS color to draw the square with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    squareHandle(center, size, color) {\n        const node = this.makeNode(\"rect\");\n        node.setAttribute(\"x\", `${this._x(center.x) - size / 2.0}`);\n        node.setAttribute(\"y\", `${this._y(center.y) - size / 2.0}`);\n        node.setAttribute(\"width\", `${size}`);\n        node.setAttribute(\"height\", `${size}`);\n        return this._bindFillDraw(node, \"squareHandle\", color, 1);\n    }\n    /**\n     * Draw a circle handle with the given CSS color.<br>\n     * <br>\n     * It is an inherent featur of the handle functions that the drawn elements are not scaled and not\n     * distorted. So even if the user zooms in or changes the aspect ratio, the handles will be drawn\n     * as even shaped circles.\n     *\n     * @method circleHandle\n     * @param {Vertex} center - The center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {string} color - The CSS color to draw the circle with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    circleHandle(center, radius, color) {\n        radius = radius || 3;\n        const node = this.makeNode(\"circle\");\n        node.setAttribute(\"cx\", `${this._x(center.x)}`);\n        node.setAttribute(\"cy\", `${this._y(center.y)}`);\n        node.setAttribute(\"r\", `${radius}`);\n        return this._bindFillDraw(node, \"circleHandle\", color, 1);\n    }\n    /**\n     * Draw a crosshair with given radius and color at the given position.<br>\n     * <br>\n     * Note that the crosshair radius will not be affected by scaling.\n     *\n     * @method crosshair\n     * @param {XYCoords} center - The center of the crosshair.\n     * @param {number} radius - The radius of the crosshair.\n     * @param {string} color - The CSS color to draw the crosshair with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    crosshair(center, radius, color) {\n        const node = this.makeNode(\"path\");\n        const d = [\n            \"M\",\n            this._x(center.x) - radius,\n            this._y(center.y),\n            \"L\",\n            this._x(center.x) + radius,\n            this._y(center.y),\n            \"M\",\n            this._x(center.x),\n            this._y(center.y) - radius,\n            \"L\",\n            this._x(center.x),\n            this._y(center.y) + radius\n        ];\n        node.setAttribute(\"d\", d.join(\" \"));\n        return this._bindFillDraw(node, \"crosshair\", color, 0.5);\n    }\n    /**\n     * Draw a polygon.\n     *\n     * @method polygon\n     * @param {Polygon} polygon - The polygon to draw.\n     * @param {string} color - The CSS color to draw the polygon with.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    polygon(polygon, color, lineWidth) {\n        return this.polyline(polygon.vertices, polygon.isOpen, color, lineWidth);\n    }\n    /**\n     * Draw a polygon line (alternative function to the polygon).\n     *\n     * @method polyline\n     * @param {Vertex[]} vertices - The polygon vertices to draw.\n     * @param {boolan}   isOpen   - If true the polyline will not be closed at its end.\n     * @param {string}   color    - The CSS color to draw the polygon with.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    polyline(vertices, isOpen, color, lineWidth) {\n        const node = this.makeNode(\"path\");\n        if (vertices.length == 0)\n            return node;\n        // Draw curve\n        const d = [\"M\", this._x(vertices[0].x), this._y(vertices[0].y)];\n        var n = vertices.length;\n        for (var i = 1; i < n; i++) {\n            d.push(\"L\", this._x(vertices[i].x), this._y(vertices[i].y));\n        }\n        if (!isOpen)\n            d.push(\"Z\");\n        node.setAttribute(\"d\", d.join(\" \"));\n        return this._bindFillDraw(node, \"polygon\", color, lineWidth || 1);\n    }\n    /**\n     * Draw a text at the given relative position.\n     *\n     * @method text\n     * @param {string} text - The text to draw.\n     * @param {number} x - The x-position to draw the text at.\n     * @param {number} y - The y-position to draw the text at.\n     * @param {string=} options.color - The Color to use.\n     * @param {string=} options.fontFamily - The font family to use.\n     * @param {number=} options.fontSize - The font size (in pixels) to use.\n     * @param {FontStyle=} options.fontStyle - The font style to use.\n     * @param {FontWeight=} options.fontWeight - The font weight to use.\n     * @param {number=} options.lineHeight - The line height (in pixels) to use.\n     * @param {number=} options.rotation - The (optional) rotation in radians.\n     * @param {string=} options.textAlign - The text align to use. According to the specifiactions (https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign) valid values are `\"left\" || \"right\" || \"center\" || \"start\" || \"end\"`.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    text(text, x, y, options) {\n        var _a, _b;\n        options = options || {};\n        const color = options.color || \"black\";\n        const lineHeight = ((_b = (_a = options.lineHeight) !== null && _a !== void 0 ? _a : options.fontSize) !== null && _b !== void 0 ? _b : 0) * this.scale.x;\n        // https://www.w3.org/TR/SVG/text.html#TextAnchorProperty\n        //    start | middle | end\n        const textAlign = options.textAlign === \"left\" || options.textAlign === \"start\"\n            ? \"start\"\n            : options.textAlign === \"center\"\n                ? \"middle\"\n                : options.textAlign === \"right\" || options.textAlign === \"end\"\n                    ? \"end\"\n                    : \"start\";\n        const transformOrigin = `${this._x(x)}px ${this._y(y)}px`;\n        const translate = `translate(${this._x(x)} ${this._y(y) + lineHeight / 2})`;\n        // Safari has a transform-origin/rotation bug.\n        // It's essential to use rotate(r,x,y) here. \"rotate(r)\"\" with transform-origin(x,y) won't do the job.\n        // And rotate and translate cannot be used is combination on a text object.\n        // So wrap the text inside a <g>, translate the <g>, and rotate the text inside.\n        const rotate = options.rotation ? `rotate(${options.rotation * RAD_TO_DEG} 0 0)` : ``;\n        const node = this.makeNode(\"g\");\n        const curId = this.curId;\n        this.curId = curId + \"_text\";\n        const textNode = this.makeNode(\"text\");\n        node.appendChild(textNode);\n        textNode.setAttribute(\"font-family\", options.fontFamily); // May be undefined\n        textNode.setAttribute(\"font-size\", options.fontSize ? `${options.fontSize * this.scale.x}` : null);\n        textNode.setAttribute(\"font-style\", options.fontStyle ? `${options.fontStyle}` : null);\n        textNode.setAttribute(\"font-weight\", options.fontWeight ? `${options.fontWeight}` : null);\n        textNode.setAttribute(\"text-anchor\", textAlign);\n        textNode.setAttribute(\"transform-origin\", \"0 0\");\n        textNode.setAttribute(\"transform\", rotate);\n        node.setAttribute(\"transform-origin\", transformOrigin);\n        node.setAttribute(\"transform\", translate);\n        textNode.innerHTML = text;\n        // Restore old ID\n        this.curId = curId;\n        return this._bindFillDraw(node, \"text\", color, 1);\n    }\n    /**\n     * Draw a non-scaling text label at the given position.\n     *\n     * @method label\n     * @param {string} text - The text to draw.\n     * @param {number} x - The x-position to draw the text at.\n     * @param {number} y - The y-position to draw the text at.\n     * @param {number=} rotation - The (optional) rotation in radians.\n     * @param {string=\"black\"} color - The color to use (default is black).\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     */\n    label(text, x, y, rotation, color) {\n        const node = this.makeNode(\"text\");\n        // For some strange reason SVG rotation transforms use degrees instead of radians\n        node.setAttribute(\"transform\", `translate(${x},${y}), rotate(${((rotation || 0) / Math.PI) * 180})`);\n        node.setAttribute(\"font-family\", \"Arial\");\n        node.setAttribute(\"font-size\", \"9pt\");\n        node.setAttribute(\"font-style\", \"normal\");\n        node.setAttribute(\"font-weight\", \"lighter\");\n        node.innerHTML = text;\n        return this._bindFillDraw(node, \"label\", color || \"black\", null);\n    }\n    /**\n     * Draw an SVG-like path given by the specified path data.\n     *\n     * @method path\n     * @param {SVGPathData} pathData - An array of path commands and params.\n     * @param {string=null} color - (optional) The color to draw this path with (default is null).\n     * @param {number=1} lineWidth - (optional) the line width to use (default is 1).\n     * @param {boolean=false} options.inplace - (optional) If set to true then path transforamtions (scale and translate) will be done in-place in the array. This can boost the performance.\n     * @instance\n     * @memberof drawutils\n     * @return {R} An instance representing the drawn path.\n     */\n    path(pathData, color, lineWidth, options) {\n        const node = this.makeNode(\"path\");\n        // Transform the path: in-place (fast) or copy (slower)\n        const d = options && options.inplace ? pathData : drawutilssvg.copyPathData(pathData);\n        drawutilssvg.transformPathData(d, this.offset, this.scale);\n        node.setAttribute(\"d\", d.join(\" \"));\n        return this._bindFillDraw(node, \"path\", color, lineWidth);\n    }\n    /**\n     * Due to gl compatibility there is a generic 'clear' function required\n     * to avoid accessing the context object itself directly.\n     *\n     * This function just fills the whole canvas with a single color.\n     *\n     * @param {string} color - The color to clear with.\n     * @return {void}\n     * @instance\n     * @memberof drawutilssvg\n     **/\n    clear(color) {\n        // If this isn't the primary handler then do not remove anything here.\n        // The primary handler will do that (no double work).\n        if (this.isSecondary) {\n            return;\n        }\n        // // Clearing an SVG is equivalent to removing all its child elements.\n        // for (var i = 0; i < this.gNode.childNodes.length; i++) {\n        //   // Hide all nodes here. Don't throw them away.\n        //   // We can probably re-use them in the next draw cycle.\n        //   var child: SVGElement = this.gNode.childNodes[i] as SVGElement;\n        //   this.cache.set(child.getAttribute(\"id\"), child);\n        // }\n        // this.removeAllChildNodes();\n        // Add a covering rect with the given background color\n        this.curId = \"background\";\n        this.curClassName = undefined;\n        const node = this.makeNode(\"rect\");\n        // For some strange reason SVG rotation transforms use degrees instead of radians\n        // Note that the background does not scale with the zoom level (always covers full element)\n        node.setAttribute(\"x\", \"0\");\n        node.setAttribute(\"y\", \"0\");\n        node.setAttribute(\"width\", `${this.canvasSize.width}`);\n        node.setAttribute(\"height\", `${this.canvasSize.height}`);\n        // Bind this special element into the document\n        this._bindFillDraw(node, this.curId, null, null);\n        node.setAttribute(\"fill\", typeof color === \"undefined\" ? \"none\" : color);\n        // Clear the current ID again\n        this.curId = undefined;\n    }\n    /**\n     * A private helper function to clear all SVG nodes from the &gt;g> node.\n     *\n     * @private\n     */\n    removeAllChildNodes() {\n        while (this.bufferGNode.lastChild) {\n            this.bufferGNode.removeChild(this.bufferGNode.lastChild);\n        }\n    }\n    /**\n     * Create a new and empty `SVGElement` &lt;svg&gt; in the svg-namespace.\n     *\n     * @name createSvg\n     * @static\n     * @memberof drawutilssvg\n     * @return SVGElement\n     */\n    static createSvg() {\n        return document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    }\n    /**\n     * Create a copy of the given path data. As path data only consists of strings and numbers,\n     * the copy will be shallow by definition.\n     *\n     * @name copyPathData\n     * @static\n     * @memberof drawutilssvg\n     */\n    static copyPathData(data) {\n        const copy = new Array(data.length);\n        for (var i = 0, n = data.length; i < n; i++) {\n            copy[i] = data[i];\n        }\n        return copy;\n    }\n    /**\n     * Transform the given path data (translate and scale. rotating is not intended here).\n     *\n     * @name transformPathData\n     * @static\n     * @memberof drawutilssvg\n     * @param {SVGPathParams} data - The data to transform.\n     * @param {XYCoords} offset - The translation offset (neutral is x=0, y=0).\n     * @param {XYCoords} scale - The scale factors (neutral is x=1, y=1).\n     */\n    static transformPathData(data, offset, scale) {\n        // Scale and translate {x,y}\n        const _stx = (index) => {\n            data[index] = offset.x + scale.x * Number(data[index]);\n        };\n        const _sty = (index) => {\n            data[index] = offset.y + scale.y * Number(data[index]);\n        };\n        // scale only {x,y}\n        const _sx = (index) => {\n            data[index] = scale.x * Number(data[index]);\n        };\n        const _sy = (index) => {\n            data[index] = scale.y * Number(data[index]);\n        };\n        const stx = (value) => {\n            return offset.x + scale.x * value;\n        };\n        const sty = (value) => {\n            return offset.y + scale.y * value;\n        };\n        // scale only {x,y}\n        const sx = (value) => {\n            return scale.x * value;\n        };\n        const sy = (value) => {\n            return scale.y * value;\n        };\n        var i = 0;\n        var lastPoint = { x: NaN, y: NaN };\n        // \"save last point\"\n        var _slp = (index) => {\n            lastPoint.x = Number(data[index]);\n            lastPoint.y = Number(data[index + 1]);\n        };\n        while (i < data.length) {\n            const cmd = data[i];\n            switch (cmd) {\n                case \"M\":\n                // MoveTo: M|m x y\n                case \"L\":\n                // LineTo L|l x y\n                case \"T\":\n                    // Shorthand/smooth quadratic Bézier curveto: T|t x y\n                    _stx(i + 1);\n                    _sty(i + 2);\n                    _slp(i + 1);\n                    i += 3;\n                    break;\n                case \"m\":\n                // MoveTo: M|m x y\n                case \"l\":\n                // LineTo L|l x y\n                case \"t\":\n                    // Shorthand/smooth quadratic Bézier curveto: T|t x y\n                    _sx(i + 1);\n                    _sy(i + 2);\n                    _slp(i + 1);\n                    i += 3;\n                    break;\n                case \"H\":\n                    // HorizontalLineTo: H|h x\n                    _stx(i + 1);\n                    lastPoint.x = Number(data[i + 1]);\n                    i += 2;\n                    break;\n                case \"h\":\n                    // HorizontalLineTo: H|h x\n                    _sx(i + 1);\n                    lastPoint.x = Number(data[i + 1]);\n                    i += 2;\n                    break;\n                case \"V\":\n                    // VerticalLineTo: V|v y\n                    _sty(i + 1);\n                    lastPoint.y = Number(data[i + 1]);\n                    i += 2;\n                    break;\n                case \"v\":\n                    // VerticalLineTo: V|v y\n                    _sy(i + 1);\n                    lastPoint.y = Number(data[i + 1]);\n                    i += 2;\n                    break;\n                case \"C\":\n                    // CurveTo: C|c x1 y1 x2 y2 x y\n                    _stx(i + 1);\n                    _sty(i + 2);\n                    _stx(i + 3);\n                    _sty(i + 4);\n                    _stx(i + 5);\n                    _sty(i + 6);\n                    _slp(i + 5);\n                    i += 7;\n                    break;\n                case \"c\":\n                    // CurveTo: C|c x1 y1 x2 y2 x y\n                    _sx(i + 1);\n                    _sy(i + 2);\n                    _sx(i + 3);\n                    _sy(i + 4);\n                    _sx(i + 5);\n                    _sy(i + 6);\n                    _slp(i + 5);\n                    i += 7;\n                    break;\n                case \"S\":\n                case \"Q\":\n                    // Shorthand-/SmoothCurveTo: S|s x2 y2 x y\n                    // QuadraticCurveTo: Q|q x1 y1 x y\n                    _stx(i + 1);\n                    _sty(i + 2);\n                    _stx(i + 3);\n                    _sty(i + 4);\n                    _slp(i + 3);\n                    i += 5;\n                    break;\n                case \"s\":\n                case \"q\":\n                    // Shorthand-/SmoothCurveTo: S|s x2 y2 x y\n                    // QuadraticCurveTo: Q|q x1 y1 x y\n                    _sx(i + 1);\n                    _sy(i + 2);\n                    _sx(i + 3);\n                    _sy(i + 4);\n                    _slp(i + 3);\n                    i += 5;\n                    break;\n                case \"A\":\n                    // EllipticalArcTo: A|a rx ry x-axis-rotation large-arc-flag sweep-flag x y\n                    // Uniform scale: just scale\n                    // NOTE: here is something TODO\n                    //  * if scalex!=scaleY this won't work\n                    //  * Arcs have to be converted to Bézier curves here in that case\n                    _sx(i + 1);\n                    _sy(i + 2);\n                    _stx(i + 6);\n                    _sty(i + 7);\n                    _slp(i + 6);\n                    // Update the arc flag when x _or_ y scale is negative\n                    if ((scale.x < 0 && scale.y >= 0) || (scale.x >= 0 && scale.y < 0)) {\n                        data[i + 5] = data[i + 5] ? 0 : 1;\n                    }\n                    i += 8;\n                    break;\n                case \"a\":\n                    // EllipticalArcTo: A|a rx ry x-axis-rotation large-arc-flag sweep-flag x y\n                    _sx(i + 1);\n                    _sy(i + 2);\n                    _sx(i + 6);\n                    _sy(i + 7);\n                    _slp(i + 6);\n                    i += 8;\n                    break;\n                case \"z\":\n                case \"Z\":\n                    // ClosePath: Z|z (no arguments)\n                    // lastPoint.x = firstPoint.x;\n                    // lastPoint.y = firstPoint.y;\n                    i++;\n                    break;\n                // Safepoint: continue reading token by token until something is recognized again\n                default:\n                    i++;\n            }\n        } // END while\n    } // END transformPathData\n}\ndrawutilssvg.HEAD_XML = [\n    '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>',\n    '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.0//EN\" ',\n    '         \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">',\n    \"\"\n].join(\"\\n\");\n//# sourceMappingURL=drawutilssvg.js.map","/**\n * @author   Ikaros Kappler\n * @date     2018-04-22\n * @modified 2018-08-16 Added the curve() function to draw cubic bézier curves.\n * @modified 2018-10-23 Recognizing the offset param in the circle() function.\n * @modified 2018-11-27 Added the diamondHandle() function.\n * @modified 2018-11-28 Added the grid() function and the ellipse() function.\n * @modified 2018-11-30 Renamed the text() function to label() as it is not scaling.\n * @modified 2018-12-06 Added a test function for drawing arc in SVG style.\n * @modified 2018-12-09 Added the dot(Vertex,color) function (copied from Feigenbaum-plot-script).\n * @modified 2019-01-30 Added the arrow(Vertex,Vertex,color) function for drawing arrow heads.\n * @modified 2019-01-30 Added the image(Image,Vertex,Vertex) function for drawing images.\n * @modified 2019-04-27 Fixed a severe drawing bug in the arrow(...) function. Scaling arrows did not work properly.\n * @modified 2019-04-28 Added Math.round to the dot() drawing parameters to really draw a singlt dot.\n * @modified 2019-06-07 Fixed an issue in the cubicBezier() function. Paths were always closed.\n * @modified 2019-10-03 Added the beginDrawCycle hook.\n * @modified 2019-10-25 Polygons are no longer drawn with dashed lines (solid lines instead).\n * @modified 2019-11-18 Added the polyline function.\n * @modified 2019-11-22 Added a second workaround for th drawImage bug in Safari.\n * @modified 2019-12-07 Added the 'lineWidth' param to the line(...) function.\n * @modified 2019-12-07 Added the 'lineWidth' param to the cubicBezier(...) function.\n * @modified 2019-12-11 Added the 'color' param to the label(...) function.\n * @modified 2019-12-18 Added the quadraticBezier(...) function (for the sake of approximating Lissajous curves).\n * @modified 2019-12-20 Added the 'lineWidth' param to the polyline(...) function.\n * @modified 2020-01-09 Added the 'lineWidth' param to the ellipse(...) function.\n * @modified 2020-03-25 Ported this class from vanilla-JS to Typescript.\n * @modified 2020-05-05 Added the 'lineWidth' param to the circle(...) function.\n * @modified 2020-05-12 Drawing any handles (square, circle, diamond) with lineWidth 1 now; this was not reset before.\n * @modified 2020-06-22 Added a context.clearRect() call to the clear() function; clearing with alpha channel did not work as expected.\n * @modified 2020-09-07 Added the circleArc(...) function to draw sections of circles.\n * @modified 2020-10-06 Removed the .closePath() instruction from the circleArc function.\n * @modified 2020-10-15 Re-added the text() function.\n * @modified 2020-10-28 Added the path(Path2D) function.\n * @modified 2020-12-28 Added the `singleSegment` mode (test).\n * @modified 2021-01-05 Added the image-loaded/broken check.\n * @modified 2021-01-24 Added the `setCurrentId` function from the `DrawLib` interface.\n * @modified 2021-02-22 Added the `path` drawing function to draw SVG path data.\n * @modified 2021-03-31 Added the `endDrawCycle` function from `DrawLib`.\n * @modified 2021-05-31 Added the `setConfiguration` function from `DrawLib`.\n * @modified 2021-11-12 Adding more parameters tot the `text()` function: fontSize, textAlign, fontFamily, lineHeight.\n * @modified 2021-11-19 Added the `color` param to the `label(...)` function.\n * @version  1.10.0\n **/\nimport { CubicBezierCurve } from \"./CubicBezierCurve\";\nimport { Vertex } from \"./Vertex\";\nimport { drawutilssvg } from \"./drawutilssvg\";\n// Todo: rename this class to Drawutils?\n/**\n * @classdesc A wrapper class for basic drawing operations.\n *\n * @requires CubicBzierCurvce\n * @requires Polygon\n * @requires Vertex\n * @requires XYCoords\n */\nexport class drawutils {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name drawutils\n     * @param {anvasRenderingContext2D} context - The drawing context.\n     * @param {boolean} fillShaped - Indicates if the constructed drawutils should fill all drawn shapes (if possible).\n     **/\n    constructor(context, fillShapes) {\n        this.ctx = context;\n        this.offset = new Vertex(0, 0);\n        this.scale = new Vertex(1, 1);\n        this.fillShapes = fillShapes;\n    }\n    /**\n     * Called before each draw cycle.\n     * @param {UID=} uid - (optional) A UID identifying the currently drawn element(s).\n     **/\n    beginDrawCycle(renderTime) {\n        // NOOP\n    }\n    /**\n     * Called after each draw cycle.\n     *\n     * This is required for compatibility with other draw classes in the library (like drawgl).\n     *\n     * @name endDrawCycle\n     * @method\n     * @param {number} renderTime\n     * @instance\n     **/\n    endDrawCycle(renderTime) {\n        // NOOP\n    }\n    /**\n     * Set the current drawlib configuration.\n     *\n     * @name setConfiguration\n     * @method\n     * @param {DrawLibConfiguration} configuration - The new configuration settings to use for the next render methods.\n     */\n    setConfiguration(configuration) {\n        this.ctx.globalCompositeOperation = configuration.blendMode;\n    }\n    /**\n     * This method shouled be called each time the currently drawn `Drawable` changes.\n     * It is used by some libraries for identifying elemente on re-renders.\n     *\n     * @name setCurrentId\n     * @method\n     * @param {UID} uid - A UID identifying the currently drawn element(s).\n     **/\n    setCurrentId(uid) {\n        // NOOP\n    }\n    /**\n     * This method shouled be called each time the currently drawn `Drawable` changes.\n     * Determine the class name for further usage here.\n     *\n     * @name setCurrentClassName\n     * @method\n     * @param {string} className - A class name for further custom use cases.\n     **/\n    setCurrentClassName(className) {\n        // NOOP\n    }\n    /**\n     * Draw the line between the given two points with the specified (CSS-) color.\n     *\n     * @method line\n     * @param {Vertex} zA - The start point of the line.\n     * @param {Vertex} zB - The end point of the line.\n     * @param {string} color - Any valid CSS color string.\n     * @param {number} lineWidth? - [optional] The line's width.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     **/\n    line(zA, zB, color, lineWidth) {\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.offset.x + zA.x * this.scale.x, this.offset.y + zA.y * this.scale.y);\n        this.ctx.lineTo(this.offset.x + zB.x * this.scale.x, this.offset.y + zB.y * this.scale.y);\n        this.ctx.strokeStyle = color;\n        this.ctx.lineWidth = lineWidth || 1;\n        this.ctx.stroke();\n        this.ctx.restore();\n    }\n    /**\n     * Draw a line and an arrow at the end (zB) of the given line with the specified (CSS-) color.\n     *\n     * @method arrow\n     * @param {Vertex} zA - The start point of the arrow-line.\n     * @param {Vertex} zB - The end point of the arrow-line.\n     * @param {string} color - Any valid CSS color string.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     **/\n    arrow(zA, zB, color, lineWidth) {\n        var headlen = 8; // length of head in pixels\n        // var vertices = PlotBoilerplate.utils.buildArrowHead( zA, zB, headlen, this.scale.x, this.scale.y );\n        // var vertices : Array<Vertex> = Vertex.utils.buildArrowHead( zA, zB, headlen, this.scale.x, this.scale.y );\n        this.ctx.save();\n        this.ctx.beginPath();\n        var vertices = Vertex.utils.buildArrowHead(zA, zB, headlen, this.scale.x, this.scale.y);\n        this.ctx.moveTo(this.offset.x + zA.x * this.scale.x, this.offset.y + zA.y * this.scale.y);\n        for (var i = 0; i < vertices.length; i++) {\n            this.ctx.lineTo(this.offset.x + vertices[i].x, this.offset.y + vertices[i].y);\n        }\n        this.ctx.lineTo(this.offset.x + vertices[0].x, this.offset.y + vertices[0].y);\n        this.ctx.lineWidth = lineWidth || 1;\n        this._fillOrDraw(color);\n        this.ctx.restore();\n    }\n    /**\n     * Draw an image at the given position with the given size.<br>\n     * <br>\n     * Note: SVG images may have resizing issues at the moment.Draw a line and an arrow at the end (zB) of the given line with the specified (CSS-) color.\n     *\n     * @method image\n     * @param {Image} image - The image object to draw.\n     * @param {Vertex} position - The position to draw the the upper left corner at.\n     * @param {Vertex} size - The x/y-size to draw the image with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     **/\n    image(image, position, size) {\n        if (!image.complete || !image.naturalWidth) {\n            // Avoid drawing un-unloaded or broken images\n            return;\n        }\n        this.ctx.save();\n        // Note that there is a Safari bug with the 3 or 5 params variant.\n        // Only the 9-param varaint works.\n        this.ctx.drawImage(image, 0, 0, image.naturalWidth - 1, // There is this horrible Safari bug (fixed in newer versions)\n        image.naturalHeight - 1, // To avoid errors substract 1 here.\n        this.offset.x + position.x * this.scale.x, this.offset.y + position.y * this.scale.y, size.x * this.scale.x, size.y * this.scale.y);\n        this.ctx.restore();\n    }\n    /**\n     * Draw a rectangle.\n     *\n     * @param {XYCoords} position - The upper left corner of the rectangle.\n     * @param {number} width - The width of the rectangle.\n     * @param {number} height - The height of the rectangle.\n     * @param {string} color - The color to use.\n     * @param {number=1} lineWidth - (optional) The line with to use (default is 1).\n     **/\n    rect(position, width, height, color, lineWidth) {\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.offset.x + position.x * this.scale.x, this.offset.y + position.y * this.scale.y);\n        this.ctx.lineTo(this.offset.x + (position.x + width) * this.scale.x, this.offset.y + position.y * this.scale.y);\n        this.ctx.lineTo(this.offset.x + (position.x + width) * this.scale.x, this.offset.y + (position.y + height) * this.scale.y);\n        this.ctx.lineTo(this.offset.x + position.x * this.scale.x, this.offset.y + (position.y + height) * this.scale.y);\n        // this.ctx.lineTo( this.offset.x+position.x*this.scale.x, this.offset.y+position.y*this.scale.y );\n        this.ctx.closePath();\n        this.ctx.lineWidth = lineWidth || 1;\n        this._fillOrDraw(color);\n        this.ctx.restore();\n    }\n    // +---------------------------------------------------------------------------------\n    // | This is the final helper function for drawing and filling stuff. It is not\n    // | intended to be used from the outside.\n    // |\n    // | When in draw mode it draws the current shape.\n    // | When in fill mode it fills the current shape.\n    // |\n    // | This function is usually only called internally.\n    // |\n    // | @param color A stroke/fill color to use.\n    // +-------------------------------\n    // TODO: convert this to a STATIC function.\n    _fillOrDraw(color) {\n        if (this.fillShapes) {\n            this.ctx.fillStyle = color;\n            this.ctx.fill();\n        }\n        else {\n            this.ctx.strokeStyle = color;\n            this.ctx.stroke();\n        }\n    }\n    /**\n     * Draw the given (cubic) bézier curve.\n     *\n     * @method cubicBezier\n     * @param {Vertex} startPoint - The start point of the cubic Bézier curve\n     * @param {Vertex} endPoint   - The end point the cubic Bézier curve.\n     * @param {Vertex} startControlPoint - The start control point the cubic Bézier curve.\n     * @param {Vertex} endControlPoint   - The end control point the cubic Bézier curve.\n     * @param {string} color - The CSS color to draw the curve with.\n     * @param {number} lineWidth - (optional) The line width to use.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    cubicBezier(startPoint, endPoint, startControlPoint, endControlPoint, color, lineWidth) {\n        if (startPoint instanceof CubicBezierCurve) {\n            this.cubicBezier(startPoint.startPoint, startPoint.endPoint, startPoint.startControlPoint, startPoint.endControlPoint, color, lineWidth);\n            return;\n        }\n        // Draw curve\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.offset.x + startPoint.x * this.scale.x, this.offset.y + startPoint.y * this.scale.y);\n        this.ctx.bezierCurveTo(this.offset.x + startControlPoint.x * this.scale.x, this.offset.y + startControlPoint.y * this.scale.y, this.offset.x + endControlPoint.x * this.scale.x, this.offset.y + endControlPoint.y * this.scale.y, this.offset.x + endPoint.x * this.scale.x, this.offset.y + endPoint.y * this.scale.y);\n        //this.ctx.closePath();\n        this.ctx.lineWidth = lineWidth || 2;\n        this._fillOrDraw(color);\n        this.ctx.restore();\n    }\n    /**\n     * Draw the given (quadratic) bézier curve.\n     *\n     * @method quadraticBezier\n     * @param {Vertex} startPoint   - The start point of the cubic Bézier curve\n     * @param {Vertex} controlPoint - The control point the cubic Bézier curve.\n     * @param {Vertex} endPoint     - The end control point the cubic Bézier curve.\n     * @param {string} color        - The CSS color to draw the curve with.\n     * @param {number|string} lineWidth - (optional) The line width to use.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    quadraticBezier(startPoint, controlPoint, endPoint, color, lineWidth) {\n        // Draw curve\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.offset.x + startPoint.x * this.scale.x, this.offset.y + startPoint.y * this.scale.y);\n        this.ctx.quadraticCurveTo(this.offset.x + controlPoint.x * this.scale.x, this.offset.y + controlPoint.y * this.scale.y, this.offset.x + endPoint.x * this.scale.x, this.offset.y + endPoint.y * this.scale.y);\n        this.ctx.lineWidth = lineWidth || 2;\n        this._fillOrDraw(color);\n        this.ctx.restore();\n    }\n    /**\n     * Draw the given (cubic) Bézier path.\n     *\n     * The given path must be an array with n*3+1 vertices, where n is the number of\n     * curves in the path:\n     * <pre> [ point1, point1_startControl, point2_endControl, point2, point2_startControl, point3_endControl, point3, ... pointN_endControl, pointN ]</pre>\n     *\n     * @method cubicBezierPath\n     * @param {Vertex[]} path - The cubic bezier path as described above.\n     * @param {string} color - The CSS colot to draw the path with.\n     * @param {number=1} lineWidth - (optional) The line width to use.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    cubicBezierPath(path, color, lineWidth) {\n        if (!path || path.length == 0)\n            return;\n        // Draw curve\n        this.ctx.save();\n        this.ctx.beginPath();\n        var endPoint;\n        var startControlPoint;\n        var endControlPoint;\n        this.ctx.moveTo(this.offset.x + path[0].x * this.scale.x, this.offset.y + path[0].y * this.scale.y);\n        for (var i = 1; i < path.length; i += 3) {\n            startControlPoint = path[i];\n            endControlPoint = path[i + 1];\n            endPoint = path[i + 2];\n            this.ctx.bezierCurveTo(this.offset.x + startControlPoint.x * this.scale.x, this.offset.y + startControlPoint.y * this.scale.y, this.offset.x + endControlPoint.x * this.scale.x, this.offset.y + endControlPoint.y * this.scale.y, this.offset.x + endPoint.x * this.scale.x, this.offset.y + endPoint.y * this.scale.y);\n        }\n        this.ctx.closePath();\n        this.ctx.lineWidth = lineWidth || 1;\n        this._fillOrDraw(color);\n        this.ctx.restore();\n    }\n    /**\n     * Draw the given handle and handle point (used to draw interactive Bézier curves).\n     *\n     * The colors for this are fixed and cannot be specified.\n     *\n     * @method handle\n     * @param {Vertex} startPoint - The start of the handle.\n     * @param {Vertex} endPoint - The end point of the handle.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    handle(startPoint, endPoint) {\n        // Draw handles\n        // (No need to save and restore here)\n        this.point(startPoint, \"rgb(0,32,192)\");\n        this.square(endPoint, 5, \"rgba(0,128,192,0.5)\");\n    }\n    /**\n     * Draw a handle line (with a light grey).\n     *\n     * @method handleLine\n     * @param {Vertex} startPoint - The start point to draw the handle at.\n     * @param {Vertex} endPoint - The end point to draw the handle at.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    handleLine(startPoint, endPoint) {\n        // Draw handle lines\n        this.line(startPoint, endPoint, \"rgb(192,192,192)\");\n    }\n    /**\n     * Draw a 1x1 dot with the specified (CSS-) color.\n     *\n     * @method dot\n     * @param {Vertex} p - The position to draw the dot at.\n     * @param {string} color - The CSS color to draw the dot with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    dot(p, color) {\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.moveTo(Math.round(this.offset.x + this.scale.x * p.x), Math.round(this.offset.y + this.scale.y * p.y));\n        this.ctx.lineTo(Math.round(this.offset.x + this.scale.x * p.x + 1), Math.round(this.offset.y + this.scale.y * p.y + 1));\n        this.ctx.closePath();\n        this.ctx.lineWidth = 1;\n        this._fillOrDraw(color);\n        this.ctx.restore();\n    }\n    /**\n     * Draw the given point with the specified (CSS-) color and radius 3.\n     *\n     * @method point\n     * @param {Vertex} p - The position to draw the point at.\n     * @param {string} color - The CSS color to draw the point with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    point(p, color) {\n        var radius = 3;\n        this.ctx.beginPath();\n        this.ctx.arc(this.offset.x + p.x * this.scale.x, this.offset.y + p.y * this.scale.y, radius, 0, 2 * Math.PI, false);\n        this.ctx.closePath();\n        this.ctx.lineWidth = 1;\n        this._fillOrDraw(color);\n    }\n    /**\n     * Draw a circle with the specified (CSS-) color and radius.<br>\n     * <br>\n     * Note that if the x- and y- scales are different the result will be an ellipse rather than a circle.\n     *\n     * @method circle\n     * @param {Vertex} center - The center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {string} color - The CSS color to draw the circle with.\n     * @param {number} lineWidth - The line width (optional, default=1).\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    circle(center, radius, color, lineWidth) {\n        this.ctx.beginPath();\n        this.ctx.ellipse(this.offset.x + center.x * this.scale.x, this.offset.y + center.y * this.scale.y, radius * this.scale.x, radius * this.scale.y, 0.0, 0.0, Math.PI * 2);\n        this.ctx.closePath();\n        this.ctx.lineWidth = lineWidth || 1;\n        this._fillOrDraw(color);\n    }\n    /**\n       * Draw a circular arc (section of a circle) with the given CSS color.\n       *\n       * @method circleArc\n       * @param {Vertex} center - The center of the circle.\n       * @param {number} radius - The radius of the circle.\n       * @param {number} startAngle - The angle to start at.\n       * @param {number} endAngle - The angle to end at.\n       * @param {string=#000000} color - The CSS color to draw the circle with.\n       * @param {number=1} lineWidth - The line width to use\n       // * @param {boolean=false} options.asSegment - If `true` then no beginPath and no draw will be applied (as part of larger path).\n       * @return {void}\n       * @instance\n       * @memberof drawutils\n       */\n    circleArc(center, radius, startAngle, endAngle, color, lineWidth, options) {\n        if (!options || !options.asSegment) {\n            this.ctx.beginPath();\n        }\n        this.ctx.ellipse(this.offset.x + center.x * this.scale.x, this.offset.y + center.y * this.scale.y, radius * this.scale.x, radius * this.scale.y, 0.0, startAngle, endAngle, false);\n        if (!options || !options.asSegment) {\n            // this.ctx.closePath();\n            this.ctx.lineWidth = lineWidth || 1;\n            this._fillOrDraw(color || \"#000000\");\n        }\n    }\n    /**\n     * Draw an ellipse with the specified (CSS-) color and thw two radii.\n     *\n     * @method ellipse\n     * @param {Vertex} center - The center of the ellipse.\n     * @param {number} radiusX - The radius of the ellipse.\n     * @param {number} radiusY - The radius of the ellipse.\n     * @param {string} color - The CSS color to draw the ellipse with.\n     * @param {number} lineWidth=1 - An optional line width param (default is 1).\n     * @param {number=} rotation - (optional, default=0) The rotation of the ellipse.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    ellipse(center, radiusX, radiusY, color, lineWidth, rotation) {\n        if (typeof rotation === \"undefined\") {\n            rotation = 0.0;\n        }\n        this.ctx.beginPath();\n        this.ctx.ellipse(this.offset.x + center.x * this.scale.x, this.offset.y + center.y * this.scale.y, radiusX * this.scale.x, radiusY * this.scale.y, rotation, 0.0, Math.PI * 2);\n        this.ctx.closePath();\n        this.ctx.lineWidth = lineWidth || 1;\n        this._fillOrDraw(color);\n    }\n    /**\n     * Draw square at the given center, size and with the specified (CSS-) color.<br>\n     * <br>\n     * Note that if the x-scale and the y-scale are different the result will be a rectangle rather than a square.\n     *\n     * @method square\n     * @param {XYCoords} center - The center of the square.\n     * @param {number} size - The size of the square.\n     * @param {string} color - The CSS color to draw the square with.\n     * @param {number} lineWidth - The line with to use (optional, default is 1).\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    square(center, size, color, lineWidth) {\n        this.ctx.beginPath();\n        this.ctx.rect(this.offset.x + (center.x - size / 2.0) * this.scale.x, this.offset.y + (center.y - size / 2.0) * this.scale.y, size * this.scale.x, size * this.scale.y);\n        this.ctx.closePath();\n        this.ctx.lineWidth = lineWidth || 1;\n        this._fillOrDraw(color);\n    }\n    /**\n     * Draw a grid of horizontal and vertical lines with the given (CSS-) color.\n     *\n     * @method grid\n     * @param {Vertex} center - The center of the grid.\n     * @param {number} width - The total width of the grid (width/2 each to the left and to the right).\n     * @param {number} height - The total height of the grid (height/2 each to the top and to the bottom).\n     * @param {number} sizeX - The horizontal grid size.\n     * @param {number} sizeY - The vertical grid size.\n     * @param {string} color - The CSS color to draw the grid with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    grid(center, width, height, sizeX, sizeY, color) {\n        this.ctx.beginPath();\n        var yMin = -Math.ceil((height * 0.5) / sizeY) * sizeY;\n        var yMax = height / 2;\n        for (var x = -Math.ceil((width * 0.5) / sizeX) * sizeX; x < width / 2; x += sizeX) {\n            this.ctx.moveTo(this.offset.x + (center.x + x) * this.scale.x, this.offset.y + (center.y + yMin) * this.scale.y);\n            this.ctx.lineTo(this.offset.x + (center.x + x) * this.scale.x, this.offset.y + (center.y + yMax) * this.scale.y);\n        }\n        var xMin = -Math.ceil((width * 0.5) / sizeX) * sizeX; // -Math.ceil((height*0.5)/sizeY)*sizeY;\n        var xMax = width / 2; // height/2;\n        for (var y = -Math.ceil((height * 0.5) / sizeY) * sizeY; y < height / 2; y += sizeY) {\n            this.ctx.moveTo(this.offset.x + (center.x + xMin) * this.scale.x - 4, this.offset.y + (center.y + y) * this.scale.y);\n            this.ctx.lineTo(this.offset.x + (center.x + xMax) * this.scale.x + 4, this.offset.y + (center.y + y) * this.scale.y);\n        }\n        this.ctx.strokeStyle = color;\n        this.ctx.lineWidth = 1.0;\n        this.ctx.stroke();\n        this.ctx.closePath();\n    }\n    /**\n     * Draw a raster of crosshairs in the given grid.<br>\n     *\n     * This works analogue to the grid() function\n     *\n     * @method raster\n     * @param {Vertex} center - The center of the raster.\n     * @param {number} width - The total width of the raster (width/2 each to the left and to the right).\n     * @param {number} height - The total height of the raster (height/2 each to the top and to the bottom).\n     * @param {number} sizeX - The horizontal raster size.\n     * @param {number} sizeY - The vertical raster size.\n     * @param {string} color - The CSS color to draw the raster with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    raster(center, width, height, sizeX, sizeY, color) {\n        this.ctx.save();\n        this.ctx.beginPath();\n        for (var x = -Math.ceil((width * 0.5) / sizeX) * sizeX; x < width / 2; x += sizeX) {\n            for (var y = -Math.ceil((height * 0.5) / sizeY) * sizeY; y < height / 2; y += sizeY) {\n                // Draw a crosshair\n                this.ctx.moveTo(this.offset.x + (center.x + x) * this.scale.x - 4, this.offset.y + (center.y + y) * this.scale.y);\n                this.ctx.lineTo(this.offset.x + (center.x + x) * this.scale.x + 4, this.offset.y + (center.y + y) * this.scale.y);\n                this.ctx.moveTo(this.offset.x + (center.x + x) * this.scale.x, this.offset.y + (center.y + y) * this.scale.y - 4);\n                this.ctx.lineTo(this.offset.x + (center.x + x) * this.scale.x, this.offset.y + (center.y + y) * this.scale.y + 4);\n            }\n        }\n        this.ctx.strokeStyle = color;\n        this.ctx.lineWidth = 1.0;\n        this.ctx.stroke();\n        this.ctx.closePath();\n        this.ctx.restore();\n    }\n    /**\n     * Draw a diamond handle (square rotated by 45°) with the given CSS color.\n     *\n     * It is an inherent feature of the handle functions that the drawn elements are not scaled and not\n     * distorted. So even if the user zooms in or changes the aspect ratio, the handles will be drawn\n     * as even shaped diamonds.\n     *\n     * @method diamondHandle\n     * @param {Vertex} center - The center of the diamond.\n     * @param {Vertex} size - The x/y-size of the diamond.\n     * @param {string} color - The CSS color to draw the diamond with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    diamondHandle(center, size, color) {\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.offset.x + center.x * this.scale.x - size / 2.0, this.offset.y + center.y * this.scale.y);\n        this.ctx.lineTo(this.offset.x + center.x * this.scale.x, this.offset.y + center.y * this.scale.y - size / 2.0);\n        this.ctx.lineTo(this.offset.x + center.x * this.scale.x + size / 2.0, this.offset.y + center.y * this.scale.y);\n        this.ctx.lineTo(this.offset.x + center.x * this.scale.x, this.offset.y + center.y * this.scale.y + size / 2.0);\n        this.ctx.closePath();\n        this.ctx.lineWidth = 1;\n        this._fillOrDraw(color);\n    }\n    /**\n     * Draw a square handle with the given CSS color.<br>\n     * <br>\n     * It is an inherent feature of the handle functions that the drawn elements are not scaled and not\n     * distorted. So even if the user zooms in or changes the aspect ratio, the handles will be drawn\n     * as even shaped squares.\n     *\n     * @method squareHandle\n     * @param {Vertex} center - The center of the square.\n     * @param {Vertex} size - The x/y-size of the square.\n     * @param {string} color - The CSS color to draw the square with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    squareHandle(center, size, color) {\n        this.ctx.beginPath();\n        this.ctx.rect(this.offset.x + center.x * this.scale.x - size / 2.0, this.offset.y + center.y * this.scale.y - size / 2.0, size, size);\n        this.ctx.closePath();\n        this.ctx.lineWidth = 1;\n        this._fillOrDraw(color);\n    }\n    /**\n     * Draw a circle handle with the given CSS color.<br>\n     * <br>\n     * It is an inherent feature of the handle functions that the drawn elements are not scaled and not\n     * distorted. So even if the user zooms in or changes the aspect ratio, the handles will be drawn\n     * as even shaped circles.\n     *\n     * @method circleHandle\n     * @param {Vertex} center - The center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {string} color - The CSS color to draw the circle with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    circleHandle(center, radius, color) {\n        radius = radius || 3;\n        this.ctx.beginPath();\n        this.ctx.arc(this.offset.x + center.x * this.scale.x, this.offset.y + center.y * this.scale.y, radius, 0, 2 * Math.PI, false);\n        this.ctx.closePath();\n        this.ctx.lineWidth = 1;\n        this._fillOrDraw(color);\n    }\n    /**\n     * Draw a crosshair with given radius and color at the given position.<br>\n     * <br>\n     * Note that the crosshair radius will not be affected by scaling.\n     *\n     * @method crosshair\n     * @param {XYCoords} center - The center of the crosshair.\n     * @param {number} radius - The radius of the crosshair.\n     * @param {string} color - The CSS color to draw the crosshair with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    crosshair(center, radius, color) {\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.offset.x + center.x * this.scale.x - radius, this.offset.y + center.y * this.scale.y);\n        this.ctx.lineTo(this.offset.x + center.x * this.scale.x + radius, this.offset.y + center.y * this.scale.y);\n        this.ctx.moveTo(this.offset.x + center.x * this.scale.x, this.offset.y + center.y * this.scale.y - radius);\n        this.ctx.lineTo(this.offset.x + center.x * this.scale.x, this.offset.y + center.y * this.scale.y + radius);\n        this.ctx.strokeStyle = color;\n        this.ctx.lineWidth = 0.5;\n        this.ctx.stroke();\n        this.ctx.closePath();\n        this.ctx.restore();\n    }\n    /**\n     * Draw a polygon.\n     *\n     * @method polygon\n     * @param {Polygon}  polygon - The polygon to draw.\n     * @param {string}   color - The CSS color to draw the polygon with.\n     * @param {string}   lineWidth - The line width to use.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    polygon(polygon, color, lineWidth) {\n        this.polyline(polygon.vertices, polygon.isOpen, color, lineWidth);\n    }\n    /**\n     * Draw a polygon line (alternative function to the polygon).\n     *\n     * @method polyline\n     * @param {Vertex[]} vertices   - The polygon vertices to draw.\n     * @param {boolan}   isOpen     - If true the polyline will not be closed at its end.\n     * @param {string}   color      - The CSS color to draw the polygon with.\n     * @param {number}   lineWidth  - The line width (default is 1.0);\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    polyline(vertices, isOpen, color, lineWidth) {\n        if (vertices.length <= 1)\n            return;\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.lineWidth = lineWidth || 1.0;\n        this.ctx.moveTo(this.offset.x + vertices[0].x * this.scale.x, this.offset.y + vertices[0].y * this.scale.y);\n        for (var i = 0; i < vertices.length; i++) {\n            this.ctx.lineTo(this.offset.x + vertices[i].x * this.scale.x, this.offset.y + vertices[i].y * this.scale.y);\n        }\n        if (!isOpen)\n            // && vertices.length > 2 )\n            this.ctx.closePath();\n        this._fillOrDraw(color);\n        this.ctx.closePath();\n        this.ctx.setLineDash([]);\n        this.ctx.restore();\n    }\n    /**\n     * Draw a text at the given relative position.\n     *\n     * @method text\n     * @param {string} text - The text to draw.\n     * @param {number} x - The x-position to draw the text at.\n     * @param {number} y - The y-position to draw the text at.\n     * @param {string=} options.color - The Color to use.\n     * @param {string=} options.fontFamily - The font family to use.\n     * @param {number=} options.fontSize - The font size (in pixels) to use.\n     * @param {FontStyle=} options.fontStyle - The font style to use.\n     * @param {FontWeight=} options.fontWeight - The font weight to use.\n     * @param {number=} options.lineHeight - The line height (in pixels) to use.\n     * @param {number=} options.rotation - The (optional) rotation in radians.\n     * @param {string=} options.textAlign - The text align to use. According to the specifiactions (https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign) valid values are `\"left\" || \"right\" || \"center\" || \"start\" || \"end\"`.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    text(text, x, y, options) {\n        // See https://stackoverflow.com/a/23523697\n        var _a, _b, _c;\n        options = options || {};\n        this.ctx.save();\n        let relX = this.offset.x + x * this.scale.x;\n        let relY = this.offset.y + y * this.scale.y;\n        const color = options.color || \"black\";\n        if (options.fontSize || options.fontFamily) {\n            // Scaling of text only works in uniform mode\n            this.ctx.font =\n                (options.fontWeight ? options.fontWeight + \" \" : \"\") +\n                    (options.fontStyle ? options.fontStyle + \" \" : \"\") +\n                    (options.fontSize ? options.fontSize * this.scale.x + \"px \" : \" \") +\n                    (options.fontFamily\n                        ? options.fontFamily.indexOf(\" \") === -1\n                            ? options.fontFamily\n                            : `\"${options.fontFamily}\"`\n                        : \"Arial\");\n        }\n        if (options.textAlign) {\n            this.ctx.textAlign = options.textAlign;\n        }\n        const rotation = (_a = options.rotation) !== null && _a !== void 0 ? _a : 0.0;\n        const lineHeight = ((_c = (_b = options.lineHeight) !== null && _b !== void 0 ? _b : options.fontSize) !== null && _c !== void 0 ? _c : 0) * this.scale.x;\n        this.ctx.translate(relX, relY);\n        this.ctx.rotate(rotation);\n        if (this.fillShapes) {\n            this.ctx.fillStyle = color;\n            this.ctx.fillText(text, 0, lineHeight / 2);\n        }\n        else {\n            this.ctx.strokeStyle = color;\n            this.ctx.strokeText(text, 0, lineHeight / 2);\n        }\n        // this.ctx.translate(-relX, -relY);\n        // this.ctx.rotate(-rotation); // is this necessary before 'restore()'?\n        this.ctx.restore();\n    }\n    /**\n     * Draw a non-scaling text label at the given position.\n     *\n     * Note that these are absolute label positions, they are not affected by offset or scale.\n     *\n     * @method label\n     * @param {string} text - The text to draw.\n     * @param {number} x - The x-position to draw the text at.\n     * @param {number} y - The y-position to draw the text at.\n     * @param {number=} rotation - The (optional) rotation in radians (default=0).\n     * @param {string=} color - The color to render the text with (default=black).\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    label(text, x, y, rotation, color) {\n        this.ctx.save();\n        this.ctx.font = \"lighter 9pt Arial\";\n        this.ctx.translate(x, y);\n        if (typeof rotation !== \"undefined\")\n            this.ctx.rotate(rotation);\n        this.ctx.fillStyle = color || \"black\";\n        if (this.fillShapes) {\n            this.ctx.fillText(text, 0, 0);\n        }\n        else {\n            this.ctx.strokeText(text, 0, 0);\n        }\n        this.ctx.restore();\n    }\n    /**\n     * Draw an SVG-like path given by the specified path data.\n     *\n     *\n     * @method path\n     * @param {SVGPathData} pathData - An array of path commands and params.\n     * @param {string=null} color - (optional) The color to draw this path with (default is null).\n     * @param {number=1} lineWidth - (optional) the line width to use (default is 1).\n     * @param {boolean=false} options.inplace - (optional) If set to true then path transforamtions (scale and translate) will be done in-place in the array. This can boost the performance.\n     * @instance\n     * @memberof drawutils\n     * @return {R} An instance representing the drawn path.\n     */\n    path(pathData, color, lineWidth, options) {\n        const d = options && options.inplace ? pathData : drawutilssvg.copyPathData(pathData);\n        drawutilssvg.transformPathData(d, this.offset, this.scale);\n        this.ctx.strokeStyle = color;\n        this.ctx.lineWidth = lineWidth || 1;\n        if (this.fillShapes) {\n            this.ctx.fillStyle = color;\n            this.ctx.fill(new Path2D(d.join(\" \")));\n        }\n        else {\n            this.ctx.strokeStyle = color;\n            this.ctx.stroke(new Path2D(d.join(\" \")));\n        }\n    }\n    /**\n     * Due to gl compatibility there is a generic 'clear' function required\n     * to avoid accessing the context object itself directly.\n     *\n     * This function just fills the whole canvas with a single color.\n     *\n     * @param {string} color - The color to clear with.\n     **/\n    clear(color) {\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n        this.ctx.fillStyle = color;\n        this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    }\n}\n//# sourceMappingURL=draw.js.map","/**\n * @author   Ikaros Kappler\n * @date     2019-09-18\n * @modified 2019-10-03 Added the beginDrawCycle hook.\n * @modified 2020-03-25 Ported stub to Typescript.\n * @modified 2020-10-15 Re-added the text() function.\n * @modified 2021-01-24 Added the `setCurrentId` function.\n * @modified 2021-05-31 Added the `setConfiguration` function from `DrawLib`.\n * @version  0.0.5\n **/\nimport { Vertex } from \"./Vertex\";\n/**\n * @classdesc A wrapper class for basic drawing operations. This is the WebGL\n * implementation whih sould work with shaders.\n *\n * @requires CubicBzierCurvce\n * @requires Polygon\n * @requires SVGSerializable\n * @requires Vertex\n * @requires XYCoords\n */\nexport class drawutilsgl {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name drawutils\n     * @param {WebGLRenderingContext} context - The drawing context.\n     * @param {boolean} fillShaped - Indicates if the constructed drawutils should fill all drawn shapes (if possible).\n     **/\n    constructor(context, fillShapes) {\n        this.gl = context;\n        this.offset = new Vertex(0, 0);\n        this.scale = new Vertex(1, 1);\n        this.fillShapes = fillShapes;\n        this._zindex = 0.0;\n        if (context == null || typeof context === \"undefined\")\n            return;\n        this.glutils = new GLU(context);\n        // PROBLEM: CANNOT USE MULTIPLE SHADER PROGRAM INSTANCES ON THE SAME CONTEXT!\n        // SOLUTION: USE SHARED SHADER PROGRAM!!! ... somehow ...\n        // This needs to be considered in the overlying component; both draw-instances need to\n        // share their gl context.\n        // That's what the copyInstace(boolean) method is good for.\n        this._vertShader = this.glutils.compileShader(drawutilsgl.vertCode, this.gl.VERTEX_SHADER);\n        this._fragShader = this.glutils.compileShader(drawutilsgl.fragCode, this.gl.FRAGMENT_SHADER);\n        this._program = this.glutils.makeProgram(this._vertShader, this._fragShader);\n        // Create an empty buffer object\n        this.vertex_buffer = this.gl.createBuffer();\n        // Bind appropriate array buffer to it\n        // this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertex_buffer);\n        console.log(\"gl initialized\");\n    }\n    _x2rel(x) {\n        return ((this.scale.x * x + this.offset.x) / this.gl.canvas.width) * 2.0 - 1.0;\n    }\n    _y2rel(y) {\n        return ((this.offset.y - this.scale.y * y) / this.gl.canvas.height) * 2.0 - 1.0;\n    }\n    /**\n     * Creates a 'shallow' (non deep) copy of this instance. This implies\n     * that under the hood the same gl context and gl program will be used.\n     */\n    copyInstance(fillShapes) {\n        var copy = new drawutilsgl(null, fillShapes);\n        copy.gl = this.gl;\n        copy.glutils = this.glutils;\n        copy._vertShader = this._vertShader;\n        copy._fragShader = this._fragShader;\n        copy._program = this._program;\n        return copy;\n    }\n    /**\n     * Called before each draw cycle.\n     * @param {number} renderTime\n     **/\n    beginDrawCycle(renderTime) {\n        this._zindex = 0.0;\n        this.renderTime = renderTime;\n    }\n    /**\n     * Called after each draw cycle.\n     *\n     * This is required for compatibility with other draw classes in the library (like drawgl).\n     *\n     * @name endDrawCycle\n     * @method\n     * @param {number} renderTime\n     * @instance\n     **/\n    endDrawCycle(renderTime) {\n        // NOOP\n    }\n    /**\n     * Set the current drawlib configuration.\n     *\n     * @name setConfiguration\n     * @method\n     * @param {DrawLibConfiguration} configuration - The new configuration settings to use for the next render methods.\n     */\n    setConfiguration(configuration) {\n        // TODO\n    }\n    /**\n     * This method shouled be called each time the currently drawn `Drawable` changes.\n     * It is used by some libraries for identifying elemente on re-renders.\n     *\n     * @name setCurrentId\n     * @method\n     * @param {UID} uid - A UID identifying the currently drawn element(s).es.\n     **/\n    setCurrentId(uid) {\n        // NOOP\n        this.curId = uid;\n    }\n    /**\n     * This method shouled be called each time the currently drawn `Drawable` changes.\n     * Determine the class name for further usage here.\n     *\n     * @name setCurrentClassName\n     * @method\n     * @param {string} className - A class name for further custom use cases.\n     **/\n    setCurrentClassName(className) {\n        // NOOP\n    }\n    /**\n     * Draw the line between the given two points with the specified (CSS-) color.\n     *\n     * @method line\n     * @param {Vertex} zA - The start point of the line.\n     * @param {Vertex} zB - The end point of the line.\n     * @param {string} color - Any valid CSS color string.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     **/\n    line(zA, zB, color) {\n        const vertices = new Float32Array(6);\n        vertices[0] = this._x2rel(zA.x);\n        vertices[1] = this._y2rel(zA.y);\n        vertices[2] = this._zindex;\n        vertices[3] = this._x2rel(zB.x);\n        vertices[4] = this._y2rel(zB.y);\n        vertices[5] = this._zindex;\n        this._zindex += 0.001;\n        // Create an empty buffer object\n        // const vertex_buffer = this.gl.createBuffer();\n        // Bind appropriate array buffer to it\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertex_buffer);\n        // Pass the vertex data to the buffer\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertices, this.gl.STATIC_DRAW);\n        // Bind vertex buffer object\n        // this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vertex_buffer);\n        // Get the attribute location\n        var coord = this.gl.getAttribLocation(this._program, \"position\");\n        // Point an attribute to the currently bound VBO\n        this.gl.vertexAttribPointer(coord, 3, this.gl.FLOAT, false, 0, 0);\n        // Enable the attribute\n        this.gl.enableVertexAttribArray(coord);\n        // Unbind the buffer?\n        //this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n        // Set the view port\n        this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n        let uRotationVector = this.gl.getUniformLocation(this._program, \"uRotationVector\");\n        // let radians = currentAngle * Math.PI / 180.0;\n        let currentRotation = [0.0, 1.0];\n        //currentRotation[0] = Math.sin(radians);\n        //currentRotation[1] = Math.cos(radians);\n        this.gl.uniform2fv(uRotationVector, currentRotation);\n        this.gl.lineWidth(5);\n        // Draw the line\n        this.gl.drawArrays(this.gl.LINES, 0, vertices.length / 3);\n        // POINTS, LINE_STRIP, LINE_LOOP, LINES,\n        // TRIANGLE_STRIP,TRIANGLE_FAN, TRIANGLES\n    }\n    /**\n     * Draw a line and an arrow at the end (zB) of the given line with the specified (CSS-) color.\n     *\n     * @method arrow\n     * @param {Vertex} zA - The start point of the arrow-line.\n     * @param {Vertex} zB - The end point of the arrow-line.\n     * @param {string} color - Any valid CSS color string.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     **/\n    arrow(zA, zB, color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw an image at the given position with the given size.<br>\n     * <br>\n     * Note: SVG images may have resizing issues at the moment.Draw a line and an arrow at the end (zB) of the given line with the specified (CSS-) color.\n     *\n     * @method image\n     * @param {Image} image - The image object to draw.\n     * @param {Vertex} position - The position to draw the the upper left corner at.\n     * @param {Vertex} size - The x/y-size to draw the image with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     **/\n    image(image, position, size) {\n        // NOT YET IMPLEMENTED\n    }\n    // +---------------------------------------------------------------------------------\n    // | This is the final helper function for drawing and filling stuff. It is not\n    // | intended to be used from the outside.\n    // |\n    // | When in draw mode it draws the current shape.\n    // | When in fill mode it fills the current shape.\n    // |\n    // | This function is usually only called internally.\n    // |\n    // | @param color A stroke/fill color to use.\n    // +-------------------------------\n    _fillOrDraw(color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw the given (cubic) bézier curve.\n     *\n     * @method cubicBezier\n     * @param {Vertex} startPoint - The start point of the cubic Bézier curve\n     * @param {Vertex} endPoint   - The end point the cubic Bézier curve.\n     * @param {Vertex} startControlPoint - The start control point the cubic Bézier curve.\n     * @param {Vertex} endControlPoint   - The end control point the cubic Bézier curve.\n     * @param {string} color - The CSS color to draw the curve with.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    cubicBezier(startPoint, endPoint, startControlPoint, endControlPoint, color, lineWidth) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw the given (cubic) Bézier path.\n     *\n     * The given path must be an array with n*3+1 vertices, where n is the number of\n     * curves in the path:\n     * <pre> [ point1, point1_startControl, point2_endControl, point2, point2_startControl, point3_endControl, point3, ... pointN_endControl, pointN ]</pre>\n     *\n     * @method cubicBezierPath\n     * @param {Vertex[]} path - The cubic bezier path as described above.\n     * @param {string} color - The CSS colot to draw the path with.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    cubicBezierPath(path, color, lineWidth) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw the given handle and handle point (used to draw interactive Bézier curves).\n     *\n     * The colors for this are fixed and cannot be specified.\n     *\n     * @method handle\n     * @param {Vertex} startPoint - The start of the handle.\n     * @param {Vertex} endPoint - The end point of the handle.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    handle(startPoint, endPoint) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a handle line (with a light grey).\n     *\n     * @method handleLine\n     * @param {Vertex} startPoint - The start point to draw the handle at.\n     * @param {Vertex} endPoint - The end point to draw the handle at.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    handleLine(startPoint, endPoint) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a 1x1 dot with the specified (CSS-) color.\n     *\n     * @method dot\n     * @param {Vertex} p - The position to draw the dot at.\n     * @param {string} color - The CSS color to draw the dot with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    dot(p, color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw the given point with the specified (CSS-) color and radius 3.\n     *\n     * @method point\n     * @param {Vertex} p - The position to draw the point at.\n     * @param {string} color - The CSS color to draw the point with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    point(p, color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a circle with the specified (CSS-) color and radius.<br>\n     * <br>\n     * Note that if the x- and y- scales are different the result will be an ellipse rather than a circle.\n     *\n     * @method circle\n     * @param {Vertex} center - The center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {string} color - The CSS color to draw the circle with.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    circle(center, radius, color, lineWidth) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a circular arc (section of a circle) with the given CSS color.\n     *\n     * @method circleArc\n     * @param {Vertex} center - The center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {number} startAngle - The angle to start at.\n     * @param {number} endAngle - The angle to end at.\n     * @param {string} color - The CSS color to draw the circle with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    circleArc(center, radius, startAngle, endAngle, color, lineWidth) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw an ellipse with the specified (CSS-) color and thw two radii.\n     *\n     * @method ellipse\n     * @param {Vertex} center - The center of the ellipse.\n     * @param {number} radiusX - The radius of the ellipse.\n     * @param {number} radiusY - The radius of the ellipse.\n     * @param {string} color - The CSS color to draw the ellipse with.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @param {number=} rotation - (optional, default=0) The rotation of the ellipse.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    ellipse(center, radiusX, radiusY, color, lineWidth, rotation) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw square at the given center, size and with the specified (CSS-) color.<br>\n     * <br>\n     * Note that if the x-scale and the y-scale are different the result will be a rectangle rather than a square.\n     *\n     * @method square\n     * @param {XYCords} center - The center of the square.\n     * @param {Vertex} size - The size of the square.\n     * @param {string} color - The CSS color to draw the square with.\n     * @param {number=} lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    square(center, size, color, lineWidth) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a rectangle.\n     *\n     * @param {XYCoords} position - The upper left corner of the rectangle.\n     * @param {number} width - The width of the rectangle.\n     * @param {number} height - The height of the rectangle.\n     * @param {string} color - The color to use.\n     * @param {number=1} lineWidth - (optional) The line with to use (default is 1).\n     **/\n    rect(position, width, height, color, lineWidth) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a grid of horizontal and vertical lines with the given (CSS-) color.\n     *\n     * @method grid\n     * @param {Vertex} center - The center of the grid.\n     * @param {number} width - The total width of the grid (width/2 each to the left and to the right).\n     * @param {number} height - The total height of the grid (height/2 each to the top and to the bottom).\n     * @param {number} sizeX - The horizontal grid size.\n     * @param {number} sizeY - The vertical grid size.\n     * @param {string} color - The CSS color to draw the grid with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    grid(center, width, height, sizeX, sizeY, color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a raster of crosshairs in the given grid.<br>\n     *\n     * This works analogue to the grid() function\n     *\n     * @method raster\n     * @param {Vertex} center - The center of the raster.\n     * @param {number} width - The total width of the raster (width/2 each to the left and to the right).\n     * @param {number} height - The total height of the raster (height/2 each to the top and to the bottom).\n     * @param {number} sizeX - The horizontal raster size.\n     * @param {number} sizeY - The vertical raster size.\n     * @param {string} color - The CSS color to draw the raster with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    raster(center, width, height, sizeX, sizeY, color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a diamond handle (square rotated by 45°) with the given CSS color.\n     *\n     * It is an inherent featur of the handle functions that the drawn elements are not scaled and not\n     * distorted. So even if the user zooms in or changes the aspect ratio, the handles will be drawn\n     * as even shaped diamonds.\n     *\n     * @method diamondHandle\n     * @param {Vertex} center - The center of the diamond.\n     * @param {Vertex} size - The x/y-size of the diamond.\n     * @param {string} color - The CSS color to draw the diamond with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    diamondHandle(center, size, color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a square handle with the given CSS color.<br>\n     * <br>\n     * It is an inherent featur of the handle functions that the drawn elements are not scaled and not\n     * distorted. So even if the user zooms in or changes the aspect ratio, the handles will be drawn\n     * as even shaped squares.\n     *\n     * @method squareHandle\n     * @param {Vertex} center - The center of the square.\n     * @param {Vertex} size - The x/y-size of the square.\n     * @param {string} color - The CSS color to draw the square with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    squareHandle(center, size, color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a circle handle with the given CSS color.<br>\n     * <br>\n     * It is an inherent featur of the handle functions that the drawn elements are not scaled and not\n     * distorted. So even if the user zooms in or changes the aspect ratio, the handles will be drawn\n     * as even shaped circles.\n     *\n     * @method circleHandle\n     * @param {Vertex} center - The center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {string} color - The CSS color to draw the circle with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    circleHandle(center, size, color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a crosshair with given radius and color at the given position.<br>\n     * <br>\n     * Note that the crosshair radius will not be affected by scaling.\n     *\n     * @method crosshair\n     * @param {XYCoords} center - The center of the crosshair.\n     * @param {number} radius - The radius of the crosshair.\n     * @param {string} color - The CSS color to draw the crosshair with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    crosshair(center, radius, color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a polygon.\n     *\n     * @method polygon\n     * @param {Polygon} polygon - The polygon to draw.\n     * @param {string} color - The CSS color to draw the polygon with.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    polygon(polygon, color, lineWidth) {\n        const vertices = new Float32Array(polygon.vertices.length * 3);\n        for (var i = 0; i < polygon.vertices.length; i++) {\n            vertices[i * 3 + 0] = this._x2rel(polygon.vertices[i].x);\n            vertices[i * 3 + 1] = this._y2rel(polygon.vertices[i].y);\n            vertices[i * 3 + 2] = this._zindex;\n        }\n        this._zindex += 0.001;\n        //console.log( vertices );\n        // Create an empty buffer object\n        // const vertex_buffer = this.gl.createBuffer();\n        // Bind appropriate array buffer to it\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertex_buffer);\n        // Pass the vertex data to the buffer\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertices, this.gl.STATIC_DRAW);\n        // Bind vertex buffer object\n        // this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vertex_buffer);\n        // Get the attribute location\n        var coord = this.gl.getAttribLocation(this._program, \"position\");\n        // Point an attribute to the currently bound VBO\n        this.gl.vertexAttribPointer(coord, 3, this.gl.FLOAT, false, 0, 0);\n        // Enable the attribute\n        this.gl.enableVertexAttribArray(coord);\n        // Unbind the buffer?\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n        // Set the view port\n        this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n        let uRotationVector = this.gl.getUniformLocation(this._program, \"uRotationVector\");\n        // let radians = currentAngle * Math.PI / 180.0;\n        let currentRotation = [0.0, 1.0];\n        //currentRotation[0] = Math.sin(radians);\n        //currentRotation[1] = Math.cos(radians);\n        this.gl.uniform2fv(uRotationVector, currentRotation);\n        // Draw the polygon\n        this.gl.drawArrays(this.gl.TRIANGLE_FAN, 0, vertices.length / 3);\n        // POINTS, LINE_STRIP, LINE_LOOP, LINES,\n        // TRIANGLE_STRIP,TRIANGLE_FAN, TRIANGLES\n    }\n    /**\n     * Draw a polygon line (alternative function to the polygon).\n     *\n     * @method polyline\n     * @param {Vertex[]} vertices - The polygon vertices to draw.\n     * @param {boolan}   isOpen   - If true the polyline will not be closed at its end.\n     * @param {string}   color    - The CSS color to draw the polygon with.\n     * @param {number=}  lineWidth - (optional) The line width to use; default is 1.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    polyline(vertices, isOpen, color, lineWidth) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a text at the given relative position.\n     *\n     * @method text\n     * @param {string} text - The text to draw.\n     * @param {number} x - The x-position to draw the text at.\n     * @param {number} y - The y-position to draw the text at.\n     * @param {string=} options.color - The Color to use.\n     * @param {string=} options.fontFamily - The font family to use.\n     * @param {number=} options.fontSize - The font size (in pixels) to use.\n     * @param {FontStyle=} options.fontStyle - The font style to use.\n     * @param {FontWeight=} options.fontWeight - The font weight to use.\n     * @param {number=} options.lineHeight - The line height (in pixels) to use.\n     * @param {number=} options.rotation - The (optional) rotation in radians.\n     * @param {string=} options.textAlign - The text align to use. According to the specifiactions (https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign) valid values are `\"left\" || \"right\" || \"center\" || \"start\" || \"end\"`.\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    text(text, x, y, options) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw a non-scaling text label at the given position.\n     *\n     * @method label\n     * @param {string} text - The text to draw.\n     * @param {number} x - The x-position to draw the text at.\n     * @param {number} y - The y-position to draw the text at.\n     * @param {number=} rotation - The (aoptional) rotation in radians.\n     * @param {string=\"black\"} color - The color to use (default is black).\n     * @return {void}\n     * @instance\n     * @memberof drawutils\n     */\n    label(text, x, y, rotation, color) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Draw an SVG-like path given by the specified path data.\n     *\n     * @method path\n     * @param {SVGPathData} pathData - An array of path commands and params.\n     * @param {string=null} color - (optional) The color to draw this path with (default is null).\n     * @param {number=1} lineWidth - (optional) the line width to use (default is 1).\n     * @param {boolean=false} options.inplace - (optional) If set to true then path transforamtions (scale and translate) will be done in-place in the array. This can boost the performance.\n     * @instance\n     * @memberof drawutils\n     * @return {R} An instance representing the drawn path.\n     */\n    path(pathData, color, lineWidth, options) {\n        // NOT YET IMPLEMENTED\n    }\n    /**\n     * Due to gl compatibility there is a generic 'clear' function required\n     * to avoid accessing the context object itself directly.\n     *\n     * This function just fills the whole canvas with a single color.\n     *\n     * @param {string} color - The color to clear with.\n     **/\n    clear(color) {\n        // NOT YET IMPLEMENTED\n        // if( typeof color == 'string' )\n        // color = Color.parse(color); // Color class does not yet exist in TS\n        // Clear the canvas\n        this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n        // Enable the depth test\n        this.gl.enable(this.gl.DEPTH_TEST);\n        // Clear the color and depth buffer\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n    }\n}\n// Vertex shader source code\ndrawutilsgl.vertCode = `\n    precision mediump float;\n\n    attribute vec3 position;\n\n    uniform vec2 uRotationVector;\n\n    void main(void) {\n\tvec2 rotatedPosition = vec2(\n\t    position.x * uRotationVector.y +\n\t\tposition.y * uRotationVector.x,\n\t    position.y * uRotationVector.y -\n\t\tposition.x * uRotationVector.x\n\t);\n\n\tgl_Position = vec4(rotatedPosition, position.z, 1.0);\n    }`;\n// Fragment shader source code\ndrawutilsgl.fragCode = `\n    precision highp float;\n\n    void main(void) {\n\tgl_FragColor = vec4(0.0,0.75,1.0,1.0);\n    }`;\n/**\n * Some GL helper utils.\n **/\nclass GLU {\n    constructor(gl) {\n        this.gl = gl;\n    }\n    bufferData(verts) {\n        // Create an empty buffer object\n        var vbuffer = this.gl.createBuffer();\n        // Bind appropriate array buffer to it\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vbuffer);\n        // Pass the vertex data to the buffer\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, verts, this.gl.STATIC_DRAW);\n        // Unbind the buffer\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n        return vbuffer;\n    }\n    /*=================== Shaders ====================*/\n    compileShader(shaderCode, shaderType) {\n        // Create a vertex shader object\n        var shader = this.gl.createShader(shaderType);\n        // Attach vertex shader source code\n        this.gl.shaderSource(shader, shaderCode);\n        // Compile the vertex shader\n        this.gl.compileShader(shader);\n        const vertStatus = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n        if (!vertStatus) {\n            console.warn(\"Error in shader:\" + this.gl.getShaderInfoLog(shader));\n            this.gl.deleteShader(shader);\n            return null;\n        }\n        return shader;\n    }\n    makeProgram(vertShader, fragShader) {\n        // Create a shader program object to store\n        // the combined shader program\n        var program = this.gl.createProgram();\n        // Attach a vertex shader\n        this.gl.attachShader(program, vertShader);\n        // Attach a fragment shader\n        this.gl.attachShader(program, fragShader);\n        // Link both the programs\n        this.gl.linkProgram(program);\n        // Use the combined shader program object\n        this.gl.useProgram(program);\n        /*======= Do some cleanup ======*/\n        this.gl.detachShader(program, vertShader);\n        this.gl.detachShader(program, fragShader);\n        this.gl.deleteShader(vertShader);\n        this.gl.deleteShader(fragShader);\n        return program;\n    }\n}\n//# sourceMappingURL=drawgl.js.map","/**\n * @author    Ikaros Kappler\n * @date_init 2012-10-17 (Wrote a first version of this in that year).\n * @date      2018-04-03 (Refactored the code into a new class).\n * @modified  2018-04-28 Added some documentation.\n * @modified  2019-09-11 Added the scaleToCentroid(Number) function (used by the walking triangle demo).\n * @modified  2019-09-12 Added beautiful JSDoc compliable comments.\n * @modified  2019-11-07 Added to toSVG(options) function to make Triangles renderable as SVG.\n * @modified  2019-12-09 Fixed the determinant() function. The calculation was just wrong.\n * @modified  2020-03-16 (Corona times) Added the 'fromArray' function.\n * @modified  2020-03-17 Added the Triangle.toPolygon() function.\n * @modified  2020-03-17 Added proper JSDoc comments.\n * @modified  2020-03-25 Ported this class from vanilla-JS to Typescript.\n * @modified  2020-05-09 Added the new Circle class (ported to Typescript from the demos).\n * @modified  2020-05-12 Added getIncircularTriangle() function.\n * @modified  2020-05-12 Added getIncircle() function.\n * @modified  2020-05-12 Fixed the signature of getCircumcirle(). Was still a generic object.\n * @modified  2020-06-18 Added the `getIncenter` function.\n * @modified  2020-12-28 Added the `getArea` function.\n * @modified  2021-01-20 Added UID.\n * @modified  2021-01-22 Always updating circumcircle when retieving it.\n * @version   2.5.1\n *\n * @file Triangle\n * @fileoverview A simple triangle class: three vertices.\n * @public\n **/\nimport { Bounds } from \"./Bounds\";\nimport { Circle } from \"./Circle\";\nimport { Line } from \"./Line\";\nimport { Polygon } from \"./Polygon\";\nimport { UIDGenerator } from \"./UIDGenerator\";\nimport { Vertex } from \"./Vertex\";\nimport { geomutils } from \"./geomutils\";\n/**\n * @classdesc A triangle class for triangulations.\n *\n * The class was written for a Delaunay trinagulation demo so it might\n * contain some strange and unexpected functions.\n *\n * @requires Bounds\n * @requires Circle\n * @requires Line\n * @requires Vertex\n * @requires Polygon\n * @requires SVGSerializale\n * @requires UID\n * @requires UIDGenerator\n * @requires geomutils\n *\n */\nexport class Triangle {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name Triangle\n     * @param {Vertex} a - The first vertex of the triangle.\n     * @param {Vertex} b - The second vertex of the triangle.\n     * @param {Vertex} c - The third vertex of the triangle.\n     **/\n    constructor(a, b, c) {\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"Triangle\";\n        this.uid = UIDGenerator.next();\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.calcCircumcircle();\n    }\n    /**\n     * Create a new triangle from the given array of vertices.\n     *\n     * The array must have at least three vertices, otherwise an error will be raised.\n     * This function will not create copies of the vertices.\n     *\n     * @method fromArray\n     * @static\n     * @param {Array<Vertex>} arr - The required array with at least three vertices.\n     * @memberof Vertex\n     * @return {Triangle}\n     **/\n    static fromArray(arr) {\n        if (arr.length < 3)\n            throw `Cannot create triangle from array with less than three vertices (${arr.length})`;\n        return new Triangle(arr[0], arr[1], arr[2]);\n    }\n    ;\n    /**\n     * Get the area of this triangle. The returned area is never negative.\n     *\n     * If you are interested in the signed area, please consider using the\n     * `Triangle.utils.signedArea` helper function. This method just returns\n     * the absolute value of the signed area.\n     *\n     * @method getArea\n     * @instance\n     * @memberof Triangle\n     * @return {number} The non-negative area of this triangle.\n     */\n    getArea() {\n        return Math.abs(Triangle.utils.signedArea(this.a.x, this.a.y, this.b.x, this.b.y, this.c.x, this.c.y));\n    }\n    ;\n    /**\n     * Get the centroid of this triangle.\n     *\n     * The centroid is the average midpoint for each side.\n     *\n     * @method getCentroid\n     * @return {Vertex} The centroid\n     * @instance\n     * @memberof Triangle\n     **/\n    getCentroid() {\n        return new Vertex((this.a.x + this.b.x + this.c.x) / 3, (this.a.y + this.b.y + this.c.y) / 3);\n    }\n    ;\n    /**\n     * Scale the triangle towards its centroid.\n     *\n     * @method scaleToCentroid\n     * @param {number} - The scale factor to use. That can be any scalar.\n     * @return {Triangle} this (for chaining)\n     * @instance\n     * @memberof Triangle\n     */\n    scaleToCentroid(factor) {\n        let centroid = this.getCentroid();\n        this.a.scale(factor, centroid);\n        this.b.scale(factor, centroid);\n        this.c.scale(factor, centroid);\n        return this;\n    }\n    ;\n    /**\n     * Get the circumcircle of this triangle.\n     *\n     * The circumcircle is that unique circle on which all three\n     * vertices of this triangle are located on.\n     *\n     * Please note that for performance reasons any changes to vertices will not reflect in changes\n     * of the circumcircle (center or radius). Please call the calcCirumcircle() function\n     * after triangle vertex changes.\n     *\n     * @method getCircumcircle\n     * @return {Object} - { center:Vertex, radius:float }\n     * @instance\n     * @memberof Triangle\n     */\n    getCircumcircle() {\n        // if( !this.center || !this.radius ) \n        this.calcCircumcircle();\n        return new Circle(this.center.clone(), this.radius);\n    }\n    ;\n    /**\n     * Check if this triangle and the passed triangle share an\n     * adjacent edge.\n     *\n     * For edge-checking Vertex.equals is used which uses an\n     * an epsilon for comparison.\n     *\n     * @method isAdjacent\n     * @param {Triangle} tri - The second triangle to check adjacency with.\n     * @return {boolean} - True if this and the passed triangle have at least one common edge.\n     * @instance\n     * @memberof Triangle\n     */\n    isAdjacent(tri) {\n        var a = this.a.equals(tri.a) || this.a.equals(tri.b) || this.a.equals(tri.c);\n        var b = this.b.equals(tri.a) || this.b.equals(tri.b) || this.b.equals(tri.c);\n        var c = this.c.equals(tri.a) || this.c.equals(tri.b) || this.c.equals(tri.c);\n        return (a && b) || (a && c) || (b && c);\n    }\n    ;\n    /**\n     * Get that vertex of this triangle (a,b,c) that is not vert1 nor vert2 of\n     * the passed two.\n     *\n     * @method getThirdVertex\n     * @param {Vertex} vert1 - The first vertex.\n     * @param {Vertex} vert2 - The second vertex.\n     * @return {Vertex} - The third vertex of this triangle that makes up the whole triangle with vert1 and vert2.\n     * @instance\n     * @memberof Triangle\n     */\n    getThirdVertex(vert1, vert2) {\n        if (this.a.equals(vert1) && this.b.equals(vert2) || this.a.equals(vert2) && this.b.equals(vert1))\n            return this.c;\n        if (this.b.equals(vert1) && this.c.equals(vert2) || this.b.equals(vert2) && this.c.equals(vert1))\n            return this.a;\n        //if( this.c.equals(vert1) && this.a.equals(vert2) || this.c.equals(vert2) && this.a.equals(vert1) )\n        return this.b;\n    }\n    ;\n    /**\n     * Re-compute the circumcircle of this triangle (if the vertices\n     * have changed).\n     *\n     * The circumcenter and radius are stored in this.center and\n     * this.radius. There is a third result: radius_squared (for internal computations).\n     *\n     * @method calcCircumcircle\n     * @return void\n     * @instance\n     * @memberof Triangle\n     */\n    calcCircumcircle() {\n        // From\n        //    http://www.exaflop.org/docs/cgafaq/cga1.html\n        const A = this.b.x - this.a.x;\n        const B = this.b.y - this.a.y;\n        const C = this.c.x - this.a.x;\n        const D = this.c.y - this.a.y;\n        const E = A * (this.a.x + this.b.x) + B * (this.a.y + this.b.y);\n        const F = C * (this.a.x + this.c.x) + D * (this.a.y + this.c.y);\n        const G = 2.0 * (A * (this.c.y - this.b.y) - B * (this.c.x - this.b.x));\n        let dx, dy;\n        if (Math.abs(G) < Triangle.EPSILON) {\n            // Collinear - find extremes and use the midpoint\n            const bounds = this.bounds();\n            this.center = new Vertex((bounds.min.x + bounds.max.x) / 2, (bounds.min.y + bounds.max.y) / 2);\n            dx = this.center.x - bounds.min.x;\n            dy = this.center.y - bounds.min.y;\n        }\n        else {\n            const cx = (D * E - B * F) / G;\n            const cy = (A * F - C * E) / G;\n            this.center = new Vertex(cx, cy);\n            dx = this.center.x - this.a.x;\n            dy = this.center.y - this.a.y;\n        }\n        this.radius_squared = dx * dx + dy * dy;\n        this.radius = Math.sqrt(this.radius_squared);\n    }\n    ; // END calcCircumcircle\n    /**\n     * Check if the passed vertex is inside this triangle's\n     * circumcircle.\n     *\n     * @method inCircumcircle\n     * @param {Vertex} v - The vertex to check.\n     * @return {boolean}\n     * @instance\n     * @memberof Triangle\n     */\n    inCircumcircle(v) {\n        const dx = this.center.x - v.x;\n        const dy = this.center.y - v.y;\n        const dist_squared = dx * dx + dy * dy;\n        return (dist_squared <= this.radius_squared);\n    }\n    ;\n    /**\n     * Get the rectangular bounds for this triangle.\n     *\n     * @method bounds\n     * @return {Bounds} - The min/max bounds of this triangle.\n     * @instance\n     * @memberof Triangle\n     */\n    bounds() {\n        return new Bounds(new Vertex(Triangle.utils.min3(this.a.x, this.b.x, this.c.x), Triangle.utils.min3(this.a.y, this.b.y, this.c.y)), new Vertex(Triangle.utils.max3(this.a.x, this.b.x, this.c.x), Triangle.utils.max3(this.a.y, this.b.y, this.c.y)));\n    }\n    ;\n    /**\n     * Convert this triangle to a polygon instance.\n     *\n     * Plase note that this conversion does not perform a deep clone.\n     *\n     * @method toPolygon\n     * @return {Polygon} A new polygon representing this triangle.\n     * @instance\n     * @memberof Triangle\n     **/\n    toPolygon() {\n        return new Polygon([this.a, this.b, this.c]);\n    }\n    ;\n    /**\n     * Get the determinant of this triangle.\n     *\n     * @method determinant\n     * @return {number} - The determinant (float).\n     * @instance\n     * @memberof Triangle\n     */\n    determinant() {\n        // (b.y - a.y)*(c.x - b.x) - (c.y - b.y)*(b.x - a.x);\n        return (this.b.y - this.a.y) * (this.c.x - this.b.x) - (this.c.y - this.b.y) * (this.b.x - this.a.x);\n    }\n    ;\n    /**\n     * Checks if the passed vertex (p) is inside this triangle.\n     *\n     * Note: matrix determinants rock.\n     *\n     * @method containsPoint\n     * @param {Vertex} p - The vertex to check.\n     * @return {boolean}\n     * @instance\n     * @memberof Triangle\n     */\n    containsPoint(p) {\n        return Triangle.utils.pointIsInTriangle(p.x, p.y, this.a.x, this.a.y, this.b.x, this.b.y, this.c.x, this.c.y);\n    }\n    ;\n    /**\n     * Get that inner triangle which defines the maximal incircle.\n     *\n     * @return {Triangle} The triangle of those points in this triangle that define the incircle.\n     */\n    getIncircularTriangle() {\n        const lineA = new Line(this.a, this.b);\n        const lineB = new Line(this.b, this.c);\n        const lineC = new Line(this.c, this.a);\n        const bisector1 = geomutils.nsectAngle(this.b, this.a, this.c, 2)[0]; // bisector of first angle (in b)\n        const bisector2 = geomutils.nsectAngle(this.c, this.b, this.a, 2)[0]; // bisector of second angle (in c)\n        const intersection = bisector1.intersection(bisector2);\n        // Find the closest points on one of the polygon lines (all have same distance by construction)\n        const circleIntersA = lineA.getClosestPoint(intersection);\n        const circleIntersB = lineB.getClosestPoint(intersection);\n        const circleIntersC = lineC.getClosestPoint(intersection);\n        return new Triangle(circleIntersA, circleIntersB, circleIntersC);\n    }\n    ;\n    /**\n     * Get the incircle of this triangle. That is the circle that touches each side\n     * of this triangle in exactly one point.\n     *\n     * Note this just calls getIncircularTriangle().getCircumcircle()\n     *\n     * @return {Circle} The incircle of this triangle.\n     */\n    getIncircle() {\n        return this.getIncircularTriangle().getCircumcircle();\n    }\n    ;\n    /**\n     * Get the incenter of this triangle (which is the center of the circumcircle).\n     *\n     * Note: due to performance reasonst the incenter is buffered inside the triangle because\n     *       computing it is relatively expensive. If a, b or c have changed you should call the\n     *       calcCircumcircle() function first, otherwise you might get wrong results.\n     * @return Vertex The incenter of this triangle.\n     **/\n    getIncenter() {\n        if (!this.center || !this.radius)\n            this.calcCircumcircle();\n        return this.center.clone();\n    }\n    ;\n    /**\n     * Converts this triangle into a human-readable string.\n     *\n     * @method toString\n     * @return {string}\n     * @instance\n     * @memberof Triangle\n     */\n    toString() {\n        return '{ a : ' + this.a.toString() + ', b : ' + this.b.toString() + ', c : ' + this.c.toString() + '}';\n    }\n    ;\n    /**\n     * Create an SVG representation of this triangle.\n     *\n     * @deprecated DEPRECATION Please use the drawutilssvg library and an XMLSerializer instead.\n     * @method toSVGString\n     * @param {object=} options - An optional set of options, like 'className'.\n     * @return {string} The SVG string.\n     * @instance\n     * @memberof Triangle\n     **/\n    toSVGString(options) {\n        options = options || {};\n        var buffer = [];\n        buffer.push('<path');\n        if (options.className)\n            buffer.push(' class=\"' + options.className + '\"');\n        buffer.push(' d=\"');\n        var vertices = [this.a, this.b, this.c];\n        if (vertices.length > 0) {\n            buffer.push('M ');\n            buffer.push(vertices[0].x);\n            buffer.push(' ');\n            buffer.push(vertices[0].y);\n            for (var i = 1; i < vertices.length; i++) {\n                buffer.push(' L ');\n                buffer.push(vertices[i].x);\n                buffer.push(' ');\n                buffer.push(vertices[i].y);\n            }\n            //if( !this.isOpen ) {\n            buffer.push(' Z');\n            //}\n        }\n        buffer.push('\" />');\n        return buffer.join('');\n    }\n    ;\n}\n/**\n * An epsilon for comparison.\n * This should be the same epsilon as in Vertex.\n *\n * @private\n **/\nTriangle.EPSILON = 1.0e-6;\nTriangle.utils = {\n    // Used in the bounds() function.\n    max3(a, b, c) {\n        return (a >= b && a >= c) ? a : (b >= a && b >= c) ? b : c;\n    },\n    min3(a, b, c) {\n        return (a <= b && a <= c) ? a : (b <= a && b <= c) ? b : c;\n    },\n    signedArea(p0x, p0y, p1x, p1y, p2x, p2y) {\n        return 0.5 * (-p1y * p2x + p0y * (-p1x + p2x) + p0x * (p1y - p2y) + p1x * p2y);\n    },\n    /**\n     * Used by the containsPoint() function.\n     *\n     * @private\n     **/\n    pointIsInTriangle(px, py, p0x, p0y, p1x, p1y, p2x, p2y) {\n        //\n        // Point-in-Triangle test found at\n        //   http://stackoverflow.com/questions/2049582/how-to-determine-a-point-in-a-2d-triangle\n        // var area : number = 1/2*(-p1y*p2x + p0y*(-p1x + p2x) + p0x*(p1y - p2y) + p1x*p2y);\n        var area = Triangle.utils.signedArea(p0x, p0y, p1x, p1y, p2x, p2y);\n        var s = 1 / (2 * area) * (p0y * p2x - p0x * p2y + (p2y - p0y) * px + (p0x - p2x) * py);\n        var t = 1 / (2 * area) * (p0x * p1y - p0y * p1x + (p0y - p1y) * px + (p1x - p0x) * py);\n        return s > 0 && t > 0 && (1 - s - t) > 0;\n    }\n};\n//# sourceMappingURL=Triangle.js.map","/**\n * @author   Ikaros Kappler\n * @date     2019-02-03\n * @modified 2021-03-01 Added `wrapMax` function.\n * @version  1.1.0\n **/\nimport { Line } from \"./Line\";\nimport { Triangle } from \"./Triangle\";\n/**\n * A collection of usefull geometry utilities.\n *\n * @global\n **/\nexport const geomutils = {\n    /**\n     * Compute the n-section of the angle – described as a triangle (A,B,C) – in point A.\n     *\n     * @param {Vertex} pA - The first triangle point.\n     * @param {Vertex} pB - The second triangle point.\n     * @param {Vertex} pC - The third triangle point.\n     * @param {number} n - The number of desired angle sections (example: 2 means the angle will be divided into two sections,\n     *                      means an returned array with length 1, the middle line).\n     *\n     * @return {Line[]} An array of n-1 lines secting the given angle in point A into n equal sized angle sections. The lines' first vertex is A.\n     */\n    nsectAngle(pA, pB, pC, n) {\n        const triangle = new Triangle(pA, pB, pC);\n        const lineAB = new Line(pA, pB);\n        const lineAC = new Line(pA, pC);\n        // Compute the difference; this is the angle between AB and AC\n        var insideAngle = lineAB.angle(lineAC);\n        // We want the inner angles of the triangle, not the outer angle;\n        //   which one is which depends on the triangle 'direction'\n        const clockwise = triangle.determinant() > 0;\n        // For convenience convert the angle [-PI,PI] to [0,2*PI]\n        if (insideAngle < 0)\n            insideAngle = 2 * Math.PI + insideAngle;\n        if (!clockwise)\n            insideAngle = (2 * Math.PI - insideAngle) * (-1);\n        // Scale the rotated lines to the max leg length (looks better)\n        const lineLength = Math.max(lineAB.length(), lineAC.length());\n        const scaleFactor = lineLength / lineAB.length();\n        var result = [];\n        for (var i = 1; i < n; i++) {\n            // Compute the i-th inner sector line\n            result.push(new Line(pA, pB.clone().rotate((-i * (insideAngle / n)), pA)).scale(scaleFactor));\n        }\n        return result;\n    },\n    /**\n     * Wrap the value (e.g. an angle) into the given range of [0,max).\n     *\n     * @name wrapMax\n     * @param {number} x - The value to wrap.\n     * @param {number} max - The max bound to use for the range.\n     * @return {number} The wrapped value inside the range [0,max).\n     */\n    wrapMax(x, max) {\n        // Found at\n        //    https://stackoverflow.com/questions/4633177/c-how-to-wrap-a-float-to-the-interval-pi-pi\n        return (max + (x % max)) % max;\n    },\n    /**\n     * Wrap the value (e.g. an angle) into the given range of [min,max).\n     *\n     * @name wrapMinMax\n     * @param {number} x - The value to wrap.\n     * @param {number} min - The min bound to use for the range.\n     * @param {number} max - The max bound to use for the range.\n     * @return {number} The wrapped value inside the range [min,max).\n     */\n    // Currently un-used\n    wrapMinMax(x, min, max) {\n        return min + geomutils.wrapMax(x - min, max - min);\n    }\n};\n//# sourceMappingURL=geomutils.js.map","/**\n * @author   Ikaros Kappler\n * @date     2018-11-28\n * @modified 2018-12-09 Added the utils: baseLog(Number,Number) and mapRasterScale(Number,Number).\n * @version  1.0.1\n *\n * @file Grid\n * @fileoverview Note that the PlotBoilerplate already has a Grid instance member. The Grid is not meant\n *               to be added to the canvas as a drawable as it encapsulates more an abstract concept of the canvas\n *               rather than a drawable object.\n * @public\n **/\n/**\n * @classdesc A grid class with vertical and horizontal lines (or a raster).\n *\n * Note that the PlotBoilerplate already has a Grid instance member. The Grid is not meant\n * to be added to the canvas as a drawable as it encapsulates more an abstract concept of the canvas\n * rather than a drawable object.\n *\n * @requires Vertex\n */\nexport class Grid {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name Grid\n     * @param {Vertex} center - The offset of the grid (default is [0,0]).\n     * @param {Vertex} size   - The x- and y-size of the grid.\n     **/\n    constructor(center, size) {\n        this.center = center;\n        this.size = size;\n    }\n    ;\n}\n/**\n * @memberof Grid\n **/\nGrid.utils = {\n    /**\n     * Calculate the logarithm of the given number (num) to a given base.<br>\n     * <br>\n     * This function returns the number l with<br>\n     *  <pre>num == Math.pow(base,l)</pre>\n     *\n     * @member baseLog\n     * @function\n     * @memberof Grid\n     * @inner\n     * @param {number} base - The base to calculate the logarithm to.\n     * @param {number} num  - The number to calculate the logarithm for.\n     * @return {number} <pre>log(base)/log(num)</pre>\n     **/\n    baseLog: (base, num) => { return Math.log(base) / Math.log(num); },\n    /**\n     * Calculate the raster scale for a given logarithmic mapping.<br>\n     * <br>\n     * Example (with adjustFactor=2):<br>\n     * <pre>\n     * If scale is 4.33, then the mapping is 1/2 (because 2^2 <= 4.33 <= 2^3)<br>\n     * If scale is 0.33, then the mapping is 2 because (2^(1/2) >= 0.33 >= 2^(1/4)\n     * </pre>\n     *\n     * @member mapRasterScale\n     * @function\n     * @memberof Grid\n     * @inner\n     * @param {number} adjustFactor The base for the logarithmic raster scaling when zoomed.\n     * @param {number} scale        The currently used scale factor.\n     * @return {number}\n     **/\n    mapRasterScale: (adjustFactor, scale) => {\n        var gf = 1.0;\n        if (scale >= 1) {\n            gf = Math.abs(Math.floor(1 / Grid.utils.baseLog(adjustFactor, scale)));\n            gf = 1 / Math.pow(adjustFactor, gf);\n        }\n        else {\n            gf = Math.abs(Math.floor(Grid.utils.baseLog(1 / adjustFactor, 1 / (scale + 1))));\n        }\n        return gf;\n    }\n};\n//# sourceMappingURL=Grid.js.map","/**\n * @author   Ikaros Kappler\n * @date     2018-11-11 (Alaaf)\n * @modified 2020-03-28 Ported this class from vanilla-JS to Typescript.\n * @modified 2020-07-28 Changed the `delete` key code from 8 to 46.\n * @modified 2020-10-04 Changed `window` to `globalThis`.\n * @modified 2020-10-04 Added extended JSDoc.\n * @version  1.0.4\n *\n * @file KeyHandler\n * @public\n **/\n/**\n * @classdesc A generic key handler.\n *\n * Example\n * =======\n * @example\n *      // Javascript\n *\tnew KeyHandler( { trackAll : true } )\n *\t    .down('enter',function() { console.log('ENTER was hit.'); } )\n *\t    .press('enter',function() { console.log('ENTER was pressed.'); } )\n *\t    .up('enter',function() { console.log('ENTER was released.'); } )\n *\n *          .down('e',function() { console.log('e was hit. shift is pressed?',keyHandler.isDown('shift')); } )\n *\n *\t    .up('windows',function() { console.log('windows was released.'); } )\n *\t;\n */\nexport class KeyHandler {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @instance\n     * @memberof KeyHandler\n     * @param {HTMLElement} options.element (optional) The HTML element to listen on; if null then 'window' will be used.\n     * @param {boolean} options.trackAll (optional) Set to true if you want to keep track of _all_ keys (keyStatus).\n    **/\n    constructor(options) {\n        this.downListeners = [];\n        this.pressListeners = [];\n        this.upListeners = [];\n        this.keyStates = {};\n        options = options || {};\n        this.element = options.element ? options.element : globalThis;\n        this.downListeners = [];\n        this.pressListeners = [];\n        this.upListeners = [];\n        this.keyStates = [];\n        // This could be made configurable in a later version. It allows to\n        // keep track of the key status no matter if there are any listeners\n        // on the key or not.\n        this.trackAllKeys = options.trackAll || false;\n        // Install the listeners\n        this.installListeners();\n    }\n    ;\n    /**\n     * A helper function to fire key events from this KeyHandler.\n     *\n     * @param {KeyboardEvent} event - The key event to fire.\n     * @param {Array<XKeyListener>} listener - The listeners to fire to.\n     */\n    fireEvent(event, listeners) {\n        let hasListener = false;\n        for (var i in listeners) {\n            var lis = listeners[i];\n            if (lis.keyCode != event.keyCode)\n                continue;\n            lis.listener(event);\n            hasListener = true;\n        }\n        return hasListener;\n    }\n    ;\n    /**\n     * Internal function to fire a new keydown event to all listeners.\n     * You should not call this function on your own unless you know what you do.\n     *\n     * @name fireDownEvent\n     * @memberof KeyHandler\n     * @instance\n     * @private\n     * @param {KeyboardEvent} e\n     * @param {KeyHandler} handler\n     * @return {void}\n     */\n    fireDownEvent(e, handler) {\n        if (handler.fireEvent(e, handler.downListeners) || handler.trackAllKeys) {\n            // Down event has listeners. Update key state.\n            handler.keyStates[e.keyCode] = 'down';\n        }\n    }\n    ;\n    /**\n     * Internal function to fire a new keypress event to all listeners.\n     * You should not call this function on your own unless you know what you do.\n     *\n     * @name firePressEvent\n     * @memberof KeyHandler\n     * @instance\n     * @private\n     * @param {KeyboardEvent} e\n     * @param {KeyHandler} handler\n     * @return void\n     */\n    firePressEvent(e, handler) {\n        handler.fireEvent(e, handler.pressListeners);\n    }\n    ;\n    /**\n     * Internal function to fire a new keyup event to all listeners.\n     * You should not call this function on your own unless you know what you do.\n     *\n     * @name fireUpEvent\n     * @memberof KeyHandler\n     * @instance\n     * @private\n     * @param {KeyboardEvent} e\n     * @param {KeyHandler} handler\n     * @return {void}\n     */\n    fireUpEvent(e, handler) {\n        if (handler.fireEvent(e, handler.upListeners) || handler.trackAllKeys) {\n            // Up event has listeners. Clear key state.\n            delete handler.keyStates[e.keyCode];\n        }\n    }\n    ;\n    /**\n     * Resolve the key/name code.\n     */\n    static key2code(key) {\n        if (typeof key == 'number')\n            return key;\n        if (typeof key != 'string')\n            throw \"Unknown key name or key type (should be a string or integer): \" + key;\n        if (KeyHandler.KEY_CODES[key])\n            return KeyHandler.KEY_CODES[key];\n        throw \"Unknown key (cannot resolve key code): \" + key;\n    }\n    ;\n    /**\n     * Install the required listeners into the initially passed element.\n     *\n     * By default the listeners are installed into the root element specified on\n     * construction (or 'window').\n     */\n    installListeners() {\n        var _self = this;\n        this.element.addEventListener('keydown', this._keyDownListener = (e) => { _self.fireDownEvent(e, _self); });\n        this.element.addEventListener('keypress', this._keyPressListener = (e) => { _self.firePressEvent(e, _self); });\n        this.element.addEventListener('keyup', this._keyUpListener = (e) => { _self.fireUpEvent(e, _self); });\n    }\n    ;\n    /**\n     *  Remove all installed event listeners from the underlying element.\n     */\n    releaseListeners() {\n        this.element.removeEventListener('keydown', this._keyDownListener);\n        this.element.removeEventListener('keypress', this._keyPressListener);\n        this.element.removeEventListener('keyup', this._keyUpListener);\n    }\n    ;\n    /**\n     * Listen for key down. This function allows chaining.\n     *\n     * Example: new KeyHandler().down('enter',function() {console.log('Enter hit.')});\n     *\n     * @name down\n     * @memberof KeyHandler\n     * @instance\n     * @param {string|number} key -  Any key identifier, key code or one from the KEY_CODES list.\n     * @param {(e:KeyboardEvent)=>void} e -  The callback to be triggered.\n     * @return {KeyHandler} this\n     */\n    down(key, listener) {\n        this.downListeners.push({ key: key, keyCode: KeyHandler.key2code(key), listener: listener });\n        return this;\n    }\n    ;\n    /**\n     * Listen for key press.\n     *\n     * Example: new KeyHandler().press('enter',function() {console.log('Enter pressed.')});\n     *\n     * @name press\n     * @memberof KeyHandler\n     * @instance\n     * @param {string|number} key - Any key identifier, key code or one from the KEY_CODES list.\n     * @param {(e:KeyboardEvent)=>void} listener - The callback to be triggered.\n     * @return {KeyHandler} this\n     */\n    press(key, listener) {\n        this.pressListeners.push({ key: key, keyCode: KeyHandler.key2code(key), listener: listener });\n        return this;\n    }\n    ;\n    /**\n     * Listen for key up.\n     *\n     * Example: new KeyHandler().up('enter',function() {console.log('Enter released.')});\n     *\n     * @name up\n     * @memberof KeyHandler\n     * @instance\n     * @param {string} key - Any key identifier, key code or one from the KEY_CODES list.\n     * @param {(e:KeyboardEvent)=>void)} e - The callback to be triggered.\n     * @return {KeyHandler} this\n     */\n    up(key, listener) {\n        this.upListeners.push({ key: key, keyCode: KeyHandler.key2code(key), listener: listener });\n        return this;\n    }\n    ;\n    /**\n     * Check if a specific key is currently held pressed.\n     *\n     * @param {string|number} key - Any key identifier, key code or one from the KEY_CODES list.\n     */\n    isDown(key) {\n        if (typeof key == 'number')\n            return this.keyStates[key] ? true : false;\n        else\n            return this.keyStates[KeyHandler.key2code(key)] ? true : false;\n    }\n}\n/**\n * Source:\n * https://keycode.info/\n */\nKeyHandler.KEY_CODES = {\n    'break': 3,\n    'backspace': 8,\n    // 'delete'\t : 8, // alternate: 46\n    'tab': 9,\n    'clear': 12,\n    'enter': 13,\n    'shift': 16,\n    'ctrl': 17,\n    'alt': 18,\n    'pause': 19,\n    // 'break'\t         : 19,\n    'capslock': 20,\n    'hangul': 21,\n    'hanja': 25,\n    'escape': 27,\n    'conversion': 28,\n    'non-conversion': 29,\n    'spacebar': 32,\n    'pageup': 33,\n    'pagedown': 34,\n    'end': 35,\n    'home': 36,\n    'leftarrow': 37,\n    'uparrow': 38,\n    'rightarrow': 39,\n    'downarrow': 40,\n    'select': 41,\n    'print': 42,\n    'execute': 43,\n    'printscreen': 44,\n    'insert': 45,\n    'delete': 46,\n    'help': 47,\n    '0': 48,\n    '1': 49,\n    '2': 50,\n    '3': 51,\n    '4': 52,\n    '5': 53,\n    '6': 54,\n    '7': 55,\n    '8': 56,\n    '9': 57,\n    ':': 58,\n    'semicolon (firefox)': 59,\n    'equals': 59,\n    '<': 60,\n    'equals (firefox)': 61,\n    'ß': 63,\n    '@ (firefox)': 64,\n    'a': 65,\n    'b': 66,\n    'c': 67,\n    'd': 68,\n    'e': 69,\n    'f': 70,\n    'g': 71,\n    'h': 72,\n    'i': 73,\n    'j': 74,\n    'k': 75,\n    'l': 76,\n    'm': 77,\n    'n': 78,\n    'o': 79,\n    'p': 80,\n    'q': 81,\n    'r': 82,\n    's': 83,\n    't': 84,\n    'u': 85,\n    'v': 86,\n    'w': 87,\n    'x': 88,\n    'y': 89,\n    'z': 90,\n    'windows': 91,\n    'leftcommand': 91,\n    'chromebooksearch': 91,\n    'rightwindowkey': 92,\n    'windowsmenu': 93,\n    'rightcommant': 93,\n    'sleep': 95,\n    'numpad0': 96,\n    'numpad1': 97,\n    'numpad2': 98,\n    'numpad3': 99,\n    'numpad4': 100,\n    'numpad5': 101,\n    'numpad6': 102,\n    'numpad7': 103,\n    'numpad8': 104,\n    'numpad9': 105,\n    'multiply': 106,\n    'add': 107,\n    'numpadperiod': 108,\n    'subtract': 109,\n    'decimalpoint': 110,\n    'divide': 111,\n    'f1': 112,\n    'f2': 113,\n    'f3': 114,\n    'f4': 115,\n    'f5': 116,\n    'f6': 117,\n    'f7': 118,\n    'f8': 119,\n    'f9': 120,\n    'f10': 121,\n    'f11': 122,\n    'f12': 123,\n    'f13': 124,\n    'f14': 125,\n    'f15': 126,\n    'f16': 127,\n    'f17': 128,\n    'f18': 129,\n    'f19': 130,\n    'f20': 131,\n    'f21': 132,\n    'f22': 133,\n    'f23': 134,\n    'f24': 135,\n    'numlock': 144,\n    'scrolllock': 145,\n    '^': 160,\n    '!': 161,\n    // '؛' \t : 162 // (arabic semicolon)\n    '#': 163,\n    '$': 164,\n    'ù': 165,\n    'pagebackward': 166,\n    'pageforward': 167,\n    'refresh': 168,\n    'closingparen': 169,\n    '*': 170,\n    '~+*': 171,\n    // 'home'\t         : 172,\n    'minus': 173,\n    // 'mute'           : 173,\n    // 'unmute'\t : 173,\n    'decreasevolumelevel': 174,\n    'increasevolumelevel': 175,\n    'next': 176,\n    'previous': 177,\n    'stop': 178,\n    'play/pause': 179,\n    'email': 180,\n    'mute': 181,\n    'unmute': 181,\n    //'decreasevolumelevel'\t182 // firefox\n    //'increasevolumelevel'\t183 // firefox\n    'semicolon': 186,\n    'ñ': 186,\n    'equal': 187,\n    'comma': 188,\n    'dash': 189,\n    'period': 190,\n    'forwardslash': 191,\n    'ç': 191,\n    'grave accent': 192,\n    //'ñ' 192,\n    'æ': 192,\n    'ö': 192,\n    '?': 193,\n    '/': 193,\n    '°': 193,\n    // 'numpadperiod'\t : 194, // chrome\n    'openbracket': 219,\n    'backslash': 220,\n    'closebracket': 221,\n    'å': 221,\n    'singlequote': 222,\n    'ø': 222,\n    'ä': 222,\n    '`': 223,\n    // 'left or right ⌘ key (firefox)'\t224\n    'altgr': 225,\n    // '< /git >, left back slash'\t226\n    'GNOME Compose Key': 230,\n    'XF86Forward': 233,\n    'XF86Back': 234,\n    'alphanumeric': 240,\n    'hiragana': 242,\n    'katakana': 242,\n    'half-width': 243,\n    'full-width': 243,\n    'kanji': 244,\n    'unlocktrackpad': 251,\n    'toggletouchpad': 255\n};\n//# sourceMappingURL=KeyHandler.js.map","/**\n * @author   Ikaros Kappler\n * @date     2018-03-19\n * @modified 2018-04-28 Added the param 'wasDragged'.\n * @modified 2018-08-16 Added the param 'dragAmount'.\n * @modified 2018-08-27 Added the param 'element'.\n * @modified 2018-11-11 Changed the scope from a simple global var to a member of window/_context.\n * @modified 2018-11-19 Renamed the 'mousedown' function to 'down' and the 'mouseup' function to 'up'.\n * @modified 2018-11-28 Added the 'wheel' listener.\n * @modified 2018-12-09 Cleaned up some code.\n * @modified 2019-02-10 Cleaned up some more code.\n * @modified 2020-03-25 Ported this class from vanilla-JS to Typescript.\n * @modified 2020-04-08 Fixed the click event (internally fired a 'mouseup' event) (1.0.10)\n * @modified 2020-04-08 Added the optional 'name' property. (1.0.11)\n * @modified 2020-04-08 The new version always installs internal listenrs to track drag events even\n *                      if there is no external drag listener installed (1.1.0).\n * @modified 2020-10-04 Added extended JSDoc comments.\n * @modified 2020-11-25 Added the `isTouchEvent` param.\n * @modified 2021-01-10 The mouse handler is now also working with SVGElements.\n * @version  1.2.0\n *\n * @file MouseHandler\n * @public\n **/\nexport class XMouseEvent extends MouseEvent {\n}\nexport class XWheelEvent extends WheelEvent {\n}\n/**\n * @classdesc A simple mouse handler for demos.\n * Use to avoid load massive libraries like jQuery.\n *\n * @requires XYCoords\n */\nexport class MouseHandler {\n    /**\n     * The constructor.\n     *\n     * Pass the DOM element you want to receive mouse events from.\n     *\n     * Usage\n     * =====\n     * @example\n     *   // Javascript\n     *   new MouseHandler( document.getElementById('mycanvas') )\n     *\t    .drag( function(e) {\n     *\t\tconsole.log( 'Mouse dragged: ' + JSON.stringify(e) );\n     *\t\tif( e.params.leftMouse ) ;\n     *\t\telse if( e.params.rightMouse ) ;\n     *\t    } )\n     *\t    .move( function(e) {\n     *\t\tconsole.log( 'Mouse moved: ' + JSON.stringify(e.params) );\n     *\t    } )\n     *          .up( function(e) {\n     *              console.log( 'Mouse up. Was dragged?', e.params.wasDragged );\n     *          } )\n     *          .down( function(e) {\n     *              console.log( 'Mouse down.' );\n     *          } )\n     *          .click( function(e) {\n     *              console.log( 'Click.' );\n     *          } )\n     *          .wheel( function(e) {\n     *              console.log( 'Wheel. delta='+e.deltaY );\n     *          } )\n     *\n     * @example\n     *   // Typescript\n     *   new MouseHandler( document.getElementById('mycanvas') )\n     *\t    .drag( (e:XMouseEvent) => {\n     *\t\tconsole.log( 'Mouse dragged: ' + JSON.stringify(e) );\n     *\t\tif( e.params.leftMouse ) ;\n     *\t\telse if( e.params.rightMouse ) ;\n     *\t    } )\n     *\t    .move( (e:XMouseEvent) => {\n     *\t\tconsole.log( 'Mouse moved: ' + JSON.stringify(e.params) );\n     *\t    } )\n     *          .up( (e:XMouseEvent) => {\n     *              console.log( 'Mouse up. Was dragged?', e.params.wasDragged );\n     *          } )\n     *          .down( (e:XMouseEvent) => {\n     *              console.log( 'Mouse down.' );\n     *          } )\n     *          .click( (e:XMouseEvent) => {\n     *              console.log( 'Click.' );\n     *          } )\n     *          .wheel( (e:XWheelEvent) => {\n     *              console.log( 'Wheel. delta='+e.deltaY );\n     *          } )\n     *\n     * @constructor\n     * @instance\n     * @memberof MouseHandler\n     * @param {HTMLElement} element\n     **/\n    constructor(element, name) {\n        this.mouseDownPos = undefined;\n        this.mouseDragPos = undefined;\n        // TODO: cc\n        // private mousePos       : { x:number, y:number }|undefined = undefined;\n        this.mouseButton = -1;\n        this.listeners = {};\n        this.installed = {};\n        this.handlers = {};\n        // +----------------------------------------------------------------------\n        // | Some private vars to store the current mouse/position/button state.\n        // +-------------------------------------------------\n        this.name = name;\n        this.element = element;\n        this.mouseDownPos = null;\n        this.mouseDragPos = null;\n        // this.mousePos     = null;\n        this.mouseButton = -1;\n        this.listeners = {};\n        this.installed = {};\n        this.handlers = {};\n        // +----------------------------------------------------------------------\n        // | Define the internal event handlers.\n        // |\n        // | They will dispatch the modified event (relative mouse position,\n        // | drag offset, ...) to the callbacks.\n        // +-------------------------------------------------\n        const _self = this;\n        this.handlers['mousemove'] = (e) => {\n            if (_self.listeners.mousemove)\n                _self.listeners.mousemove(_self.mkParams(e, 'mousemove'));\n            if (_self.mouseDragPos && _self.listeners.drag)\n                _self.listeners.drag(_self.mkParams(e, 'drag'));\n            if (_self.mouseDownPos)\n                _self.mouseDragPos = _self.relPos(e);\n        };\n        this.handlers['mouseup'] = (e) => {\n            if (_self.listeners.mouseup)\n                _self.listeners.mouseup(_self.mkParams(e, 'mouseup'));\n            _self.mouseDragPos = undefined;\n            _self.mouseDownPos = undefined;\n            _self.mouseButton = -1;\n        };\n        this.handlers['mousedown'] = (e) => {\n            _self.mouseDragPos = _self.relPos(e);\n            _self.mouseDownPos = _self.relPos(e);\n            _self.mouseButton = e.button;\n            if (_self.listeners.mousedown)\n                _self.listeners.mousedown(_self.mkParams(e, 'mousedown'));\n        };\n        this.handlers['click'] = (e) => {\n            if (_self.listeners.click)\n                _self.listeners.click(_self.mkParams(e, 'click'));\n        };\n        this.handlers['wheel'] = (e) => {\n            if (_self.listeners.wheel)\n                _self.listeners.wheel(_self.mkParams(e, 'wheel'));\n        };\n        this.element.addEventListener('mousemove', this.handlers['mousemove']);\n        this.element.addEventListener('mouseup', this.handlers['mouseup']);\n        this.element.addEventListener('mousedown', this.handlers['mousedown']);\n        this.element.addEventListener('click', this.handlers['click']);\n        this.element.addEventListener('wheel', this.handlers['wheel']);\n    }\n    /**\n     * Get relative position from the given MouseEvent.\n     *\n     * @name relPos\n     * @memberof MouseHandler\n     * @instance\n     * @private\n     * @param {MouseEvent} e - The mouse event to get the relative position for.\n     * @return {XYCoords} The relative mouse coordinates.\n     */\n    relPos(e) {\n        return { x: e.offsetX,\n            y: e.offsetY\n        };\n    }\n    ;\n    /**\n     * Build the extended event params.\n     *\n     * @name mkParams\n     * @memberof MouseHandler\n     * @instance\n     * @private\n     * @param {MouseEvent} e - The mouse event to get the relative position for.\n     * @param {string} eventName - The name of the firing event.\n     * @return {XMouseEvent}\n     */\n    mkParams(e, eventName) {\n        const rel = this.relPos(e);\n        const xEvent = e;\n        xEvent.params = {\n            element: this.element,\n            name: eventName,\n            isTouchEvent: false,\n            pos: rel,\n            button: this.mouseButton,\n            leftButton: this.mouseButton == 0,\n            middleButton: this.mouseButton == 1,\n            rightButton: this.mouseButton == 2,\n            mouseDownPos: this.mouseDownPos,\n            draggedFrom: this.mouseDragPos,\n            wasDragged: (this.mouseDownPos != null && (this.mouseDownPos.x != rel.x || this.mouseDownPos.y != rel.y)),\n            dragAmount: (this.mouseDownPos != null ? { x: rel.x - this.mouseDragPos.x, y: rel.y - this.mouseDragPos.y } : { x: 0, y: 0 })\n        };\n        return xEvent;\n    }\n    /**\n     * Install a new listener.\n     * Please note that this mouse handler can only handle one listener per event type.\n     *\n     * @name listenFor\n     * @memberof MouseHandler\n     * @instance\n     * @private\n     * @param {string} eventName - The name of the firing event to listen for.\n     * @return {void}\n     */\n    listenFor(eventName) {\n        if (this.installed[eventName])\n            return;\n        // In the new version 1.1.0 has all internal listeners installed by default.\n        this.installed[eventName] = true;\n    }\n    /**\n     * Un-install a new listener.\n     *\n     * @name listenFor\n     * @memberof MouseHandler\n     * @instance\n     * @private\n     * @param {string} eventName - The name of the firing event to unlisten for.\n     * @return {void}\n     */\n    unlistenFor(eventName) {\n        if (!this.installed[eventName])\n            return;\n        // In the new version 1.1.0 has all internal listeners installed by default.\n        delete this.installed[eventName];\n    }\n    /**\n     * Installer function to listen for a specific event: mouse-drag.\n     * Pass your callbacks here.\n     *\n     * Note: this support chaining.\n     *\n     * @name drag\n     * @memberof MouseHandler\n     * @instance\n     * @param {XMouseCallback} callback - The drag-callback to listen for.\n     * @return {MouseHandler} this\n     */\n    drag(callback) {\n        if (this.listeners.drag)\n            this.throwAlreadyInstalled('drag');\n        this.listeners.drag = callback;\n        this.listenFor('mousedown');\n        this.listenFor('mousemove');\n        this.listenFor('mouseup');\n        return this;\n    }\n    ;\n    /**\n     * Installer function to listen for a specific event: mouse-move.\n     * Pass your callbacks here.\n     *\n     * Note: this support chaining.\n     *\n     * @name move\n     * @memberof MouseHandler\n     * @instance\n     * @param {XMouseCallback} callback - The move-callback to listen for.\n     * @return {MouseHandler} this\n     */\n    move(callback) {\n        if (this.listeners.mousemove)\n            this.throwAlreadyInstalled('mousemove');\n        this.listenFor('mousemove');\n        this.listeners.mousemove = callback;\n        return this;\n    }\n    ;\n    /**\n     * Installer function to listen for a specific event: mouse-up.\n     * Pass your callbacks here.\n     *\n     * Note: this support chaining.\n     *\n     * @name up\n     * @memberof MouseHandler\n     * @instance\n     * @param {XMouseCallback} callback - The up-callback to listen for.\n     * @return {MouseHandler} this\n     */\n    up(callback) {\n        if (this.listeners.mouseup)\n            this.throwAlreadyInstalled('mouseup');\n        this.listenFor('mouseup');\n        this.listeners.mouseup = callback;\n        return this;\n    }\n    ;\n    /**\n     * Installer function to listen for a specific event: mouse-down.\n     * Pass your callbacks here.\n     *\n     * Note: this support chaining.\n     *\n     * @name down\n     * @memberof MouseHandler\n     * @instance\n     * @param {XMouseCallback} callback - The down-callback to listen for.\n     * @return {MouseHandler} this\n     */\n    down(callback) {\n        if (this.listeners.mousedown)\n            this.throwAlreadyInstalled('mousedown');\n        this.listenFor('mousedown');\n        this.listeners.mousedown = callback;\n        return this;\n    }\n    ;\n    /**\n     * Installer function to listen for a specific event: mouse-click.\n     * Pass your callbacks here.\n     *\n     * Note: this support chaining.\n     *\n     * @name click\n     * @memberof MouseHandler\n     * @instance\n     * @param {XMouseCallback} callback - The click-callback to listen for.\n     * @return {MouseHandler} this\n     */\n    click(callback) {\n        if (this.listeners.click)\n            this.throwAlreadyInstalled('click');\n        this.listenFor('click');\n        this.listeners.click = callback;\n        return this;\n    }\n    ;\n    /**\n     * Installer function to listen for a specific event: mouse-wheel.\n     * Pass your callbacks here.\n     *\n     * Note: this support chaining.\n     *\n     * @name wheel\n     * @memberof MouseHandler\n     * @instance\n     * @param {XWheelCallback} callback - The wheel-callback to listen for.\n     * @return {MouseHandler} this\n     */\n    wheel(callback) {\n        if (this.listeners.wheel)\n            this.throwAlreadyInstalled('wheel');\n        this.listenFor('wheel');\n        this.listeners.wheel = callback;\n        return this;\n    }\n    ;\n    /**\n     * An internal function to throw events.\n     *\n     * @name throwAlreadyInstalled\n     * @memberof MouseHandler\n     * @instance\n     * @private\n     * @param {string} name - The name of the event.\n     * @return {void}\n     */\n    throwAlreadyInstalled(name) {\n        throw `This MouseHandler already has a '${name}' callback. To keep the code simple there is only room for one.`;\n    }\n    ;\n    /**\n     * Call this when your work is done.\n     *\n     * The function will un-install all event listeners.\n     *\n     * @name destroy\n     * @memberof MouseHandler\n     * @instance\n     * @private\n     * @return {void}\n     */\n    destroy() {\n        this.unlistenFor('mousedown');\n        this.unlistenFor('mousemove');\n        this.unlistenFor('moseup');\n        this.unlistenFor('click');\n        this.unlistenFor('wheel');\n        this.element.removeEventListener('mousemove', this.handlers['mousemove']);\n        this.element.removeEventListener('mouseup', this.handlers['mousedown']);\n        this.element.removeEventListener('mousedown', this.handlers['mousedown']);\n        this.element.removeEventListener('click', this.handlers['click']);\n        this.element.removeEventListener('wheel', this.handlers['wheel']);\n    }\n}\n//# sourceMappingURL=MouseHandler.js.map","/**\n * @author   Ikaros Kappler\n * @date     2019-01-30\n * @modified 2019-03-23 Added JSDoc tags.\n * @modified 2020-03-25 Ported this class from vanilla-JS to Typescript.\n * @modified 2021-01-20 Added UID.\n * @version 1.1.0\n *\n * @file PBImage\n * @fileoverview As native Image objects have only a position and with\n *               and height thei are not suitable for UI dragging interfaces.\n * @public\n **/\nimport { UIDGenerator } from \"./UIDGenerator\";\n/**\n * @classdesc A wrapper for image objects. Has an upper left and a lower right corner point.\n *\n * @requires Vertex\n * @requires SVGSerializable\n * @requires UID\n * @requires UIDGenerator\n */\nexport class PBImage {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name PBImage\n     * @param {Image} image - The actual image.\n     * @param {Vertex} upperLeft - The upper left corner.\n     * @param {Vertex} lowerRight - The lower right corner.\n     **/\n    constructor(image, upperLeft, lowerRight) {\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"PBImage\";\n        this.uid = UIDGenerator.next();\n        this.image = image;\n        this.upperLeft = upperLeft;\n        this.lowerRight = lowerRight;\n    }\n    ;\n    /**\n     * Convert this vertex to SVG code.\n     *\n     * @deprecated DEPRECATION Please use the drawutilssvg library and an XMLSerializer instead.\n     * @method toSVGString\n     * @param {object=} options - An optional set of options, like 'className'.\n     * @return {string} A string representing the SVG code for this vertex.\n     * @instance\n     * @memberof PBImage\n     **/\n    toSVGString(options) {\n        console.warn(\"PBImage is not yet SVG serializable. Returning empty SVG string.\");\n        return \"\";\n    }\n    ;\n}\n//# sourceMappingURL=PBImage.js.map","/**\n * @author   Ikaros Kappler\n * @date     2021-11-16\n * @version  1.0.0\n **/\nimport { UIDGenerator } from \"./UIDGenerator\";\nimport { Vertex } from \"./Vertex\";\n/**\n * @classdesc A simple text element: position, fontSize, fontFamily, color, textAlign, lineHeight and rotation.\n *\n * @requires FontOptions\n * @requires FontSize\n * @requires FontStyle\n * @requires FontWeight\n * @requires Vertex\n * @requires SVGSerializale\n * @requires UID\n * @requires UIDGenerator\n **/\nexport class PBText {\n    /**\n     * Create a new circle with given center point and radius.\n     *\n     * @constructor\n     * @name Circle\n     * @param {Vertex} center - The center point of the circle.\n     * @param {number} radius - The radius of the circle.\n     */\n    constructor(text, anchor, options) {\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"PBText\";\n        this.uid = UIDGenerator.next();\n        this.text = text;\n        this.anchor = anchor !== null && anchor !== void 0 ? anchor : new Vertex();\n        this.color = options.color;\n        this.fontFamily = options.fontFamily;\n        this.fontSize = options.fontSize;\n        this.fontStyle = options.fontStyle;\n        this.fontWeight = options.fontWeight;\n        this.lineHeight = options.lineHeight;\n        this.textAlign = options.textAlign;\n        this.rotation = options.rotation;\n    }\n    /**\n     * Create an SVG representation of this circle.\n     *\n     * @deprecated DEPRECATION Please use the drawutilssvg library and an XMLSerializer instead.\n     * @method toSVGString\n     * @param {object=} options - An optional set of options, like 'className'.\n     * @return {string} A string representing the SVG code for this vertex.\n     * @instance\n     * @memberof Circle\n     */\n    toSVGString(options) {\n        console.warn(\"[PBText.toSVGString()] This function is not implemented as it defines a deprecated method. Use the 'drawutilssvg.text()' method instead.\");\n        return \"\";\n    }\n} // END class\n//# sourceMappingURL=PBText.js.map","/* Port from AlloyFinger v0.1.15\n * Original by dntzhang\n * Typescript port by Ikaros Kappler\n * Github: https://github.com/IkarosKappler/AlloyFinger-Typescript\n *\n * @date    2021-02-10 (Typescript port)\n * @version 0.1.18\n */\n;\n/**\n * Tiny math function to calculate the length of a vector in euclidean space.\n *\n * @param {XYCoords} v - The vector in {x,y} notation.\n * @return {number} The length of the vector.\n */\nconst getLen = (v) => {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n};\n/**\n * Tiny math function to calculate the dot product of two vectors.\n *\n * @param {XYCoords} v1 - The first vector in {x,y} notation.\n * @param {XYCoords} v2 - The second vector in {x,y} notation.\n * @return {number} The dot product of both vectors.\n */\nconst dot = (v1, v2) => {\n    return v1.x * v2.x + v1.y * v2.y;\n};\n/**\n * Tiny math function to calculate the angle between two vectors.\n *\n * @param {XYCoords} v1 - The first vector in {x,y} notation.\n * @param {XYCoords} v2 - The second vector in {x,y} notation.\n * @return {number} The angle (in radians) between the two vectors.\n */\nconst getAngle = (v1, v2) => {\n    const mr = getLen(v1) * getLen(v2);\n    if (mr === 0)\n        return 0;\n    var r = dot(v1, v2) / mr;\n    if (r > 1)\n        r = 1;\n    return Math.acos(r);\n};\n/**\n * Tiny math function to calculate the cross product of two vectors.\n *\n * @param {XYCoords} v1 - The first vector in {x,y} notation.\n * @param {XYCoords} v2 - The second vector in {x,y} notation.\n * @return {number} The cross product of both vectors.\n */\nconst cross = (v1, v2) => {\n    return v1.x * v2.y - v2.x * v1.y;\n};\n/**\n * Tiny math function to calculate the rotate-angle (in degrees) for two vectors.\n *\n * @param {XYCoords} v1 - The first vector in {x,y} notation.\n * @param {XYCoords} v2 - The second vector in {x,y} notation.\n * @return {number} The rotate-angle in degrees for the two vectors.\n */\nconst getRotateAngle = (v1, v2) => {\n    var angle = getAngle(v1, v2);\n    if (cross(v1, v2) > 0) {\n        angle *= -1;\n    }\n    return angle * 180 / Math.PI;\n};\n/**\n * A HandlerAdmin holds all the added event handlers for one kind of event type.\n */\nclass HandlerAdmin {\n    constructor(el) {\n        this.handlers = [];\n        this.el = el;\n    }\n    ;\n    add(handler) {\n        this.handlers.push(handler);\n    }\n    ;\n    del(handler) {\n        if (!handler)\n            this.handlers = [];\n        for (var i = this.handlers.length; i >= 0; i--) {\n            if (this.handlers[i] === handler) {\n                this.handlers.splice(i, 1);\n            }\n        }\n    }\n    ;\n    dispatch(..._args) {\n        for (var i = 0, len = this.handlers.length; i < len; i++) {\n            const handler = this.handlers[i];\n            if (typeof handler === 'function') {\n                handler.apply(this.el, arguments);\n            }\n        }\n    }\n    ;\n} // END class HandlerAdmin\n/**\n * A wrapper for handler functions; converts the passed handler function into a HadlerAdmin instance..\n */\nconst wrapFunc = (el, handler) => {\n    const handlerAdmin = new HandlerAdmin(el);\n    handlerAdmin.add(handler);\n    return handlerAdmin;\n};\n/**\n * @classdesc The AlloyFinger main class. Use this to add handler functions for\n *            touch events to any HTML- or SVG-Element.\n **/\nexport class AlloyFinger {\n    constructor(el, option) {\n        this.element = typeof el == 'string' ? document.querySelector(el) : el;\n        // Fancy stuff: change `this` from the start-, move-, end- and cancel-function.\n        //    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind\n        this.start = this.start.bind(this);\n        this.move = this.move.bind(this);\n        this.end = this.end.bind(this);\n        this.cancel = this.cancel.bind(this);\n        this.element.addEventListener(\"touchstart\", this.start, false);\n        this.element.addEventListener(\"touchmove\", this.move, false);\n        this.element.addEventListener(\"touchend\", this.end, false);\n        this.element.addEventListener(\"touchcancel\", this.cancel, false);\n        this.preV = { x: null, y: null };\n        this.pinchStartLen = null;\n        this.zoom = 1;\n        this.isDoubleTap = false;\n        const noop = () => { };\n        this.rotate = wrapFunc(this.element, option.rotate || noop);\n        this.touchStart = wrapFunc(this.element, option.touchStart || noop);\n        this.multipointStart = wrapFunc(this.element, option.multipointStart || noop);\n        this.multipointEnd = wrapFunc(this.element, option.multipointEnd || noop);\n        this.pinch = wrapFunc(this.element, option.pinch || noop);\n        this.swipe = wrapFunc(this.element, option.swipe || noop);\n        this.tap = wrapFunc(this.element, option.tap || noop);\n        this.doubleTap = wrapFunc(this.element, option.doubleTap || noop);\n        this.longTap = wrapFunc(this.element, option.longTap || noop);\n        this.singleTap = wrapFunc(this.element, option.singleTap || noop);\n        this.pressMove = wrapFunc(this.element, option.pressMove || noop);\n        this.twoFingerPressMove = wrapFunc(this.element, option.twoFingerPressMove || noop);\n        this.touchMove = wrapFunc(this.element, option.touchMove || noop);\n        this.touchEnd = wrapFunc(this.element, option.touchEnd || noop);\n        this.touchCancel = wrapFunc(this.element, option.touchCancel || noop);\n        this._cancelAllHandler = this.cancelAll.bind(this);\n        if (globalThis && typeof globalThis.addEventListener === \"function\") {\n            globalThis.addEventListener('scroll', this._cancelAllHandler);\n        }\n        this.delta = null;\n        this.last = null;\n        this.now = null;\n        this.tapTimeout = null;\n        this.singleTapTimeout = null;\n        this.longTapTimeout = null;\n        this.swipeTimeout = null;\n        this.x1 = this.x2 = this.y1 = this.y2 = null;\n        this.preTapPosition = { x: null, y: null };\n    }\n    ;\n    start(evt) {\n        if (!evt.touches)\n            return;\n        const _self = this;\n        this.now = Date.now();\n        this.x1 = evt.touches[0].pageX;\n        this.y1 = evt.touches[0].pageY;\n        this.delta = this.now - (this.last || this.now);\n        this.touchStart.dispatch(evt, this.element);\n        if (this.preTapPosition.x !== null) {\n            this.isDoubleTap = (this.delta > 0 && this.delta <= 250 && Math.abs(this.preTapPosition.x - this.x1) < 30 && Math.abs(this.preTapPosition.y - this.y1) < 30);\n            if (this.isDoubleTap)\n                clearTimeout(this.singleTapTimeout);\n        }\n        this.preTapPosition.x = this.x1;\n        this.preTapPosition.y = this.y1;\n        this.last = this.now;\n        const preV = this.preV;\n        const len = evt.touches.length;\n        if (len > 1) {\n            this._cancelLongTap();\n            this._cancelSingleTap();\n            const v = { x: evt.touches[1].pageX - this.x1, y: evt.touches[1].pageY - this.y1 };\n            preV.x = v.x;\n            preV.y = v.y;\n            this.pinchStartLen = getLen(preV);\n            this.multipointStart.dispatch(evt, this.element);\n        }\n        this._preventTap = false;\n        this.longTapTimeout = setTimeout((() => {\n            _self.longTap.dispatch(evt, _self.element);\n            _self._preventTap = true;\n        }).bind(_self), 750);\n    }\n    ;\n    move(event) {\n        if (!event.touches)\n            return;\n        const afEvent = event;\n        const preV = this.preV;\n        const len = event.touches.length;\n        const currentX = event.touches[0].pageX;\n        const currentY = event.touches[0].pageY;\n        this.isDoubleTap = false;\n        if (len > 1) {\n            const sCurrentX = afEvent.touches[1].pageX;\n            const sCurrentY = afEvent.touches[1].pageY;\n            const v = { x: afEvent.touches[1].pageX - currentX, y: afEvent.touches[1].pageY - currentY };\n            if (preV.x !== null) {\n                if (this.pinchStartLen > 0) {\n                    afEvent.zoom = getLen(v) / this.pinchStartLen;\n                    this.pinch.dispatch(afEvent, this.element);\n                }\n                afEvent.angle = getRotateAngle(v, preV);\n                this.rotate.dispatch(afEvent, this.element);\n            }\n            preV.x = v.x;\n            preV.y = v.y;\n            if (this.x2 !== null && this.sx2 !== null) {\n                afEvent.deltaX = (currentX - this.x2 + sCurrentX - this.sx2) / 2;\n                afEvent.deltaY = (currentY - this.y2 + sCurrentY - this.sy2) / 2;\n            }\n            else {\n                afEvent.deltaX = 0;\n                afEvent.deltaY = 0;\n            }\n            this.twoFingerPressMove.dispatch(afEvent, this.element);\n            this.sx2 = sCurrentX;\n            this.sy2 = sCurrentY;\n        }\n        else {\n            if (this.x2 !== null) {\n                afEvent.deltaX = currentX - this.x2;\n                afEvent.deltaY = currentY - this.y2;\n                //move事件中添加对当前触摸点到初始触摸点的判断，\n                //如果曾经大于过某个距离(比如10),就认为是移动到某个地方又移回来，应该不再触发tap事件才对。\n                //\n                // translation:\n                //    Add the judgment of the current touch point to the initial touch point in the event,\n                //    If it has been greater than a certain distance (such as 10), it is considered to be\n                //    moved to a certain place and then moved back, and the tap event should no longer be triggered.\n                const movedX = Math.abs(this.x1 - this.x2);\n                const movedY = Math.abs(this.y1 - this.y2);\n                if (movedX > 10 || movedY > 10) {\n                    this._preventTap = true;\n                }\n            }\n            else {\n                afEvent.deltaX = 0;\n                afEvent.deltaY = 0;\n            }\n            this.pressMove.dispatch(afEvent, this.element);\n        }\n        this.touchMove.dispatch(afEvent, this.element);\n        this._cancelLongTap();\n        this.x2 = currentX;\n        this.y2 = currentY;\n        if (len > 1) {\n            event.preventDefault();\n        }\n    }\n    ; // END move\n    end(event) {\n        if (!event.changedTouches)\n            return;\n        const afEvent = event;\n        this._cancelLongTap();\n        const self = this;\n        if (afEvent.touches.length < 2) {\n            this.multipointEnd.dispatch(afEvent, this.element);\n            this.sx2 = this.sy2 = null;\n        }\n        //swipe\n        if ((this.x2 && Math.abs(this.x1 - this.x2) > 30) ||\n            (this.y2 && Math.abs(this.y1 - this.y2) > 30)) {\n            afEvent.direction = this._swipeDirection(this.x1, this.x2, this.y1, this.y2);\n            this.swipeTimeout = setTimeout(function () {\n                self.swipe.dispatch(afEvent, self.element);\n            }, 0);\n        }\n        else {\n            this.tapTimeout = setTimeout(function () {\n                if (!self._preventTap) {\n                    self.tap.dispatch(afEvent, self.element);\n                }\n                // trigger double tap immediately\n                if (self.isDoubleTap) {\n                    self.doubleTap.dispatch(afEvent, self.element);\n                    self.isDoubleTap = false;\n                }\n            }, 0);\n            if (!self.isDoubleTap) {\n                self.singleTapTimeout = setTimeout(function () {\n                    self.singleTap.dispatch(afEvent, self.element);\n                }, 250);\n            }\n        }\n        this.touchEnd.dispatch(afEvent, this.element);\n        this.preV.x = 0;\n        this.preV.y = 0;\n        this.zoom = 1;\n        this.pinchStartLen = null;\n        this.x1 = this.x2 = this.y1 = this.y2 = null;\n    }\n    ; // END end\n    cancelAll() {\n        this._preventTap = true;\n        clearTimeout(this.singleTapTimeout);\n        clearTimeout(this.tapTimeout);\n        clearTimeout(this.longTapTimeout);\n        clearTimeout(this.swipeTimeout);\n    }\n    ;\n    cancel(evt) {\n        this.cancelAll();\n        this.touchCancel.dispatch(evt, this.element);\n    }\n    ;\n    _cancelLongTap() {\n        clearTimeout(this.longTapTimeout);\n    }\n    ;\n    _cancelSingleTap() {\n        clearTimeout(this.singleTapTimeout);\n    }\n    ;\n    _swipeDirection(x1, x2, y1, y2) {\n        return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down');\n    }\n    ;\n    on(evt, handler) {\n        if (this[evt]) {\n            // Force the generic parameter into it's expected candidate here ;)\n            const admin = this[evt];\n            admin.add(handler);\n        }\n    }\n    ;\n    off(evt, handler) {\n        if (this[evt]) {\n            // Force the generic parameter into it's expected candidate here ;)\n            const admin = this[evt];\n            admin.del(handler);\n        }\n    }\n    ;\n    destroy() {\n        if (this.singleTapTimeout) {\n            clearTimeout(this.singleTapTimeout);\n        }\n        if (this.tapTimeout) {\n            clearTimeout(this.tapTimeout);\n        }\n        if (this.longTapTimeout) {\n            clearTimeout(this.longTapTimeout);\n        }\n        if (this.swipeTimeout) {\n            clearTimeout(this.swipeTimeout);\n        }\n        this.element.removeEventListener(\"touchstart\", this.start);\n        this.element.removeEventListener(\"touchmove\", this.move);\n        this.element.removeEventListener(\"touchend\", this.end);\n        this.element.removeEventListener(\"touchcancel\", this.cancel);\n        this.rotate.del();\n        this.touchStart.del();\n        this.multipointStart.del();\n        this.multipointEnd.del();\n        this.pinch.del();\n        this.swipe.del();\n        this.tap.del();\n        this.doubleTap.del();\n        this.longTap.del();\n        this.singleTap.del();\n        this.pressMove.del();\n        this.twoFingerPressMove.del();\n        this.touchMove.del();\n        this.touchEnd.del();\n        this.touchCancel.del();\n        this.preV = this.pinchStartLen = this.zoom = this.isDoubleTap = this.delta = this.last = this.now = this.tapTimeout = this.singleTapTimeout = this.longTapTimeout = this.swipeTimeout = this.x1 = this.x2 = this.y1 = this.y2 = this.preTapPosition = this.rotate = this.touchStart = this.multipointStart = this.multipointEnd = this.pinch = this.swipe = this.tap = this.doubleTap = this.longTap = this.singleTap = this.pressMove = this.touchMove = this.touchEnd = this.touchCancel = this.twoFingerPressMove = null;\n        if (globalThis && typeof globalThis.removeEventListener === \"function\") {\n            globalThis.removeEventListener('scroll', this._cancelAllHandler);\n        }\n    }\n    ; // END destroy\n}\n;\nexport default AlloyFinger;\n//# sourceMappingURL=alloy_finger.js.map","/**\n * TypeScript port by Ikaros Kappler.\n *\n * Original file from https://github.com/AlloyTeam/AlloyFinger\n *\n * @date 2021-02-10\n */\nimport { AlloyFinger } from './alloy_finger';\nexport { AlloyFinger };\nexport default AlloyFinger;\n//# sourceMappingURL=index.js.map","/**\n * @author   Ikaros Kappler\n * @date     2018-11-28\n * @modified 2018-12-04 Added the toSVGString function.\n * @modified 2020-03-25 Ported this class from vanilla-JS to Typescript.\n * @modified 2021-01-20 Added UID.\n * @modified 2021-02-14 Added functions `radiusH` and `radiusV`.\n * @modified 2021-02-26 Added helper function `decribeSVGArc(...)`.\n * @modified 2021-03-01 Added attribute `rotation` to allow rotation of ellipses.\n * @modified 2021-03-03 Added the `vertAt` and `perimeter` methods.\n * @modified 2021-03-05 Added the `getFoci`, `normalAt` and `tangentAt` methods.\n * @modified 2021-03-09 Added the `clone` and `rotate` methods.\n * @modified 2021-03-10 Added the `toCubicBezier` method.\n * @modified 2021-03-15 Added `VEllipse.quarterSegmentCount` and `VEllipse.scale` functions.\n * @modified 2021-03-19 Added the `VEllipse.rotate` function.\n * @version  1.2.2\n *\n * @file VEllipse\n * @fileoverview Ellipses with a center and an x- and a y-axis (stored as a vertex).\n **/\nimport { Line } from \"./Line\";\nimport { Vector } from \"./Vector\";\nimport { Vertex } from \"./Vertex\";\nimport { UIDGenerator } from \"./UIDGenerator\";\nimport { CubicBezierCurve } from \"./CubicBezierCurve\";\n/**\n * @classdesc An ellipse class based on two vertices [centerX,centerY] and [radiusX,radiusY].\n *\n * @requires SVGSerializable\n * @requires UID\n * @requires UIDGenerator\n * @requires Vertex\n */\nexport class VEllipse {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @param {Vertex} center - The ellipses center.\n     * @param {Vertex} axis - The x- and y-axis (the two radii encoded in a control point).\n     * @param {Vertex} rotation - [optional, default=0] The rotation of this ellipse.\n     * @name VEllipse\n     **/\n    constructor(center, axis, rotation) {\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"VEllipse\";\n        this.uid = UIDGenerator.next();\n        this.center = center;\n        this.axis = axis;\n        this.rotation = rotation || 0.0;\n    }\n    /**\n     * Clone this ellipse (deep clone).\n     *\n     * @return {VEllipse} A copy of this ellipse.s\n     */\n    clone() {\n        return new VEllipse(this.center.clone(), this.axis.clone(), this.rotation);\n    }\n    /**\n     * Get the non-negative horizonal radius of this ellipse.\n     *\n     * @method radiusH\n     * @instance\n     * @memberof VEllipse\n     * @return {number} The unsigned horizontal radius of this ellipse.\n     */\n    radiusH() {\n        return Math.abs(this.signedRadiusH());\n    }\n    /**\n     * Get the signed horizonal radius of this ellipse.\n     *\n     * @method signedRadiusH\n     * @instance\n     * @memberof VEllipse\n     * @return {number} The signed horizontal radius of this ellipse.\n     */\n    signedRadiusH() {\n        // return Math.abs(this.axis.x - this.center.x);\n        // Rotate axis back to origin before calculating radius\n        // return Math.abs(new Vertex(this.axis).rotate(-this.rotation,this.center).x - this.center.x);\n        return new Vertex(this.axis).rotate(-this.rotation, this.center).x - this.center.x;\n    }\n    /**\n     * Get the non-negative vertical radius of this ellipse.\n     *\n     * @method radiusV\n     * @instance\n     * @memberof VEllipse\n     * @return {number} The unsigned vertical radius of this ellipse.\n     */\n    radiusV() {\n        return Math.abs(this.signedRadiusV());\n    }\n    /**\n     * Get the signed vertical radius of this ellipse.\n     *\n     * @method radiusV\n     * @instance\n     * @memberof VEllipse\n     * @return {number} The signed vertical radius of this ellipse.\n     */\n    signedRadiusV() {\n        // return Math.abs(this.axis.y - this.center.y);\n        // Rotate axis back to origin before calculating radius\n        // return Math.abs(new Vertex(this.axis).rotate(-this.rotation,this.center).y - this.center.y);\n        return new Vertex(this.axis).rotate(-this.rotation, this.center).y - this.center.y;\n    }\n    /**\n     * Scale this ellipse by the given factor from the center point. The factor will be applied to both radii.\n     *\n     * @method scale\n     * @instance\n     * @memberof VEllipse\n     * @param {number} factor - The factor to scale by.\n     * @return {VEllipse} this for chaining.\n     */\n    scale(factor) {\n        this.axis.scale(factor, this.center);\n        return this;\n    }\n    /**\n     * Rotate this ellipse around its center.\n     *\n     * @method rotate\n     * @instance\n     * @memberof VEllipse\n     * @param {number} angle - The angle to rotate by.\n     * @returns {VEllipse} this for chaining.\n     */\n    rotate(angle) {\n        this.axis.rotate(angle, this.center);\n        this.rotation += angle;\n        return this;\n    }\n    /**\n     * Get the vertex on the ellipse's outline at the given angle.\n     *\n     * @method vertAt\n     * @instance\n     * @memberof VEllipse\n     * @param {number} angle - The angle to determine the vertex at.\n     * @return {Vertex} The vertex on the outline at the given angle.\n     */\n    vertAt(angle) {\n        // Tanks to Narasinham for the vertex-on-ellipse equations\n        // https://math.stackexchange.com/questions/22064/calculating-a-point-that-lies-on-an-ellipse-given-an-angle\n        const a = this.radiusH();\n        const b = this.radiusV();\n        return new Vertex(VEllipse.utils.polarToCartesian(this.center.x, this.center.y, a, b, angle)).rotate(this.rotation, this.center);\n    }\n    /**\n     * Get the normal vector at the given angle.\n     * The normal vector is the vector that intersects the ellipse in a 90 degree angle\n     * at the given point (speicified by the given angle).\n     *\n     * Length of desired normal vector can be specified, default is 1.0.\n     *\n     * @method normalAt\n     * @instance\n     * @memberof VEllipse\n     * @param {number} angle - The angle to get the normal vector at.\n     * @param {number=1.0} length - [optional, default=1] The length of the returned vector.\n     */\n    normalAt(angle, length) {\n        const point = this.vertAt(angle);\n        const foci = this.getFoci();\n        // Calculate the angle between [point,focusA] and [point,focusB]\n        const angleA = new Line(point, foci[0]).angle();\n        const angleB = new Line(point, foci[1]).angle();\n        const centerAngle = angleA + (angleB - angleA) / 2.0;\n        const endPointA = point.clone().addX(50).clone().rotate(centerAngle, point);\n        const endPointB = point\n            .clone()\n            .addX(50)\n            .clone()\n            .rotate(Math.PI + centerAngle, point);\n        if (this.center.distance(endPointA) < this.center.distance(endPointB)) {\n            return new Vector(point, endPointB);\n        }\n        else {\n            return new Vector(point, endPointA);\n        }\n    }\n    /**\n     * Get the tangent vector at the given angle.\n     * The tangent vector is the vector that touches the ellipse exactly at the given given\n     * point (speicified by the given angle).\n     *\n     * Note that the tangent is just 90 degree rotated normal vector.\n     *\n     * Length of desired tangent vector can be specified, default is 1.0.\n     *\n     * @method tangentAt\n     * @instance\n     * @memberof VEllipse\n     * @param {number} angle - The angle to get the tangent vector at.\n     * @param {number=1.0} length - [optional, default=1] The length of the returned vector.\n     */\n    tangentAt(angle, length) {\n        const normal = this.normalAt(angle, length);\n        // Rotate the normal by 90 degrees, then it is the tangent.\n        normal.b.rotate(Math.PI / 2, normal.a);\n        return normal;\n    }\n    /**\n     * Get the perimeter of this ellipse.\n     *\n     * @method perimeter\n     * @instance\n     * @memberof VEllipse\n     * @return {number}\n     */\n    perimeter() {\n        // This method does not use an iterative approximation to determine the perimeter, but it uses\n        // a wonderful closed approximation found by Srinivasa Ramanujan.\n        // Matt Parker made a neat video about it:\n        //    https://www.youtube.com/watch?v=5nW3nJhBHL0\n        const a = this.radiusH();\n        const b = this.radiusV();\n        return Math.PI * (3 * (a + b) - Math.sqrt((3 * a + b) * (a + 3 * b)));\n    }\n    /**\n     * Get the two foci of this ellipse.\n     *\n     * @method getFoci\n     * @instance\n     * @memberof VEllipse\n     * @return {Array<Vertex>} An array with two elements, the two focal points of the ellipse (foci).\n     */\n    getFoci() {\n        // https://www.mathopenref.com/ellipsefoci.html\n        const rh = this.radiusH();\n        const rv = this.radiusV();\n        const sdiff = rh * rh - rv * rv;\n        // f is the distance of each focs to the center.\n        const f = Math.sqrt(Math.abs(sdiff));\n        // Foci on x- or y-axis?\n        if (sdiff < 0) {\n            return [\n                this.center.clone().addY(f).rotate(this.rotation, this.center),\n                this.center.clone().addY(-f).rotate(this.rotation, this.center)\n            ];\n        }\n        else {\n            return [\n                this.center.clone().addX(f).rotate(this.rotation, this.center),\n                this.center.clone().addX(-f).rotate(this.rotation, this.center)\n            ];\n        }\n    }\n    /**\n     * Get equally distributed points on the outline of this ellipse.\n     *\n     * @param {number} pointCount - The number of points.\n     * @returns {Array<Vertex>}\n     */\n    getEquidistantVertices(pointCount) {\n        const angles = VEllipse.utils.equidistantVertAngles(this.radiusH(), this.radiusV(), pointCount);\n        const result = [];\n        for (var i = 0; i < angles.length; i++) {\n            result.push(this.vertAt(angles[i]));\n        }\n        return result;\n    }\n    /**\n     * Convert this ellipse into cubic Bézier curves.\n     *\n     * @param {number=3} quarterSegmentCount - The number of segments per base elliptic quarter (default is 3, min is 1).\n     * @param {number=0.666666} threshold - The Bézier threshold (default value 0.666666 approximates the ellipse with best results\n     * but you might wish to use other values)\n     * @return {Array<CubicBezierCurve>} An array of cubic Bézier curves representing this ellipse.\n     */\n    toCubicBezier(quarterSegmentCount, threshold) {\n        // Math by Luc Maisonobe\n        //    http://www.spaceroots.org/documents/ellipse/node22.html\n        // Note that ellipses with radiusH=0 or radiusV=0 cannot be represented as Bézier curves.\n        // Return a single line here (as a Bézier curve)\n        // if (Math.abs(this.radiusV()) < 0.00001) {\n        //   const radiusH = this.radiusH();\n        //   return [\n        //     new CubicBezierCurve(\n        //       this.center.clone().addX(radiusH),\n        //       this.center.clone().addX(-radiusH),\n        //       this.center.clone(),\n        //       this.center.clone()\n        //     )\n        //   ]; // TODO: test horizontal line ellipse\n        // }\n        // if (Math.abs(this.radiusH()) < 0.00001) {\n        //   const radiusV = this.radiusV();\n        //   return [\n        //     new CubicBezierCurve(\n        //       this.center.clone().addY(radiusV),\n        //       this.center.clone().addY(-radiusV),\n        //       this.center.clone(),\n        //       this.center.clone()\n        //     )\n        //   ]; // TODO: test vertical line ellipse\n        // }\n        // At least 4, but 16 seems to be a good value.\n        const segmentCount = Math.max(1, quarterSegmentCount || 3) * 4;\n        threshold = typeof threshold === \"undefined\" ? 0.666666 : threshold;\n        const radiusH = this.radiusH();\n        const radiusV = this.radiusV();\n        const curves = [];\n        const angles = VEllipse.utils.equidistantVertAngles(radiusH, radiusV, segmentCount);\n        let curAngle = angles[0];\n        let startPoint = this.vertAt(curAngle);\n        for (var i = 0; i < angles.length; i++) {\n            let nextAngle = angles[(i + 1) % angles.length];\n            let endPoint = this.vertAt(nextAngle);\n            if (Math.abs(radiusV) < 0.0001 || Math.abs(radiusH) < 0.0001) {\n                // Distorted ellipses can only be approximated by linear Bézier segments\n                let diff = startPoint.difference(endPoint);\n                let curve = new CubicBezierCurve(startPoint.clone(), endPoint.clone(), startPoint.clone().addXY(diff.x * 0.333, diff.y * 0.333), endPoint.clone().addXY(-diff.x * 0.333, -diff.y * 0.333));\n                curves.push(curve);\n            }\n            else {\n                let startTangent = this.tangentAt(curAngle);\n                let endTangent = this.tangentAt(nextAngle);\n                // Find intersection\n                let intersection = startTangent.intersection(endTangent);\n                // What if intersection is undefined?\n                // --> This *can* not happen if segmentCount > 2 and height and width of the ellipse are not zero.\n                let startDiff = startPoint.difference(intersection);\n                let endDiff = endPoint.difference(intersection);\n                let curve = new CubicBezierCurve(startPoint.clone(), endPoint.clone(), startPoint.clone().add(startDiff.scale(threshold)), endPoint.clone().add(endDiff.scale(threshold)));\n                curves.push(curve);\n            }\n            startPoint = endPoint;\n            curAngle = nextAngle;\n        }\n        return curves;\n    }\n    /**\n     * Create an SVG representation of this ellipse.\n     *\n     * @deprecated DEPRECATION Please use the drawutilssvg library and an XMLSerializer instead.\n     * @param {object} options { className?:string }\n     * @return string The SVG string\n     */\n    toSVGString(options) {\n        options = options || {};\n        var buffer = [];\n        buffer.push(\"<ellipse\");\n        if (options.className)\n            buffer.push(' class=\"' + options.className + '\"');\n        buffer.push(' cx=\"' + this.center.x + '\"');\n        buffer.push(' cy=\"' + this.center.y + '\"');\n        buffer.push(' rx=\"' + this.axis.x + '\"');\n        buffer.push(' ry=\"' + this.axis.y + '\"');\n        buffer.push(\" />\");\n        return buffer.join(\"\");\n    }\n}\n/**\n * A static collection of ellipse-related helper functions.\n * @static\n */\nVEllipse.utils = {\n    /**\n     * Calculate a particular point on the outline of the given ellipse (center plus two radii plus angle).\n     *\n     * @name polarToCartesian\n     * @param {number} centerX - The x coordinate of the elliptic center.\n     * @param {number} centerY - The y coordinate of the elliptic center.\n     * @param {number} radiusH - The horizontal radius of the ellipse.\n     * @param {number} radiusV - The vertical radius of the ellipse.\n     * @param {number} angle - The angle (in radians) to get the desired outline point for.\n     * @reutn {XYCoords} The outlont point in absolute x-y-coordinates.\n     */\n    polarToCartesian: (centerX, centerY, radiusH, radiusV, angle) => {\n        // Tanks to Narasinham for the vertex-on-ellipse equations\n        // https://math.stackexchange.com/questions/22064/calculating-a-point-that-lies-on-an-ellipse-given-an-angle\n        var s = Math.sin(Math.PI / 2 - angle);\n        var c = Math.cos(Math.PI / 2 - angle);\n        return {\n            x: centerX + (radiusH * radiusV * s) / Math.sqrt(Math.pow(radiusH * c, 2) + Math.pow(radiusV * s, 2)),\n            y: centerY + (radiusH * radiusV * c) / Math.sqrt(Math.pow(radiusH * c, 2) + Math.pow(radiusV * s, 2))\n        };\n    },\n    /**\n     * Get the `theta` for a given `phi` (used to determine equidistant points on ellipse).\n     *\n     * @param radiusH\n     * @param radiusV\n     * @param phi\n     * @returns {number} theta\n     */\n    phiToTheta: (radiusH, radiusV, phi) => {\n        //  See https://math.stackexchange.com/questions/172766/calculating-equidistant-points-around-an-ellipse-arc\n        var tanPhi = Math.tan(phi);\n        var tanPhi2 = tanPhi * tanPhi;\n        var theta = -Math.PI / 2 + phi + Math.atan(((radiusH - radiusV) * tanPhi) / (radiusV + radiusH * tanPhi2));\n        return theta;\n    },\n    /**\n     * Get n equidistant points on the elliptic arc.\n     *\n     * @param pointCount\n     * @returns\n     */\n    equidistantVertAngles: (radiusH, radiusV, pointCount) => {\n        const angles = [];\n        for (var i = 0; i < pointCount; i++) {\n            var phi = Math.PI / 2.0 + ((Math.PI * 2) / pointCount) * i;\n            let theta = VEllipse.utils.phiToTheta(radiusH, radiusV, phi);\n            angles[i] = theta;\n        }\n        return angles;\n    }\n}; // END utils\n//# sourceMappingURL=VEllipse.js.map","/**\n * Implementation of elliptic sectors.\n * Note that sectors are constructed in clockwise direction.\n *\n * @author  Ikaros Kappler\n * @date    2021-02-26\n * @version 1.0.0\n */\nimport { CubicBezierCurve } from \"./CubicBezierCurve\";\nimport { geomutils } from \"./geomutils\";\nimport { Line } from \"./Line\";\nimport { UIDGenerator } from \"./UIDGenerator\";\nimport { VEllipse } from \"./VEllipse\";\nimport { Vertex } from \"./Vertex\";\n/**\n * @classdesc A class for elliptic sectors.\n *\n * @requires Line\n * @requires Vector\n * @requires VertTuple\n * @requires Vertex\n * @requires SVGSerializale\n * @requires UID\n * @requires UIDGenerator\n **/\nexport class VEllipseSector {\n    /**\n     * Create a new elliptic sector from the given ellipse and two angles.\n     *\n     * Note that the direction from start to end goes clockwise, and that start and end angle\n     * will be wrapped to [0,PI*2).\n     *\n     * @constructor\n     * @name VEllipseSector\n     * @param {VEllipse} - The underlying ellipse to use.\n     * @param {number} startAngle - The start angle of the sector.\n     * @param {numner} endAngle - The end angle of the sector.\n     */\n    constructor(ellipse, startAngle, endAngle) {\n        /**\n         * Required to generate proper CSS classes and other class related IDs.\n         **/\n        this.className = \"VEllipseSector\";\n        this.uid = UIDGenerator.next();\n        this.ellipse = ellipse;\n        this.startAngle = geomutils.wrapMinMax(startAngle, 0, Math.PI * 2);\n        this.endAngle = geomutils.wrapMinMax(endAngle, 0, Math.PI * 2);\n    }\n    /**\n     * Convert this elliptic sector into cubic Bézier curves.\n     *\n     * @param {number=3} quarterSegmentCount - The number of segments per base elliptic quarter (default is 3, min is 1).\n     * @param {number=0.666666} threshold - The Bézier threshold (default value 0.666666 approximates the ellipse with best results\n     * but you might wish to use other values)\n     * @return {Array<CubicBezierCurve>} An array of cubic Bézier curves representing the elliptic sector.\n     */\n    toCubicBezier(quarterSegmentCount, threshold) {\n        // There are at least 4 segments required (dour quarters) to approximate a whole\n        // ellipse with Bézier curves.\n        // A visually 'good' approximation should have 12; this seems to be a good value (anything multiple of 4).\n        const segmentCount = Math.max(1, quarterSegmentCount || 3) * 4;\n        threshold = typeof threshold === \"undefined\" ? 0.666666 : threshold;\n        const radiusH = this.ellipse.radiusH();\n        const radiusV = this.ellipse.radiusV();\n        var startAngle = VEllipseSector.ellipseSectorUtils.normalizeAngle(this.startAngle);\n        var endAngle = VEllipseSector.ellipseSectorUtils.normalizeAngle(this.endAngle);\n        // Find all angles inside start and end\n        var angles = VEllipseSector.ellipseSectorUtils.equidistantVertAngles(radiusH, radiusV, startAngle, endAngle, segmentCount);\n        angles = [startAngle].concat(angles).concat([endAngle]);\n        const curves = [];\n        let curAngle = angles[0];\n        let startPoint = this.ellipse.vertAt(curAngle);\n        for (var i = 0; i + 1 < angles.length; i++) {\n            let nextAngle = angles[(i + 1) % angles.length];\n            let endPoint = this.ellipse.vertAt(nextAngle);\n            let startTangent = this.ellipse.tangentAt(curAngle);\n            let endTangent = this.ellipse.tangentAt(nextAngle);\n            // Distorted ellipses can only be approximated by linear Bézier segments\n            if (Math.abs(radiusV) < 0.0001 || Math.abs(radiusH) < 0.0001) {\n                let diff = startPoint.difference(endPoint);\n                let curve = new CubicBezierCurve(startPoint.clone(), endPoint.clone(), startPoint.clone().addXY(diff.x * 0.333, diff.y * 0.333), endPoint.clone().addXY(-diff.x * 0.333, -diff.y * 0.333));\n                curves.push(curve);\n            }\n            else {\n                // Find intersection\n                let intersection = startTangent.intersection(endTangent);\n                // What if intersection is undefined?\n                // --> This *can* not happen if segmentCount > 2 and height and width of the ellipse are not zero.\n                let startDiff = startPoint.difference(intersection);\n                let endDiff = endPoint.difference(intersection);\n                let curve = new CubicBezierCurve(startPoint.clone(), endPoint.clone(), startPoint.clone().add(startDiff.scale(threshold)), endPoint.clone().add(endDiff.scale(threshold)));\n                curves.push(curve);\n            }\n            startPoint = endPoint;\n            curAngle = nextAngle;\n        }\n        return curves;\n    }\n}\nVEllipseSector.ellipseSectorUtils = {\n    /**\n     * Helper function to convert an elliptic section to SVG arc params (for the `d` attribute).\n     * Inspiration found at:\n     *    https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\n     *\n     * @param {boolean} options.moveToStart - If false (default=true) the initial 'Move' command will not be used.\n     * @return [ 'A', radiusH, radiusV, rotation, largeArcFlag=1|0, sweepFlag=0, endx, endy ]\n     */\n    describeSVGArc: (x, y, radiusH, radiusV, startAngle, endAngle, rotation, options) => {\n        if (typeof options === \"undefined\")\n            options = { moveToStart: true };\n        if (typeof rotation === \"undefined\")\n            rotation = 0.0;\n        // Important note: this function only works if start- and end-angle are within\n        // one whole circle [x,x+2*PI].\n        // Revelations of more than 2*PI might result in unexpected arcs.\n        // -> Use the geomutils.wrapMax( angle, 2*PI )\n        startAngle = geomutils.wrapMax(startAngle, Math.PI * 2);\n        endAngle = geomutils.wrapMax(endAngle, Math.PI * 2);\n        // Find the start- and end-point on the rotated ellipse\n        // XYCoords to Vertex (for rotation)\n        var end = new Vertex(VEllipse.utils.polarToCartesian(x, y, radiusH, radiusV, endAngle));\n        var start = new Vertex(VEllipse.utils.polarToCartesian(x, y, radiusH, radiusV, startAngle));\n        end.rotate(rotation, { x: x, y: y });\n        start.rotate(rotation, { x: x, y: y });\n        // Boolean stored as integers (0|1).\n        var diff = endAngle - startAngle;\n        var largeArcFlag;\n        if (diff < 0) {\n            largeArcFlag = Math.abs(diff) < Math.PI ? 1 : 0;\n        }\n        else {\n            largeArcFlag = Math.abs(diff) > Math.PI ? 1 : 0;\n        }\n        const sweepFlag = 1;\n        const pathData = [];\n        if (options.moveToStart) {\n            pathData.push(\"M\", start.x, start.y);\n        }\n        // Arc rotation in degrees, not radians.\n        const r2d = 180 / Math.PI;\n        pathData.push(\"A\", radiusH, radiusV, rotation * r2d, largeArcFlag, sweepFlag, end.x, end.y);\n        return pathData;\n    },\n    /**\n     * Helper function to find second-kind elliptic angles, so that the euclidean distance along the the\n     * elliptic sector is the same for all.\n     *\n     * Note that this is based on the full ellipse calculuation and start and end will be cropped; so the\n     * distance from the start angle to the first angle and/or the distance from the last angle to\n     * the end angle may be different to the others.\n     *\n     * Furthermore the computation is only possible on un-rotated ellipses; if your source ellipse has\n     * a rotation on the plane please 'rotate' the result angles afterwards to find matching angles.\n     *\n     * Returned angles are normalized to the interval `[ 0, PI*2 ]`.\n     *\n     * @param {number} radiusH - The first (horizonal) radius of the ellipse.\n     * @param {number} radiusV - The second (vertical) radius of the ellipse.\n     * @param {number} startAngle - The opening angle of your elliptic sector (please use normalized angles).\n     * @param {number} endAngle - The closing angle of your elliptic sector (please use normalized angles).\n     * @param {number} fullEllipsePointCount - The number of base segments to use from the source ellipse (12 or 16 are good numbers).\n     * @return {Array<number>} An array of n angles inside startAngle and endAngle (where n <= fullEllipsePointCount).\n     */\n    equidistantVertAngles: (radiusH, radiusV, startAngle, endAngle, fullEllipsePointCount) => {\n        var ellipseAngles = VEllipse.utils.equidistantVertAngles(radiusH, radiusV, fullEllipsePointCount);\n        ellipseAngles = ellipseAngles.map((angle) => VEllipseSector.ellipseSectorUtils.normalizeAngle(angle));\n        var angleIsInRange = (angle) => {\n            if (startAngle < endAngle)\n                return angle >= startAngle && angle <= endAngle;\n            else\n                return angle >= startAngle || (angle <= endAngle && angle >= 0);\n        };\n        // Drop all angles outside the sector\n        var ellipseAngles = ellipseAngles.filter(angleIsInRange);\n        // Now we need to sort the angles to the first one in the array is the closest to startAngle.\n        // --> find the angle that is closest to the start angle\n        var startIndex = VEllipseSector.ellipseSectorUtils.findClosestToStartAngle(startAngle, endAngle, ellipseAngles);\n        // Bring all angles into the correct order\n        //    Idea: use splice or slice here?\n        var angles = [];\n        for (var i = 0; i < ellipseAngles.length; i++) {\n            angles.push(ellipseAngles[(startIndex + i) % ellipseAngles.length]);\n        }\n        return angles;\n    },\n    findClosestToStartAngle: (startAngle, endAngle, ellipseAngles) => {\n        // Note: endAngle > 0 && startAngle > 0\n        if (startAngle > endAngle) {\n            const n = ellipseAngles.length;\n            for (var i = 0; i < n; i++) {\n                const ea = geomutils.wrapMinMax(ellipseAngles[i], 0, Math.PI * 2);\n                if (ea >= startAngle && ea >= endAngle) {\n                    return i;\n                }\n            }\n        }\n        return 0;\n    },\n    normalizeAngle: (angle) => (angle < 0 ? Math.PI * 2 + angle : angle),\n    /**\n     * Convert the elliptic arc from endpoint parameters to center parameters as described\n     * in the w3c svg arc implementation note.\n     *\n     * https://www.w3.org/TR/SVG/implnote.html#ArcConversionEndpointToCenter\n     *\n     * @param {number} x1 - The x component of the start point (end of last SVG command).\n     * @param {number} y1 - The y component of the start point (end of last SVG command).\n     * @param {number} rx - The first (horizontal) radius of the ellipse.\n     * @param {number} ry - The second (vertical) radius of the ellipse.\n     * @param {number} phi - The ellipse's rotational angle (angle of axis rotation) in radians (not in degrees as the SVG command uses!)\n     * @param {boolean} fa - The large-arc-flag (boolean, not 0 or 1).\n     * @param {boolean} fs - The sweep-flag (boolean, not 0 or 1).\n     * @param {number} x2 - The x component of the end point (end of last SVG command).\n     * @param {number} y2 - The y component of the end point (end of last SVG command).\n     * @returns\n     */\n    endpointToCenterParameters(x1, y1, rx, ry, phi, fa, fs, x2, y2) {\n        // console.log(\"endpointToCenterParameters\", x1, y1, phi, rx, ry, fa, fs, x2, y2);\n        // Thanks to\n        //    https://observablehq.com/@toja/ellipse-and-elliptical-arc-conversion\n        const abs = Math.abs;\n        const sin = Math.sin;\n        const cos = Math.cos;\n        const sqrt = Math.sqrt;\n        const pow = (n) => {\n            return n * n;\n        };\n        const sinphi = sin(phi);\n        const cosphi = cos(phi);\n        // Step 1: simplify through translation/rotation\n        const x = (cosphi * (x1 - x2)) / 2 + (sinphi * (y1 - y2)) / 2;\n        const y = (-sinphi * (x1 - x2)) / 2 + (cosphi * (y1 - y2)) / 2;\n        const px = pow(x), py = pow(y), prx = pow(rx), pry = pow(ry);\n        // correct of out-of-range radii\n        const L = px / prx + py / pry;\n        if (L > 1) {\n            rx = sqrt(L) * abs(rx);\n            ry = sqrt(L) * abs(ry);\n        }\n        else {\n            rx = abs(rx);\n            ry = abs(ry);\n        }\n        // Step 2 + 3: compute center\n        const sign = fa === fs ? -1 : 1;\n        const M = sqrt((prx * pry - prx * py - pry * px) / (prx * py + pry * px)) * sign;\n        const _cx = (M * (rx * y)) / ry;\n        const _cy = (M * (-ry * x)) / rx;\n        const cx = cosphi * _cx - sinphi * _cy + (x1 + x2) / 2;\n        const cy = sinphi * _cx + cosphi * _cy + (y1 + y2) / 2;\n        // Step 4: Compute start and end angle\n        const center = new Vertex(cx, cy);\n        const axis = center.clone().addXY(rx, ry);\n        const ellipse = new VEllipse(center, axis, 0);\n        ellipse.rotate(phi);\n        const startAngle = new Line(ellipse.center, new Vertex(x1, y1)).angle();\n        const endAngle = new Line(ellipse.center, new Vertex(x2, y2)).angle();\n        return new VEllipseSector(ellipse, startAngle - phi, endAngle - phi);\n    }\n}; // END ellipseSectorUtils\n//# sourceMappingURL=VEllipseSector.js.map","/**\n * @author   Ikaros Kappler\n * @date     2018-10-23\n * @modified 2018-11-19 Added multi-select and multi-drag.\n * @modified 2018-12-04 Added basic SVG export.\n * @modified 2018-12-09 Extended the constructor (canvas).\n * @modified 2018-12-18 Added the config.redrawOnResize param.\n * @modified 2018-12-18 Added the config.defaultCanvas{Width,Height} params.\n * @modified 2018-12-19 Added CSS scaling.\n * @modified 2018-12-28 Removed the unused 'drawLabel' param. Added the 'enableMouse' and 'enableKeys' params.\n * @modified 2018-12-29 Added the 'drawOrigin' param.\n * @modified 2018-12-29 Renamed the 'autoCenterOffset' param to 'autoAdjustOffset'. Added the params 'offsetAdjustXPercent' and 'offsetAdjustYPercent'.\n * @modified 2019-01-14 Added params 'drawBezierHandleLines' and 'drawBezierHandlePoints'. Added the 'redraw' praam to the add() function.\n * @modified 2019-01-16 Added params 'drawHandleLines' and 'drawHandlePoints'. Added the new params to the dat.gui interface.\n * @modified 2019-01-30 Added the 'Vector' type (extending the Line class).\n * @modified 2019-01-30 Added the 'PBImage' type (a wrapper for images).\n * @modified 2019-02-02 Added the 'canvasWidthFactor' and 'canvasHeightFactor' params.\n * @modified 2019-02-03 Removed the drawBackgroundImage() function, with had no purpose at all. Just add an image to the drawables-list.\n * @modified 2019-02-06 Vertices (instace of Vertex) can now be added. Added the 'draggable' attribute to the vertex attributes.\n * @modified 2019-02-10 Fixed a draggable-bug in PBImage handling (scaling was not possible).\n * @modified 2019-02-10 Added the 'enableTouch' option (default is true).\n * @modified 2019-02-14 Added the console for debugging (setConsole(object)).\n * @modified 2019-02-19 Added two new constants: DEFAULT_CLICK_TOLERANCE and DEFAULT_TOUCH_TOLERANCE.\n * @modified 2019-02-19 Added the second param to the locatePointNear(Vertex,Number) function.\n * @modified 2019-02-20 Removed the 'loadFile' entry from the GUI as it was experimental and never in use.\n * @modified 2019-02-23 Removed the 'rebuild' function as it had no purpose.\n * @modified 2019-02-23 Added scaling of the click-/touch-tolerance with the CSS scale.\n * @modified 2019-03-23 Added JSDoc tags. Changed the default value of config.drawOrigin to false.\n * @modified 2019-04-03 Fixed the touch-drag position detection for canvas elements that are not located at document position (0,0).\n * @modified 2019-04-03 Tweaked the fit-to-parent function to work with paddings and borders.\n * @modified 2019-04-28 Added the preClear callback param (called before the canvas was cleared on redraw and before any elements are drawn).\n * @modified 2019-09-18 Added basics for WebGL support (strictly experimental).\n * @modified 2019-10-03 Added the .beginDrawCycle call in the redraw function.\n * @modified 2019-11-06 Added fetch.num, fetch.val, fetch.bool, fetch.func functions.\n * @modified 2019-11-13 Fixed an issue with the mouse-sensitive area around vertices (were affected by zoom).\n * @modified 2019-11-13 Added the 'enableMouseWheel' param.\n * @modified 2019-11-18 Added the Triangle class as a regular drawable element.\n * @modified 2019-11-18 The add function now works with arrays, too.\n * @modified 2019-11-18 Added the _handleColor helper function to determine the render color of non-draggable vertices.\n * @modified 2019-11-19 Fixed a bug in the resizeCanvas function; retina resolution was not possible.\n * @modified 2019-12-04 Added relative positioned zooming.\n * @modified 2019-12-04 Added offsetX and offsetY params.\n * @modified 2019-12-04 Added an 'Set to fullsize retina' button to the GUI config.\n * @modified 2019-12-07 Added the drawConfig for lines, polygons, ellipse, triangles, bezier curves and image control lines.\n * @modified 2019-12-08 Fixed a css scale bug in the viewport() function.\n * @modified 2019-12-08 Added the drawconfig UI panel (line colors and line widths).\n * @modified 2020-02-06 Added handling for the end- and end-control-points of non-cirular Bézier paths (was still missing).\n * @modified 2020-02-06 Fixed a drag-amount bug in the move handling of end points of Bezier paths (control points was not properly moved when non circular).\n * @modified 2020-03-28 Ported this class from vanilla-JS to Typescript.\n * @modified 2020-03-29 Fixed the enableSVGExport flag (read enableEport before).\n * @modified 2020-05-09 Included the Cirlcle class.\n * @modified 2020-06-22 Added the rasterScaleX and rasterScaleY config params.\n * @modified 2020-06-03 Fixed the selectedVerticesOnPolyon(Polygon) function: non-selectable vertices were selected too, before.\n * @modified 2020-07-06 Replacing Touchy.js by AlloyFinger.js\n * @modified 2020-07-27 Added the getVertexNear(XYCoords,number) function\n * @modified 2020-07-27 Extended the remove(Drawable) function: vertices are now removed, too.\n * @modified 2020-07-28 Added PlotBoilerplate.revertMousePosition(number,number) –  the inverse function of transformMousePosition(...).\n * @modified 2020-07-31 Added PlotBoilerplate.getDraggedElementCount() to check wether any elements are currently being dragged.\n * @modified 2020-08-19 Added the VertexAttributes.visible attribute to make vertices invisible.\n * @modified 2020-11-17 Added pure click handling (no dragEnd and !wasMoved jiggliny any more) to the PlotBoilerplate.\n * @modified 2020-12-11 Added the `removeAll(boolean)` function.\n * @modified 2020-12-17 Added the `CircleSector` drawable.\n * @modified 2021-01-04 Avoiding multiple redraw call on adding multiple Drawables (array).\n * @modified 2021-01-08 Added param `draw:DraLib<void>` to the methods `drawVertices`, `drawGrid` and `drawSelectPolygon`.\n * @modified 2021-01-08 Added the customizable `drawAll(...)` function.\n * @modified 2021-01-09 Added the `drawDrawable(...)` function.\n * @modified 2021-01-10 Added the `eventCatcher` element (used to track mouse events on SVGs).\n * @modified 2021-01-26 Fixed SVG resizing.\n * @modified 2021-01-26 Replaced the old SVGBuilder by the new `drawutilssvg` library.\n * @modified 2021-02-08 Fixed a lot of es2015 compatibility issues.\n * @modified 2021-02-18 Adding `adjustOffset(boolean)` function.\n * @modified 2021-03-01 Updated the `PlotBoilerplate.draw(...)` function: ellipses are now rotate-able.\n * @modified 2021-03-03 Added the `VEllipseSector` drawable.\n * @modified 2021-03-29 Clearing `currentClassName` and `currentId` after drawing each drawable.\n * @modified 2021-04-25 Extending `remove` to accept arrays of drawables.\n * @modified 2021-11-16 Adding the `PBText` drawable.\n * @version  1.15.0\n *\n * @file PlotBoilerplate\n * @fileoverview The main class.\n * @public\n **/\nvar _a;\nimport AlloyFinger from \"alloyfinger-typescript\";\nimport { drawutils } from \"./draw\";\nimport { drawutilsgl } from \"./drawgl\";\nimport { drawutilssvg } from \"./drawutilssvg\";\nimport { BezierPath } from \"./BezierPath\";\nimport { Bounds } from \"./Bounds\";\nimport { Circle } from \"./Circle\";\nimport { CircleSector } from \"./CircleSector\";\nimport { Grid } from \"./Grid\";\nimport { KeyHandler } from \"./KeyHandler\";\nimport { Line } from \"./Line\";\nimport { MouseHandler } from \"./MouseHandler\";\nimport { PBImage } from \"./PBImage\";\nimport { Polygon } from \"./Polygon\";\nimport { Triangle } from \"./Triangle\";\nimport { VEllipse } from \"./VEllipse\";\nimport { VEllipseSector } from \"./VEllipseSector\";\nimport { Vector } from \"./Vector\";\nimport { Vertex } from \"./Vertex\";\nimport { VertexAttr } from \"./VertexAttr\";\nimport { PBText } from \"./PBText\";\n/**\n * @classdesc The main class of the PlotBoilerplate.\n *\n * @requires Vertex\n * @requires Line\n * @requires Vector\n * @requires Polygon\n * @requires PBImage\n * @requires VEllipse\n * @requires Circle\n * @requires MouseHandler\n * @requires KeyHandler\n * @requires VertexAttr\n * @requires CubicBezierCurve\n * @requires BezierPath\n * @requires Drawable\n * @requires DrawConfig\n * @requires IHooks\n * @requires PBParams\n * @requires Triangle\n * @requires drawutils\n * @requires drawutilsgl\n * @requires SVGSerializable\n * @requires XYCoords\n * @requires XYDimension\n */\nexport class PlotBoilerplate {\n    /**\n     * The constructor.\n     *\n     * @constructor\n     * @name PlotBoilerplate\n     * @public\n     * @param {object} config={} - The configuration.\n     * @param {HTMLCanvasElement} config.canvas - Your canvas element in the DOM (required).\n     * @param {boolean=} [config.fullSize=true] - If set to true the canvas will gain full window size.\n     * @param {boolean=} [config.fitToParent=true] - If set to true the canvas will gain the size of its parent container (overrides fullSize).\n     * @param {number=}  [config.scaleX=1.0] - The initial x-zoom. Default is 1.0.\n     * @param {number=}  [config.scaleY=1.0] - The initial y-zoom. Default is 1.0.\n     * @param {number=}  [config.offsetX=1.0] - The initial x-offset. Default is 0.0. Note that autoAdjustOffset=true overrides these values.\n     * @param {number=}  [config.offsetY=1.0] - The initial y-offset. Default is 0.0. Note that autoAdjustOffset=true overrides these values.\n     * @param {boolean=} [config.rasterGrid=true] - If set to true the background grid will be drawn rastered.\n     * @param {boolean=} [config.rasterScaleX=1.0] - Define the default horizontal raster scale (default=1.0).\n     * @param {boolean=} [config.rasterScaleY=1.0] - Define the default vertical raster scale (default=1.0).\n     * @param {number=}  [config.rasterAdjustFactor=1.0] - The exponential limit for wrapping down the grid. (2.0 means: halve the grid each 2.0*n zoom step).\n     * @param {boolean=} [config.drawOrigin=false] - Draw a crosshair at (0,0).\n     * @param {boolean=} [config.autoAdjustOffset=true] -  When set to true then the origin of the XY plane will\n     *                         be re-adjusted automatically (see the params\n     *                         offsetAdjust{X,Y}Percent for more).\n     * @param {number=}  [config.offsetAdjustXPercent=50] - The x-fallback position for the origin after\n     *                         resizing the canvas.\n     * @param {number=}  [config.offsetAdjustYPercent=50] - The y-fallback position for the origin after\n     *                         resizing the canvas.\n     * @param {number=}  [config.defaultCanvasWidth=1024] - The canvas size fallback (width) if no automatic resizing\n     *                         is switched on.\n     * @param {number=}  [config.defaultCanvasHeight=768] - The canvas size fallback (height) if no automatic resizing\n     *                         is switched on.\n     * @param {number=}  [config.canvasWidthFactor=1.0] - Scaling factor (width) upon the canvas size.\n     *                         In combination with cssScale{X,Y} this can be used to obtain\n     *                         sub pixel resolutions for retina displays.\n     * @param {number=}  [config.canvasHeightFactor=1.0] - Scaling factor (height) upon the canvas size.\n     *                         In combination with cssScale{X,Y} this can be used to obtain\n     *                         sub pixel resolutions for retina displays.\n     * @param {number=}  [config.cssScaleX=1.0] - Visually resize the canvas (horizontally) using CSS transforms (scale).\n     * @param {number=}  [config.cssScaleY=1.0] - Visually resize the canvas (vertically) using CSS transforms (scale).\n     * @param {boolan=}  [config.cssUniformScale=true] - CSS scale x and y obtaining aspect ratio.\n     * @param {boolean=} [config.autoDetectRetina=true] - When set to true (default) the canvas will try to use the display's pixel ratio.\n     * @param {string=}  [config.backgroundColor=#ffffff] - The backround color.\n     * @param {boolean=} [config.redrawOnResize=true] - Switch auto-redrawing on resize on/off (some applications\n     *                         might want to prevent automatic redrawing to avoid data loss from the draw buffer).\n     * @param {boolean=} [config.drawBezierHandleLines=true] - Indicates if Bézier curve handles should be drawn (used for\n     *                         editors, no required in pure visualizations).\n     * @param {boolean=} [config.drawBezierHandlePoints=true] - Indicates if Bézier curve handle points should be drawn.\n     * @param {function=} [config.preClear=null] - A callback function that will be triggered just before the\n     *                         draw function clears the canvas (before anything else was drawn).\n     * @param {function=} [config.preDraw=null] - A callback function that will be triggered just before the draw\n     *                         function starts.\n     * @param {function=} [config.postDraw=null] - A callback function that will be triggered right after the drawing\n     *                         process finished.\n     * @param {boolean=} [config.enableMouse=true] - Indicates if the application should handle mouse events for you.\n     * @param {boolean=} [config.enableTouch=true] - Indicates if the application should handle touch events for you.\n     * @param {boolean=} [config.enableKeys=true] - Indicates if the application should handle key events for you.\n     * @param {boolean=} [config.enableMouseWheel=true] - Indicates if the application should handle mouse wheel events for you.\n     * @param {boolean=} [config.enableGL=false] - Indicates if the application should use the experimental WebGL features (not recommended).\n     * @param {boolean=} [config.enableSVGExport=true] - Indicates if the SVG export should be enabled (default is true).\n     *                                                   Note that changes from the postDraw hook might not be visible in the export.\n     */\n    constructor(config) {\n        /**\n         * A discrete timestamp to identify single render cycles.\n         * Note that using system time milliseconds is not a safe way to identify render frames, as on modern powerful machines\n         * multiple frames might be rendered within each millisecond.\n         * @member {number}\n         * @memberof plotboilerplate\n         * @instance\n         * @private\n         */\n        this.renderTime = 0;\n        // This should be in some static block ...\n        VertexAttr.model = {\n            bezierAutoAdjust: false,\n            renderTime: 0,\n            selectable: true,\n            isSelected: false,\n            draggable: true,\n            visible: true\n        };\n        if (typeof config.canvas == \"undefined\") {\n            throw \"No canvas specified.\";\n        }\n        /**\n         * A global config that's attached to the dat.gui control interface.\n         *\n         * @member {Object}\n         * @memberof PlotBoilerplate\n         * @instance\n         */\n        const f = PlotBoilerplate.utils.fetch;\n        this.config = {\n            canvas: config.canvas,\n            fullSize: f.val(config, \"fullSize\", true),\n            fitToParent: f.bool(config, \"fitToParent\", true),\n            scaleX: f.num(config, \"scaleX\", 1.0),\n            scaleY: f.num(config, \"scaleY\", 1.0),\n            offsetX: f.num(config, \"offsetX\", 0.0),\n            offsetY: f.num(config, \"offsetY\", 0.0),\n            rasterGrid: f.bool(config, \"rasterGrid\", true),\n            rasterScaleX: f.num(config, \"rasterScaleX\", 1.0),\n            rasterScaleY: f.num(config, \"rasterScaleY\", 1.0),\n            rasterAdjustFactor: f.num(config, \"rasterAdjustdFactror\", 2.0),\n            drawOrigin: f.bool(config, \"drawOrigin\", false),\n            autoAdjustOffset: f.val(config, \"autoAdjustOffset\", true),\n            offsetAdjustXPercent: f.num(config, \"offsetAdjustXPercent\", 50),\n            offsetAdjustYPercent: f.num(config, \"offsetAdjustYPercent\", 50),\n            backgroundColor: config.backgroundColor || \"#ffffff\",\n            redrawOnResize: f.bool(config, \"redrawOnResize\", true),\n            defaultCanvasWidth: f.num(config, \"defaultCanvasWidth\", PlotBoilerplate.DEFAULT_CANVAS_WIDTH),\n            defaultCanvasHeight: f.num(config, \"defaultCanvasHeight\", PlotBoilerplate.DEFAULT_CANVAS_HEIGHT),\n            canvasWidthFactor: f.num(config, \"canvasWidthFactor\", 1.0),\n            canvasHeightFactor: f.num(config, \"canvasHeightFactor\", 1.0),\n            cssScaleX: f.num(config, \"cssScaleX\", 1.0),\n            cssScaleY: f.num(config, \"cssScaleY\", 1.0),\n            cssUniformScale: f.bool(config, \"cssUniformScale\", true),\n            saveFile: () => {\n                _self.hooks.saveFile(_self);\n            },\n            setToRetina: () => {\n                _self._setToRetina();\n            },\n            autoDetectRetina: f.bool(config, \"autoDetectRetina\", true),\n            enableSVGExport: f.bool(config, \"enableSVGExport\", true),\n            // Listeners/observers\n            preClear: f.func(config, \"preClear\", null),\n            preDraw: f.func(config, \"preDraw\", null),\n            postDraw: f.func(config, \"postDraw\", null),\n            // Interaction\n            enableMouse: f.bool(config, \"enableMouse\", true),\n            enableTouch: f.bool(config, \"enableTouch\", true),\n            enableKeys: f.bool(config, \"enableKeys\", true),\n            enableMouseWheel: f.bool(config, \"enableMouseWheel\", true),\n            // Experimental (and unfinished)\n            enableGL: f.bool(config, \"enableGL\", false)\n        }; // END confog\n        /**\n         * Configuration for drawing things.\n         *\n         * @member {Object}\n         * @memberof PlotBoilerplate\n         * @instance\n         */\n        this.drawConfig = {\n            drawVertices: true,\n            drawBezierHandleLines: f.bool(config, \"drawBezierHandleLines\", true),\n            drawBezierHandlePoints: f.bool(config, \"drawBezierHandlePoints\", true),\n            drawHandleLines: f.bool(config, \"drawHandleLines\", true),\n            drawHandlePoints: f.bool(config, \"drawHandlePoints\", true),\n            drawGrid: f.bool(config, \"drawGrid\", true),\n            bezier: {\n                color: \"#00a822\",\n                lineWidth: 2,\n                handleLine: {\n                    color: \"rgba(180,180,180,0.5)\",\n                    lineWidth: 1\n                },\n                pathVertex: {\n                    color: \"#B400FF\",\n                    lineWidth: 1,\n                    fill: true\n                },\n                controlVertex: {\n                    color: \"#B8D438\",\n                    lineWidth: 1,\n                    fill: true\n                }\n            },\n            polygon: {\n                color: \"#0022a8\",\n                lineWidth: 1\n            },\n            triangle: {\n                color: \"#6600ff\",\n                lineWidth: 1\n            },\n            ellipse: {\n                color: \"#2222a8\",\n                lineWidth: 1\n            },\n            ellipseSector: {\n                color: \"#a822a8\",\n                lineWidth: 2\n            },\n            circle: {\n                color: \"#22a8a8\",\n                lineWidth: 2\n            },\n            circleSector: {\n                color: \"#2280a8\",\n                lineWidth: 1\n            },\n            vertex: {\n                color: \"#a8a8a8\",\n                lineWidth: 1\n            },\n            selectedVertex: {\n                color: \"#c08000\",\n                lineWidth: 2\n            },\n            line: {\n                color: \"#a844a8\",\n                lineWidth: 1\n            },\n            vector: {\n                color: \"#ff44a8\",\n                lineWidth: 1\n            },\n            image: {\n                color: \"#a8a8a8\",\n                lineWidth: 1\n            },\n            text: {\n                color: \"rgba(192,0,128,0.5)\",\n                lineWidth: 1,\n                fill: true,\n                anchor: true\n            }\n        }; // END drawConfig\n        // +---------------------------------------------------------------------------------\n        // | Object members.\n        // +-------------------------------\n        this.grid = new Grid(new Vertex(0, 0), new Vertex(50, 50));\n        this.canvasSize = { width: PlotBoilerplate.DEFAULT_CANVAS_WIDTH, height: PlotBoilerplate.DEFAULT_CANVAS_HEIGHT };\n        const canvasElement = typeof config.canvas == \"string\" ? document.querySelector(config.canvas) : config.canvas;\n        // Which renderer to use: Canvas2D, WebGL (experimental) or SVG?\n        if (canvasElement.tagName.toLowerCase() === \"canvas\") {\n            this.canvas = canvasElement;\n            this.eventCatcher = this.canvas;\n            if (this.config.enableGL && typeof drawutilsgl === \"undefined\") {\n                console.warn(`Cannot use webgl. Package was compiled without experimental gl support. Please use plotboilerplate-glsupport.min.js instead.`);\n                console.warn(`Disabling GL and falling back to Canvas2D.`);\n                this.config.enableGL = false;\n            }\n            if (this.config.enableGL) {\n                const ctx = this.canvas.getContext(\"webgl\"); // webgl-experimental?\n                this.draw = new drawutilsgl(ctx, false);\n                // PROBLEM: same instance of fill and draw when using WebGL.\n                //          Shader program cannot be duplicated on the same context.\n                this.fill = this.draw.copyInstance(true);\n                console.warn(\"Initialized with experimental mode enableGL=true. Note that this is not yet fully implemented.\");\n            }\n            else {\n                const ctx = this.canvas.getContext(\"2d\");\n                this.draw = new drawutils(ctx, false);\n                this.fill = new drawutils(ctx, true);\n            }\n        }\n        else if (canvasElement.tagName.toLowerCase() === \"svg\") {\n            if (typeof drawutilssvg === \"undefined\")\n                throw `The svg draw library is not yet integrated part of PlotBoilerplate. Please include ./src/js/utils/helpers/drawutils.svg into your document.`;\n            this.canvas = canvasElement;\n            this.draw = new drawutilssvg(this.canvas, new Vertex(), // offset\n            new Vertex(), // scale\n            this.canvasSize, false, // fillShapes=false\n            this.drawConfig, false // isSecondary=false\n            );\n            this.fill = this.draw.copyInstance(true); // fillShapes=true\n            if (this.canvas.parentElement) {\n                this.eventCatcher = document.createElement(\"div\");\n                this.eventCatcher.style.position = \"absolute\";\n                this.eventCatcher.style.left = \"0\";\n                this.eventCatcher.style.top = \"0\";\n                this.eventCatcher.style.cursor = \"pointer\";\n                this.canvas.parentElement.style.position = \"relative\";\n                this.canvas.parentElement.appendChild(this.eventCatcher);\n            }\n            else {\n                this.eventCatcher = document.body;\n            }\n        }\n        else {\n            throw \"Element is neither a canvas nor an svg element.\";\n        }\n        this.draw.scale.set(this.config.scaleX, this.config.scaleY);\n        this.fill.scale.set(this.config.scaleX, this.config.scaleY);\n        this.vertices = [];\n        this.selectPolygon = null;\n        this.draggedElements = [];\n        this.drawables = [];\n        this.console = console;\n        this.hooks = {\n            // This is changable from the outside\n            saveFile: PlotBoilerplate._saveFile\n        };\n        var _self = this;\n        globalThis.addEventListener(\"resize\", () => _self.resizeCanvas());\n        this.resizeCanvas();\n        if (config.autoDetectRetina) {\n            this._setToRetina();\n        }\n        this.installInputListeners();\n        // Apply the configured CSS scale.\n        this.updateCSSscale();\n        // Init\n        this.redraw();\n        // Gain focus\n        this.canvas.focus();\n    } // END constructor\n    /**\n     * This function opens a save-as file dialog and – once an output file is\n     * selected – stores the current canvas contents as an SVG image.\n     *\n     * It is the default hook for saving files and can be overwritten.\n     *\n     * @method _saveFile\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     * @private\n     **/\n    static _saveFile(pb) {\n        // Create fake SVG node\n        const svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        // Draw everything to fake node.\n        var tosvgDraw = new drawutilssvg(svgNode, pb.draw.offset, pb.draw.scale, pb.canvasSize, false, // fillShapes=false\n        pb.drawConfig);\n        var tosvgFill = tosvgDraw.copyInstance(true); // fillShapes=true\n        tosvgDraw.beginDrawCycle(0);\n        tosvgFill.beginDrawCycle(0);\n        if (pb.config.preClear)\n            pb.config.preClear();\n        tosvgDraw.clear(pb.config.backgroundColor);\n        if (pb.config.preDraw)\n            pb.config.preDraw(tosvgDraw, tosvgFill);\n        pb.drawAll(0, tosvgDraw, tosvgFill);\n        pb.drawVertices(0, tosvgDraw);\n        if (pb.config.postDraw)\n            pb.config.postDraw(tosvgDraw, tosvgFill);\n        tosvgDraw.endDrawCycle(0);\n        tosvgFill.endDrawCycle(0);\n        // Full support in all browsers \\o/\n        //    https://caniuse.com/xml-serializer\n        var serializer = new XMLSerializer();\n        var svgCode = serializer.serializeToString(svgNode);\n        var blob = new Blob([svgCode], { type: \"image/svg;charset=utf-8\" });\n        // See documentation for FileSaver.js for usage.\n        //    https://github.com/eligrey/FileSaver.js\n        if (typeof globalThis[\"saveAs\"] != \"function\")\n            throw \"Cannot save file; did you load the ./utils/savefile helper function and the eligrey/SaveFile library?\";\n        var _saveAs = globalThis[\"saveAs\"];\n        _saveAs(blob, \"plotboilerplate.svg\");\n    }\n    /**\n     * This function sets the canvas resolution to factor 2.0 (or the preferred pixel ratio of your device) for retina displays.\n     * Please not that in non-GL mode this might result in very slow rendering as the canvas buffer size may increase.\n     *\n     * @method _setToRetina\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     * @private\n     **/\n    _setToRetina() {\n        this.config.autoDetectRetina = true;\n        const pixelRatio = globalThis.devicePixelRatio || 1;\n        this.config.cssScaleX = this.config.cssScaleY = 1.0 / pixelRatio;\n        this.config.canvasWidthFactor = this.config.canvasHeightFactor = pixelRatio;\n        this.resizeCanvas();\n        this.updateCSSscale();\n    }\n    /**\n     * Set the current zoom and draw offset to fit the given bounds.\n     *\n     * This method currently restores the aspect zoom ratio.\n     *\n     **/\n    fitToView(bounds) {\n        const canvasCenter = new Vertex(this.canvasSize.width / 2.0, this.canvasSize.height / 2.0);\n        const canvasRatio = this.canvasSize.width / this.canvasSize.height;\n        const ratio = bounds.width / bounds.height;\n        // Find the new draw offset\n        const center = new Vertex(bounds.max.x - bounds.width / 2.0, bounds.max.y - bounds.height / 2.0)\n            .inv()\n            .addXY(this.canvasSize.width / 2.0, this.canvasSize.height / 2.0);\n        this.setOffset(center);\n        if (canvasRatio < ratio) {\n            const newUniformZoom = this.canvasSize.width / bounds.width;\n            this.setZoom(newUniformZoom, newUniformZoom, canvasCenter);\n        }\n        else {\n            const newUniformZoom = this.canvasSize.height / bounds.height;\n            this.setZoom(newUniformZoom, newUniformZoom, canvasCenter);\n        }\n        this.redraw();\n    }\n    /**\n     * Set the console for this instance.\n     *\n     * @method setConsole\n     * @param {Console} con - The new console object (default is globalThis.console).\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    setConsole(con) {\n        this.console = con;\n    }\n    /**\n     * Update the CSS scale for the canvas depending onf the cssScale{X,Y} settings.<br>\n     * <br>\n     * This function is usually only used inernally.\n     *\n     * @method updateCSSscale\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     * @private\n     **/\n    updateCSSscale() {\n        if (this.config.cssUniformScale) {\n            PlotBoilerplate.utils.setCSSscale(this.canvas, this.config.cssScaleX, this.config.cssScaleX);\n        }\n        else {\n            PlotBoilerplate.utils.setCSSscale(this.canvas, this.config.cssScaleX, this.config.cssScaleY);\n        }\n    }\n    /**\n     * Add a drawable object.<br>\n     * <br>\n     * This must be either:<br>\n     * <pre>\n     *  * a Vertex\n     *  * a Line\n     *  * a Vector\n     *  * a VEllipse\n     *  * a VEllipseSector\n     *  * a Circle\n     *  * a Polygon\n     *  * a Triangle\n     *  * a BezierPath\n     *  * a BPImage\n     * </pre>\n     *\n     * @param {Drawable|Drawable[]} drawable - The drawable (of one of the allowed class instance) to add.\n     * @param {boolean} [redraw=true] - If true the function will trigger redraw after the drawable(s) was/were added.\n     * @method add\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    add(drawable, redraw) {\n        if (Array.isArray(drawable)) {\n            const arr = drawable;\n            // for( var i in arr )\n            for (var i = 0; i < arr.length; i++) {\n                this.add(arr[i], false);\n            }\n        }\n        else if (drawable instanceof Vertex) {\n            this.drawables.push(drawable);\n            this.vertices.push(drawable);\n        }\n        else if (drawable instanceof Line) {\n            // Add some lines\n            this.drawables.push(drawable);\n            this.vertices.push(drawable.a);\n            this.vertices.push(drawable.b);\n        }\n        else if (drawable instanceof Vector) {\n            this.drawables.push(drawable);\n            this.vertices.push(drawable.a);\n            this.vertices.push(drawable.b);\n        }\n        else if (drawable instanceof VEllipse) {\n            this.vertices.push(drawable.center);\n            this.vertices.push(drawable.axis);\n            this.drawables.push(drawable);\n            drawable.center.listeners.addDragListener((event) => {\n                drawable.axis.add(event.params.dragAmount);\n            });\n        }\n        else if (drawable instanceof VEllipseSector) {\n            this.vertices.push(drawable.ellipse.center);\n            this.vertices.push(drawable.ellipse.axis);\n            this.drawables.push(drawable);\n            drawable.ellipse.center.listeners.addDragListener((event) => {\n                drawable.ellipse.axis.add(event.params.dragAmount);\n            });\n        }\n        else if (drawable instanceof Circle) {\n            this.vertices.push(drawable.center);\n            this.drawables.push(drawable);\n        }\n        else if (drawable instanceof CircleSector) {\n            this.vertices.push(drawable.circle.center);\n            this.drawables.push(drawable);\n        }\n        else if (drawable instanceof Polygon) {\n            this.drawables.push(drawable);\n            // for( var i in drawable.vertices )\n            for (var i = 0; i < drawable.vertices.length; i++)\n                this.vertices.push(drawable.vertices[i]);\n        }\n        else if (drawable instanceof Triangle) {\n            this.drawables.push(drawable);\n            this.vertices.push(drawable.a);\n            this.vertices.push(drawable.b);\n            this.vertices.push(drawable.c);\n        }\n        else if (drawable instanceof BezierPath) {\n            this.drawables.push(drawable);\n            const bezierPath = drawable;\n            for (var i = 0; i < bezierPath.bezierCurves.length; i++) {\n                if (!drawable.adjustCircular && i == 0)\n                    this.vertices.push(bezierPath.bezierCurves[i].startPoint);\n                this.vertices.push(bezierPath.bezierCurves[i].endPoint);\n                this.vertices.push(bezierPath.bezierCurves[i].startControlPoint);\n                this.vertices.push(bezierPath.bezierCurves[i].endControlPoint);\n                bezierPath.bezierCurves[i].startControlPoint.attr.selectable = false;\n                bezierPath.bezierCurves[i].endControlPoint.attr.selectable = false;\n            }\n            PlotBoilerplate.utils.enableBezierPathAutoAdjust(drawable);\n        }\n        else if (drawable instanceof PBImage) {\n            this.vertices.push(drawable.upperLeft);\n            this.vertices.push(drawable.lowerRight);\n            this.drawables.push(drawable);\n            // Todo: think about a IDragEvent interface\n            drawable.upperLeft.listeners.addDragListener((e) => {\n                drawable.lowerRight.add(e.params.dragAmount);\n            });\n            drawable.lowerRight.attr.selectable = false;\n        }\n        else if (drawable instanceof PBText) {\n            this.vertices.push(drawable.anchor);\n            this.drawables.push(drawable);\n            drawable.anchor.attr.selectable = false;\n        }\n        else {\n            throw \"Cannot add drawable of unrecognized type: \" + typeof drawable + \".\";\n        }\n        // This is a workaround for backwards compatibility when the 'redraw' param was not yet present.\n        if (redraw || typeof redraw == \"undefined\")\n            this.redraw();\n    }\n    /**\n     * Remove a drawable object.<br>\n     * <br>\n     * This must be either:<br>\n     * <pre>\n     *  * a Vertex\n     *  * a Line\n     *  * a Vector\n     *  * a VEllipse\n     *  * a Circle\n     *  * a Polygon\n     *  * a BezierPath\n     *  * a BPImage\n     *  * a Triangle\n     * </pre>\n     *\n     * @param {Drawable|Array<Drawable>} drawable - The drawable (of one of the allowed class instance) to remove.\n     * @param {boolean} [redraw=false]\n     * @method remove\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    remove(drawable, redraw, removeWithVertices) {\n        if (Array.isArray(drawable)) {\n            for (var i = 0; i < drawable.length; i++) {\n                this.remove(drawable[i], false, removeWithVertices);\n            }\n            if (redraw) {\n                this.redraw();\n            }\n            return;\n        }\n        if (drawable instanceof Vertex) {\n            this.removeVertex(drawable, false);\n            if (redraw) {\n                this.redraw();\n            }\n        }\n        for (var i = 0; i < this.drawables.length; i++) {\n            if (this.drawables[i] === drawable) {\n                this.drawables.splice(i, 1);\n                if (removeWithVertices) {\n                    // Check if some listeners need to be removed\n                    if (drawable instanceof Line) {\n                        // Add some lines\n                        this.removeVertex(drawable.a, false);\n                        this.removeVertex(drawable.b, false);\n                    }\n                    else if (drawable instanceof Vector) {\n                        this.removeVertex(drawable.a, false);\n                        this.removeVertex(drawable.b, false);\n                    }\n                    else if (drawable instanceof VEllipse) {\n                        this.removeVertex(drawable.center, false);\n                        this.removeVertex(drawable.axis, false);\n                    }\n                    else if (drawable instanceof VEllipseSector) {\n                        this.removeVertex(drawable.ellipse.center);\n                        this.removeVertex(drawable.ellipse.axis);\n                    }\n                    else if (drawable instanceof Circle) {\n                        this.removeVertex(drawable.center, false);\n                    }\n                    else if (drawable instanceof CircleSector) {\n                        this.removeVertex(drawable.circle.center, false);\n                    }\n                    else if (drawable instanceof Polygon) {\n                        // for( var i in drawable.vertices )\n                        for (var i = 0; i < drawable.vertices.length; i++)\n                            this.removeVertex(drawable.vertices[i], false);\n                    }\n                    else if (drawable instanceof Triangle) {\n                        this.removeVertex(drawable.a, false);\n                        this.removeVertex(drawable.b, false);\n                        this.removeVertex(drawable.c, false);\n                    }\n                    else if (drawable instanceof BezierPath) {\n                        for (var i = 0; i < drawable.bezierCurves.length; i++) {\n                            this.removeVertex(drawable.bezierCurves[i].startPoint, false);\n                            this.removeVertex(drawable.bezierCurves[i].startControlPoint, false);\n                            this.removeVertex(drawable.bezierCurves[i].endControlPoint, false);\n                            if (i + 1 == drawable.bezierCurves.length) {\n                                this.removeVertex(drawable.bezierCurves[i].endPoint, false);\n                            }\n                        }\n                    }\n                    else if (drawable instanceof PBImage) {\n                        this.removeVertex(drawable.upperLeft, false);\n                        this.removeVertex(drawable.lowerRight, false);\n                    }\n                    else if (drawable instanceof PBText) {\n                        this.removeVertex(drawable.anchor, false);\n                    }\n                } // END removeWithVertices\n                if (redraw) {\n                    this.redraw();\n                }\n            }\n        }\n    }\n    /**\n     * Remove a vertex from the vertex list.<br>\n     *\n     * @param {Vertex} vert - The vertex to remove.\n     * @param {boolean} [redraw=false]\n     * @method removeVertex\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    removeVertex(vert, redraw) {\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i] === vert) {\n                this.vertices.splice(i, 1);\n                if (redraw)\n                    this.redraw();\n                return;\n            }\n        }\n    }\n    /**\n     * Remove all elements.\n     *\n     * If you want to keep the vertices, pass `true`.\n     *\n     * @method removeAll\n     * @param {boolean=false} keepVertices\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     */\n    removeAll(keepVertices) {\n        this.drawables = [];\n        if (!Boolean(keepVertices)) {\n            this.vertices = [];\n        }\n        this.redraw();\n    }\n    /**\n     * Find the vertex near the given position.\n     *\n     * The position is the absolute vertex position, not the x-y-coordinates on the canvas.\n     *\n     * @param {XYCoords} position - The position of the vertex to search for.\n     * @param {number} pixelTolerance - A radius around the position to include into the search.\n     *                                  Note that the tolerance will be scaled up/down when zoomed.\n     * @return The vertex near the given position or undefined if none was found there.\n     **/\n    getVertexNear(pixelPosition, pixelTolerance) {\n        var p = this.locatePointNear(this.transformMousePosition(pixelPosition.x, pixelPosition.y), pixelTolerance / Math.min(this.config.cssScaleX, this.config.cssScaleY));\n        if (p && p.typeName == \"vertex\")\n            return this.vertices[p.vindex];\n        return undefined;\n    }\n    /**\n     * Draw the grid with the current config settings.<br>\n     *\n     * This function is usually only used internally.\n     *\n     * @method drawGrid\n     * @param {DrawLib} draw - The drawing library to use to draw lines.\n     * @private\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    drawGrid(draw) {\n        if (typeof draw === \"undefined\") {\n            draw = this.draw;\n        }\n        const gScale = {\n            x: (Grid.utils.mapRasterScale(this.config.rasterAdjustFactor, this.draw.scale.x) * this.config.rasterScaleX) /\n                this.config.cssScaleX,\n            y: (Grid.utils.mapRasterScale(this.config.rasterAdjustFactor, this.draw.scale.y) * this.config.rasterScaleY) /\n                this.config.cssScaleY\n        };\n        var gSize = { width: this.grid.size.x * gScale.x, height: this.grid.size.y * gScale.y };\n        var cs = { width: this.canvasSize.width / 2, height: this.canvasSize.height / 2 };\n        var offset = this.draw.offset.clone().inv();\n        // console.log( \"drawGrid\", gScale, gSize, cs, offset );\n        offset.x =\n            ((Math.round(offset.x + cs.width) / Math.round(gSize.width)) * gSize.width) / this.draw.scale.x +\n                (((this.draw.offset.x - cs.width) / this.draw.scale.x) % gSize.width);\n        offset.y =\n            ((Math.round(offset.y + cs.height) / Math.round(gSize.height)) * gSize.height) / this.draw.scale.y +\n                (((this.draw.offset.y - cs.height) / this.draw.scale.x) % gSize.height);\n        if (this.drawConfig.drawGrid) {\n            draw.setCurrentClassName(null);\n            if (this.config.rasterGrid) {\n                // TODO: move config member to drawConfig\n                draw.setCurrentId(\"raster\");\n                draw.raster(offset, this.canvasSize.width / this.draw.scale.x, this.canvasSize.height / this.draw.scale.y, gSize.width, gSize.height, \"rgba(0,128,255,0.125)\");\n            }\n            else {\n                draw.setCurrentId(\"grid\");\n                draw.grid(offset, this.canvasSize.width / this.draw.scale.x, this.canvasSize.height / this.draw.scale.y, gSize.width, gSize.height, \"rgba(0,128,255,0.095)\");\n            }\n        }\n    }\n    /**\n     * Draw the origin with the current config settings.<br>\n     *\n     * This function is usually only used internally.\n     *\n     * @method drawOrigin\n     * @param {DrawLib} draw - The drawing library to use to draw lines.\n     * @private\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    drawOrigin(draw) {\n        // Add a crosshair to mark the origin\n        draw.setCurrentId(\"origin\");\n        draw.crosshair({ x: 0, y: 0 }, 10, \"#000000\");\n    }\n    /**\n     * This is just a tiny helper function to determine the render color of vertices.\n     **/\n    _handleColor(h, color) {\n        return h.attr.isSelected ? this.drawConfig.selectedVertex.color : h.attr.draggable ? color : \"rgba(128,128,128,0.5)\";\n    }\n    /**\n     * Draw all drawables.\n     *\n     * This function is usually only used internally.\n     *\n     * @method drawDrawables\n     * @param {number} renderTime - The current render time. It will be used to distinct\n     *                              already draw vertices from non-draw-yet vertices.\n     * @param {DrawLib} draw - The drawing library to use to draw lines.\n     * @param {DrawLib} fill - The drawing library to use to fill areas.\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    drawDrawables(renderTime, draw, fill) {\n        for (var i in this.drawables) {\n            var d = this.drawables[i];\n            this.draw.setCurrentId(d.uid);\n            this.fill.setCurrentId(d.uid);\n            this.draw.setCurrentClassName(d.className);\n            this.draw.setCurrentClassName(d.className);\n            this.drawDrawable(d, renderTime, draw, fill);\n        }\n    }\n    /**\n     * Draw the given drawable.\n     *\n     * This function is usually only used internally.\n     *\n     * @method drawDrawable\n     * @param {Drawable} d - The drawable to draw.\n     * @param {number} renderTime - The current render time. It will be used to distinct\n     *                              already draw vertices from non-draw-yet vertices.\n     * @param {DrawLib} draw - The drawing library to use to draw lines.\n     * @param {DrawLib} fill - The drawing library to use to fill areas.\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    drawDrawable(d, renderTime, draw, fill) {\n        if (d instanceof BezierPath) {\n            for (var c in d.bezierCurves) {\n                draw.cubicBezier(d.bezierCurves[c].startPoint, d.bezierCurves[c].endPoint, d.bezierCurves[c].startControlPoint, d.bezierCurves[c].endControlPoint, this.drawConfig.bezier.color, this.drawConfig.bezier.lineWidth);\n                if (this.drawConfig.drawBezierHandlePoints && this.drawConfig.drawHandlePoints) {\n                    if (d.bezierCurves[c].startPoint.attr.visible) {\n                        const df = this.drawConfig.bezier.pathVertex.fill ? fill : draw;\n                        df.setCurrentId(`${d.uid}_h0`);\n                        df.setCurrentClassName(`${d.className}-start-handle`);\n                        if (d.bezierCurves[c].startPoint.attr.bezierAutoAdjust) {\n                            df.squareHandle(d.bezierCurves[c].startPoint, 5, this._handleColor(d.bezierCurves[c].startPoint, this.drawConfig.bezier.pathVertex.color));\n                        }\n                        else {\n                            df.diamondHandle(d.bezierCurves[c].startPoint, 7, this._handleColor(d.bezierCurves[c].startPoint, this.drawConfig.bezier.pathVertex.color));\n                        }\n                    }\n                    d.bezierCurves[c].startPoint.attr.renderTime = renderTime;\n                    if (d.bezierCurves[c].endPoint.attr.visible) {\n                        const df = this.drawConfig.bezier.pathVertex.fill ? fill : draw;\n                        df.setCurrentId(`${d.uid}_h0`);\n                        df.setCurrentClassName(`${d.className}-start-handle`);\n                        if (d.bezierCurves[c].endPoint.attr.bezierAutoAdjust) {\n                            df.squareHandle(d.bezierCurves[c].endPoint, 5, this._handleColor(d.bezierCurves[c].endPoint, this.drawConfig.bezier.pathVertex.color));\n                        }\n                        else {\n                            df.diamondHandle(d.bezierCurves[c].endPoint, 7, this._handleColor(d.bezierCurves[c].endPoint, this.drawConfig.bezier.pathVertex.color));\n                        }\n                    }\n                    if (d.bezierCurves[c].startControlPoint.attr.visible) {\n                        const df = this.drawConfig.bezier.controlVertex.fill ? fill : draw;\n                        df.setCurrentId(`${d.uid}_h2`);\n                        df.setCurrentClassName(`${d.className}-start-control-handle`);\n                        df.circleHandle(d.bezierCurves[c].startControlPoint, 3, this._handleColor(d.bezierCurves[c].startControlPoint, this.drawConfig.bezier.controlVertex.color));\n                    }\n                    if (d.bezierCurves[c].endControlPoint.attr.visible) {\n                        const df = this.drawConfig.bezier.controlVertex.fill ? fill : draw;\n                        df.setCurrentId(`${d.uid}_h3`);\n                        df.setCurrentClassName(`${d.className}-end-control-handle`);\n                        df.circleHandle(d.bezierCurves[c].endControlPoint, 3, this._handleColor(d.bezierCurves[c].endControlPoint, this.drawConfig.bezier.controlVertex.color));\n                    }\n                    d.bezierCurves[c].startPoint.attr.renderTime = renderTime;\n                    d.bezierCurves[c].endPoint.attr.renderTime = renderTime;\n                    d.bezierCurves[c].startControlPoint.attr.renderTime = renderTime;\n                    d.bezierCurves[c].endControlPoint.attr.renderTime = renderTime;\n                }\n                else {\n                    d.bezierCurves[c].startPoint.attr.renderTime = renderTime;\n                    d.bezierCurves[c].endPoint.attr.renderTime = renderTime;\n                    d.bezierCurves[c].startControlPoint.attr.renderTime = renderTime;\n                    d.bezierCurves[c].endControlPoint.attr.renderTime = renderTime;\n                }\n                if (this.drawConfig.drawBezierHandleLines && this.drawConfig.drawHandleLines) {\n                    draw.setCurrentId(`${d.uid}_l0`);\n                    draw.setCurrentClassName(`${d.className}-start-line`);\n                    draw.line(d.bezierCurves[c].startPoint, d.bezierCurves[c].startControlPoint, this.drawConfig.bezier.handleLine.color, this.drawConfig.bezier.handleLine.lineWidth);\n                    draw.setCurrentId(`${d.uid}_l1`);\n                    draw.setCurrentClassName(`${d.className}-end-line`);\n                    draw.line(d.bezierCurves[c].endPoint, d.bezierCurves[c].endControlPoint, this.drawConfig.bezier.handleLine.color, this.drawConfig.bezier.handleLine.lineWidth);\n                }\n            }\n        }\n        else if (d instanceof Polygon) {\n            draw.polygon(d, this.drawConfig.polygon.color, this.drawConfig.polygon.lineWidth);\n            if (!this.drawConfig.drawHandlePoints) {\n                for (var i in d.vertices) {\n                    d.vertices[i].attr.renderTime = renderTime;\n                }\n            }\n        }\n        else if (d instanceof Triangle) {\n            draw.polyline([d.a, d.b, d.c], false, this.drawConfig.triangle.color, this.drawConfig.triangle.lineWidth);\n            if (!this.drawConfig.drawHandlePoints)\n                d.a.attr.renderTime = d.b.attr.renderTime = d.c.attr.renderTime = renderTime;\n        }\n        else if (d instanceof VEllipse) {\n            if (this.drawConfig.drawHandleLines) {\n                draw.setCurrentId(`${d.uid}_e0`);\n                draw.setCurrentClassName(`${d.className}-v-line`);\n                // draw.line( d.center.clone().add(0,d.axis.y-d.center.y), d.axis, '#c8c8c8' );\n                draw.line(d.center.clone().add(0, d.signedRadiusV()).rotate(d.rotation, d.center), d.axis, \"#c8c8c8\");\n                draw.setCurrentId(`${d.uid}_e1`);\n                draw.setCurrentClassName(`${d.className}-h-line`);\n                // draw.line( d.center.clone().add(d.axis.x-d.center.x,0), d.axis, '#c8c8c8' );\n                draw.line(d.center.clone().add(d.signedRadiusH(), 0).rotate(d.rotation, d.center), d.axis, \"#c8c8c8\");\n            }\n            draw.setCurrentId(d.uid);\n            draw.setCurrentClassName(`${d.className}`);\n            draw.ellipse(d.center, \n            // Math.abs(d.axis.x-d.center.x), Math.abs(d.axis.y-d.center.y),\n            d.radiusH(), d.radiusV(), this.drawConfig.ellipse.color, this.drawConfig.ellipse.lineWidth, d.rotation);\n            if (!this.drawConfig.drawHandlePoints) {\n                d.center.attr.renderTime = renderTime;\n                d.axis.attr.renderTime = renderTime;\n            }\n        }\n        else if (d instanceof VEllipseSector) {\n            draw.setCurrentId(d.uid);\n            draw.setCurrentClassName(`${d.className}`);\n            /* draw.ellipse( d.center,\n                    // Math.abs(d.axis.x-d.center.x), Math.abs(d.axis.y-d.center.y),\n                    d.radiusH(), d.radiusV(),\n                    this.drawConfig.ellipse.color,\n                    this.drawConfig.ellipse.lineWidth,\n                    d.rotation ); */\n            const data = VEllipseSector.ellipseSectorUtils.describeSVGArc(d.ellipse.center.x, d.ellipse.center.y, d.ellipse.radiusH(), d.ellipse.radiusV(), d.startAngle, d.endAngle, d.ellipse.rotation, { moveToStart: true });\n            draw.path(data, this.drawConfig.ellipseSector.color, this.drawConfig.ellipseSector.lineWidth);\n        }\n        else if (d instanceof Circle) {\n            draw.circle(d.center, d.radius, this.drawConfig.circle.color, this.drawConfig.circle.lineWidth);\n        }\n        else if (d instanceof CircleSector) {\n            draw.circleArc(d.circle.center, d.circle.radius, d.startAngle, d.endAngle, this.drawConfig.circleSector.color, this.drawConfig.circleSector.lineWidth);\n        }\n        else if (d instanceof Vertex) {\n            if (this.drawConfig.drawVertices && (!d.attr.selectable || !d.attr.draggable) && d.attr.visible) {\n                // Draw as special point (grey)\n                draw.circleHandle(d, 7, this.drawConfig.vertex.color);\n                d.attr.renderTime = renderTime;\n            }\n        }\n        else if (d instanceof Line) {\n            draw.line(d.a, d.b, this.drawConfig.line.color, this.drawConfig.line.lineWidth);\n            if (!this.drawConfig.drawHandlePoints || !d.a.attr.selectable)\n                d.a.attr.renderTime = renderTime;\n            if (!this.drawConfig.drawHandlePoints || !d.b.attr.selectable)\n                d.b.attr.renderTime = renderTime;\n        }\n        else if (d instanceof Vector) {\n            draw.arrow(d.a, d.b, this.drawConfig.vector.color);\n            if (this.drawConfig.drawHandlePoints && d.b.attr.selectable && d.b.attr.visible) {\n                draw.setCurrentId(`${d.uid}_h0`);\n                draw.setCurrentClassName(`${d.className}-handle`);\n                draw.circleHandle(d.b, 3, \"#a8a8a8\");\n            }\n            else {\n                d.b.attr.renderTime = renderTime;\n            }\n            if (!this.drawConfig.drawHandlePoints || !d.a.attr.selectable)\n                d.a.attr.renderTime = renderTime;\n            if (!this.drawConfig.drawHandlePoints || !d.b.attr.selectable)\n                d.b.attr.renderTime = renderTime;\n        }\n        else if (d instanceof PBImage) {\n            if (this.drawConfig.drawHandleLines) {\n                draw.setCurrentId(`${d.uid}_l0`);\n                draw.setCurrentClassName(`${d.className}-line`);\n                draw.line(d.upperLeft, d.lowerRight, this.drawConfig.image.color, this.drawConfig.image.lineWidth);\n            }\n            fill.setCurrentId(d.uid);\n            fill.image(d.image, d.upperLeft, d.lowerRight.clone().sub(d.upperLeft));\n            if (this.drawConfig.drawHandlePoints) {\n                draw.setCurrentId(`${d.uid}_h0`);\n                draw.setCurrentClassName(`${d.className}-lower-right`);\n                draw.circleHandle(d.lowerRight, 3, this.drawConfig.image.color);\n                d.lowerRight.attr.renderTime = renderTime;\n            }\n        }\n        else if (d instanceof PBText) {\n            fill.setCurrentId(d.uid);\n            fill.text(d.text, d.anchor.x, d.anchor.y, d);\n            if (this.drawConfig.text.anchor) {\n                draw.setCurrentId(`${d.uid}_a0`);\n                draw.setCurrentClassName(`${d.className}-anchor`);\n                (this.drawConfig.text.fill ? fill : draw).point(d.anchor, this.drawConfig.text.color);\n            }\n            d.anchor.attr.renderTime = renderTime;\n        }\n        else {\n            console.error(\"Cannot draw object. Unknown class.\");\n        }\n        draw.setCurrentClassName(null);\n        draw.setCurrentId(null);\n        fill.setCurrentClassName(null);\n        fill.setCurrentId(null);\n    }\n    /**\n     * Draw the select-polygon (if there is one).\n     *\n     * This function is usually only used internally.\n     *\n     * @method drawSelectPolygon\n     * @private\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    drawSelectPolygon(draw) {\n        // Draw select polygon?\n        if (this.selectPolygon != null && this.selectPolygon.vertices.length > 0) {\n            draw.setCurrentId(this.selectPolygon.uid);\n            draw.polygon(this.selectPolygon, \"#888888\");\n            draw.crosshair(this.selectPolygon.vertices[0], 3, \"#008888\");\n        }\n    }\n    /**\n     * Draw all vertices that were not yet drawn with the given render time.<br>\n     * <br>\n     * This function is usually only used internally.\n     *\n     * @method drawVertices\n     * @private\n     * @param {number} renderTime - The current render time. It is used to distinct\n     *                              already draw vertices from non-draw-yet vertices.\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    drawVertices(renderTime, draw) {\n        // Draw all vertices as small squares if they were not already drawn by other objects\n        for (var i in this.vertices) {\n            if (this.drawConfig.drawVertices && this.vertices[i].attr.renderTime != renderTime && this.vertices[i].attr.visible) {\n                draw.setCurrentId(this.vertices[i].uid);\n                draw.squareHandle(this.vertices[i], 5, this._handleColor(this.vertices[i], \"rgb(0,128,192)\"));\n                this.vertices[i].attr.renderTime = renderTime;\n            }\n        }\n    }\n    /**\n     * Trigger redrawing of all objects.<br>\n     * <br>\n     * Usually this function is automatically called when objects change.\n     *\n     * @method redraw\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    redraw() {\n        const renderTime = this.renderTime++;\n        // Tell the drawing library that a new drawing cycle begins (required for the GL lib).\n        this.draw.beginDrawCycle(renderTime);\n        this.fill.beginDrawCycle(renderTime);\n        if (this.config.preClear)\n            this.config.preClear();\n        this.clear();\n        if (this.config.preDraw)\n            this.config.preDraw(this.draw, this.fill);\n        this.drawAll(renderTime, this.draw, this.fill);\n        if (this.config.postDraw)\n            this.config.postDraw(this.draw, this.fill);\n        this.draw.endDrawCycle(renderTime);\n        this.fill.endDrawCycle(renderTime);\n    }\n    /**\n     * Draw all: drawables, grid, select-polygon and vertices.\n     *\n     * @method drawAll\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    drawAll(renderTime, draw, fill) {\n        this.drawGrid(draw);\n        if (this.config.drawOrigin)\n            this.drawOrigin(draw);\n        this.drawDrawables(renderTime, draw, fill);\n        this.drawVertices(renderTime, draw);\n        this.drawSelectPolygon(draw);\n        // Clear IDs and classnames (postDraw hook might draw somthing and the do not want\n        // to interfered with that).\n        draw.setCurrentId(undefined);\n        draw.setCurrentClassName(undefined);\n    } // END redraw\n    /**\n     * This function clears the canvas with the configured background color.<br>\n     * <br>\n     * This function is usually only used internally.\n     *\n     * @method clear\n     * @private\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    clear() {\n        // Note that elements might have an alpha channel. Clear the scene first.\n        this.draw.clear(this.config.backgroundColor);\n    }\n    /**\n     * Clear the selection.<br>\n     * <br>\n     * This function is usually only used internally.\n     *\n     * @method clearSelection\n     * @private\n     * @param {boolean=} [redraw=false] - Indicates if the redraw function should be triggered.\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {PlotBoilerplate} this\n     **/\n    clearSelection(redraw) {\n        for (var i in this.vertices)\n            this.vertices[i].attr.isSelected = false;\n        if (redraw)\n            this.redraw();\n        return this;\n    }\n    /**\n     * Get the current view port.\n     *\n     * @method viewport\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {Bounds} The current viewport.\n     **/\n    viewport() {\n        return new Bounds(this.transformMousePosition(0, 0), this.transformMousePosition(this.canvasSize.width * this.config.cssScaleX, this.canvasSize.height * this.config.cssScaleY));\n    }\n    /**\n     * Trigger the saveFile.hook.\n     *\n     * @method saveFile\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    saveFile() {\n        this.hooks.saveFile(this);\n    }\n    /**\n     * Internal helper function used to get 'float' properties from elements.\n     * Used to determine border withs and paddings that were defined using CSS.\n     */\n    // TODO: this was moved to the DOM utils\n    getFProp(elem, propName) {\n        return parseFloat(globalThis.getComputedStyle(elem, null).getPropertyValue(propName));\n    }\n    /**\n     * Get the available inner space of the given container.\n     *\n     * Size minus padding minus border.\n     **/\n    // TODO: this was moved to the DOM utils\n    getAvailableContainerSpace() {\n        const _self = this;\n        const container = _self.canvas.parentNode; // Element | Document | DocumentFragment;\n        _self.canvas.style.display = \"none\";\n        var padding = this.getFProp(container, \"padding\") || 0, border = this.getFProp(_self.canvas, \"border-width\") || 0, pl = this.getFProp(container, \"padding-left\") || padding, pr = this.getFProp(container, \"padding-right\") || padding, pt = this.getFProp(container, \"padding-top\") || padding, pb = this.getFProp(container, \"padding-bottom\") || padding, bl = this.getFProp(_self.canvas, \"border-left-width\") || border, br = this.getFProp(_self.canvas, \"border-right-width\") || border, bt = this.getFProp(_self.canvas, \"border-top-width\") || border, bb = this.getFProp(_self.canvas, \"border-bottom-width\") || border;\n        var w = container.clientWidth;\n        var h = container.clientHeight;\n        _self.canvas.style.display = \"block\";\n        return { width: w - pl - pr - bl - br, height: h - pt - pb - bt - bb };\n    }\n    /**\n     * This function resizes the canvas to the required settings (toggles fullscreen).<br>\n     * <br>\n     * This function is usually only used internally but feel free to call it if resizing required.\n     *\n     * @method resizeCanvas\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    resizeCanvas() {\n        const _self = this;\n        const _setSize = (w, h) => {\n            w *= _self.config.canvasWidthFactor;\n            h *= _self.config.canvasHeightFactor;\n            _self.canvasSize.width = w;\n            _self.canvasSize.height = h;\n            if (_self.canvas instanceof HTMLCanvasElement) {\n                _self.canvas.width = w;\n                _self.canvas.height = h;\n            }\n            else if (_self.canvas instanceof SVGElement) {\n                this.canvas.setAttribute(\"viewBox\", `0 0 ${w} ${h}`);\n                this.canvas.setAttribute(\"width\", `${w}`);\n                this.canvas.setAttribute(\"height\", `${h}`);\n                this.draw.setSize(_self.canvasSize); // No need to set size to this.fill (instance copy)\n                this.eventCatcher.style.width = `${w}px`;\n                this.eventCatcher.style.height = `${h}px`;\n            }\n            else {\n                console.error(\"Error: cannot resize canvas element because it seems neither be a HTMLCanvasElement nor an SVGElement.\");\n            }\n            if (_self.config.autoAdjustOffset) {\n                // _self.draw.offset.x = _self.fill.offset.x = _self.config.offsetX = w*(_self.config.offsetAdjustXPercent/100);\n                // _self.draw.offset.y = _self.fill.offset.y = _self.config.offsetY = h*(_self.config.offsetAdjustYPercent/100);\n                _self.adjustOffset(false);\n            }\n        };\n        if (_self.config.fullSize && !_self.config.fitToParent) {\n            // Set editor size\n            var width = globalThis.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n            var height = globalThis.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n            _self.canvas.style.position = \"absolute\";\n            _self.canvas.style.width = _self.config.canvasWidthFactor * width + \"px\";\n            _self.canvas.style.height = _self.config.canvasWidthFactor * height + \"px\";\n            _self.canvas.style.top = \"0px\";\n            _self.canvas.style.left = \"0px\";\n            _setSize(width, height);\n        }\n        else if (_self.config.fitToParent) {\n            // Set editor size\n            _self.canvas.style.position = \"absolute\";\n            const space = this.getAvailableContainerSpace();\n            _self.canvas.style.width = _self.config.canvasWidthFactor * space.width + \"px\";\n            _self.canvas.style.height = _self.config.canvasHeightFactor * space.height + \"px\";\n            _self.canvas.style.top = null;\n            _self.canvas.style.left = null;\n            _setSize(space.width, space.height);\n        }\n        else {\n            _self.canvas.style.width = null;\n            _self.canvas.style.height = null;\n            _setSize(_self.config.defaultCanvasWidth, _self.config.defaultCanvasHeight);\n        }\n        if (_self.config.redrawOnResize)\n            _self.redraw();\n    }\n    /**\n     *  Add all vertices inside the polygon to the current selection.<br>\n     *\n     * @method selectVerticesInPolygon\n     * @param {Polygon} polygon - The polygonal selection area.\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {void}\n     **/\n    selectVerticesInPolygon(polygon) {\n        for (var i in this.vertices) {\n            if (this.vertices[i].attr.selectable && polygon.containsVert(this.vertices[i]))\n                this.vertices[i].attr.isSelected = true;\n        }\n    }\n    /**\n     * (Helper) Locates the point (index) at the passed position. Using an internal tolerance of 7 pixels.\n     *\n     * The result is an object { type : 'bpath', pindex, cindex, pid }\n     *\n     * Returns false if no point is near the passed position.\n     *\n     * @method locatePointNear\n     * @param {Vertex} point - The polygonal selection area.\n     * @param {number=} [tolerance=7] - The tolerance to use identtifying vertices.\n     * @private\n     * @return {IDraggable} Or false if none found.\n     **/\n    locatePointNear(point, tolerance) {\n        const _self = this;\n        if (typeof tolerance == \"undefined\")\n            tolerance = 7;\n        // Apply the zoom (the tolerant area should not shrink or grow when zooming)\n        tolerance /= _self.draw.scale.x;\n        // Search in vertices\n        // for( var vindex in _self.vertices ) {\n        for (var vindex = 0; vindex < _self.vertices.length; vindex++) {\n            var vert = _self.vertices[vindex];\n            if ((vert.attr.draggable || vert.attr.selectable) && vert.distance(point) < tolerance) {\n                // { type : 'vertex', vindex : vindex };\n                return new PlotBoilerplate.Draggable(vert, PlotBoilerplate.Draggable.VERTEX).setVIndex(vindex);\n            }\n        }\n        return null;\n    }\n    /**\n     * Handle left-click event.<br>\n     *\n     * @method handleClick\n     * @param {number} x - The click X position on the canvas.\n     * @param {number} y - The click Y position on the canvas.\n     * @private\n     * @return {void}\n     **/\n    handleClick(e) {\n        // x:number,y:number) {\n        const _self = this;\n        // const x:number = e.params.pos.x;\n        //const y:number = e.params.pos.y;\n        var p = this.locatePointNear(_self.transformMousePosition(e.params.pos.x, e.params.pos.y), PlotBoilerplate.DEFAULT_CLICK_TOLERANCE / Math.min(_self.config.cssScaleX, _self.config.cssScaleY));\n        if (p) {\n            _self.vertices[p.vindex].listeners.fireClickEvent(e);\n            if (this.keyHandler && this.keyHandler.isDown(\"shift\")) {\n                if (p.typeName == \"bpath\") {\n                    let vert = _self.paths[p.pindex].bezierCurves[p.cindex].getPointByID(p.pid);\n                    if (vert.attr.selectable)\n                        vert.attr.isSelected = !vert.attr.isSelected;\n                }\n                else if (p.typeName == \"vertex\") {\n                    let vert = _self.vertices[p.vindex];\n                    if (vert.attr.selectable)\n                        vert.attr.isSelected = !vert.attr.isSelected;\n                }\n                _self.redraw();\n            }\n            else if (this.keyHandler.isDown(\"y\") /* && p.type=='bpath' && (p.pid==BezierPath.START_POINT || p.pid==BezierPath.END_POINT) */) {\n                _self.vertices[p.vindex].attr.bezierAutoAdjust = !_self.vertices[p.vindex].attr.bezierAutoAdjust;\n                _self.redraw();\n            }\n        }\n        else if (_self.selectPolygon != null) {\n            const vert = _self.transformMousePosition(e.params.pos.x, e.params.pos.y);\n            _self.selectPolygon.vertices.push(new Vertex(vert.x, vert.y));\n            _self.redraw();\n        }\n    }\n    /**\n     * Transforms the given x-y-(mouse-)point to coordinates respecting the view offset\n     * and the zoom settings.\n     *\n     * @method transformMousePosition\n     * @param {number} x - The x position relative to the canvas.\n     * @param {number} y - The y position relative to the canvas.\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {XYCoords} A simple object <pre>{ x : Number, y : Number }</pre> with the transformed coordinates.\n     **/\n    transformMousePosition(x, y) {\n        return {\n            x: (x / this.config.cssScaleX - this.config.offsetX) / this.config.scaleX,\n            y: (y / this.config.cssScaleY - this.config.offsetY) / this.config.scaleY\n        };\n    }\n    /**\n     * Revert a transformed mouse position back to canvas coordinates.\n     *\n     * This is the inverse function of `transformMousePosition`.\n     *\n     * @method revertMousePosition\n     * @param {number} x - The x component of the position to revert.\n     * @param {number} y - The y component of the position to revert.\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {XYCoords} The canvas coordinates for the given position.\n     **/\n    revertMousePosition(x, y) {\n        return { x: x / this.config.cssScaleX + this.config.offsetX, y: y / this.config.cssScaleY + this.config.offsetY };\n    }\n    /**\n     * Determine if any elements are currently being dragged (on mouse move or touch move).\n     *\n     * @method getDraggedElementCount\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {number} The number of elements that are currently being dragged.\n     **/\n    getDraggedElementCount() {\n        return this.draggedElements.length;\n    }\n    /**\n     * (Helper) The mouse-down handler.\n     *\n     * It selects vertices for dragging.\n     *\n     * @method mouseDownHandler.\n     * @param {XMouseEvent} e - The event to handle\n     * @private\n     * @return {void}\n     **/\n    mouseDownHandler(e) {\n        const _self = this;\n        if (e.button != 0)\n            return; // Only react on left mouse or touch events\n        var p = _self.locatePointNear(_self.transformMousePosition(e.params.pos.x, e.params.pos.y), PlotBoilerplate.DEFAULT_CLICK_TOLERANCE / Math.min(_self.config.cssScaleX, _self.config.cssScaleY));\n        if (!p)\n            return;\n        // Drag all selected elements?\n        if (p.typeName == \"vertex\" && _self.vertices[p.vindex].attr.isSelected) {\n            // Multi drag\n            // for( var i in _self.vertices ) {\n            for (var i = 0; i < _self.vertices.length; i++) {\n                if (_self.vertices[i].attr.isSelected) {\n                    _self.draggedElements.push(new PlotBoilerplate.Draggable(_self.vertices[i], PlotBoilerplate.Draggable.VERTEX).setVIndex(i));\n                    _self.vertices[i].listeners.fireDragStartEvent(e);\n                }\n            }\n        }\n        else {\n            // Single drag\n            if (!_self.vertices[p.vindex].attr.draggable)\n                return;\n            _self.draggedElements.push(p);\n            if (p.typeName == \"bpath\")\n                _self.paths[p.pindex].bezierCurves[p.cindex].getPointByID(p.pid).listeners.fireDragStartEvent(e);\n            else if (p.typeName == \"vertex\")\n                _self.vertices[p.vindex].listeners.fireDragStartEvent(e);\n        }\n        _self.redraw();\n    }\n    /**\n     * The mouse-drag handler.\n     *\n     * It moves selected elements around or performs the panning if the ctrl-key if\n     * hold down.\n     *\n     * @method mouseDragHandler.\n     * @param {XMouseEvent} e - The event to handle\n     * @private\n     * @return {void}\n     **/\n    mouseDragHandler(e) {\n        const _self = this;\n        const oldDragAmount = { x: e.params.dragAmount.x, y: e.params.dragAmount.y };\n        e.params.dragAmount.x /= _self.config.cssScaleX;\n        e.params.dragAmount.y /= _self.config.cssScaleY;\n        // Important note to: this.keyHandler.isDown('ctrl')\n        //    We should not use this for any input.\n        //    Reason: most browsers use [Ctrl]+[t] to create new browser tabs.\n        //            If so, the key-up event for [Ctrl] will be fired in the _new tab_,\n        //            not this one. So this tab will never receive any [Ctrl-down] events\n        //            until next keypress; the implication is, that [Ctrl] would still\n        //            considered to be pressed which is not true.\n        if (this.keyHandler.isDown(\"alt\") || this.keyHandler.isDown(\"spacebar\")) {\n            _self.setOffset(_self.draw.offset.clone().add(e.params.dragAmount));\n            _self.redraw();\n        }\n        else {\n            // Convert drag amount by scaling\n            // Warning: this possibly invalidates the dragEvent for other listeners!\n            //          Rethink the solution when other features are added.\n            e.params.dragAmount.x /= _self.draw.scale.x;\n            e.params.dragAmount.y /= _self.draw.scale.y;\n            for (var i in _self.draggedElements) {\n                var p = _self.draggedElements[i];\n                if (p.typeName == \"bpath\") {\n                    _self.paths[p.pindex].moveCurvePoint(p.cindex, p.pid, new Vertex(e.params.dragAmount.x, e.params.dragAmount.y));\n                    _self.paths[p.pindex].bezierCurves[p.cindex].getPointByID(p.pid).listeners.fireDragEvent(e);\n                }\n                else if (p.typeName == \"vertex\") {\n                    if (!_self.vertices[p.vindex].attr.draggable)\n                        continue;\n                    _self.vertices[p.vindex].add(e.params.dragAmount);\n                    _self.vertices[p.vindex].listeners.fireDragEvent(e);\n                }\n            }\n        }\n        // Restore old event values!\n        e.params.dragAmount.x = oldDragAmount.x;\n        e.params.dragAmount.y = oldDragAmount.y;\n        _self.redraw();\n    }\n    /**\n     * The mouse-up handler.\n     *\n     * It clears the dragging-selection.\n     *\n     * @method mouseUpHandler.\n     * @param {XMouseEvent} e - The event to handle\n     * @private\n     * @return {void}\n     **/\n    mouseUpHandler(e) {\n        const _self = this;\n        if (e.button != 0)\n            return; // Only react on left mouse;\n        if (!e.params.wasDragged) {\n            _self.handleClick(e); // e.params.pos.x, e.params.pos.y );\n        }\n        for (var i in _self.draggedElements) {\n            var p = _self.draggedElements[i];\n            if (p.typeName == \"bpath\") {\n                _self.paths[p.pindex].bezierCurves[p.cindex].getPointByID(p.pid).listeners.fireDragEndEvent(e);\n            }\n            else if (p.typeName == \"vertex\") {\n                _self.vertices[p.vindex].listeners.fireDragEndEvent(e);\n            }\n        }\n        _self.draggedElements = [];\n        _self.redraw();\n    }\n    /**\n     * The mouse-wheel handler.\n     *\n     * It performs the zooming.\n     *\n     * @method mouseWheelHandler.\n     * @param {XMouseEvent} e - The event to handle\n     * @private\n     * @return {void}\n     **/\n    mouseWheelHandler(e) {\n        var zoomStep = 1.25; // Make configurable?\n        // CHANGED replaced _self by this\n        const _self = this;\n        const we = e;\n        if (we.deltaY < 0) {\n            _self.setZoom(_self.config.scaleX * zoomStep, _self.config.scaleY * zoomStep, new Vertex(e.params.pos.x, e.params.pos.y));\n        }\n        else if (we.deltaY > 0) {\n            _self.setZoom(_self.config.scaleX / zoomStep, _self.config.scaleY / zoomStep, new Vertex(e.params.pos.x, e.params.pos.y));\n        }\n        e.preventDefault();\n        _self.redraw();\n    }\n    /**\n     * Re-adjust the configured offset depending on the current canvas size and zoom (scaleX and scaleY).\n     *\n     * @method adjustOffset\n     * @param {boolean=false} redraw - [optional] If set the canvas will redraw with the new offset (default=false).\n     * @return {void}\n     **/\n    adjustOffset(redraw) {\n        this.draw.offset.x =\n            this.fill.offset.x =\n                this.config.offsetX =\n                    this.canvasSize.width * (this.config.offsetAdjustXPercent / 100);\n        this.draw.offset.y =\n            this.fill.offset.y =\n                this.config.offsetY =\n                    this.canvasSize.height * (this.config.offsetAdjustYPercent / 100);\n        if (redraw) {\n            this.redraw();\n        }\n    }\n    /**\n     * Set the new draw offset.\n     *\n     * Note: the function will not trigger any redraws.\n     *\n     * @param {Vertex} newOffset - The new draw offset to use.\n     **/\n    setOffset(newOffset) {\n        this.draw.offset.set(newOffset);\n        this.fill.offset.set(newOffset);\n        this.config.offsetX = newOffset.x;\n        this.config.offsetY = newOffset.y;\n    }\n    /**\n     * Set a new zoom value (and re-adjust the draw offset).\n     *\n     * Note: the function will not trigger any redraws.\n     *\n     * @param {number} zoomFactorX - The new horizontal zoom value.\n     * @param {number} zoomFactorY - The new vertical zoom value.\n     * @param {Vertex} interactionPos - The position of mouse/touch interaction.\n     **/\n    setZoom(zoomFactorX, zoomFactorY, interactionPos) {\n        let oldPos = this.transformMousePosition(interactionPos.x, interactionPos.y);\n        this.draw.scale.x = this.fill.scale.x = this.config.scaleX = Math.max(zoomFactorX, 0.01);\n        this.draw.scale.y = this.fill.scale.y = this.config.scaleY = Math.max(zoomFactorY, 0.01);\n        let newPos = this.transformMousePosition(interactionPos.x, interactionPos.y);\n        let newOffsetX = this.draw.offset.x + (newPos.x - oldPos.x) * this.draw.scale.x;\n        let newOffsetY = this.draw.offset.y + (newPos.y - oldPos.y) * this.draw.scale.y;\n        this.setOffset({ x: newOffsetX, y: newOffsetY });\n    }\n    installInputListeners() {\n        var _self = this;\n        if (this.config.enableMouse) {\n            // Install a mouse handler on the canvas.\n            new MouseHandler(this.eventCatcher ? this.eventCatcher : this.canvas)\n                .down((e) => {\n                _self.mouseDownHandler(e);\n            })\n                .drag((e) => {\n                _self.mouseDragHandler(e);\n            })\n                .up((e) => {\n                _self.mouseUpHandler(e);\n            });\n        }\n        else {\n            _self.console.log(\"Mouse interaction disabled.\");\n        }\n        if (this.config.enableMouseWheel) {\n            // Install a mouse handler on the canvas.\n            new MouseHandler(this.eventCatcher ? this.eventCatcher : this.canvas).wheel((e) => {\n                _self.mouseWheelHandler(e);\n            });\n        }\n        else {\n            _self.console.log(\"Mouse wheel interaction disabled.\");\n        }\n        if (this.config.enableTouch) {\n            // Install a touch handler on the canvas.\n            const relPos = (pos) => {\n                const bounds = _self.canvas.getBoundingClientRect();\n                return { x: pos.x - bounds.left, y: pos.y - bounds.top };\n            };\n            // Make PB work together with both, AlloyFinger as a esm module or a commonjs function.\n            if (typeof globalThis[\"AlloyFinger\"] === \"function\" || typeof globalThis[\"createAlloyFinger\"] === \"function\") {\n                try {\n                    var touchMovePos = null;\n                    var touchDownPos = null;\n                    var draggedElement = null;\n                    var multiTouchStartScale = null;\n                    const clearTouch = () => {\n                        touchMovePos = null;\n                        touchDownPos = null;\n                        draggedElement = null;\n                        multiTouchStartScale = null;\n                        _self.draggedElements = [];\n                    };\n                    const afProps = {\n                        touchStart: (evt) => {\n                            if (evt.touches.length == 1) {\n                                touchMovePos = new Vertex(relPos({ x: evt.touches[0].clientX, y: evt.touches[0].clientY }));\n                                touchDownPos = new Vertex(relPos({ x: evt.touches[0].clientX, y: evt.touches[0].clientY }));\n                                draggedElement = _self.locatePointNear(_self.transformMousePosition(touchMovePos.x, touchMovePos.y), PlotBoilerplate.DEFAULT_TOUCH_TOLERANCE / Math.min(_self.config.cssScaleX, _self.config.cssScaleY));\n                                if (draggedElement && draggedElement.typeName == \"vertex\") {\n                                    var draggingVertex = _self.vertices[draggedElement.vindex];\n                                    var fakeEvent = {\n                                        params: {\n                                            isTouchEvent: true,\n                                            dragAmount: { x: 0, y: 0 },\n                                            wasDragged: false,\n                                            mouseDownPos: touchDownPos.clone(),\n                                            mouseDragPos: touchDownPos.clone(),\n                                            vertex: draggingVertex\n                                        }\n                                    };\n                                    _self.draggedElements = [draggedElement];\n                                    draggingVertex.listeners.fireDragStartEvent(fakeEvent);\n                                }\n                            }\n                        },\n                        touchMove: (evt) => {\n                            if (evt.touches.length == 1 && draggedElement) {\n                                evt.preventDefault();\n                                evt.stopPropagation();\n                                var rel = relPos({ x: evt.touches[0].clientX, y: evt.touches[0].clientY });\n                                var trans = _self.transformMousePosition(rel.x, rel.y);\n                                var diff = new Vertex(_self.transformMousePosition(touchMovePos.x, touchMovePos.y)).difference(trans);\n                                if (draggedElement.typeName == \"vertex\") {\n                                    if (!_self.vertices[draggedElement.vindex].attr.draggable)\n                                        return;\n                                    _self.vertices[draggedElement.vindex].add(diff);\n                                    var draggingVertex = _self.vertices[draggedElement.vindex];\n                                    var fakeEvent = {\n                                        isTouchEvent: true,\n                                        params: {\n                                            dragAmount: diff.clone(),\n                                            wasDragged: true,\n                                            mouseDownPos: touchDownPos.clone(),\n                                            mouseDragPos: touchDownPos.clone().add(diff),\n                                            vertex: draggingVertex\n                                        }\n                                    };\n                                    draggingVertex.listeners.fireDragEvent(fakeEvent);\n                                    _self.redraw();\n                                }\n                                touchMovePos = new Vertex(rel);\n                            }\n                            else if (evt.touches.length == 2) {\n                                // If at least two fingers touch and move, then change the draw offset (panning).\n                                evt.preventDefault();\n                                evt.stopPropagation();\n                                _self.setOffset(_self.draw.offset\n                                    .clone()\n                                    .addXY(evt.deltaX, evt.deltaY)); // Apply zoom?\n                                _self.redraw();\n                            }\n                        },\n                        touchEnd: (evt) => {\n                            // Note: e.touches.length is 0 here\n                            if (draggedElement && draggedElement.typeName == \"vertex\") {\n                                var draggingVertex = _self.vertices[draggedElement.vindex];\n                                var fakeEvent = {\n                                    isTouchEvent: true,\n                                    params: {\n                                        dragAmount: { x: 0, y: 0 },\n                                        wasDragged: false,\n                                        mouseDownPos: touchDownPos.clone(),\n                                        mouseDragPos: touchDownPos.clone(),\n                                        vertex: draggingVertex\n                                    }\n                                };\n                                // Check if vertex was moved\n                                if (touchMovePos && touchDownPos && touchDownPos.distance(touchMovePos) < 0.001) {\n                                    // if( e.touches.length == 1 && diff.x == 0 && diff.y == 0 ) {\n                                    draggingVertex.listeners.fireClickEvent(fakeEvent);\n                                }\n                                else {\n                                    draggingVertex.listeners.fireDragEndEvent(fakeEvent);\n                                }\n                            }\n                            clearTouch();\n                        },\n                        touchCancel: (evt) => {\n                            clearTouch();\n                        },\n                        multipointStart: (evt) => {\n                            multiTouchStartScale = _self.draw.scale.clone();\n                        },\n                        multipointEnd: (evt) => {\n                            multiTouchStartScale = null;\n                        },\n                        pinch: (evt) => {\n                            // For pinching there must be at least two touch items\n                            const fingerA = new Vertex(evt.touches.item(0).clientX, evt.touches.item(0).clientY);\n                            const fingerB = new Vertex(evt.touches.item(1).clientX, evt.touches.item(1).clientY);\n                            const center = new Line(fingerA, fingerB).vertAt(0.5);\n                            _self.setZoom(multiTouchStartScale.x * evt.zoom, multiTouchStartScale.y * evt.zoom, center);\n                            _self.redraw();\n                        }\n                    }; // END afProps\n                    if (window[\"createAlloyFinger\"])\n                        window[\"createAlloyFinger\"](this.eventCatcher ? this.eventCatcher : this.canvas, afProps);\n                    else\n                        new AlloyFinger(this.eventCatcher ? this.eventCatcher : this.canvas, afProps);\n                }\n                catch (e) {\n                    console.error(\"Failed to initialize AlloyFinger!\");\n                    console.error(e);\n                }\n            }\n            else if (globalThis[\"Touchy\"] && typeof globalThis[\"Touchy\"] == \"function\") {\n                console.error(\"[Deprecation] Found Touchy which is not supported any more. Please use AlloyFinger instead.\");\n                // Convert absolute touch positions to relative DOM element position (relative to canvas)\n            }\n            else {\n                console.warn(\"Cannot initialize the touch handler. AlloyFinger is missig. Did you include it?\");\n            }\n        }\n        else {\n            _self.console.log(\"Touch interaction disabled.\");\n        }\n        if (this.config.enableKeys) {\n            // Install key handler\n            this.keyHandler = new KeyHandler({ trackAll: true })\n                .down(\"escape\", function () {\n                _self.clearSelection(true);\n            })\n                .down(\"shift\", function () {\n                _self.selectPolygon = new Polygon();\n                _self.redraw();\n            })\n                .up(\"shift\", function () {\n                // Find and select vertices in the drawn area\n                if (_self.selectPolygon == null)\n                    return;\n                _self.selectVerticesInPolygon(_self.selectPolygon);\n                _self.selectPolygon = null;\n                _self.redraw();\n            });\n        } // END IF enableKeys?\n        else {\n            _self.console.log(\"Keyboard interaction disabled.\");\n        }\n    }\n    /**\n     * Creates a control GUI (a dat.gui instance) for this\n     * plot boilerplate instance.\n     *\n     * @method createGUI\n     * @instance\n     * @memberof PlotBoilerplate\n     * @return {dat.gui.GUI}\n     **/\n    createGUI(props) {\n        // This function moved to the helper utils.\n        // We do not want to include the whole dat.GUI package.\n        if (globalThis[\"utils\"] && typeof globalThis[\"utils\"].createGUI == \"function\")\n            return globalThis[\"utils\"].createGUI(this, props);\n        else\n            throw \"Cannot create dat.GUI instance; did you load the ./utils/creategui helper function an the dat.GUI library?\";\n    }\n} // END class PlotBoilerplate\n/** @constant {number} */\nPlotBoilerplate.DEFAULT_CANVAS_WIDTH = 1024;\n/** @constant {number} */\nPlotBoilerplate.DEFAULT_CANVAS_HEIGHT = 768;\n/** @constant {number} */\nPlotBoilerplate.DEFAULT_CLICK_TOLERANCE = 8;\n/** @constant {number} */\nPlotBoilerplate.DEFAULT_TOUCH_TOLERANCE = 32;\n/**\n * A wrapper class for draggable items (mostly vertices).\n * @private\n **/\nPlotBoilerplate.Draggable = (_a = class {\n        constructor(item, typeName) {\n            this.item = item;\n            this.typeName = typeName;\n        }\n        isVertex() {\n            return this.typeName == PlotBoilerplate.Draggable.VERTEX;\n        }\n        setVIndex(vindex) {\n            this.vindex = vindex;\n            return this;\n        }\n    },\n    _a.VERTEX = \"vertex\",\n    _a);\n/**\n * A set of helper functions.\n **/\nPlotBoilerplate.utils = {\n    /**\n     * Merge the elements in the 'extension' object into the 'base' object based on\n     * the keys of 'base'.\n     *\n     * @param {Object} base\n     * @param {Object} extension\n     * @return {Object} base extended by the new attributes.\n     **/\n    safeMergeByKeys: (base, extension) => {\n        for (var k in extension) {\n            if (!extension.hasOwnProperty(k))\n                continue;\n            if (base.hasOwnProperty(k)) {\n                var typ = typeof base[k];\n                try {\n                    if (typ == \"boolean\")\n                        base[k] = !!JSON.parse(extension[k]);\n                    else if (typ == \"number\")\n                        base[k] = JSON.parse(extension[k]) * 1;\n                    else if (typ == \"function\" && typeof extension[k] == \"function\")\n                        base[k] = extension[k];\n                    else\n                        base[k] = extension[k];\n                }\n                catch (e) {\n                    console.error(\"error in key \", k, extension[k], e);\n                }\n            }\n            else {\n                base[k] = extension[k];\n            }\n        }\n        return base;\n    },\n    /**\n     * A helper function to scale elements (usually the canvas) using CSS.\n     *\n     * transform-origin is at (0,0).\n     *\n     * @param {HTMLElement} element - The DOM element to scale.\n     * @param {number} scaleX The - X scale factor.\n     * @param {number} scaleY The - Y scale factor.\n     * @return {void}\n     **/\n    setCSSscale: (element, scaleX, scaleY) => {\n        element.style[\"transform-origin\"] = \"0 0\";\n        if (scaleX == 1.0 && scaleY == 1.0)\n            element.style.transform = null;\n        else\n            element.style.transform = \"scale(\" + scaleX + \",\" + scaleY + \")\";\n    },\n    // A helper for fetching data from objects.\n    fetch: {\n        /**\n         * A helper function to the the object property value specified by the given key.\n         *\n         * @param {any} object   - The object to get the property's value from. Must not be null.\n         * @param {string} key      - The key of the object property (the name).\n         * @param {any}    fallback - A default value if the key does not exist.\n         **/\n        val: (obj, key, fallback) => {\n            if (!obj.hasOwnProperty(key))\n                return fallback;\n            if (typeof obj[key] == \"undefined\")\n                return fallback;\n            return obj[key];\n        },\n        /**\n         * A helper function to the the object property numeric value specified by the given key.\n         *\n         * @param {any}    object   - The object to get the property's value from. Must not be null.\n         * @param {string} key      - The key of the object property (the name).\n         * @param {number} fallback - A default value if the key does not exist.\n         * @return {number}\n         **/\n        num: (obj, key, fallback) => {\n            if (!obj.hasOwnProperty(key))\n                return fallback;\n            if (typeof obj[key] === \"number\")\n                return obj[key];\n            else {\n                try {\n                    return JSON.parse(obj[key]) * 1;\n                }\n                catch (e) {\n                    return fallback;\n                }\n            }\n        },\n        /**\n         * A helper function to the the object property boolean value specified by the given key.\n         *\n         * @param {any}     object   - The object to get the property's value from. Must not be null.\n         * @param {string}  key      - The key of the object property (the name).\n         * @param {boolean} fallback - A default value if the key does not exist.\n         * @return {boolean}\n         **/\n        bool: (obj, key, fallback) => {\n            if (!obj.hasOwnProperty(key))\n                return fallback;\n            if (typeof obj[key] == \"boolean\")\n                return obj[key];\n            else {\n                try {\n                    return !!JSON.parse(obj[key]);\n                }\n                catch (e) {\n                    return fallback;\n                }\n            }\n        },\n        /**\n         * A helper function to the the object property function-value specified by the given key.\n         *\n         * @param {any}      object   - The object to get the property's value from. Must not be null.\n         * @param {string}   key      - The key of the object property (the name).\n         * @param {function} fallback - A default value if the key does not exist.\n         * @return {function}\n         **/\n        func: (obj, key, fallback) => {\n            if (!obj.hasOwnProperty(key))\n                return fallback;\n            if (typeof obj[key] !== \"function\")\n                return fallback;\n            return obj[key];\n        }\n    },\n    /**\n     * Installs vertex listeners to the path's vertices so that controlpoints\n     * move with their path points when dragged.\n     *\n     * Bézier path points with attr.bezierAutoAdjust==true will have their\n     * two control points audo-updated if moved, too (keep path connections smooth).\n     *\n     * @param {BezierPath} bezierPath - The path to use auto-adjustment for.\n     **/\n    enableBezierPathAutoAdjust: (bezierPath) => {\n        for (var i = 0; i < bezierPath.bezierCurves.length; i++) {\n            // This should be wrapped into the BezierPath implementation.\n            bezierPath.bezierCurves[i].startPoint.listeners.addDragListener(function (e) {\n                var cindex = bezierPath.locateCurveByStartPoint(e.params.vertex);\n                bezierPath.bezierCurves[cindex].startPoint.addXY(-e.params.dragAmount.x, -e.params.dragAmount.y);\n                bezierPath.moveCurvePoint(cindex * 1, bezierPath.START_POINT, e.params.dragAmount);\n                bezierPath.updateArcLengths();\n            });\n            bezierPath.bezierCurves[i].startControlPoint.listeners.addDragListener(function (e) {\n                var cindex = bezierPath.locateCurveByStartControlPoint(e.params.vertex);\n                if (!bezierPath.bezierCurves[cindex].startPoint.attr.bezierAutoAdjust)\n                    return;\n                bezierPath.adjustPredecessorControlPoint(cindex * 1, true, // obtain handle length?\n                false // update arc lengths\n                );\n                bezierPath.updateArcLengths();\n            });\n            bezierPath.bezierCurves[i].endControlPoint.listeners.addDragListener(function (e) {\n                var cindex = bezierPath.locateCurveByEndControlPoint(e.params.vertex);\n                if (!bezierPath.bezierCurves[cindex % bezierPath.bezierCurves.length].endPoint.attr.bezierAutoAdjust)\n                    return;\n                bezierPath.adjustSuccessorControlPoint(cindex * 1, true, // obtain handle length?\n                false // update arc lengths\n                );\n                bezierPath.updateArcLengths();\n            });\n            if (i + 1 == bezierPath.bezierCurves.length) {\n                // && !bezierPath.adjustCircular ) {\n                // Move last control point with the end point (if not circular)\n                bezierPath.bezierCurves[bezierPath.bezierCurves.length - 1].endPoint.listeners.addDragListener(function (e) {\n                    if (!bezierPath.adjustCircular) {\n                        var cindex = bezierPath.locateCurveByEndPoint(e.params.vertex);\n                        bezierPath.moveCurvePoint(cindex * 1, bezierPath.END_CONTROL_POINT, new Vertex({ x: e.params.dragAmount.x, y: e.params.dragAmount.y }));\n                    }\n                    bezierPath.updateArcLengths();\n                });\n            }\n        } // END for\n    }\n}; // END utils\nexport default PlotBoilerplate;\n//# sourceMappingURL=PlotBoilerplate.js.map","/**\n * Todos:\n *  + use a Drawable interface\n *  + use a SVGSerializable interface\n *\n * @require Vertex\n *\n * @deprecated THIS CLASS IS DEPRECATED. Please use the new `drawutilssvg` instead.\n *\n * @author   Ikaros Kappler\n * @date     2018-12-04\n * @modified 2019-11-07 Added the 'Triangle' style class.\n * @modified 2019-11-13 Added the <?xml ...?> tag.\n * @modified 2020-03-25 Ported this class from vanilla-JS to Typescript.\n * @modified 2020-12-17 Added Circle and CircleSection style classes.\n * @modified 2021-01-26 DEPRECATION\n * @version  1.0.5\n **/\n/**\n * @classdesc A default SVG builder.\n *\n * @requires SVGSerializable\n * @requires Vertex\n */\nexport class SVGBuilder {\n    /**\n     * @constructor\n     **/\n    constructor() {\n        console.warn(\"THIS CLASS IS DEPRECATED. Please use the new 'drawutilssvg' instead.\");\n    }\n    ;\n    /**\n     *  Builds the SVG code from the given list of drawables.\n     *\n     * @param {object[]} drawables - The drawable elements (should implement Drawable) to be converted (each must have a toSVGString-function).\n     * @param {object}   options  - { canvasSize, zoom, offset }\n     * @return {string}\n     **/\n    build(drawables, options) {\n        var nl = '\\n';\n        var indent = '  ';\n        var buffer = [];\n        buffer.push('<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + nl);\n        buffer.push('<svg width=\"' + options.canvasSize.width + '\" height=\"' + options.canvasSize.height + '\"');\n        buffer.push(' viewBox=\"');\n        buffer.push('0');\n        buffer.push(' ');\n        buffer.push('0');\n        buffer.push(' ');\n        buffer.push(options.canvasSize.width.toString());\n        buffer.push(' ');\n        buffer.push(options.canvasSize.height.toString());\n        buffer.push('\"');\n        buffer.push(' xmlns=\"http://www.w3.org/2000/svg\">' + nl);\n        buffer.push(indent + '<defs>' + nl);\n        buffer.push(indent + '<style>' + nl);\n        buffer.push(indent + indent + ' .Vertex { fill : blue; stroke : none; } ' + nl);\n        buffer.push(indent + indent + ' .Triangle { fill : none; stroke : turquoise; stroke-width : 1px; } ' + nl);\n        buffer.push(indent + indent + ' .Polygon { fill : none; stroke : green; stroke-width : 2px; } ' + nl);\n        buffer.push(indent + indent + ' .BezierPath { fill : none; stroke : blue; stroke-width : 2px; } ' + nl);\n        buffer.push(indent + indent + ' .VEllipse { fill : none; stroke : black; stroke-width : 1px; } ' + nl);\n        buffer.push(indent + indent + ' .Line { fill : none; stroke : purple; stroke-width : 1px; } ' + nl);\n        buffer.push(indent + indent + ' .Circle { fill : none; stroke : purple; stroke-width : 1px; } ' + nl);\n        buffer.push(indent + indent + ' .CircleSector { fill : none; stroke : purple; stroke-width : 1px; } ' + nl);\n        buffer.push(indent + '</style>' + nl);\n        buffer.push(indent + '</defs>' + nl);\n        buffer.push(indent + '<g class=\"main-g\"');\n        if (options.zoom || options.offset) {\n            buffer.push(' transform=\"');\n            if (options.zoom)\n                buffer.push('scale(' + options.zoom.x + ',' + options.zoom.y + ')');\n            if (options.offset)\n                buffer.push(' translate(' + options.offset.x + ',' + options.offset.y + ')');\n            buffer.push('\"');\n        }\n        buffer.push('>' + nl);\n        for (var i in drawables) {\n            var d = drawables[i];\n            if (typeof d.toSVGString == 'function') {\n                buffer.push(indent + indent);\n                buffer.push(d.toSVGString({ 'className': d.className }));\n                buffer.push(nl);\n            }\n            else {\n                console.warn('Unrecognized drawable type has no toSVGString()-function. Ignoring: ' + d.className);\n            }\n        }\n        buffer.push(indent + '</g>' + nl);\n        buffer.push('</svg>' + nl);\n        return buffer.join('');\n    }\n    ;\n}\n//# sourceMappingURL=SVGBuilder.js.map","/**\n * @author   Ikaros Kappler\n * @version  1.0.1\n * @date     2018-11-10\n * @modified 2020-10-23 Ported to Typescript.\n * @modified 2020-10-30 Exporting each color under its name globally.\n **/\nimport { Color } from \"./datastructures/Color\";\nexport const Red = Color.makeRGB(255, 67, 55);\nexport const Pink = Color.makeRGB(232, 31, 100);\nexport const Purple = Color.makeRGB(156, 39, 175);\nexport const DeepPurple = Color.makeRGB(103, 59, 184);\nexport const Indigo = Color.makeRGB(64, 81, 181);\nexport const Blue = Color.makeRGB(35, 151, 245);\nexport const LightBlue = Color.makeRGB(6, 170, 245);\nexport const Cyan = Color.makeRGB(3, 189, 214);\nexport const Teal = Color.makeRGB(1, 150, 137);\nexport const Green = Color.makeRGB(77, 175, 82);\nexport const LightGreen = Color.makeRGB(141, 195, 67);\n/**\n * A set of beautiful web colors (I know, beauty is in the eye of the beholder).\n *\n * I found this color chart with 11 colors and think it is somewhat nice\n *    https://www.pinterest.com/pin/229965124706497134/\n *\n * @requires Color\n *\n */\nexport const WebColors = [\n    Red,\n    Pink,\n    Purple,\n    DeepPurple,\n    Indigo,\n    Blue,\n    LightBlue,\n    Cyan,\n    Teal,\n    Green,\n    LightGreen\n];\n/**\n * A helper function to shuffle the colors into a new order.\n */\nexport const shuffleWebColors = (order) => {\n    const result = Array(order.length);\n    for (var i = 0; i < order.length; i++) {\n        result[i] = WebColors[order[i] % WebColors.length];\n    }\n    return result;\n};\n//# sourceMappingURL=WebColors.js.map","/**\n * @requires Color\n *\n * @date 2020-10-27\n **/\nimport { shuffleWebColors } from \"./WebColors\";\nconst ORDER_CONTRAST = [8, 0, 6, 4, 1, 9, 2, 10, 3, 7, 5];\nexport const WebColorsContrast = shuffleWebColors(ORDER_CONTRAST);\n//# sourceMappingURL=WebColorsContrast.js.map","/**\n * @author   Ikaros Kappler\n * @version  1.0.0\n * @date     2018-11-11\n **/\nimport { Color } from \"./datastructures/Color\";\n/**\n * A mix of green shades.\n *\n * @requires Color\n */\nexport const WebColorsMalachite = [\n    Color.makeRGB(0, 21, 6),\n    Color.makeRGB(0, 30, 12),\n    Color.makeRGB(0, 52, 28),\n    Color.makeRGB(0, 81, 47),\n    Color.makeRGB(21, 134, 88),\n    Color.makeRGB(0, 46, 19),\n    Color.makeRGB(0, 68, 40),\n    Color.makeRGB(11, 81, 55),\n    Color.makeRGB(0, 91, 46),\n    Color.makeRGB(0, 111, 46),\n    Color.makeRGB(33, 140, 106)\n];\n//# sourceMappingURL=WebColorsMalachite.js.map","/**\n * @author Extended, bugfixed and ported to TypeScript by Ikaros Kappler.\n * @modified 2018-xx-xx Added a clone() function.\n * @modified 2018-xx-xx Allowing leading '#' in the makeHEX() function.\n * @modified 2018-11-28 Fixed the checkHEX() function to accept 000000.\n * @modified 2019-11-18 Added a generic parse(string) function that detects the format.\n * @modified 2020-01-09 Fixed a bug in the parse(string) function. Hex colors with only three elements were considered faulty.\n * @modified 2020-10-23 Ported to Typescript.\n * @modified 2021-02-08 Fixed a lot of es2015 compatibility issues.\n * @modified 2021-02-08 Added basic tsdoc/jsdoc comments.\n * @modified 2021-11-05 Fixing the regex to parse rgba-strings.\n * @modified 2021-11-05 Added return value `this` to all modifier functions (for chaining).\n * @modified 2021-11-07 Changed the behavior of `darken` and `lighten`: the passed value is handled relative now which makes values much easier predictable and makes the change feel more 'natural'.\n * @modified 2021-11-07 Did the same with `saturate` and `desaturate`.\n * @modified 2021-11-07 Did the same with the `fadein` and `fadeout` functions.\n * @modified 2021-11-07 Added setRed, setGreen, setBlue, setHue, setSaturation, setLiminance functions.\n * @version 0.0.10\n **/\n/**\n * @classdesc A color class, inspired by neolitec's Javascript class.\n *    Original found at\n *      https://gist.github.com/neolitec/1344610\n *    Thanks to neolitec\n */\nexport class Color {\n    /**\n     * Construct a new color with `r=0 g=0 b=0`.\n     *\n     * Consider using the `makeHex`, `makeRGB` or `makeHSL` functions.\n     *\n     * @constructor\n     * @instance\n     * @memberof Color\n     */\n    constructor() {\n        this.r = this.g = this.b = 0;\n        this.h = this.s = this.l = 0;\n        this.a = 1;\n    }\n    // --- RGB ----------------------------------\n    /**\n     * Get this color as a CSS `rgb` string.\n     *\n     * Consult this for details: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n     *\n     * @method cssRGB\n     * @instance\n     * @memberof Color\n     * @return {string} This color as a CSS rgb string.\n     */\n    cssRGB() {\n        return \"rgb(\" + Math.round(255 * this.r) + \",\" + Math.round(255 * this.g) + \",\" + Math.round(255 * this.b) + \")\";\n    }\n    /**\n     * Get this color as a CSS `rgba` string.\n     *\n     * Consult this for details: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n     *\n     * @method cssRGBA\n     * @instance\n     * @memberof Color\n     * @return {string} This color as a CSS rgba string.\n     */\n    cssRGBA() {\n        return `rgba(${Math.round(255 * this.r)},${Math.round(255 * this.g)},${Math.round(255 * this.b)},${this.a})`;\n    }\n    /**\n     * Get the red component of this RGB(A)color. This method just returns the `r` color attribute.\n     *\n     * @method red\n     * @instance\n     * @memberof Color\n     * @return {number} A value between 0.0 and 1.0.\n     */\n    red() {\n        return this.r;\n    }\n    /**\n     * Get the green component of this RGB(A) color. This method just returns the `g` color attribute.\n     *\n     * @method green\n     * @instance\n     * @memberof Color\n     * @return {number} A value between 0.0 and 1.0.\n     */\n    green() {\n        return this.g;\n    }\n    /**\n     * Get the blue component of this RGB(A) color. This method just returns the `b` color attribute.\n     *\n     * @method blue\n     * @instance\n     * @memberof Color\n     * @return {number} A value between 0.0 and 1.0.\n     */\n    blue() {\n        return this.b;\n    }\n    setRed(r) {\n        this.r = r;\n        return this;\n    }\n    setBlue(b) {\n        this.b = b;\n        Color.Converter.RGBToHSL(this);\n        return this;\n    }\n    setAlpha(a) {\n        this.a = a;\n        Color.Converter.RGBToHSL(this);\n        return this;\n    }\n    setGreen(g) {\n        this.g = g;\n        Color.Converter.RGBToHSL(this);\n        return this;\n    }\n    setHue(h) {\n        this.h = h;\n        Color.Converter.HSLToRGB(this);\n        return this;\n    }\n    setSaturation(s) {\n        this.s = s;\n        Color.Converter.HSLToRGB(this);\n        return this;\n    }\n    setLuminance(l) {\n        this.l = l;\n        Color.Converter.HSLToRGB(this);\n        return this;\n    }\n    // --- HSL ----------------------------------\n    /**\n     * Get this color as a CSS `hsl` string.\n     *\n     * @method cssHSL\n     * @instance\n     * @memberof Color\n     * @return {string} This color as a CSS hsl string.\n     */\n    cssHSL() {\n        return \"hsl(\" + Math.round(360 * this.h) + \",\" + Math.round(100 * this.s) + \"%,\" + Math.round(100 * this.l) + \"%)\";\n    }\n    /**\n     * Get this color as a CSS `hsla` string.\n     *\n     * @method cssHSLA\n     * @instance\n     * @memberof Color\n     * @return {string} This color as a CSS hsla string.\n     */\n    cssHSLA() {\n        return (\"hsla(\" +\n            Math.round(360 * this.h) +\n            \",\" +\n            Math.round(100 * this.s) +\n            \"%,\" +\n            Math.round(100 * this.l) +\n            \"%,\" +\n            Math.round(this.a) +\n            \")\");\n    }\n    /**\n     * Get the hue component of this HSL(A) color. This method just returns the `h` color attribute.\n     *\n     * @method hue\n     * @instance\n     * @memberof Color\n     * @return {number} A value between 0.0 and 1.0.\n     */\n    hue() {\n        return this.h;\n    }\n    /**\n     * Get the saturation component of this HSL(A) color. This method just returns the `s` color attribute.\n     *\n     * @method saturation\n     * @instance\n     * @memberof Color\n     * @return {number} A value between 0.0 and 1.0.\n     */\n    saturation() {\n        return this.s;\n    }\n    /**\n     * Get the lightness component of this HSL(A) color. This method just returns the `l` color attribute.\n     *\n     * @method lightness\n     * @instance\n     * @memberof Color\n     * @return {number} A value between 0.0 and 1.0.\n     */\n    lightness() {\n        return this.l;\n    }\n    // --- HEX ----------------------------------\n    /**\n     * Get this color as a CSS-HEX string (non-alpha): #rrggbb\n     *\n     * @method cssHEX\n     * @instance\n     * @memberof Color\n     * @return {string} This color as a CSS-HEX string.\n     */\n    cssHEX() {\n        return (\"#\" +\n            (255 * this.r < 16 ? \"0\" : \"\") +\n            Math.round(255 * this.r).toString(16) +\n            (255 * this.g < 16 ? \"0\" : \"\") +\n            Math.round(255 * this.g).toString(16) +\n            (255 * this.b < 16 ? \"0\" : \"\") +\n            Math.round(255 * this.b).toString(16));\n    }\n    // --- Transparency ----------------------------------\n    /**\n     * Get the alpha channel (transparency) of this color.\n     *\n     * @method alpha\n     * @instance\n     * @memberof Color\n     * @return {number} A value between 0.0 and 1.0.\n     */\n    alpha() {\n        return this.a;\n    }\n    // --- Modifiers ----------------------------------\n    //   saturate(v: string | number): Color {\n    //     if (\"string\" == typeof v && v.indexOf(\"%\") > -1 && (v = parseInt(v)) != NaN) {\n    //       this.s += v / 100;\n    //     } else if (\"number\" == typeof v) {\n    //       // range 255\n    //       this.s += v / 255;\n    //     } else {\n    //       throw new Error(\"error: bad modifier format (percent or number)\");\n    //     }\n    //     if (this.s > 1) this.s = 1;\n    //     else if (this.s < 0) this.s = 0;\n    //     Color.Converter.HSLToRGB(this);\n    //     return this;\n    //   }\n    saturate(v) {\n        if (\"string\" == typeof v && v.indexOf(\"%\") > -1 && (v = parseInt(v)) != NaN) {\n            this.s += (1 - this.s) * (v / 100);\n        }\n        else if (\"number\" == typeof v) {\n            if (v >= -0.0 && v <= 1.0) {\n                // range 255\n                this.s += (1 - this.s) * v;\n            }\n            else {\n                // range 0-1\n                this.s += (1 - this.s) * (v / 255);\n            }\n        }\n        else {\n            throw new Error(\"error: bad modifier format (percent or number)\");\n        }\n        if (this.s > 1)\n            this.s = 1;\n        else if (this.s < 0)\n            this.s = 0;\n        Color.Converter.HSLToRGB(this);\n        return this;\n    }\n    desaturate(v) {\n        if (\"string\" == typeof v && v.indexOf(\"%\") > -1 && (v = parseInt(v)) != NaN) {\n            this.s -= v / 100;\n        }\n        else if (\"number\" == typeof v) {\n            if (v >= 0.0 && v <= 1.0) {\n                // range 255\n                this.s -= this.s * v;\n            }\n            else {\n                // range 0-1\n                this.s -= this.s * (v / 255);\n            }\n        }\n        else {\n            throw new Error(\"error: bad modifier format (percent or number)\");\n        }\n        if (this.s > 1)\n            this.s = 1;\n        else if (this.s < 0)\n            this.s = 0;\n        Color.Converter.HSLToRGB(this);\n        return this;\n    }\n    //   lighten(v: string | number): Color {\n    //     if (\"string\" == typeof v && v.indexOf(\"%\") > -1 && (v = parseInt(v)) != NaN) {\n    //       this.l += v / 100;\n    //     } else if (\"number\" == typeof v) {\n    //       if (v >= -1.0 && v <= 1.0) {\n    //         // range 0.0...1.0\n    //         this.l += v;\n    //       } else {\n    //         // range 255\n    //         this.l += v / 255;\n    //       }\n    //     } else {\n    //       throw new Error(\"error: bad modifier format (percent or number)\");\n    //     }\n    //     if (this.l > 1) this.l = 1;\n    //     else if (this.l < 0) this.l = 0;\n    //     Color.Converter.HSLToRGB(this);\n    //     return this;\n    //   }\n    lighten(v) {\n        if (\"string\" == typeof v && v.indexOf(\"%\") > -1 && (v = parseInt(v)) != NaN) {\n            this.l += (1 - this.l) * (v / 100);\n        }\n        else if (\"number\" == typeof v) {\n            if (v >= 0.0 && v <= 1.0) {\n                // range 0.0...1.0\n                this.l += (1 - this.l) * v;\n            }\n            else {\n                // range 255\n                this.l += (1 - this.l) * (v / 255);\n            }\n        }\n        else {\n            throw new Error(\"error: bad modifier format (percent or number)\");\n        }\n        if (this.l > 1)\n            this.l = 1;\n        else if (this.l < 0)\n            this.l = 0;\n        Color.Converter.HSLToRGB(this);\n        return this;\n    }\n    darken(v) {\n        if (\"string\" == typeof v && v.indexOf(\"%\") > -1 && (v = parseInt(v)) != NaN) {\n            this.l -= this.l * (v / 100);\n        }\n        else if (\"number\" == typeof v) {\n            if (v >= 0.0 && v <= 1.0) {\n                // range 0.0...1.0\n                this.l -= this.l * v;\n            }\n            else {\n                // range 255\n                this.l -= this.l * (v / 255);\n            }\n        }\n        else {\n            throw new Error(\"error: bad modifier format (percent or number)\");\n        }\n        if (this.l > 1)\n            this.l = 1;\n        else if (this.l < 0)\n            this.l = 0;\n        Color.Converter.HSLToRGB(this);\n        return this;\n    }\n    fadein(v) {\n        if (\"string\" == typeof v && v.indexOf(\"%\") > -1 && (v = parseInt(v)) != NaN) {\n            this.a += (1 - this.a) * (v / 100);\n        }\n        else if (\"number\" == typeof v) {\n            if (v >= 0.0 && v <= 1.0) {\n                // range 0-1\n                this.a += (1 - this.a) * v;\n            }\n            else {\n                // range 255\n                this.a += (1 - this.a) * (v / 255);\n            }\n        }\n        else {\n            throw new Error(\"error: bad modifier format (percent or number)\");\n        }\n        console.log(\"New alpha\", this.a);\n        if (this.a > 1)\n            this.a = 1;\n        else if (this.a < 0)\n            this.a = 0;\n        Color.Converter.HSLToRGB(this);\n        return this;\n    }\n    fadeout(v) {\n        if (\"string\" == typeof v && v.indexOf(\"%\") > -1 && (v = parseInt(v)) != NaN) {\n            this.a -= v / 100;\n        }\n        else if (\"number\" == typeof v) {\n            if (v >= 0.0 && v <= 1.0) {\n                // range 0-1\n                this.a -= v;\n            }\n            else {\n                // range 255\n                this.a -= v / 255;\n            }\n        }\n        else {\n            throw new Error(\"error: bad modifier format (percent or number)\");\n        }\n        if (this.a > 1)\n            this.a = 1;\n        else if (this.a < 0)\n            this.a = 0;\n        Color.Converter.HSLToRGB(this);\n        return this;\n    }\n    spin(v) {\n        if (\"string\" == typeof v && v.indexOf(\"%\") > -1 && (v = parseInt(v)) != NaN)\n            this.h += v / 100;\n        else if (\"number\" == typeof v)\n            // range 360\n            this.h += v / 360;\n        else\n            throw new Error(\"error: bad modifier format (percent or number)\");\n        if (this.h > 1)\n            this.h = 1;\n        else if (this.h < 0)\n            this.h = 0;\n        Color.Converter.HSLToRGB(this);\n        return this;\n    }\n    static makeRGB(...args) {\n        const c = new Color();\n        let sanitized;\n        if (arguments.length < 3 || arguments.length > 4)\n            throw new Error(\"error: 3 or 4 arguments\");\n        sanitized = Color.Sanitizer.RGB(arguments[0], arguments[1], arguments[2]);\n        c.r = sanitized[0];\n        c.g = sanitized[1];\n        c.b = sanitized[2];\n        if (arguments.length == 4) {\n            c.a = arguments[3];\n        }\n        else {\n            c.a = 1.0;\n        }\n        Color.Converter.RGBToHSL(c);\n        return c;\n    }\n    static makeHSL(...args) {\n        const c = new Color();\n        let sanitized;\n        if (arguments.length < 3 || arguments.length > 4)\n            throw new Error(\"error: 3 or 4 arguments\");\n        sanitized = Color.Sanitizer.HSL(arguments[0], arguments[1], arguments[2]);\n        c.h = sanitized[0];\n        c.s = sanitized[1];\n        c.l = sanitized[2];\n        if (arguments.length == 4)\n            c.a = arguments[3];\n        else\n            c.a = 1.0;\n        Color.Converter.HSLToRGB(c);\n        return c;\n    }\n    static makeHEX(value) {\n        var c = new Color(), sanitized;\n        // Edit Ika 2018-0308\n        // Allow leading '#'\n        if (value && value.startsWith(\"#\"))\n            value = value.substr(1);\n        Color.Validator.checkHEX(value);\n        if (value.length == 3) {\n            sanitized = Color.Sanitizer.RGB(parseInt(value.substr(0, 1) + value.substr(0, 1), 16), parseInt(value.substr(1, 1) + value.substr(1, 1), 16), parseInt(value.substr(2, 1) + value.substr(2, 1), 16));\n        }\n        else if (value.length == 6) {\n            sanitized = Color.Sanitizer.RGB(parseInt(value.substr(0, 2), 16), parseInt(value.substr(2, 2), 16), parseInt(value.substr(4, 2), 16));\n        }\n        else\n            throw new Error(\"error: 3 or 6 arguments\");\n        c.r = sanitized[0];\n        c.g = sanitized[1];\n        c.b = sanitized[2];\n        c.a = 1.0; // TODO: Accept #xxxxxxxx (8 chars, too, for alpha)\n        Color.Converter.RGBToHSL(c);\n        return c;\n    }\n    /**\n     * Parse the given color string. Currently only these formate are recognized: hex, rgb, rgba.\n     *\n     * @method parse\n     * @static\n     * @memberof Color\n     * @param {string} str - The string representation to parse.\n     * @return {Color} The color instance that's represented by the given string.\n     */\n    static parse(str) {\n        if (typeof str == \"undefined\")\n            return null;\n        if ((str = str.trim().toLowerCase()).length == 0)\n            return null;\n        if (str.startsWith(\"#\"))\n            return Color.makeHEX(str.substring(1, str.length));\n        if (str.startsWith(\"rgb\")) {\n            var parts = str.match(/^rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,?\\s*(\\d*(?:\\.\\d+\\s*)?)\\)$/);\n            if (!parts) {\n                throw \"Unrecognized color format (2): \" + str;\n            }\n            // [ str, r, g, b, a|undefined ]\n            //   console.log(\"parts\", parts);\n            if (parts.length <= 4 || typeof parts[4] == \"undefined\" || parts[4] == \"\") {\n                return Color.makeRGB(parts[1], parts[2], parts[3]);\n            }\n            else {\n                return Color.makeRGB(parts[1], parts[2], parts[3], Number(parts[4]));\n            }\n        }\n        else {\n            throw \"Unrecognized color format (1): \" + str;\n        }\n    }\n    /**\n     * Create a clone of this color (RGB).\n     *\n     * @method clone\n     * @instance\n     * @memberof Color\n     * @return {Color} A clone of this color (in RGB mode).\n     */\n    clone() {\n        return Color.makeRGB(this.r, this.g, this.b, this.a);\n    }\n    /**\n     * Interpolate this color on the RGB scale.\n     *\n     * @method interpolate\n     * @instance\n     * @memberof Color\n     * @param {Color} c - The color to interpolate to.\n     * @param {number} t - An interpolation value between 0.0 and 1.0.\n     * @return {Color} A clone of this color (in RGB mode).\n     */\n    interpolate(c, t) {\n        this.r += (c.r - c.r) * t;\n        this.g += (c.g - c.g) * t;\n        this.b += (c.b - c.b) * t;\n        this.a += (c.a - c.a) * t;\n        return this;\n    }\n} // END class\nColor.Sanitizer = {\n    RGB: function (...args) {\n        var o = [];\n        if (arguments.length == 0) {\n            return [];\n        }\n        // const allAreFrac = Color.testFrac( arguments );\n        for (var i = 0; i < arguments.length; i++) {\n            var c = arguments[i];\n            if (\"string\" == typeof c && c.indexOf(\"%\") > -1) {\n                if ((c = parseInt(c)) == NaN)\n                    throw new Error(\"Bad format\");\n                if (c < 0 || c > 100)\n                    throw new Error(\"Bad format\");\n                o[i] = c / 100;\n            }\n            else {\n                if (\"string\" == typeof c && (c = parseInt(c)) == NaN) {\n                    throw new Error(\"Bad format\");\n                }\n                if (c < 0) {\n                    throw new Error(\"Bad format\");\n                }\n                //else if( allAreFrac ) o[i] = c; // c >= 0 && c <= 1 (all)\n                else if (c >= 0 && c < 1) {\n                    o[i] = c;\n                }\n                // else if(c >= 0.0 && c <= 1.0) o[i] = c;\n                else if (c >= 1 && c < 256) {\n                    o[i] = c / 255;\n                }\n                // ???\n                // else if(c >= 0 && c < 256) o[i] = c/255;\n                else\n                    throw new Error(\"Bad format (\" + c + \")\");\n            }\n        }\n        return o;\n    },\n    HSL: function (...args) {\n        if (arguments.length < 3 || arguments.length > 4)\n            throw new Error(\"3 or 4 arguments required\");\n        var h = arguments[0], s = arguments[1], l = arguments[2];\n        if (\"string\" == typeof h && (h = parseFloat(h)) == NaN)\n            throw new Error(\"Bad format for hue\");\n        if (h < 0 || h > 360)\n            throw new Error(\"Hue out of range (0..360)\");\n        else if (((\"\" + h).indexOf(\".\") > -1 && h > 1) || (\"\" + h).indexOf(\".\") == -1)\n            h /= 360;\n        if (\"string\" == typeof s && s.indexOf(\"%\") > -1) {\n            if ((s = parseInt(s)) == NaN)\n                throw new Error(\"Bad format for saturation\");\n            if (s < 0 || s > 100)\n                throw new Error(\"Bad format for saturation\");\n            s /= 100;\n        }\n        else if (s < 0 || s > 1)\n            throw new Error(\"Bad format for saturation\");\n        if (\"string\" == typeof l && l.indexOf(\"%\") > -1) {\n            if ((l = parseInt(l)) == NaN)\n                throw new Error(\"Bad format for lightness\");\n            if (l < 0 || l > 100)\n                throw new Error(\"Bad format for lightness\");\n            l /= 100;\n        }\n        else if (l < 0 || l > 1)\n            throw new Error(\"Bad format for lightness\");\n        return [h, s, l];\n    }\n}; // ENd sanitizer\nColor.Validator = {\n    /**\n     * Check a hexa color (without #)\n     */\n    checkHEX: (value) => {\n        if (value.length != 6 && value.length != 3)\n            throw new Error(\"Hexa color: bad length (\" + value.length + \"),\" + value);\n        value = value.toLowerCase();\n        //for( var i in value ) {\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charCodeAt(i);\n            if (!((c >= 48 && c <= 57) || (c >= 97 && c <= 102)))\n                throw new Error(`Hexa color: out of range for \"${value}\" at position ${i}.`);\n        }\n    }\n};\nColor.Converter = {\n    /**\n     * Calculates HSL Color.\n     * RGB must be normalized.\n     * http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n     */\n    RGBToHSL: (color) => {\n        var r = color.r;\n        var g = color.g;\n        var b = color.b;\n        var max = Math.max(r, g, b);\n        var min = Math.min(r, g, b);\n        color.l = (max + min) / 2;\n        if (max == min) {\n            color.h = color.s = 0; // achromatic\n        }\n        else {\n            var d = max - min;\n            color.s = color.l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n                case r:\n                    color.h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    color.h = (b - r) / d + 2;\n                    break;\n                case b:\n                    color.h = (r - g) / d + 4;\n                    break;\n            }\n            color.h /= 6;\n        }\n    },\n    /**\n     * Calculates RGB color (nomalized).\n     * HSL must be normalized.\n     *\n     * http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n     */\n    HSLToRGB: (color) => {\n        var h = color.h;\n        var s = color.s;\n        var l = color.l;\n        if (s == 0) {\n            color.r = color.g = color.b = l; // achromatic\n        }\n        else {\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            var p = 2 * l - q;\n            color.r = Color.Converter.hue2rgb(p, q, h + 1 / 3);\n            color.g = Color.Converter.hue2rgb(p, q, h);\n            color.b = Color.Converter.hue2rgb(p, q, h - 1 / 3);\n        }\n    },\n    hue2rgb: (p, q, t) => {\n        if (t < 0)\n            t += 1;\n        if (t > 1)\n            t -= 1;\n        if (t < 1 / 6)\n            return p + (q - p) * 6 * t;\n        if (t < 1 / 2)\n            return q;\n        if (t < 2 / 3)\n            return p + (q - p) * (2 / 3 - t) * 6;\n        return p;\n    }\n};\n//# sourceMappingURL=Color.js.map","// threejs.org/license\nconst REVISION = '124';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst CubeUVRefractionMapping = 307;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedShort565Type = 1019;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst RGBEFormat = RGBAFormat;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\nconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\nconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\nconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\nconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\nconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\nconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\nconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\nconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\nconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\nconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\nconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\nconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\nconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst GammaEncoding = 3007;\nconst RGBEEncoding = 3002;\nconst LogLuvEncoding = 3003;\nconst RGBM7Encoding = 3004;\nconst RGBM16Encoding = 3005;\nconst RGBDEncoding = 3006;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\nconst MathUtils = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\treturn uuid.toUpperCase();\n\n\t},\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\t// Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\tseededRandom: function ( s ) {\n\n\t\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t\t// Park-Miller algorithm\n\n\t\t_seed = _seed * 16807 % 2147483647;\n\n\t\treturn ( _seed - 1 ) / 2147483646;\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * MathUtils.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * MathUtils.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tsetQuaternionFromProperEuler: function ( q, a, b, c, order ) {\n\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c2 = cos( b / 2 );\n\t\tconst s2 = sin( b / 2 );\n\n\t\tconst c13 = cos( ( a + c ) / 2 );\n\t\tconst s13 = sin( ( a + c ) / 2 );\n\n\t\tconst c1_3 = cos( ( a - c ) / 2 );\n\t\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\t\tconst c3_1 = cos( ( c - a ) / 2 );\n\t\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYX':\n\t\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t}\n\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tObject.defineProperty( this, 'isVector2', { value: true } );\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tObject.defineProperty( this, 'isMatrix3', { value: true } );\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).copy( this ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nlet _canvas;\n\nconst ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\nlet textureId = 0;\n\nfunction Texture( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping;\n\n\tthis.wrapS = wrapS;\n\tthis.wrapT = wrapT;\n\n\tthis.magFilter = magFilter;\n\tthis.minFilter = minFilter;\n\n\tthis.anisotropy = anisotropy;\n\n\tthis.format = format;\n\tthis.internalFormat = null;\n\tthis.type = type;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tconst image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t// check cube texture with data textures\n\n\t\t\t\t\t\tif ( image[ i ].isDataTexture ) {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ].image ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = serializeImage( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tObject.defineProperty( this, 'isVector4', { value: true } );\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.image = {};\n\tthis.texture.image.width = width;\n\tthis.texture.image.height = height;\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.samples = 4;\n\n}\n\nWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultisampleRenderTarget,\n\n\tisWebGLMultisampleRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tObject.defineProperty( this, 'isQuaternion', { value: true } );\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tconst EPS = 0.000001;\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tObject.defineProperty( this, 'isVector3', { value: true } );\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min, max ) {\n\n\t\tObject.defineProperty( this, 'isBox3', { value: true } );\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$1.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$1 );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$1.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$1.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$1 ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\n\nconst _box = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nconst _box$1 = /*@__PURE__*/ new Box3();\n\nclass Sphere {\n\n\tconstructor( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : - 1;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$1.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3( 0, 0, - 1 );\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$2 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$2.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$2.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$2.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$2.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$2.dot( this.direction );\n\t\tconst d2 = _vector$2.dot( _vector$2 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$2 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tObject.defineProperty( this, 'isMatrix4', { value: true } );\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$1.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$1.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tObject.defineProperty( this, 'isEuler', { value: true } );\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order, update ) {\n\n\t\tconst clamp = MathUtils.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$1.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$1, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\ttoVector3( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$2 = new Vector3();\nconst _q1 = new Quaternion();\nconst _m1$1 = new Matrix4();\nconst _target = new Vector3();\n\nconst _position = new Vector3();\nconst _scale = new Vector3();\nconst _quaternion$2 = new Quaternion();\n\nconst _xAxis = new Vector3( 1, 0, 0 );\nconst _yAxis = new Vector3( 0, 1, 0 );\nconst _zAxis = new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tconst position = new Vector3();\n\tconst rotation = new Euler();\n\tconst quaternion = new Quaternion();\n\tconst scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation._onChange( onRotationChange );\n\tquaternion._onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.animations = [];\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t},\n\n\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$2.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$2.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t},\n\n\ttranslateX: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t},\n\n\ttranslateY: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t},\n\n\ttranslateZ: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t},\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t},\n\n\tlookAt: function ( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t},\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclear: function () {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t},\n\n\tattach: function ( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldScale: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion$2, target );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal, constant ) {\n\n\t\tObject.defineProperty( this, 'isPlane', { value: true } );\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n}\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$1.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$1 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$1 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3 );\n\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tObject.defineProperty( this, 'isColor', { value: true } );\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor = 2.0 ) {\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor = 2.0 ) {\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\nclass Face3 {\n\n\tconstructor( a, b, c, normal, color, materialIndex = 0 ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( let i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( let i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = false;\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.stencilWriteMask = 0xff;\n\tthis.stencilFunc = AlwaysStencilFunc;\n\tthis.stencilRef = 0;\n\tthis.stencilFuncMask = 0xff;\n\tthis.stencilFail = KeepStencilOp;\n\tthis.stencilZFail = KeepStencilOp;\n\tthis.stencilZPass = KeepStencilOp;\n\tthis.stencilWrite = false;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.toneMapped = true;\n\n\tthis.userData = {};\n\n\tthis.version = 0;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function ( /* shaderobject, renderer */ ) {},\n\n\tcustomProgramCacheKey: function () {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\nconst _vector$3 = new Vector3();\nconst _vector2$1 = new Vector2();\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.fromBufferAttribute( this, i );\n\t\t\t\t_vector$3.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$3.x = this.getX( i );\n\t\t\t_vector$3.y = this.getY( i );\n\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t_vector$3.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyNormalMatrix: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$3.x = this.getX( i );\n\t\t\t_vector$3.y = this.getY( i );\n\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t_vector$3.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$3.x = this.getX( i );\n\t\t\t_vector$3.y = this.getY( i );\n\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t_vector$3.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\nfunction Float16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nFloat16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat16BufferAttribute.prototype.constructor = Float16BufferAttribute;\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\nclass DirectGeometry {\n\n\tconstructor() {\n\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tcomputeGroups( geometry ) {\n\n\t\tconst groups = [];\n\n\t\tlet group, i;\n\t\tlet materialIndex = undefined;\n\n\t\tconst faces = geometry.faces;\n\n\t\tfor ( i = 0; i < faces.length; i ++ ) {\n\n\t\t\tconst face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t}\n\n\tfromGeometry( geometry ) {\n\n\t\tconst faces = geometry.faces;\n\t\tconst vertices = geometry.vertices;\n\t\tconst faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tconst hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tconst hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tconst morphTargets = geometry.morphTargets;\n\t\tconst morphTargetsLength = morphTargets.length;\n\n\t\tlet morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( let i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tconst morphNormals = geometry.morphNormals;\n\t\tconst morphNormalsLength = morphNormals.length;\n\n\t\tlet morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( let i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tconst skinIndices = geometry.skinIndices;\n\t\tconst skinWeights = geometry.skinWeights;\n\n\t\tconst hasSkinIndices = skinIndices.length === vertices.length;\n\t\tconst hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < faces.length; i ++ ) {\n\n\t\t\tconst face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tconst vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tconst normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tconst vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tconst color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tconst vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tconst vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( let j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( let j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tconst morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tlet max = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nlet _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nconst _m1$2 = new Matrix4();\nconst _obj = new Object3D();\nconst _offset = new Vector3();\nconst _box$2 = new Box3();\nconst _boxMorphTargets = new Box3();\nconst _vector$4 = new Vector3();\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\tthis.morphTargetsRelative = false;\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tsetAttribute: function ( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tdeleteAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\thasAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tconst positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tconst colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tconst lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tlet geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tlet direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tconst attribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tconst attribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tconst attribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tconst attribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tconst attribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tconst positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tconst normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tconst colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tconst uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tconst uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( const name in geometry.morphTargets ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( let i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\n\t\t\t\tconst attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tconst skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tconst skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$4.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t_vector$4.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$4.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$4.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$4.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$4.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$4.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );\n\n\t\t}\n\n\t},\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst attributeData = attribute.toJSON( data.data );\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tconst attributeData = attribute.toJSON( data.data );\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nconst _inverseMatrix = new Matrix4();\nconst _ray = new Ray();\nconst _sphere = new Sphere();\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _tempA = new Vector3();\nconst _tempB = new Vector3();\nconst _tempC = new Vector3();\n\nconst _morphA = new Vector3();\nconst _morphB = new Vector3();\nconst _morphC = new Vector3();\n\nconst _uvA = new Vector2();\nconst _uvB = new Vector2();\nconst _uvC = new Vector2();\n\nconst _intersectionPoint = new Vector3();\nconst _intersectionPointWorld = new Vector3();\n\nfunction Mesh( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry;\n\tthis.material = material;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconst isMultiMaterial = Array.isArray( material );\n\n\t\t\tconst vertices = geometry.vertices;\n\t\t\tconst faces = geometry.faces;\n\t\t\tlet uvs;\n\n\t\t\tconst faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\tfor ( let f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\tconst face = faces[ f ];\n\t\t\t\tconst faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\tconst fvA = vertices[ face.a ];\n\t\t\t\tconst fvB = vertices[ face.b ];\n\t\t\t\tconst fvC = vertices[ face.c ];\n\n\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\tconst uvs_f = uvs[ f ];\n\t\t\t\t\t\t_uvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t_uvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t_uvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = face;\n\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA.fromBufferAttribute( position, a );\n\t_vB.fromBufferAttribute( position, b );\n\t_vC.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA.add( _morphA );\n\t\t_vB.add( _morphB );\n\t\t_vC.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA );\n\t\tobject.boneTransform( b, _vB );\n\t\tobject.boneTransform( c, _vC );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tconst face = new Face3( a, b, c );\n\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxBufferGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tthis.glslVersion = null;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = Object.assign( {}, source.extensions );\n\n\tthis.glslVersion = source.glslVersion;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tconst data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.glslVersion = this.glslVersion;\n\tdata.uniforms = {};\n\n\tfor ( const name in this.uniforms ) {\n\n\t\tconst uniform = this.uniforms[ name ];\n\t\tconst value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tconst extensions = {};\n\n\tfor ( const key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tObject3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\nfunction PerspectiveCamera( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov;\n\tthis.zoom = 1;\n\n\tthis.near = near;\n\tthis.far = far;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tconst vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nconst fov = 90, aspect = 1;\n\nfunction CubeCamera( near, far, renderTarget ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\treturn;\n\n\t}\n\n\tthis.renderTarget = renderTarget;\n\n\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.layers = this.layers;\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.layers = this.layers;\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.layers = this.layers;\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.layers = this.layers;\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.layers = this.layers;\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.layers = this.layers;\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n\t// Why CubeTexture._needsFlipEnvMap is necessary:\n\t//\n\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t// when using WebGLCubeRenderTarget.texture as a cube texture.\n\n\tthis._needsFlipEnvMap = true;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\nfunction WebGLCubeRenderTarget( size, options, dummy ) {\n\n\tif ( Number.isInteger( options ) ) {\n\n\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\toptions = dummy;\n\n\t}\n\n\tWebGLRenderTarget.call( this, size, size, options );\n\n\toptions = options || {};\n\n\tthis.texture = new CubeTexture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture._needsFlipEnvMap = false;\n\n}\n\nWebGLCubeRenderTarget.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLCubeRenderTarget.prototype.constructor = WebGLCubeRenderTarget;\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nWebGLCubeRenderTarget.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\tthis.texture.type = texture.type;\n\tthis.texture.format = RGBAFormat; // see #18859\n\tthis.texture.encoding = texture.encoding;\n\n\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\tthis.texture.minFilter = texture.minFilter;\n\tthis.texture.magFilter = texture.magFilter;\n\n\tconst shader = {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: /* glsl */`\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t`,\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t`\n\t};\n\n\tconst geometry = new BoxBufferGeometry( 5, 5, 5 );\n\n\tconst material = new ShaderMaterial( {\n\n\t\tname: 'CubemapFromEquirect',\n\n\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\tside: BackSide,\n\t\tblending: NoBlending\n\n\t} );\n\n\tmaterial.uniforms.tEquirect.value = texture;\n\n\tconst mesh = new Mesh( geometry, material );\n\n\tconst currentMinFilter = texture.minFilter;\n\n\t// Avoid blurred poles\n\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\tconst camera = new CubeCamera( 1, 10, this );\n\tcamera.update( renderer, mesh );\n\n\ttexture.minFilter = currentMinFilter;\n\n\tmesh.geometry.dispose();\n\tmesh.material.dispose();\n\n\treturn this;\n\n};\n\nWebGLCubeRenderTarget.prototype.clear = function ( renderer, color, depth, stencil ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\trenderer.setRenderTarget( this, i );\n\n\t\trenderer.clear( color, depth, stencil );\n\n\t}\n\n\trenderer.setRenderTarget( currentRenderTarget );\n\n};\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$1.center.set( 0, 0, 0 );\n\t\t_sphere$1.radius = 0.7071067811865476;\n\t\t_sphere$1.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$5 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneBufferGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor.xyz *= color.xyz;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmissionmap_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n#endif\";\n\nvar transmissionmap_pars_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\tuniform sampler2D transmissionMap;\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSMISSION\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSMISSION\\n\\tuniform float transmission;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <transmissionmap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <transmissionmap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSMISSION\\n\\t\\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmissionmap_fragment: transmissionmap_fragment,\n\ttransmissionmap_pars_fragment: transmissionmap_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshtoon_frag: meshtoon_frag,\n\tmeshtoon_vert: meshtoon_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = 0;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tif ( background.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t// TODO Deprecate\n\n\t\t\t\tbackground = background.texture;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry, index );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tconst geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( name === 'instanceColor' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceColor );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute, 3, type, false, 12, 0 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst currentRenderList = renderer.getRenderList();\n\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\t\t\t\t\trenderer.setRenderList( currentRenderList );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ] !== null;\n\n\t\t\t}\n\n\t\t\tlet extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension !== null;\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( ! this.has( name ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = new WeakMap();\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\t\tconst buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( const name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries.delete( geometry );\n\n\t\tconst attribute = wireframeAttributes.get( buffergeometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( buffergeometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tlet buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries.set( geometry, buffergeometry );\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tlet influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst influence = workInfluences[ i ];\n\t\t\tconst index = influence[ 0 ];\n\t\t\tconst value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction DataTexture2DArray( data = null, width = 1, height = 1, depth = 1 ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data, width, height, depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nfunction DataTexture3D( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data, width, height, depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// uint\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tconst cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tconst source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tconst parameterNames = [\n\t\t'precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor',\n\t\t'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV',\n\t\t'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',\n\t\t'roughnessMap', 'metalnessMap', 'gradientMap',\n\t\t'alphaMap', 'combine', 'vertexColors', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2',\n\t\t'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning',\n\t\t'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals',\n\t\t'maxMorphTargets', 'maxMorphNormals', 'premultipliedAlpha',\n\t\t'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights',\n\t\t'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows',\n\t\t'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights',\n\t\t'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering',\n\t\t'sheen', 'transmissionMap'\n\t];\n\n\tfunction getMaxBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( map && map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t} else {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet vertexShader, fragmentShader;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmissionMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tfor ( let i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList( properties ) {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transparent = [];\n\n\tconst defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists( properties ) {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, camera ) {\n\n\t\tconst cameras = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList( properties );\n\t\t\tlists.set( scene, new WeakMap() );\n\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t} else {\n\n\t\t\tlist = cameras.get( camera );\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList( properties );\n\t\t\t\tcameras.set( camera, list );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [] );\n\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\nvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {};\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tlet useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t}\n\n\t\t\tlet useSkinning = false;\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst useInstancing = object.isInstancedMesh === true;\n\n\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = null;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst currentScissor = new Vector4();\n\tconst currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = null;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tconst image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tconst supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format );\n\n\t\tlet glType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tlet mipmap;\n\t\tconst mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// validation checks for WebGL 1\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\tconst isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\tconst cubeImage = [];\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t} else {\n\n\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst image = cubeImage[ 0 ],\n\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\tlet mipmaps;\n\n\t\tif ( isCompressed ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t// We assume images for cube map have the same size.\n\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( renderTarget.texture.format );\n\t\tconst glType = utils.convert( renderTarget.texture.type );\n\t\tconst glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tconst glType = utils.convert( renderTarget.texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\tif ( isWebGL2 && renderTarget.texture.format === RGBFormat && ( renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType ) ) {\n\n\t\t\trenderTarget.texture.format = RGBAFormat;\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tconst glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tconst glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tlet warnedTexture2D = false;\n\tlet warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\n\t\tsetTextureCube( texture, slot );\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBIntegerFormat ) return 36248;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nfunction ArrayCamera( array = [] ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array;\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\nfunction WebXRController() {\n\n\tthis._targetRay = null;\n\tthis._grip = null;\n\tthis._hand = null;\n\n}\n\nObject.assign( WebXRController.prototype, {\n\n\tconstructor: WebXRController,\n\n\tgetHandSpace: function () {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = [];\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t\tif ( window.XRHand ) {\n\n\t\t\t\tfor ( let i = 0; i <= window.XRHand.LITTLE_PHALANX_TIP; i ++ ) {\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\tthis._hand.joints.push( joint );\n\t\t\t\t\t// ??\n\t\t\t\t\tthis._hand.add( joint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t},\n\n\tgetTargetRaySpace: function () {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t},\n\n\tgetGripSpace: function () {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function ( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdate: function ( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( let i = 0; i <= window.XRHand.LITTLE_PHALANX_TIP; i ++ ) {\n\n\t\t\t\t\tif ( inputSource.hand[ i ] ) {\n\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tconst jointPose = frame.getJointPose( inputSource.hand[ i ], referenceSpace );\n\t\t\t\t\t\tconst joint = hand.joints[ i ];\n\n\t\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t\t\t// Custom events\n\n\t\t\t\t\t\t// Check pinch\n\t\t\t\t\t\tconst indexTip = hand.joints[ window.XRHand.INDEX_PHALANX_TIP ];\n\t\t\t\t\t\tconst thumbTip = hand.joints[ window.XRHand.THUMB_PHALANX_TIP ];\n\t\t\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction WebXRManager( renderer, gl ) {\n\n\tconst scope = this;\n\n\tlet session = null;\n\n\tlet framebufferScaleFactor = 1.0;\n\n\tlet referenceSpace = null;\n\tlet referenceSpaceType = 'local-floor';\n\n\tlet pose = null;\n\n\tconst controllers = [];\n\tconst inputSourcesMap = new Map();\n\n\t//\n\n\tconst cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tconst cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tconst cameras = [ cameraL, cameraR ];\n\n\tconst cameraVR = new ArrayCamera();\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\tlet _currentDepthNear = null;\n\tlet _currentDepthFar = null;\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.isPresenting = false;\n\n\tthis.getController = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getTargetRaySpace();\n\n\t};\n\n\tthis.getControllerGrip = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getGripSpace();\n\n\t};\n\n\tthis.getHand = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getHandSpace();\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\tif ( controller ) {\n\n\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\tcontroller.disconnect( inputSource );\n\n\t\t} );\n\n\t\tinputSourcesMap.clear();\n\n\t\t//\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t\tscope.isPresenting = false;\n\n\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t}\n\n\tfunction onRequestReferenceSpace( value ) {\n\n\t\treferenceSpace = value;\n\n\t\tanimation.setContext( session );\n\t\tanimation.start();\n\n\t\tscope.isPresenting = true;\n\n\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t\tif ( scope.isPresenting === true ) {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t}\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t\tif ( scope.isPresenting === true ) {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t}\n\n\t};\n\n\tthis.getReferenceSpace = function () {\n\n\t\treturn referenceSpace;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\tgl.makeXRCompatible();\n\n\t\t\t}\n\n\t\t\tconst layerInit = {\n\t\t\t\tantialias: attributes.antialias,\n\t\t\t\talpha: attributes.alpha,\n\t\t\t\tdepth: attributes.depth,\n\t\t\t\tstencil: attributes.stencil,\n\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tconst baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t//\n\n\t\t\tsession.addEventListener( 'inputsourceschange', updateInputSources );\n\n\t\t}\n\n\t};\n\n\tfunction updateInputSources( event ) {\n\n\t\tconst inputSources = session.inputSources;\n\n\t\t// Assign inputSources to available controllers\n\n\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t}\n\n\t\t// Notify disconnected\n\n\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\tconst inputSource = event.removed[ i ];\n\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Notify connected\n\n\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\tconst inputSource = event.added[ i ];\n\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tconst cameraLPos = new Vector3();\n\tconst cameraRPos = new Vector3();\n\n\t/**\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */\n\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t// VR systems will have identical far and near planes, and\n\t\t// most likely identical top and bottom frustum extents.\n\t\t// Use the left camera for these values.\n\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\tconst left = near * leftFov;\n\t\tconst right = near * rightFov;\n\n\t\t// Calculate the new camera's position offset from the\n\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t// TODO: Better way to apply this offset?\n\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.translateX( xOffset );\n\t\tcamera.translateZ( zOffset );\n\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t// Find the union of the frustum values of the cameras and scale\n\t\t// the values so that the near plane's position does not change in world space,\n\t\t// although must now be relative to the new union camera.\n\t\tconst near2 = near + zOffset;\n\t\tconst far2 = far + zOffset;\n\t\tconst left2 = left - xOffset;\n\t\tconst right2 = right + ( ipd - xOffset );\n\t\tconst top2 = topFov * far / far2 * near2;\n\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t}\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\tsession.updateRenderState( {\n\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\tdepthFar: cameraVR.far\n\t\t\t} );\n\n\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t}\n\n\t\tconst parent = camera.parent;\n\t\tconst cameras = cameraVR.cameras;\n\n\t\tupdateCamera( cameraVR, parent );\n\n\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t}\n\n\t\t// update camera and its children\n\n\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\tconst children = camera.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t}\n\n\t\t// update projection matrix for proper view frustum culling\n\n\t\tif ( cameras.length === 2 ) {\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t} else {\n\n\t\t\t// assume single camera setup (AR)\n\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tconst views = pose.views;\n\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tconst view = views[ i ];\n\t\t\t\tconst viewport = baseLayer.getViewport( view );\n\n\t\t\t\tconst camera = cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst inputSources = session.inputSources;\n\n\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tconst controller = controllers[ i ];\n\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n}\n\nObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tconst maxMipLevel = properties.get( envMap ).__maxMipLevel;\n\n\t\t\tif ( maxMipLevel !== undefined ) {\n\n\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transmission.value = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its state isolated from the parent render call.\n\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _framebuffer = null;\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentFramebuffer = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( capabilities.isWebGL2 === false ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'OES_vertex_array_object' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists( properties );\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// shadow map\n\n\tconst shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getClearColor() now requires a Color as an argument' );\n\n\t\t\ttarget = new Color();\n\n\t\t}\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\n\t\txr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tconst programInfo = properties.get( material ).program;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tconst buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights();\n\n\t\tconst compiled = new WeakMap();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tif ( compiled.has( material2 ) === false ) {\n\n\t\t\t\t\t\t\tinitMaterial( material2, scene, object );\n\t\t\t\t\t\t\tcompiled.set( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( compiled.has( material ) === false ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\t\tcompiled.set( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( xr.isPresenting ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tlet renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// reset caching for this frame\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tcamera = xr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights();\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\trenderStateStack.pop();\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\tcurrentRenderList = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLightsView( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction initMaterial( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet program = materialProperties.program;\n\t\tlet programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list, envMap still needs the update here to avoid a frame-late effect\n\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.envMap = cubemaps.get( material.envMap || environment );\n\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = cubemaps.get( material.envMap || materialProperties.environment );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = materialProperties.program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.environment !== environment ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tinitMaterial( material, scene, object );\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tconst bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tlet size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) _gl.bindFramebuffer( 36160, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderList = function () {\n\n\t\treturn currentRenderList;\n\n\t};\n\n\tthis.setRenderList = function ( renderList ) {\n\n\t\tcurrentRenderList = renderList;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tlet framebuffer = _framebuffer;\n\t\tlet isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tlet restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\t\tconst glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nfunction WebGL1Renderer( parameters ) {\n\n\tWebGLRenderer.call( this, parameters );\n\n}\n\nWebGL1Renderer.prototype = Object.assign( Object.create( WebGLRenderer.prototype ), {\n\n\tconstructor: WebGL1Renderer,\n\n\tisWebGL1Renderer: true\n\n} );\n\nclass FogExp2 {\n\n\tconstructor( color, density ) {\n\n\t\tObject.defineProperty( this, 'isFogExp2', { value: true } );\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near, far ) {\n\n\t\tObject.defineProperty( this, 'isFog', { value: true } );\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'isScene', { value: true } );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.environment !== null ) data.object.environment = this.environment.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n\tthis.uuid = MathUtils.generateUUID();\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function ( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new InterleavedBuffer( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n} );\n\nconst _vector$6 = new Vector3();\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.name = '';\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t},\n\n\tneedsUpdate: {\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.data.needsUpdate = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function ( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\nlet _geometry;\n\nconst _intersectPoint = new Vector3();\nconst _worldScale = new Vector3();\nconst _mvPosition = new Vector3();\n\nconst _alignedPosition = new Vector2();\nconst _rotatedPosition = new Vector2();\nconst _viewWorldMatrix = new Matrix4();\n\nconst _vA$1 = new Vector3();\nconst _vB$1 = new Vector3();\nconst _vC$1 = new Vector3();\n\nconst _uvA$1 = new Vector2();\nconst _uvB$1 = new Vector2();\nconst _uvC$1 = new Vector2();\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( _geometry === undefined ) {\n\n\t\t_geometry = new BufferGeometry();\n\n\t\tconst float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = _geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA$1.set( 0, 0 );\n\t\t_uvB$1.set( 1, 0 );\n\t\t_uvC$1.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB$1.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$4 = new Vector3();\nconst _v2$2 = new Vector3();\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis._currentLevel = 0;\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n\tthis.autoUpdate = true;\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tisLOD: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t},\n\n\tgetCurrentLevel: function () {\n\n\t\treturn this._currentLevel;\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$4.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$4 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t},\n\n\tupdate: function ( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$4.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$4.distanceTo( _v2$2 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\nconst _basePosition = new Vector3();\n\nconst _skinIndex = new Vector4();\nconst _skinWeight = new Vector4();\n\nconst _vector$7 = new Vector3();\nconst _matrix$1 = new Matrix4();\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t}\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tcopy: function ( source ) {\n\n\t\tMesh.prototype.copy.call( this, source );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tboneTransform: function ( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix$1.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$7.copy( _basePosition ).applyMatrix4( _matrix$1 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n} );\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\nconst _offsetMatrix = new Matrix4();\nconst _identityMatrix = new Matrix4();\n\nfunction Skeleton( bones = [], boneInverses = [] ) {\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneInverses = boneInverses;\n\tthis.boneMatrices = null;\n\n\tthis.boneTexture = null;\n\tthis.boneTextureSize = 0;\n\n\tthis.frame = - 1;\n\n\tthis.init();\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tinit: function () {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: function () {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tdispose: function ( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t},\n\n\tfromJSON: function ( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\nconst _instanceLocalMatrix = new Matrix4();\nconst _instanceWorldMatrix = new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = new Mesh();\n\nfunction InstancedMesh( geometry, material, count ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\tthis.instanceColor = null;\n\n\tthis.count = count;\n\n\tthis.frustumCulled = false;\n\n}\n\nInstancedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: InstancedMesh,\n\n\tisInstancedMesh: true,\n\n\tcopy: function ( source ) {\n\n\t\tMesh.prototype.copy.call( this, source );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t},\n\n\tgetColorAt: function ( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t},\n\n\tgetMatrixAt: function ( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t},\n\n\tsetColorAt: function ( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new BufferAttribute( new Float32Array( this.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t},\n\n\tsetMatrixAt: function ( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\nconst _start = new Vector3();\nconst _end = new Vector3();\nconst _inverseMatrix$1 = new Matrix4();\nconst _ray$1 = new Ray();\nconst _sphere$2 = new Sphere();\n\nfunction Line( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry;\n\tthis.material = material;\n\n\tthis.updateMorphTargets();\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t},\n\n\tcomputeLineDistances: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconst vertices = geometry.vertices;\n\t\t\tconst lineDistances = geometry.lineDistances;\n\n\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\tfor ( let i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\t\t_sphere$2.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst indices = index.array;\n\n\t\t\t\tfor ( let i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = indices[ i ];\n\t\t\t\t\tconst b = indices[ i + 1 ];\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconst vertices = geometry.vertices;\n\t\t\tconst nbVertices = vertices.length;\n\n\t\t\tfor ( let i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nconst _start$1 = new Vector3();\nconst _end$1 = new Vector3();\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconst vertices = geometry.vertices;\n\t\t\tconst lineDistances = geometry.lineDistances;\n\n\t\t\tfor ( let i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t_start$1.copy( vertices[ i ] );\n\t\t\t\t_end$1.copy( vertices[ i + 1 ] );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\nconst _inverseMatrix$2 = new Matrix4();\nconst _ray$2 = new Ray();\nconst _sphere$3 = new Sphere();\nconst _position$1 = new Vector3();\n\nfunction Points( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry;\n\tthis.material = material;\n\n\tthis.updateMorphTargets();\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\t\t_sphere$3.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst indices = index.array;\n\n\t\t\t\tfor ( let i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = indices[ i ];\n\n\t\t\t\t\t_position$1.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\t\ttestPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_position$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\ttestPoint( _position$1, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst vertices = geometry.vertices;\n\n\t\t\tfor ( let i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\ttestPoint( vertices[ i ], i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray$2.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray$2.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n\tconst scope = this;\n\n\tfunction updateVideo() {\n\n\t\tscope.needsUpdate = true;\n\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t}\n\n\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t}\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t},\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps = false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\nlet _geometryId = 0; // Geometry uses even numbers as Id\nconst _m1$3 = new Matrix4();\nconst _obj$1 = new Object3D();\nconst _offset$1 = new Vector3();\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: _geometryId += 2 } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( let i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tconst vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tconst face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( let j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$3.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$3.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$3.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$3.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$3.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj$1.lookAt( vector );\n\n\t\t_obj$1.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj$1.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tconst scope = this;\n\n\t\tconst index = geometry.index !== null ? geometry.index : undefined;\n\t\tconst attributes = geometry.attributes;\n\n\t\tif ( attributes.position === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst position = attributes.position;\n\t\tconst normal = attributes.normal;\n\t\tconst color = attributes.color;\n\t\tconst uv = attributes.uv;\n\t\tconst uv2 = attributes.uv2;\n\n\t\tif ( uv2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromBufferAttribute( position, i ) );\n\n\t\t\tif ( color !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromBufferAttribute( color, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tconst vertexColors = ( color === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone()\n\t\t\t];\n\n\t\t\tconst vertexNormals = ( normal === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromBufferAttribute( normal, a ),\n\t\t\t\tnew Vector3().fromBufferAttribute( normal, b ),\n\t\t\t\tnew Vector3().fromBufferAttribute( normal, c )\n\t\t\t];\n\n\t\t\tconst face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uv !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, a ),\n\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, b ),\n\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, c )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uv2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, a ),\n\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, b ),\n\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, c )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\taddFace( index.getX( j ), index.getX( j + 1 ), index.getX( j + 2 ), group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < index.count; i += 3 ) {\n\n\t\t\t\t\taddFace( index.getX( i ), index.getX( i + 1 ), index.getX( i + 2 ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset$1 ).negate();\n\n\t\tthis.translate( _offset$1.x, _offset$1.y, _offset$1.z );\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tconst center = this.boundingSphere.center;\n\t\tconst radius = this.boundingSphere.radius;\n\n\t\tconst s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tconst matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( let f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tconst face = this.faces[ f ];\n\n\t\t\tconst vA = this.vertices[ face.a ];\n\t\t\tconst vB = this.vertices[ face.b ];\n\t\t\tconst vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted = true ) {\n\n\t\tconst vertices = new Array( this.vertices.length );\n\n\t\tfor ( let v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( let f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tconst face = this.faces[ f ];\n\n\t\t\t\tconst vA = this.vertices[ face.a ];\n\t\t\t\tconst vB = this.vertices[ face.b ];\n\t\t\t\tconst vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( let f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tconst face = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( let f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tconst face = this.faces[ f ];\n\n\t\t\tconst vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( let f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tconst face = this.faces[ f ];\n\n\t\t\tconst vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( let f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tconst face = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( let i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tconst tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( let i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tconst dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tconst dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tfor ( let f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tconst faceNormal = new Vector3();\n\t\t\t\t\tconst vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tfor ( let f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tconst face = this.faces[ f ];\n\n\t\t\t\tconst faceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tconst vertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( let f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tconst face = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset = 0 ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet normalMatrix;\n\t\tconst vertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( let i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tconst vertex = vertices2[ i ];\n\n\t\t\tconst vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( let i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( let i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tconst face = faces2[ i ];\n\t\t\tlet normal, color;\n\t\t\tconst faceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tconst faceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( let j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( let j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( let i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tconst faceVertexUvs2 = geometry.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) this.faceVertexUvs[ i ] = [];\n\n\t\t\tfor ( let j = 0, jl = faceVertexUvs2.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uvs2 = faceVertexUvs2[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( let k = 0, kl = uvs2.length; k < kl; k ++ ) {\n\n\t\t\t\t\tuvsCopy.push( uvs2[ k ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function ( precisionPoints = 4 ) {\n\n\t\tconst verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tconst unique = [], changes = [];\n\n\t\tconst precision = Math.pow( 10, precisionPoints );\n\n\t\tfor ( let i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tconst v = this.vertices[ i ];\n\t\t\tconst key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tconst faceIndicesToRemove = [];\n\n\t\tfor ( let i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tconst face = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tconst indices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tconst idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( let j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tconst diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tconst faces = this.faces;\n\t\tconst length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tconst uvs1 = this.faceVertexUvs[ 0 ];\n\t\tconst uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tlet newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tconst vertices = [];\n\n\t\tfor ( let i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tconst vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tconst faces = [];\n\t\tconst normals = [];\n\t\tconst normalsHash = {};\n\t\tconst colors = [];\n\t\tconst colorsHash = {};\n\t\tconst uvs = [];\n\t\tconst uvsHash = {};\n\n\t\tfor ( let i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tconst face = this.faces[ i ];\n\n\t\t\tconst hasMaterial = true;\n\t\t\tconst hasFaceUv = false; // deprecated\n\t\t\tconst hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tconst hasFaceNormal = face.normal.length() > 0;\n\t\t\tconst hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tconst hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tconst hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tlet faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tconst faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tconst vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tconst vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tconst hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tconst hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tconst hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tconst vertices = source.vertices;\n\n\t\tfor ( let i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tconst colors = source.colors;\n\n\t\tfor ( let i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tconst faces = source.faces;\n\n\t\tfor ( let i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( let i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tconst faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( let k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphTargets = source.morphTargets;\n\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( let j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( let j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tconst morphNormals = source.morphNormals;\n\n\t\tfor ( let i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tconst morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( let j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tconst destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( let j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tconst skinWeights = source.skinWeights;\n\n\t\tfor ( let i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tconst skinIndices = source.skinIndices;\n\n\t\tfor ( let i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tconst lineDistances = source.lineDistances;\n\n\t\tfor ( let i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nclass BoxGeometry extends Geometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass CircleBufferGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass CircleGeometry extends Geometry {\n\n\tconstructor( radius, segments, thetaStart, thetaLength ) {\n\n\t\tsuper();\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass CylinderBufferGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n}\n\nclass CylinderGeometry extends Geometry {\n\n\tconstructor( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n}\n\nclass ConeBufferGeometry extends CylinderBufferGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n}\n\nclass PolyhedronBufferGeometry extends BufferGeometry {\n\n\tconstructor( vertices, indices, radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass DodecahedronBufferGeometry extends PolyhedronBufferGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends Geometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tsuper();\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nconst _v0$2 = new Vector3();\nconst _v1$5 = new Vector3();\nconst _normal$1 = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry, thresholdAngle ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tgeometry = new BufferGeometry().fromGeometry( geometry );\n\n\t\t}\n\n\t\tconst precisionPoints = 4;\n\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\tconst thresholdDot = Math.cos( MathUtils.DEG2RAD * thresholdAngle );\n\n\t\tconst indexAttr = geometry.getIndex();\n\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\tconst indexArr = [ 0, 0, 0 ];\n\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\tconst hashes = new Array( 3 );\n\n\t\tconst edgeData = {};\n\t\tconst vertices = [];\n\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\tif ( indexAttr ) {\n\n\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t} else {\n\n\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t}\n\n\t\t\tconst { a, b, c } = _triangle;\n\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t_triangle.getNormal( _normal$1 );\n\n\t\t\t// create hashes for the edge from the vertices\n\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t// skip degenerate triangles\n\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// iterate over every edge\n\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\tif ( _normal$1.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\tnormal: _normal$1.clone(),\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\tfor ( const key in edgeData ) {\n\n\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t_v0$2.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t_v1$5.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\tvertices.push( _v0$2.x, _v0$2.y, _v0$2.z );\n\t\t\t\tvertices.push( _v1$5.x, _v1$5.y, _v1$5.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nconst ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeBufferGeometry extends BufferGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends Geometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n}\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronBufferGeometry extends PolyhedronBufferGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nclass IcosahedronGeometry extends Geometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass LatheBufferGeometry extends BufferGeometry {\n\n\tconstructor( points, segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = MathUtils.clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tconst normals = this.attributes.normal.array;\n\t\t\tconst n1 = new Vector3();\n\t\t\tconst n2 = new Vector3();\n\t\t\tconst n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tconst base = segments * points.length * 3;\n\n\t\t\tfor ( let i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nclass LatheGeometry extends Geometry {\n\n\tconstructor( points, segments, phiStart, phiLength ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass OctahedronBufferGeometry extends PolyhedronBufferGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nclass OctahedronGeometry extends Geometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\n/**\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tconst indices = [];\n\tconst vertices = [];\n\tconst normals = [];\n\tconst uvs = [];\n\n\tconst EPS = 0.00001;\n\n\tconst normal = new Vector3();\n\n\tconst p0 = new Vector3(), p1 = new Vector3();\n\tconst pu = new Vector3(), pv = new Vector3();\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tconst sliceCount = slices + 1;\n\n\tfor ( let i = 0; i <= stacks; i ++ ) {\n\n\t\tconst v = i / stacks;\n\n\t\tfor ( let j = 0; j <= slices; j ++ ) {\n\n\t\t\tconst u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( let i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( let j = 0; j < slices; j ++ ) {\n\n\t\t\tconst a = i * sliceCount + j;\n\t\t\tconst b = i * sliceCount + j + 1;\n\t\t\tconst c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tconst d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\nclass PlaneGeometry extends Geometry {\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends Geometry {\n\n\tconstructor( vertices, indices, radius, detail ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass RingBufferGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass RingGeometry extends Geometry {\n\n\tconstructor( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass ShapeBufferGeometry extends BufferGeometry {\n\n\tconstructor( shapes, curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON$2( shapes, data );\n\n\t}\n\n}\n\nfunction toJSON$2( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass ShapeGeometry extends Geometry {\n\n\tconstructor( shapes, curveSegments ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = Geometry.prototype.toJSON.call( this );\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON$3( shapes, data );\n\n\t}\n\n}\n\nfunction toJSON$3( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereBufferGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass SphereGeometry extends Geometry {\n\n\tconstructor( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass TetrahedronBufferGeometry extends PolyhedronBufferGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends Geometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tsuper();\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\n/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nclass TextBufferGeometry extends ExtrudeBufferGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tsuper( shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n}\n\n/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nclass TextGeometry extends Geometry {\n\n\tconstructor( text, parameters ) {\n\n\t\tsuper();\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass TorusBufferGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass TorusGeometry extends Geometry {\n\n\tconstructor( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass TorusKnotBufferGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends Geometry {\n\n\tconstructor( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass TubeBufferGeometry extends BufferGeometry {\n\n\tconstructor( path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass TubeGeometry extends Geometry {\n\n\tconstructor( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\t\tconst bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\n\t\t// helper variables\n\n\t\tconst edge = [ 0, 0 ], edges = {};\n\t\tconst keys = [ 'a', 'b', 'c' ];\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tconst faces = geometry.faces;\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tconst edge1 = face[ keys[ j ] ];\n\t\t\t\t\tconst edge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tconst key = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( const key in edges ) {\n\n\t\t\t\tconst e = edges[ key ];\n\n\t\t\t\tlet vertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst start = group.start;\n\t\t\t\t\tconst count = group.count;\n\n\t\t\t\t\tfor ( let i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst edge1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst edge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\t\tconst key = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( const key in edges ) {\n\n\t\t\t\t\tconst e = edges[ key ];\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\n/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 1.0;\n\tthis.metalness = 0.0;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.vertexTangents = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.vertexTangents = source.vertexTangents;\n\n\treturn this;\n\n};\n\n/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *  ior: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = {\n\n\t\t'STANDARD': '',\n\t\t'PHYSICAL': ''\n\n\t};\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.clearcoat = 0.0;\n\tthis.clearcoatMap = null;\n\tthis.clearcoatRoughness = 0.0;\n\tthis.clearcoatRoughnessMap = null;\n\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\tthis.clearcoatNormalMap = null;\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tObject.defineProperty( this, 'ior', {\n\t\tget: function () {\n\n\t\t\treturn ( 1 + 0.4 * this.reflectivity ) / ( 1 - 0.4 * this.reflectivity );\n\n\t\t},\n\t\tset: function ( ior ) {\n\n\t\t\tthis.reflectivity = MathUtils.clamp( 2.5 * ( ior - 1 ) / ( ior + 1 ), 0, 1 );\n\n\t\t}\n\t} );\n\n\tthis.sheen = null; // null will disable sheen bsdf\n\n\tthis.transmission = 0.0;\n\tthis.transmissionMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = {\n\n\t\t'STANDARD': '',\n\t\t'PHYSICAL': ''\n\n\t};\n\n\tthis.clearcoat = source.clearcoat;\n\tthis.clearcoatMap = source.clearcoatMap;\n\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\tthis.reflectivity = source.reflectivity;\n\n\tif ( source.sheen ) {\n\n\t\tthis.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\n\t} else {\n\n\t\tthis.sheen = null;\n\n\t}\n\n\tthis.transmission = source.transmission;\n\tthis.transmissionMap = source.transmissionMap;\n\n\treturn this;\n\n};\n\n/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\tthis.gradientMap = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( Material.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\tthis.gradientMap = source.gradientMap;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n// DECLARE ALIAS AFTER assign prototype\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n} );\n\n/**\n * A Track of Boolean keyframe values.\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n * A Track of keyframe values that represent color.\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n * A Track of numeric keyframe values.\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * A Track of quaternion keyframe values.\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n * A Track that interpolates Strings\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n * A Track of vectored keyframe values.\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\nfunction AnimationClip( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = duration;\n\tthis.blendMode = blendMode;\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new AnimationClip( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new AnimationClip( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new AnimationClip( this.name, this.duration, tracks, this.blendMode );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn AnimationClip.toJSON( this );\n\n\t}\n\n} );\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tconst scope = this;\n\n\tlet isLoading = false;\n\tlet itemsLoaded = 0;\n\tlet itemsTotal = 0;\n\tlet urlModifier = undefined;\n\tconst handlers = [];\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\n\t\treturn this;\n\n\t};\n\n\tthis.addHandler = function ( regex, loader ) {\n\n\t\thandlers.push( regex, loader );\n\n\t\treturn this;\n\n\t};\n\n\tthis.removeHandler = function ( regex ) {\n\n\t\tconst index = handlers.indexOf( regex );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\thandlers.splice( index, 2 );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tthis.getHandler = function ( file ) {\n\n\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tconst regex = handlers[ i ];\n\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nfunction Loader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.crossOrigin = 'anonymous';\n\tthis.withCredentials = false;\n\tthis.path = '';\n\tthis.resourcePath = '';\n\tthis.requestHeader = {};\n\n}\n\nObject.assign( Loader.prototype, {\n\n\tload: function ( /* url, onLoad, onProgress, onError */ ) {},\n\n\tloadAsync: function ( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t},\n\n\tparse: function ( /* data */ ) {},\n\n\tsetCrossOrigin: function ( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n} );\n\nconst loading = {};\n\nfunction FileLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: FileLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tconst dataUriRegexResult = url.match( dataUriRegex );\n\t\tlet request;\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tconst mimeType = dataUriRegexResult[ 1 ];\n\t\t\tconst isBase64 = !! dataUriRegexResult[ 2 ];\n\n\t\t\tlet data = dataUriRegexResult[ 3 ];\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tlet response;\n\t\t\t\tconst responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tconst view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\trequest = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tconst response = this.response;\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( const header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction AnimationLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nAnimationLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: AnimationLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n} );\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nCompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: CompressedTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n} );\n\nfunction ImageLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nImageLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ImageLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n} );\n\nfunction CubeTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nCubeTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: CubeTextureLoader,\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nDataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: DataTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\nfunction TextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: TextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tconst isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t},\n\n\tgetTangentAt: function ( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( MathUtils.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( MathUtils.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tconst point = optionalTarget || new Vector2();\n\n\tconst twoPi = Math.PI * 2;\n\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tconst angle = this.aStartAngle + t * deltaAngle;\n\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tconst cos = Math.cos( this.aRotation );\n\t\tconst sin = Math.sin( this.aRotation );\n\n\t\tconst tx = x - this.aX;\n\t\tconst ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tconst data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points;\n\tthis.closed = closed;\n\tthis.curveType = curveType;\n\tthis.tension = tension;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget = new Vector3() ) {\n\n\tconst point = optionalTarget;\n\n\tconst points = this.points;\n\tconst l = points.length;\n\n\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tlet intPoint = Math.floor( p );\n\tlet weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tconst p1 = points[ intPoint % l ];\n\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tconst point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tconst data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tconst point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tconst point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\tthis.v3 = v3;\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget = new Vector2() ) {\n\n\tconst point = optionalTarget;\n\n\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tconst data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\tthis.v3 = v3;\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget = new Vector3() ) {\n\n\tconst point = optionalTarget;\n\n\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tconst data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget = new Vector2() ) {\n\n\tconst point = optionalTarget;\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\tconst tangent = optionalTarget || new Vector2();\n\n\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\treturn tangent;\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tconst data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget = new Vector3() ) {\n\n\tconst point = optionalTarget;\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tconst data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget = new Vector2() ) {\n\n\tconst point = optionalTarget;\n\n\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tconst data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget = new Vector3() ) {\n\n\tconst point = optionalTarget;\n\n\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tconst data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points = [] ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points;\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget = new Vector2() ) {\n\n\tconst point = optionalTarget;\n\n\tconst points = this.points;\n\tconst p = ( points.length - 1 ) * t;\n\n\tconst intPoint = Math.floor( p );\n\tconst weight = p - intPoint;\n\n\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tconst p1 = points[ intPoint ];\n\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tconst point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tconst data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tconst point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tconst point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction Light( color, intensity = 1 ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.normalBias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.mapPass = null;\n\tthis.matrix = new Matrix4();\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis._frustum = new Frustum();\n\tthis._frameExtents = new Vector2( 1, 1 );\n\n\tthis._viewportCount = 1;\n\n\tthis._viewports = [\n\n\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t];\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\t_projScreenMatrix: new Matrix4(),\n\n\t_lightPositionWorld: new Vector3(),\n\n\t_lookTarget: new Vector3(),\n\n\tgetViewportCount: function () {\n\n\t\treturn this._viewportCount;\n\n\t},\n\n\tgetFrustum: function () {\n\n\t\treturn this._frustum;\n\n\t},\n\n\tupdateMatrices: function ( light ) {\n\n\t\tconst shadowCamera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( lookTarget );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t},\n\n\tgetViewport: function ( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t},\n\n\tgetFrameExtents: function () {\n\n\t\treturn this._frameExtents;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\tthis.focus = 1;\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction PointLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\tthis._frameExtents = new Vector2( 4, 2 );\n\n\tthis._viewportCount = 6;\n\n\tthis._viewports = [\n\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t// following orientation:\n\t\t//\n\t\t//  xzXZ\n\t\t//   y Y\n\t\t//\n\t\t// X - Positive x direction\n\t\t// x - Negative x direction\n\t\t// Y - Positive y direction\n\t\t// y - Negative y direction\n\t\t// Z - Positive z direction\n\t\t// z - Negative z direction\n\n\t\t// positive X\n\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t// negative X\n\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t// positive Z\n\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t// negative Z\n\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t// positive Y\n\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t// negative Y\n\t\tnew Vector4( 1, 0, 1, 1 )\n\t];\n\n\tthis._cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tthis._cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n}\n\nPointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: PointLightShadow,\n\n\tisPointLightShadow: true,\n\n\tupdateMatrices: function ( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.copy( camera.position );\n\t\tlookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );\n\n\t\tprojScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t}\n\n} );\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new PointLightShadow();\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction OrthographicCamera( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = near;\n\tthis.far = far;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\nfunction DirectionalLightShadow() {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow,\n\n\tisDirectionalLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tObject.defineProperty( this, 'isSphericalHarmonics3', { value: true } );\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nfunction LightProbe( sh, intensity ) {\n\n\tLight.call( this, undefined, intensity );\n\n\tthis.type = 'LightProbe';\n\n\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n}\n\nLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: LightProbe,\n\n\tisLightProbe: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n} );\n\nfunction MaterialLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.textures = {};\n\n}\n\nMaterialLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: MaterialLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = new Color().setHex( json.sheen );\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.vertexTangents !== undefined ) material.vertexTangents = json.vertexTangents;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\n\t\treturn material;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nconst LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.instanceCount = Infinity;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ()\t{\n\n\t\tconst data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nfunction BufferGeometryLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nBufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: BufferGeometryLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ] instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\t\tlet geometryShapes;\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timages[ image.uuid ].push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timages[ image.uuid ].push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\n\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\timages[ image.uuid ] = deserializedImage;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tlet texture;\n\t\t\t\tconst image = images[ data.image ];\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( image );\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture( image.data, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tLoader.call( this, manager );\n\n\tthis.options = { premultiplyAlpha: 'none' };\n\n}\n\nImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ImageBitmapLoader,\n\n\tisImageBitmapLoader: true,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n} );\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tconst toChange = [];\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // workaround for IE11, see #13988\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nfunction FontLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nFontLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: FontLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tconst font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n} );\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nfunction AudioLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nAudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: AudioLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\nfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tconst color1 = new Color().set( skyColor );\n\tconst color2 = new Color().set( groundColor );\n\n\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\tconst c0 = Math.sqrt( Math.PI );\n\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n}\n\nHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: HemisphereLightProbe,\n\n\tisHemisphereLightProbe: true,\n\n\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\nfunction AmbientLightProbe( color, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tconst color1 = new Color().set( color );\n\n\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n}\n\nAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: AmbientLightProbe,\n\n\tisAmbientLightProbe: true,\n\n\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\nconst _eyeRight = new Matrix4();\nconst _eyeLeft = new Matrix4();\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n\tthis._cache = {\n\t\tfocus: null,\n\t\tfov: null,\n\t\taspect: null,\n\t\tnear: null,\n\t\tfar: null,\n\t\tzoom: null,\n\t\teyeSep: null\n\t};\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: function ( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n} );\n\nclass Clock {\n\n\tconstructor( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );\n\n\t\t_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$2.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$2.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$2.x, _position$2.y, _position$2.z );\n\t\t\tlistener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );\n\n\t\t_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position$3.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position$3.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position$3.x, _position$3.y, _position$3.z );\n\t\t\tpanner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tlet mixFunction,\n\t\tmixFunctionAdditive,\n\t\tsetIdentity;\n\n\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\t//\n\t// 'add' is used for additive cumulative results\n\t//\n\t// 'work' is optional and is only present for quaternion types. It is used\n\t// to store intermediate quaternion multiplication results\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\tthis._workIndex = 5;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tmixFunction = this._select;\n\n\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t// additive is not relevant for non-numeric types\n\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t}\n\n\tthis._mixBufferRegion = mixFunction;\n\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\tthis._setIdentity = setIdentity;\n\tthis._origIndex = 3;\n\tthis._addIndex = 4;\n\n\tthis.cumulativeWeight = 0;\n\tthis.cumulativeWeightAdditive = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive: function ( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\t_setAdditiveIdentityNumeric: function () {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t},\n\n\t_setAdditiveIdentityQuaternion: function () {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t},\n\n\t_setAdditiveIdentityOther: function () {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_slerpAdditive: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t},\n\n\t_lerpAdditive: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: function ( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t},\n\n\tparseTrackName: function ( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t},\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tconst source = this.resolvedProperty;\n\n\t\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n// DECLARE ALIAS AFTER assign prototype\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0; // threshold\n\t// note: read by PropertyBinding.Composite\n\n\tconst indices = {};\n\tthis._indicesByUUID = indices; // for bookkeeping\n\n\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = []; // inside: string\n\tthis._parsedPaths = []; // inside: { we don't care, here }\n\tthis._bindings = []; // inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\tconst scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime: function ( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function ( data ) {\n\n\t\tconst ib = InterleavedBuffer.prototype.clone.call( this, data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t},\n\n\ttoJSON: function ( data ) {\n\n\t\tconst json = InterleavedBuffer.prototype.toJSON.call( this, data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n} );\n\nfunction GLBufferAttribute( buffer, type, itemSize, elementSize, count ) {\n\n\tthis.buffer = buffer;\n\tthis.type = type;\n\tthis.itemSize = itemSize;\n\tthis.elementSize = elementSize;\n\tthis.count = count;\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( GLBufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( GLBufferAttribute.prototype, {\n\n\tisGLBufferAttribute: true,\n\n\tsetBuffer: function ( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t},\n\n\tsetType: function ( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t},\n\n\tsetItemSize: function ( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t},\n\n\tsetCount: function ( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t},\n\n} );\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\tthis.camera = null;\n\tthis.layers = new Layers();\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: { threshold: 1 },\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( camera && camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera && camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tconst intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tconst intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( MathUtils.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$8 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min, max ) {\n\n\t\tObject.defineProperty( this, 'isBox2', { value: true } );\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$8.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$8.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = MathUtils.clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n}\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n\tthis.hasPositions = false;\n\tthis.hasNormals = false;\n\tthis.hasColors = false;\n\tthis.hasUvs = false;\n\n\tthis.positionArray = null;\n\tthis.normalArray = null;\n\tthis.colorArray = null;\n\tthis.uvArray = null;\n\n\tthis.count = 0;\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$9.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$9 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$a.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$a.x, _vector$a.y, _vector$a.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$a.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$a.x, _vector$a.y, _vector$a.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$b.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1$6.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3$1.subVectors( _v2$3, _v1$6 );\n\n\t\tthis.lightPlane.lookAt( _v2$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2$3 );\n\t\tthis.targetLine.scale.z = _v3$1.length();\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector$c.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector$c.x, _vector$c.y, _vector$c.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box$3.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box$3.isEmpty() ) return;\n\n\t\tconst min = _box$3.min;\n\t\tconst max = _box$3.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\tconstructor( dir, origin, length, color, headLength, headWidth ) {\n\n\t\tsuper();\n\t\t// dir is assumed to be normalized\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\n\t\tif ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n}\n\nconst _floatView = new Float32Array( 1 );\nconst _int32View = new Int32Array( _floatView.buffer );\n\nconst DataUtils = {\n\n\t// Converts float32 to float16 (stored as uint16 value).\n\n\ttoHalfFloat: function ( val ) {\n\n\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t* by James Tursa?s half-precision code. */\n\n\t\t_floatView[ 0 ] = val;\n\t\tconst x = _int32View[ 0 ];\n\n\t\tlet bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\tlet m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\tconst e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t* half, return signed zero. */\n\t\tif ( e < 103 ) return bits;\n\n\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\tif ( e > 142 ) {\n\n\t\t\tbits |= 0x7c00;\n\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\t/* If exponent underflows but not too much, return a denormal */\n\t\tif ( e < 113 ) {\n\n\t\t\tm |= 0x0800;\n\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t* to 1, which is OK. */\n\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t* the exponent, which is OK. */\n\t\tbits += m & 1;\n\t\treturn bits;\n\n\t}\n\n};\n\nconst LOD_MIN = 4;\nconst LOD_MAX = 8;\nconst SIZE_MAX = Math.pow( 2, LOD_MAX );\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\nconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst ENCODINGS = {\n\t[ LinearEncoding ]: 0,\n\t[ sRGBEncoding ]: 1,\n\t[ RGBEEncoding ]: 2,\n\t[ RGBM7Encoding ]: 3,\n\t[ RGBM16Encoding ]: 4,\n\t[ RGBDEncoding ]: 5,\n\t[ GammaEncoding ]: 6\n};\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst { _lodPlanes, _sizeLods, _sigmas } = /*@__PURE__*/ _createPlanes();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n */\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._blurMaterial = _getBlurShader( MAX_SAMPLES );\n\t\tthis._equirectShader = null;\n\t\tthis._cubemapShader = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular ) {\n\n\t\treturn this._fromTexture( equirectangular );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap ) {\n\n\t\treturn this._fromTexture( cubemap );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapShader === null ) {\n\n\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\tthis._compileMaterial( this._cubemapShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectShader === null ) {\n\n\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\tthis._compileMaterial( this._equirectShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._blurMaterial.dispose();\n\n\t\tif ( this._cubemapShader !== null ) this._cubemapShader.dispose();\n\t\tif ( this._equirectShader !== null ) this._equirectShader.dispose();\n\n\t\tfor ( let i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t// private interface\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._pingPongRenderTarget.dispose();\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets( texture );\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets( texture ) { // warning: null texture is valid\n\n\t\tconst params = {\n\t\t\tmagFilter: NearestFilter,\n\t\t\tminFilter: NearestFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: UnsignedByteType,\n\t\t\tformat: RGBEFormat,\n\t\t\tencoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( params );\n\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\tthis._pingPongRenderTarget = _createRenderTarget( params );\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( _lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst outputEncoding = renderer.outputEncoding;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\t\tconst clearAlpha = renderer.getClearAlpha();\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.outputEncoding = LinearEncoding;\n\n\t\tlet background = scene.background;\n\t\tif ( background && background.isColor ) {\n\n\t\t\tbackground.convertSRGBToLinear();\n\t\t\t// Convert linear to RGBE\n\t\t\tconst maxComponent = Math.max( background.r, background.g, background.b );\n\t\t\tconst fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\t\t\tbackground = background.multiplyScalar( Math.pow( 2.0, - fExp ) );\n\t\t\tconst alpha = ( fExp + 128.0 ) / 255.0;\n\t\t\trenderer.setClearColor( background, alpha );\n\t\t\tscene.background = null;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\t\t\tif ( col == 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col == 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\t_setViewport( cubeUVRenderTarget,\n\t\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.outputEncoding = outputEncoding;\n\t\trenderer.setClearColor( _clearColor, clearAlpha );\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\tif ( this._cubemapShader == null ) {\n\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( this._equirectShader == null ) {\n\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\tconst mesh = new Mesh( _lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tif ( ! texture.isCubeTexture ) {\n\n\t\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t\t}\n\n\t\tuniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\t\tuniforms[ 'outputEncoding' ].value = ENCODINGS[ cubeUVRenderTarget.texture.encoding ];\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = _sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i == 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\t\tblurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\t\tblurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\n\t\tconst outputSize = _sizeLods[ lodOut ];\n\t\tconst x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\t\tconst y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\nfunction _isLDR( texture ) {\n\n\tif ( texture === undefined || texture.type !== UnsignedByteType ) return false;\n\n\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\n}\n\nfunction _createPlanes() {\n\n\tconst _lodPlanes = [];\n\tconst _sizeLods = [];\n\tconst _sigmas = [];\n\n\tlet lod = LOD_MAX;\n\n\tfor ( let i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\t_sizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t} else if ( i == 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\t_sigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 1 );\n\t\tconst min = - texelSize / 2;\n\t\tconst max = 1 + texelSize / 2;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t_lodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { _lodPlanes, _sizeLods, _sigmas };\n\n}\n\nfunction _createRenderTarget( params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( maxSamples ) {\n\n\tconst weights = new Float32Array( maxSamples );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: { 'n': maxSamples },\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectShader() {\n\n\tconst texelSize = new Vector2( 1, 1 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'texelSize': { value: texelSize },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCubemapShader() {\n\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction _getEncodings() {\n\n\treturn /* glsl */`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`;\n\n}\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nconst LineStrip = 0;\nconst LinePieces = 1;\nconst NoColors = 0;\nconst FaceColors = 1;\nconst VertexColors = 2;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials = [] ) {\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tconst pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tconst pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tconst geometry = new Geometry();\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\treturn this.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nLoader.Handlers = {\n\n\tadd: function ( /* regex, loader */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t},\n\n\tget: function ( /* file */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t}\n\n};\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Sphere.prototype, {\n\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\n} );\n\nFrustum.prototype.setFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\treturn this.setFromProjectionMatrix( m );\n\n};\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( MathUtils, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn MathUtils.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn MathUtils.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\t\treturn attribute.applyMatrix3( this );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t},\n\tgetInverse: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\t\treturn this.copy( matrix ).invert();\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n\t},\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\t\treturn attribute.applyMatrix4( this );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t},\n\tgetInverse: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\t\treturn this.copy( matrix ).invert();\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nObject.assign( Quaternion.prototype, {\n\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t},\n\tinverse: function ( ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\n\t\treturn this.invert();\n\n\t}\n\n} );\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t},\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t},\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( Mesh.prototype, {\n\n\tsetDrawMode: function () {\n\n\t\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t},\n\n} );\n\nObject.defineProperties( Mesh.prototype, {\n\n\tdrawMode: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\treturn TrianglesDrawMode;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\n\t\t\t'Use .setFocalLength and .filmGauge for a photographic setup.' );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\tsetDynamic: function ( value ) {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\treturn this;\n\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t},\n\tsetArray: function ( /* array */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t}\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddAttribute: function ( name, attribute ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\treturn this.setAttribute( name, attribute );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t},\n\tremoveAttribute: function ( name ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\t\treturn this.deleteAttribute( name );\n\n\t},\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( InstancedBufferGeometry.prototype, {\n\n\tmaxInstancedCount: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );\n\t\t\treturn this.instanceCount;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );\n\t\t\tthis.instanceCount = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( Raycaster.prototype, {\n\n\tlinePrecision: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );\n\t\t\treturn this.params.Line.threshold;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );\n\t\t\tthis.params.Line.threshold = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( InterleavedBuffer.prototype, {\n\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( value );\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\tsetDynamic: function ( value ) {\n\n\t\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\treturn this;\n\n\t},\n\tsetArray: function ( /* array */ ) {\n\n\t\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t}\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Scene.prototype, {\n\n\tdispose: function () {\n\n\t\tconsole.error( 'THREE.Scene: .dispose() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t},\n\n\tstencilMask: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\treturn this.stencilFuncMask;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\tthis.stencilFuncMask = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhysicalMaterial.prototype, {\n\n\ttransparency: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.' );\n\t\t\treturn this.transmission;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.' );\n\t\t\tthis.transmission = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t},\n\tallocTextureUnit: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t},\n\tsetTexture: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t},\n\tsetTexture2D: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t},\n\tsetTextureCube: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t},\n\tgetActiveMipMapLevel: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\t\treturn this.getActiveMipmapLevel();\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\tcontext: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\treturn this.getContext();\n\n\t\t}\n\t},\n\tvr: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\treturn this.xr;\n\n\t\t}\n\t},\n\tgammaInput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t}\n\t},\n\tgammaOutput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t}\n\t},\n\ttoneMappingWhitePoint: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\treturn 1.0;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t}\n\t},\n\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\treturn new WebGLCubeRenderTarget( width, options );\n\n}\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Audio.prototype, {\n\n\tload: {\n\t\tvalue: function ( file ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\t\tconst scope = this;\n\t\t\tconst audioLoader = new AudioLoader();\n\t\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\t\tscope.setBuffer( buffer );\n\n\t\t\t} );\n\t\t\treturn this;\n\n\t\t}\n\t},\n\tstartTime: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Audio: .startTime is now .play( delay ).' );\n\n\t\t}\n\t}\n\n} );\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\nCubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\n\treturn this.renderTarget.clear( renderer, color, depth, stencil );\n\n};\n\n//\n\nconst GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tlet matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tconst loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tconst loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nconst SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t/* eslint-disable no-undef */\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\t/* eslint-enable no-undef */\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, ClosedSplineCurve3, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, BoxGeometry as CubeGeometry, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderBufferGeometry, CylinderGeometry, Cylindrical, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, Face3, Face4, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GammaEncoding, Geometry, GeometryUtils, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LogLuvEncoding, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricBufferGeometry, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDEncoding, RGBEEncoding, RGBEFormat, RGBFormat, RGBIntegerFormat, RGBM16Encoding, RGBM7Encoding, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, Spline, SplineCurve, SplineCurve3, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, TextBufferGeometry, TextGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGLCubeRenderTarget, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, sRGBEncoding };\n","import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tLineSegments,\n\tLineBasicMaterial,\n\tMatrix3,\n\tVector3\n} from '../../../build/three.module.js';\n\nvar _v1 = new Vector3();\nvar _v2 = new Vector3();\nvar _normalMatrix = new Matrix3();\nvar _keys = [ 'a', 'b', 'c' ];\n\nfunction VertexNormalsHelper( object, size, hex ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 0.1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.setAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\tthis.type = 'VertexNormalsHelper';\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = function () {\n\n\tthis.object.updateMatrixWorld( true );\n\n\t_normalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\tvar matrixWorld = this.object.matrixWorld;\n\n\tvar position = this.geometry.attributes.position;\n\n\t//\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tvar vertex = vertices[ face[ _keys[ j ] ] ];\n\n\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t_v1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t_v2.copy( normal ).applyMatrix3( _normalMatrix ).normalize().multiplyScalar( this.size ).add( _v1 );\n\n\t\t\t\tposition.setXYZ( idx, _v1.x, _v1.y, _v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, _v2.x, _v2.y, _v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tvar objPos = objGeometry.attributes.position;\n\n\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\tvar idx = 0;\n\n\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t_v1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t_v2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t_v2.applyMatrix3( _normalMatrix ).normalize().multiplyScalar( this.size ).add( _v1 );\n\n\t\t\tposition.setXYZ( idx, _v1.x, _v1.y, _v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, _v2.x, _v2.y, _v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t}\n\n\tposition.needsUpdate = true;\n\n};\n\n\nexport { VertexNormalsHelper };\n","\"use strict\";\n/**\n * Ported to TypeScript from vanilla-js by Ikaros Kappler.\n *\n * @date 2021-09-28\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeometryBuilder = void 0;\n// Note: THREE.Geometry is only available until version 0.124.0\nvar THREE = require(\"three\");\nvar faces_from_edges_1 = require(\"./faces-from-edges\");\nvar constants_1 = require(\"./constants\");\nvar GeometryBuilder = /** @class */ (function () {\n    function GeometryBuilder(sourceGeometry, targetGeometry, slicePlane) {\n        this.sourceGeometry = sourceGeometry;\n        this.targetGeometry = targetGeometry;\n        this.slicePlane = slicePlane;\n        this.addedVertices = [];\n        this.addedIntersections = [];\n        this.newEdges = [[]];\n    }\n    ;\n    // TODO: check undfined?\n    // This is called without params in line ---67 but param used here as an index??\n    GeometryBuilder.prototype.startFace = function (sourceFaceIndex) {\n        this.sourceFaceIndex = sourceFaceIndex;\n        this.sourceFace = this.sourceGeometry.faces[sourceFaceIndex];\n        this.sourceFaceUvs = this.sourceGeometry.faceVertexUvs[0][sourceFaceIndex];\n        this.faceIndices = [];\n        this.faceNormals = [];\n        this.faceUvs = [];\n    };\n    ;\n    GeometryBuilder.prototype.endFace = function () {\n        var indices = this.faceIndices.map(function (index, i) {\n            return i;\n        });\n        this.addFace(indices);\n    };\n    ;\n    GeometryBuilder.prototype.closeHoles = function () {\n        var _this = this;\n        if (!this.newEdges[0].length) {\n            return;\n        }\n        (0, faces_from_edges_1.facesFromEdges)(this.newEdges)\n            .forEach(function (faceIndices) {\n            var normal = _this.faceNormal(faceIndices);\n            if (normal.dot(_this.slicePlane.normal) > .5) {\n                faceIndices.reverse();\n            }\n            _this.startFace();\n            _this.faceIndices = faceIndices;\n            _this.endFace();\n        }, this);\n    };\n    ;\n    GeometryBuilder.prototype.addVertex = function (key) {\n        this.addUv(key);\n        this.addNormal(key);\n        var index = this.sourceFace[key];\n        var newIndex;\n        if (this.addedVertices.hasOwnProperty(index)) {\n            newIndex = this.addedVertices[index];\n        }\n        else {\n            var vertex = this.sourceGeometry.vertices[index];\n            this.targetGeometry.vertices.push(vertex);\n            newIndex = this.targetGeometry.vertices.length - 1;\n            this.addedVertices[index] = newIndex;\n        }\n        this.faceIndices.push(newIndex);\n    };\n    ;\n    GeometryBuilder.prototype.addIntersection = function (keyA, keyB, distanceA, distanceB) {\n        var t = Math.abs(distanceA) / (Math.abs(distanceA) + Math.abs(distanceB));\n        this.addIntersectionUv(keyA, keyB, t);\n        this.addIntersectionNormal(keyA, keyB, t);\n        var indexA = this.sourceFace[keyA];\n        var indexB = this.sourceFace[keyB];\n        var id = this.intersectionId(indexA, indexB);\n        var index;\n        if (this.addedIntersections.hasOwnProperty(id)) {\n            index = this.addedIntersections[id];\n        }\n        else {\n            var vertexA = this.sourceGeometry.vertices[indexA];\n            var vertexB = this.sourceGeometry.vertices[indexB];\n            var newVertex = vertexA.clone().lerp(vertexB, t);\n            this.targetGeometry.vertices.push(newVertex);\n            index = this.targetGeometry.vertices.length - 1;\n            this.addedIntersections[id] = index;\n        }\n        this.faceIndices.push(index);\n        this.updateNewEdges(index);\n    };\n    ;\n    GeometryBuilder.prototype.addUv = function (key) {\n        if (!this.sourceFaceUvs) {\n            return;\n        }\n        var index = this.keyIndex(key);\n        var uv = this.sourceFaceUvs[index];\n        this.faceUvs.push(uv);\n    };\n    ;\n    GeometryBuilder.prototype.addIntersectionUv = function (keyA, keyB, t) {\n        if (!this.sourceFaceUvs) {\n            return;\n        }\n        var indexA = this.keyIndex(keyA);\n        var indexB = this.keyIndex(keyB);\n        var uvA = this.sourceFaceUvs[indexA];\n        var uvB = this.sourceFaceUvs[indexB];\n        var uv = uvA.clone().lerp(uvB, t);\n        this.faceUvs.push(uv);\n    };\n    ;\n    GeometryBuilder.prototype.addNormal = function (key) {\n        if (!this.sourceFace.vertexNormals.length) {\n            return;\n        }\n        var index = this.keyIndex(key);\n        var normal = this.sourceFace.vertexNormals[index];\n        this.faceNormals.push(normal);\n    };\n    ;\n    GeometryBuilder.prototype.addIntersectionNormal = function (keyA, keyB, t) {\n        if (!this.sourceFace.vertexNormals.length) {\n            return;\n        }\n        var indexA = this.keyIndex(keyA);\n        var indexB = this.keyIndex(keyB);\n        var normalA = this.sourceFace.vertexNormals[indexA];\n        var normalB = this.sourceFace.vertexNormals[indexB];\n        var normal = normalA.clone().lerp(normalB, t).normalize();\n        this.faceNormals.push(normal);\n    };\n    ;\n    GeometryBuilder.prototype.addFace = function (indices) {\n        var _this = this;\n        if (indices.length === 3) {\n            this.addFacePart(indices[0], indices[1], indices[2]);\n            return;\n        }\n        var pairs = [];\n        for (var i = 0; i < indices.length; i++) {\n            for (var j = i + 1; j < indices.length; j++) {\n                var diff = Math.abs(i - j);\n                if (diff > 1 && diff < indices.length - 1) {\n                    pairs.push([indices[i], indices[j]]);\n                }\n            }\n        }\n        pairs.sort((function (pairA, pairB) {\n            var lengthA = _this.faceEdgeLength(pairA[0], pairA[1]);\n            var lengthB = _this.faceEdgeLength(pairB[0], pairB[1]);\n            return lengthA - lengthB;\n        }).bind(this));\n        var a = indices.indexOf(pairs[0][0]);\n        indices = indices.slice(a).concat(indices.slice(0, a));\n        var b = indices.indexOf(pairs[0][1]);\n        var indicesA = indices.slice(0, b + 1);\n        var indicesB = indices.slice(b).concat(indices.slice(0, 1));\n        this.addFace(indicesA);\n        this.addFace(indicesB);\n    };\n    ;\n    GeometryBuilder.prototype.addFacePart = function (a, b, c) {\n        var normals = null;\n        if (this.faceNormals.length) {\n            normals = [\n                this.faceNormals[a],\n                this.faceNormals[b],\n                this.faceNormals[c],\n            ];\n        }\n        var face = new THREE.Face3(this.faceIndices[a], this.faceIndices[b], this.faceIndices[c], normals);\n        this.targetGeometry.faces.push(face);\n        if (!this.sourceFaceUvs) {\n            return;\n        }\n        this.targetGeometry.faceVertexUvs[0].push([\n            this.faceUvs[a],\n            this.faceUvs[b],\n            this.faceUvs[c]\n        ]);\n    };\n    ;\n    GeometryBuilder.prototype.faceEdgeLength = function (a, b) {\n        var indexA = this.faceIndices[a];\n        var indexB = this.faceIndices[b];\n        var vertexA = this.targetGeometry.vertices[indexA];\n        var vertexB = this.targetGeometry.vertices[indexB];\n        return vertexA.distanceToSquared(vertexB);\n    };\n    ;\n    GeometryBuilder.prototype.intersectionId = function (indexA, indexB) {\n        return [indexA, indexB].sort().join(',');\n    };\n    ;\n    GeometryBuilder.prototype.keyIndex = function (key) {\n        return constants_1.FACE_KEYS.indexOf(key);\n    };\n    ;\n    GeometryBuilder.prototype.updateNewEdges = function (index) {\n        var edgeIndex = this.newEdges.length - 1;\n        var edge = this.newEdges[edgeIndex];\n        if (edge.length < 2) {\n            edge.push(index);\n        }\n        else {\n            this.newEdges.push([index]);\n        }\n    };\n    ;\n    GeometryBuilder.prototype.faceNormal = function (faceIndices) {\n        var _this = this;\n        var vertices = faceIndices.map((function (index) {\n            return _this.targetGeometry.vertices[index];\n        }).bind(this));\n        var edgeA = vertices[0].clone().sub(vertices[1]);\n        var edgeB = vertices[0].clone().sub(vertices[2]);\n        return edgeA.cross(edgeB).normalize();\n    };\n    ;\n    return GeometryBuilder;\n}());\nexports.GeometryBuilder = GeometryBuilder;\n//# sourceMappingURL=GeometryBuilder.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FACE_KEYS = exports.ON = exports.BACK = exports.FRONT = void 0;\nexports.FRONT = 'front';\nexports.BACK = 'back';\nexports.ON = 'on';\nexports.FACE_KEYS = ['a', 'b', 'c'];\n//# sourceMappingURL=constants.js.map","\"use strict\";\n/**\n * Ported to TypeScript from vanilla-js by Ikaros Kappler.\n *\n * @date 2021-09-28\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.facesFromEdges = void 0;\nvar facesFromEdges = function (edges) {\n    var chains = joinEdges(edges).filter(validFace);\n    var faces = chains.map(function (chain) {\n        return chain.map(function (edge) {\n            return edge[0];\n        });\n    });\n    return faces;\n};\nexports.facesFromEdges = facesFromEdges;\nvar joinEdges = function (edges) {\n    var changes = true;\n    var chains = edges.map(function (edge) {\n        return [edge];\n    });\n    while (changes) {\n        changes = connectChains(chains);\n    }\n    chains = chains.filter(function (chain) {\n        return chain.length;\n    });\n    return chains;\n};\nvar connectChains = function (chains) {\n    chains.forEach(function (chainA, i) {\n        chains.forEach(function (chainB, j) {\n            var merged = mergeChains(chainA, chainB);\n            if (merged) {\n                delete chains[j];\n                return true;\n            }\n        });\n    });\n    return false;\n};\nvar mergeChains = function (chainA, chainB) {\n    if (chainA === chainB) {\n        return false;\n    }\n    if (chainStart(chainA) === chainEnd(chainB)) {\n        chainA.unshift.apply(chainA, chainB);\n        return true;\n    }\n    if (chainStart(chainA) === chainStart(chainB)) {\n        reverseChain(chainB);\n        chainA.unshift.apply(chainA, chainB);\n        return true;\n    }\n    if (chainEnd(chainA) === chainStart(chainB)) {\n        chainA.push.apply(chainA, chainB);\n        return true;\n    }\n    if (chainEnd(chainA) === chainEnd(chainB)) {\n        reverseChain(chainB);\n        chainA.push.apply(chainA, chainB);\n        return true;\n    }\n    return false;\n};\nvar chainStart = function (chain) {\n    return chain[0][0];\n};\nvar chainEnd = function (chain) {\n    return chain[chain.length - 1][1];\n};\nvar reverseChain = function (chain) {\n    chain.reverse();\n    chain.forEach(function (edge) {\n        edge.reverse();\n    });\n};\nvar validFace = function (chain) {\n    return chainStart(chain) === chainEnd(chain) ? 1 : 0;\n};\n//# sourceMappingURL=faces-from-edges.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sliceGeometry = void 0;\n// Note: THREE.Geometry is only available until version 0.124.0\nvar THREE = require(\"three\");\nvar GeometryBuilder_1 = require(\"./GeometryBuilder\");\nvar constants_1 = require(\"./constants\");\nvar sliceGeometry = function (geometry, plane, closeHoles) {\n    var sliced = new THREE.Geometry();\n    var builder = new GeometryBuilder_1.GeometryBuilder(geometry, sliced, plane);\n    var distances = [];\n    var positions = [];\n    geometry.vertices.forEach(function (vertex) {\n        var distance = findDistance(vertex, plane);\n        var position = distanceAsPosition(distance);\n        distances.push(distance);\n        positions.push(position);\n    });\n    geometry.faces.forEach(function (face, faceIndex) {\n        var facePositions = constants_1.FACE_KEYS.map(function (key) {\n            return positions[face[key]];\n        });\n        if (facePositions.indexOf(constants_1.FRONT) === -1 &&\n            facePositions.indexOf(constants_1.BACK) !== -1) {\n            return;\n        }\n        builder.startFace(faceIndex);\n        var lastKey = constants_1.FACE_KEYS[constants_1.FACE_KEYS.length - 1];\n        var lastIndex = face[lastKey];\n        var lastDistance = distances[lastIndex];\n        var lastPosition = positions[lastIndex];\n        constants_1.FACE_KEYS.map(function (key) {\n            var index = face[key];\n            var distance = distances[index];\n            var position = positions[index];\n            if (position === constants_1.FRONT) {\n                if (lastPosition === constants_1.BACK) {\n                    builder.addIntersection(lastKey, key, lastDistance, distance);\n                    builder.addVertex(key);\n                }\n                else {\n                    builder.addVertex(key);\n                }\n            }\n            if (position === constants_1.ON) {\n                builder.addVertex(key);\n            }\n            if (position === constants_1.BACK && lastPosition === constants_1.FRONT) {\n                builder.addIntersection(lastKey, key, lastDistance, distance);\n            }\n            lastKey = key;\n            lastIndex = index;\n            lastPosition = position;\n            lastDistance = distance;\n        });\n        builder.endFace();\n    });\n    if (closeHoles) {\n        builder.closeHoles();\n    }\n    return sliced;\n};\nexports.sliceGeometry = sliceGeometry;\nvar distanceAsPosition = function (distance) {\n    if (distance < 0) {\n        return constants_1.BACK;\n    }\n    if (distance > 0) {\n        return constants_1.FRONT;\n    }\n    return constants_1.ON;\n};\nvar findDistance = function (vertex, plane) {\n    return plane.distanceToPoint(vertex);\n};\n//# sourceMappingURL=slice.js.map"],"names":["Node","linkedList","filterPoints","earcutLinked","isEar","isEarHashed","cureLocalIntersections","splitEarcut","eliminateHoles","compareX","eliminateHole","findHoleBridge","sectorContainsSector","indexCurve","sortLinked","zOrder","getLeftmost","pointInTriangle","isValidDiagonal","area","equals","intersects","onSegment","sign","intersectsPolygon","locallyInside","middleInside","splitPolygon","insertNode","removeNode","signedArea","Object","defineProperty","exports","value","earcut","i","x","y","this","prev","next","z","prevZ","nextZ","steiner","data","start","end","dim","clockwise","last","p","again","ear","triangles","minX","minY","invSize","pass","stop","push","a","b","c","minTX","minTY","maxTX","maxTY","minZ","maxZ","n","holeIndices","outerNode","list","queue","len","length","sort","hole","bridge","bridgeReverse","filteredBridge","m","hx","hy","qx","tan","mx","my","tanMin","Infinity","Math","abs","q","e","tail","numMerges","pSize","qSize","inSize","leftmost","ax","ay","bx","by","cx","cy","px","py","r","p1","p2","q1","q2","o1","o2","o3","o4","max","min","num","inside","a2","b2","an","bp","sum","j","maxX","maxY","hasHoles","outerLen","UIDGenerator","static","current","VertexAttr","constructor","key","draggable","selectable","isSelected","visible","model","VertexListeners","vertex","click","drag","dragStart","dragEnd","addClickListener","listener","_addListener","removeClickListener","_removeListener","addDragListener","removeDragListener","addDragStartListener","removeDragStartListener","addDragEndListener","removeDragEndListener","fireClickEvent","_fireEvent","fireDragEvent","fireDragStartEvent","fireDragEndEvent","_self","listeners","ve","params","newListener","oldListener","splice","Vertex","className","uid","tuple","NaN","attr","set","setX","setY","invX","invY","add","addXY","amountX","amountY","addX","addY","sub","eqX","EPSILON","eqY","clone","distance","vert","sqrt","pow","angle","origin","PI","atan2","difference","scale","factor","center","rotate","ZERO","cos","sin","multiplyScalar","scalar","round","inv","toString","toSVGString","options","buffer","join","viewPort","random","utils","buildArrowHead","zA","zB","headlen","scaleX","scaleY","vertices","Polygon","isOpen","addVertex","getVertexAt","index","move","containsVert","xi","yi","xj","yj","isClockwise","console","log","getBounds","Bounds","computeFromVertices","toQuadraticBezierData","qbezier","cc0","cc1","edgeCenter","limit","t","toQuadraticBezierSVGString","qdata","toCubicBezierData","threshold","cbezier","aCenter","bCenter","b0","toCubicBezierSVGString","toCubicBezierPath","pathdata","BezierPath","fromArray","total","l","width","height","toPolygon","getCenter","xMin","xMax","yMin","yMax","VertTuple","factory","setLength","amount","normalize","moveTo","newA","diff","line","v0","v1","vertAt","denominator","colinear","getClosestT","l2","vtutils","dist2","hasPoint","point","insideBoundsOnly","getClosestPoint","pointDistance","v","w","Vector","vertA","vertB","super","perp","inverse","tmp","intersection","numerator1","numerator2","CubicBezierCurve","startPoint","endPoint","startControlPoint","endControlPoint","START_POINT","START_CONTROL_POINT","END_CONTROL_POINT","END_POINT","curveIntervals","segmentCache","segmentLengths","arcLength","updateArcLengths","moveCurvePoint","pointID","moveAmount","moveControlPoint","getStartPoint","getStartControlPoint","getEndControlPoint","getEndPoint","translate","reverse","getLength","pointA","pointB","curveStep","newLength","tmpLength","getPointAt","result","tPrev","tNext","iteration","locateIntervalByDistance","tStart","tEnd","stepCount","minIndex","minDist","tDiff","dist","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","getPointByID","id","Error","getPoint","u","getTangentAt","d","t2","nt2","tX","tY","getSubCurveAt","startVec","endVec","convertU2T","getTangent","getPerpendicular","getPerpendicularAt","tangentVector","curve","obj","toSVGPathData","toJSON","prettyFormat","jsonString","JSON","parse","fromObject","arr","Array","isArray","pathPoints","totalArcLength","adjustCircular","bezierCurves","addCurve","adjustSuccessorControlPoint","locateCurveByStartPoint","locateCurveByEndPoint","locateCurveByStartControlPoint","locateCurveByEndControlPoint","getCurveCount","getCurveAt","curveIndex","anchor","scaling","curveT","uMin","warn","uTemp","relativeU","uResult","_locateUIndex","bCurve","uPart","path","uBefore","getSubPathAt","startT","endT","startU","endU","uStartResult","uEndResult","firstT","lastT","firstCurve","curves","adjustPredecessorControlPoint","obtainHandleLength","mainCurve","neighbourCurve","adjustNeighbourControlPoint","_mainCurve","mainPoint","mainControlPoint","neighbourPoint","neighbourControlPoint","obtainHandleLengths","_updateArcLengths","mainHandleBounds","neighbourHandleBounds","mainHandleLength","neighbourHandleLength","undefined","bPath","lastCurve","isInstance","toReducedListRepresentation","digits","toFixed","listJSON","pointArray","fromReducedList","bezierPath","Line","isNaN","Circle","radius","containsCircle","circle","lineDistance","circleUtils","tangentAt","circleIntersection","p0","h","x3","y3","x4","y4","CircleSector","startAngle","endAngle","circleSectorUtils","describeSVGArc","polarToCartesian","centerX","centerY","moveToStart","firstHalf","secondHalf","concat","largeArcFlag","sweepFlag","pathData","RAD_TO_DEG","drawutilssvg","svgNode","offset","canvasSize","fillShapes","drawConfig","isSecondary","gNode","bufferGNode","drawlibConfiguration","cache","Map","setSize","addStyleDefs","createSVGNode","appendChild","nodeStyle","keys","rules","k","drawSettings","color","lineWidth","innerHTML","addCustomStyleDefs","defs","forEach","findElement","nodeName","node","get","toUpperCase","delete","document","createElementNS","makeNode","curId","blendMode","style","_bindFillDraw","curClassName","setAttribute","parentNode","copyInstance","setConfiguration","configuration","setCurrentId","setCurrentClassName","beginDrawCycle","renderTime","clear","childNodes","child","getAttribute","removeAllChildNodes","endDrawCycle","replaceChild","_x","_y","arrow","image","position","size","setImageSize","naturalWidth","ratioX","ratioY","naturalHeight","addEventListener","event","src","cubicBezier","cubicBezierPath","handle","square","handleLine","dot","circleArc","arcData","ellipse","radiusX","radiusY","rotation","rect","grid","sizeX","sizeY","ceil","raster","diamondHandle","squareHandle","circleHandle","crosshair","polygon","polyline","text","_a","_b","lineHeight","fontSize","textAlign","transformOrigin","textNode","fontFamily","fontStyle","fontWeight","label","inplace","copyPathData","transformPathData","lastChild","removeChild","copy","_stx","_sty","_sx","_sy","lastPoint","_slp","HEAD_XML","drawutils","context","ctx","globalCompositeOperation","save","beginPath","lineTo","strokeStyle","stroke","restore","_fillOrDraw","complete","drawImage","closePath","fillStyle","fill","bezierCurveTo","quadraticBezier","controlPoint","quadraticCurveTo","arc","asSegment","setLineDash","_c","relX","relY","font","indexOf","fillText","strokeText","Path2D","clearRect","canvas","fillRect","drawutilsgl","gl","_zindex","glutils","GLU","_vertShader","compileShader","vertCode","VERTEX_SHADER","_fragShader","fragCode","FRAGMENT_SHADER","_program","makeProgram","vertex_buffer","createBuffer","_x2rel","_y2rel","Float32Array","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","coord","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","viewport","uRotationVector","getUniformLocation","uniform2fv","drawArrays","LINES","TRIANGLE_FAN","clearColor","enable","DEPTH_TEST","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","verts","vbuffer","shaderCode","shaderType","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","vertShader","fragShader","program","createProgram","attachShader","linkProgram","useProgram","detachShader","Triangle","calcCircumcircle","getArea","getCentroid","scaleToCentroid","centroid","getCircumcircle","isAdjacent","tri","getThirdVertex","vert1","vert2","A","B","C","D","E","F","G","dx","dy","bounds","radius_squared","inCircumcircle","min3","max3","determinant","containsPoint","pointIsInTriangle","getIncircularTriangle","lineA","lineB","lineC","bisector1","geomutils","nsectAngle","bisector2","circleIntersA","circleIntersB","circleIntersC","getIncircle","getIncenter","p0x","p0y","p1x","p1y","p2x","p2y","s","pA","pB","pC","triangle","lineAB","lineAC","insideAngle","scaleFactor","wrapMax","wrapMinMax","Grid","baseLog","base","mapRasterScale","adjustFactor","gf","floor","KeyHandler","downListeners","pressListeners","upListeners","keyStates","element","globalThis","trackAllKeys","trackAll","installListeners","fireEvent","hasListener","lis","keyCode","fireDownEvent","handler","firePressEvent","fireUpEvent","KEY_CODES","_keyDownListener","_keyPressListener","_keyUpListener","releaseListeners","removeEventListener","down","key2code","press","up","isDown","XMouseEvent","MouseEvent","XWheelEvent","WheelEvent","MouseHandler","name","mouseDownPos","mouseDragPos","mouseButton","installed","handlers","mousemove","mkParams","relPos","mouseup","button","mousedown","wheel","offsetX","offsetY","eventName","rel","xEvent","isTouchEvent","pos","leftButton","middleButton","rightButton","draggedFrom","wasDragged","dragAmount","listenFor","unlistenFor","callback","throwAlreadyInstalled","destroy","PBImage","upperLeft","lowerRight","PBText","getLen","getRotateAngle","v2","mr","acos","getAngle","cross","HandlerAdmin","el","del","dispatch","_args","apply","arguments","wrapFunc","handlerAdmin","AlloyFinger","option","querySelector","bind","cancel","preV","pinchStartLen","zoom","isDoubleTap","noop","touchStart","multipointStart","multipointEnd","pinch","swipe","tap","doubleTap","longTap","singleTap","pressMove","twoFingerPressMove","touchMove","touchEnd","touchCancel","_cancelAllHandler","cancelAll","delta","now","tapTimeout","singleTapTimeout","longTapTimeout","swipeTimeout","x1","x2","y1","y2","preTapPosition","evt","touches","Date","pageX","pageY","clearTimeout","_cancelLongTap","_cancelSingleTap","_preventTap","setTimeout","afEvent","currentX","currentY","sCurrentX","sCurrentY","sx2","deltaX","deltaY","sy2","movedX","movedY","preventDefault","changedTouches","self","direction","_swipeDirection","on","off","VEllipse","axis","radiusH","signedRadiusH","radiusV","signedRadiusV","normalAt","foci","getFoci","angleA","centerAngle","endPointA","endPointB","normal","perimeter","rh","rv","sdiff","f","getEquidistantVertices","pointCount","angles","equidistantVertAngles","toCubicBezier","quarterSegmentCount","segmentCount","curAngle","nextAngle","startTangent","endTangent","startDiff","endDiff","phiToTheta","phi","tanPhi","tanPhi2","atan","theta","VEllipseSector","ellipseSectorUtils","normalizeAngle","r2d","fullEllipsePointCount","ellipseAngles","map","filter","startIndex","findClosestToStartAngle","ea","endpointToCenterParameters","rx","ry","fa","fs","sinphi","cosphi","prx","pry","L","M","_cx","_cy","PlotBoilerplate","config","bezierAutoAdjust","fetch","fullSize","val","fitToParent","bool","rasterGrid","rasterScaleX","rasterScaleY","rasterAdjustFactor","drawOrigin","autoAdjustOffset","offsetAdjustXPercent","offsetAdjustYPercent","backgroundColor","redrawOnResize","defaultCanvasWidth","DEFAULT_CANVAS_WIDTH","defaultCanvasHeight","DEFAULT_CANVAS_HEIGHT","canvasWidthFactor","canvasHeightFactor","cssScaleX","cssScaleY","cssUniformScale","saveFile","hooks","setToRetina","_setToRetina","autoDetectRetina","enableSVGExport","preClear","func","preDraw","postDraw","enableMouse","enableTouch","enableKeys","enableMouseWheel","enableGL","drawVertices","drawBezierHandleLines","drawBezierHandlePoints","drawHandleLines","drawHandlePoints","drawGrid","bezier","pathVertex","controlVertex","ellipseSector","circleSector","selectedVertex","vector","canvasElement","tagName","toLowerCase","eventCatcher","getContext","draw","parentElement","createElement","left","top","cursor","body","selectPolygon","draggedElements","drawables","_saveFile","resizeCanvas","installInputListeners","updateCSSscale","redraw","focus","pb","tosvgDraw","tosvgFill","drawAll","svgCode","XMLSerializer","serializeToString","blob","Blob","type","_saveAs","pixelRatio","devicePixelRatio","fitToView","canvasCenter","canvasRatio","ratio","setOffset","newUniformZoom","setZoom","setConsole","con","setCSSscale","drawable","enableBezierPathAutoAdjust","remove","removeWithVertices","removeVertex","removeAll","keepVertices","Boolean","getVertexNear","pixelPosition","pixelTolerance","locatePointNear","transformMousePosition","typeName","vindex","gScale","gSize","cs","_handleColor","drawDrawables","drawDrawable","df","error","drawSelectPolygon","clearSelection","getFProp","elem","propName","parseFloat","getComputedStyle","getPropertyValue","getAvailableContainerSpace","container","display","padding","border","pl","pr","pt","bl","br","bt","bb","clientWidth","clientHeight","_setSize","HTMLCanvasElement","SVGElement","adjustOffset","innerWidth","documentElement","innerHeight","space","selectVerticesInPolygon","tolerance","Draggable","VERTEX","setVIndex","handleClick","DEFAULT_CLICK_TOLERANCE","keyHandler","paths","pindex","cindex","pid","revertMousePosition","getDraggedElementCount","mouseDownHandler","mouseDragHandler","oldDragAmount","mouseUpHandler","mouseWheelHandler","zoomStep","we","newOffset","zoomFactorX","zoomFactorY","interactionPos","oldPos","newPos","newOffsetX","newOffsetY","getBoundingClientRect","touchMovePos","touchDownPos","draggedElement","multiTouchStartScale","clearTouch","afProps","clientX","clientY","DEFAULT_TOUCH_TOLERANCE","draggingVertex","fakeEvent","stopPropagation","trans","fingerA","item","fingerB","window","createGUI","props","isVertex","safeMergeByKeys","extension","hasOwnProperty","typ","transform","fallback","SVGBuilder","build","nl","indent","Red","Pink","Purple","DeepPurple","Indigo","Blue","LightBlue","Cyan","Teal","Green","LightGreen","WebColors","shuffleWebColors","order","WebColorsContrast","WebColorsMalachite","Color","g","cssRGB","cssRGBA","red","green","blue","setRed","setBlue","Converter","RGBToHSL","setAlpha","setGreen","setHue","HSLToRGB","setSaturation","setLuminance","cssHSL","cssHSLA","hue","saturation","lightness","cssHEX","alpha","saturate","parseInt","desaturate","lighten","darken","fadein","fadeout","spin","args","sanitized","Sanitizer","RGB","HSL","startsWith","substr","Validator","checkHEX","str","trim","makeHEX","substring","parts","match","makeRGB","interpolate","o","charCodeAt","hue2rgb","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","EventDispatcher","assign","prototype","_listeners","hasEventListener","listenerArray","dispatchEvent","target","array","slice","call","_lut","_seed","MathUtils","DEG2RAD","RAD2DEG","generateUUID","d0","d1","d2","d3","clamp","euclideanModulo","mapLinear","a1","b1","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","seededRandom","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","Vector2","setScalar","setComponent","getComponent","addVectors","addScalar","addScaledVector","subVectors","subScalar","multiply","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","lengthSq","manhattanLength","distanceTo","distanceToSquared","manhattanDistanceTo","lerpVectors","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","invert","t11","t12","t13","det","detInv","transpose","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","matrix","_canvas","ImageUtils","getDataURL","test","ImageData","putImageData","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","serializeImage","HTMLImageElement","ImageBitmap","create","isTexture","updateMatrix","source","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","isDataTexture","dispose","transformUv","uv","Vector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","WebGLRenderTarget","scissor","scissorTest","texture","depthBuffer","stencilBuffer","depthTexture","WebGLMultisampleRenderTarget","samples","isWebGLRenderTarget","isWebGLMultisampleRenderTarget","Quaternion","_z","_w","qa","qb","qm","slerp","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","z1","w1","dir","sqrSin","tDir","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","_order","c1","c3","s1","s3","setFromAxisAngle","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","step","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","Vector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion","applyAxisAngle","applyNormalMatrix","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","az","bz","projectOnVector","projectOnPlane","planeNormal","_vector","reflect","dz","setFromSpherical","setFromSphericalCoords","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","Box3","setFromArray","setFromBufferAttribute","count","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","_vector$1","setFromObject","object","expandByObject","box","isEmpty","getSize","expandByVector","expandByScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box","union","children","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","_center","_extents","_v0","_v1","_v2","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","extents","_testAxis","_box$1","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","_vector$2","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","makeBasis","extractRotation","_v1$1","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","isVector3","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","z2","wx","wy","wz","decompose","_m1","invSX","invSY","invSZ","makePerspective","right","bottom","near","far","makeOrthographic","Euler","DefaultOrder","asin","setFromQuaternion","_matrix","setFromVector3","reorder","newOrder","_quaternion$1","toVector3","optionalResult","RotationOrders","Layers","mask","channel","enableAll","toggle","disable","disableAll","layers","_object3DId","_v1$2","_q1","_m1$1","_target","_position","_scale","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","isObject3D","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","attach","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","serialize","library","stringify","isInstancedMesh","instanceMatrix","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","values","recursive","_vector1","_vector2","_normalMatrix","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_v0$1","_v1$3","_v2$1","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getBarycoord","p3","uv1","uv2","uv3","setFromPointsAndIndices","i0","i1","i2","getMidpoint","getNormal","getPlane","getUV","isFrontFacing","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","SRGBToLinear","LinearToSRGB","setRGB","isColor","setHex","setStyle","hex","setHSL","handleAlpha","string","exec","components","charAt","setColorName","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","normalized","NAMES","Face3","materialIndex","vertexNormals","vertexColors","materialId","Material","fog","blending","side","flatShading","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","toneMapped","MeshBasicMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","setValues","isMaterial","onBeforeCompile","customProgramCacheKey","newValue","currentValue","isRoot","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","matcap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","envMapIntensity","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","morphNormals","srcPlanes","dstPlanes","isMeshBasicMaterial","_vector$3","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","Float64Array","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","isFloat16BufferAttribute","DirectGeometry","normals","uvs","uvs2","groups","skinWeights","skinIndices","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","computeGroups","group","faces","face","fromGeometry","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","arrayMax","TYPED_ARRAYS","getTypedArray","_bufferGeometryId","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$4","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","drawRange","isBufferGeometry","getIndex","setIndex","deleteAttribute","hasAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","tangent","computeBoundingSphere","positions","lineDistances","isGeometry","updateFromObject","direct","__directGeometry","elementsNeedUpdate","lineDistancesNeedUpdate","fromDirectGeometry","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeFaceNormals","computeVertexNormals","positionAttribute","normalAttribute","nA","nB","nC","cb","ab","vA","vB","vC","normalizeNormals","merge","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","indices","array2","geometry2","newAttribute","morphArray","attributeData","hasMorphAttributes","attributeArray","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","morphInfluences","morphTargetInfluences","influence","boneTransform","morphTargetDictionary","ml","String","groupMaterial","faceIndex","isMultiMaterial","fl","faceMaterial","fvA","fvB","fvC","uvs_f","BoxBufferGeometry","depth","widthSegments","heightSegments","depthSegments","scope","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","isMatrix3","isMatrix4","isVector2","isVector4","mergeUniforms","uniforms","merged","UniformsUtils","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","Camera","PerspectiveCamera","fov","aspect","view","filmGauge","filmOffset","updateProjectionMatrix","isShaderMaterial","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","clearViewOffset","skew","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","WebGLCubeRenderTarget","dummy","isInteger","DataTexture","isCubeTexture","fromEquirectangularTexture","tEquirect","mesh","currentMinFilter","stencil","_sphere$1","_vector$5","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","capabilities","isWebGL2","buffers","WeakMap","isInterleavedBufferAttribute","deleteBuffer","bufferType","cached","bytesPerElement","elementSize","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmissionmap_fragment","transmissionmap_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","cubemaps","state","objects","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","isScene","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","WebGLBindingStates","maxVertexAttributes","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","disableUnusedAttributes","disableVertexAttribArray","stride","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","instanceColor","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","mode","setMode","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","onTextureDispose","cubemap","has","currentRenderList","getRenderList","setRenderList","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","_bufferGeometry","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","lines","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","MAX_SAFE_INTEGER","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","DataTexture2DArray","wrapR","DataTexture3D","physical","transmission","transmissionMap","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","uniformObject","parseUniform","pathLength","lastIndex","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","WebGLShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","status","split","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","generateExtensions","customDefines","chunks","generateDefines","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","cachedUniforms","getActiveAttrib","fetchAttributeLocations","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","bones","nVertexUniforms","nVertexMatrices","getMaxBones","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","cameras","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderCallDepth","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","renderObject","shadowCamera","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","activeTexture","webglSlot","setMaterial","frontFaceCW","setLineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","texImage3D","WebGLTextures","_gl","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","uploadCubeTexture","wrappingToGL","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","Group","WebXRController","_targetRay","_grip","_hand","WebXRManager","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","onSessionEnd","disconnect","setFramebuffer","isPresenting","onRequestReferenceSpace","updateInputSources","inputSources","removed","added","getController","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","then","cameraLPos","cameraRPos","updateCamera","getCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","density","refreshMaterialUniforms","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","createCanvasElement","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderState","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","initGLContext","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","compiled","material2","initMaterial","projectObject","isGroup","isLOD","isImmediateRenderObject","renderObjects","isArrayCamera","camera2","renderObjectImmediate","lightsStateVersion","programCacheKey","programChange","needsLights","materialNeedsLights","progUniforms","uniformsList","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","opaqueObjects","transparentObjects","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","joints","inputState","pinching","XRHand","LITTLE_PHALANX_TIP","joint","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","jointPose","getJointPose","jointRadius","indexTip","INDEX_PHALANX_TIP","thumbTip","THUMB_PHALANX_TIP","distanceToPinch","handedness","getPose","targetRaySpace","gripSpace","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","_geometry","interleavedBuffers","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA$1","_vB$1","_vC$1","_uvA$1","_uvB$1","_uvC$1","Sprite","transformVertex","vertexPosition","mvPosition","_v1$4","_v2$2","LOD","_currentLevel","levels","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$7","_matrix$1","SkinnedMesh","bindMatrixInverse","Bone","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","boneInverses","isBone","_offsetMatrix","_identityMatrix","Skeleton","bone","getBoneByName","fromJSON","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","linecap","linejoin","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","_start","_end","_inverseMatrix$1","_ray$1","_sphere$2","computeLineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","nbVertices","_start$1","_end$1","LineSegments","LineLoop","_inverseMatrix$2","_ray$2","_sphere$3","_position$1","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","requestVideoFrameCallback","updateVideo","CompressedTexture","CanvasTexture","DepthTexture","readyState","HAVE_CURRENT_DATA","isCanvasTexture","_geometryId","_m1$3","_obj$1","_offset$1","Geometry","fromBufferGeometry","addFace","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","colors1","colors2","vertexCopy","faceVertexNormals","faceVertexColors","faceCopy","faceVertexUvs2","uvsCopy","mergeMesh","mergeVertices","precisionPoints","verticesMap","unique","changes","faceIndicesToRemove","idx","sortFacesByMaterialIndex","_id","uvs1","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","srcVertexNormal","destVertexNormal","BoxGeometry","CircleBufferGeometry","segments","thetaStart","thetaLength","segment","CircleGeometry","CylinderBufferGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","CylinderGeometry","ConeGeometry","ConeBufferGeometry","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","applyRadius","uvA","uvB","uvC","azi","correctUVs","correctSeam","generateUVs","DodecahedronBufferGeometry","DodecahedronGeometry","_v0$2","_v1$5","_normal$1","_triangle","EdgesGeometry","thresholdAngle","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Earcut","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","splineTube","binormal","position2","extrudeByPath","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","hl","ahole","scalePt2","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","binormals","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","layer","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","ExtrudeGeometry","toJSON$1","IcosahedronBufferGeometry","IcosahedronGeometry","LatheBufferGeometry","phiStart","phiLength","inverseSegments","n1","n2","LatheGeometry","OctahedronBufferGeometry","OctahedronGeometry","ParametricBufferGeometry","slices","stacks","EPS","pu","pv","sliceCount","ParametricGeometry","PlaneGeometry","PolyhedronGeometry","RingBufferGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","RingGeometry","ShapeBufferGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","toJSON$2","ShapeGeometry","toJSON$3","SphereBufferGeometry","thetaEnd","verticesRow","uOffset","SphereGeometry","TetrahedronBufferGeometry","TetrahedronGeometry","TextBufferGeometry","isFont","generateShapes","TextGeometry","TorusBufferGeometry","tube","tubularSegments","TorusGeometry","TorusKnotBufferGeometry","P1","P2","T","N","calculatePositionOnCurve","cu","su","quOverP","TorusKnotGeometry","heightScale","TubeBufferGeometry","closed","frames","tangents","P","generateSegment","generateIndices","generateBufferData","TubeGeometry","taper","bufferGeometry","WireframeGeometry","edge","edges","edge1","edge2","ol","Geometries","freeze","__proto__","RawShaderMaterial","ior","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","parseKeyframeTrack","trackType","getTrackTypeForValueTypeName","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","slerpFlat","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","Promise","resolve","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","AnimationLoader","CompressedTextureLoader","ImageLoader","CubeTextureLoader","DataTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","send","setResponseType","setMimeType","loaded","loadTexture","texDatas","mipmapCount","isCubemap","onImageLoad","onImageError","urls","texData","isJPEG","search","optionalTarget","getUtoTmapping","getPoints","divisions","lengths","getLengths","cacheArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","pt1","pt2","mat","MAX_VALUE","tz","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","_frameExtents","_viewportCount","_viewports","SpotLightShadow","SpotLight","power","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","firstPoint","getPointsHoles","holesPts","_lightPositionWorld","_lookTarget","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","viewportIndex","isSpotLightShadow","scaleW","scaleH","isDirectionalLightShadow","SphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","shBasis","LightProbe","MaterialLoader","getTexture","shading","setTextures","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","arrayBuffer","getArrayBuffer","typedArray","bufferAttribute","drawcalls","offsets","ObjectLoader","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","geometryShapes","bufferGeometryLoader","details","deserializeImage","loadImage","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","objectAnimations","setTexturePath","ImageBitmapLoader","createImageBitmap","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","FontLoader","isImageBitmapLoader","setOptions","fetchOptions","credentials","res","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","chars","line_height","underlineThickness","ret","createPaths","AudioContext","webkitAudioContext","AudioLoader","HemisphereLightProbe","sky","ground","AmbientLightProbe","bufferCopy","decodeAudioData","audioBuffer","isHemisphereLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","getElapsedTime","getDelta","newTime","performance","_position$2","_quaternion$3","_scale$1","_orientation","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position$3","_quaternion$4","_scale$2","_orientation$1","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","AnimationObjectGroup","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","firstValidIndex","bindings","unbind","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","setType","setItemSize","setCount","setFromCamera","coords","intersectObjects","Spherical","other","makeSafe","setFromCartesianCoords","Cylindrical","_vector$8","Box2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","ImmediateRenderObject","_vector$9","SpotLightHelper","cone","coneLength","coneWidth","_vector$a","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$b","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","_v1$6","_v2$3","_v3$1","DirectionalLightHelper","lightPlane","targetLine","_vector$c","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box$3","BoxHelper","Box3Helper","PlaneHelper","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","_floatView","_int32View","DataUtils","toHalfFloat","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","LOD_MAX","MAX_SAMPLES","ENCODINGS","_flatCamera","_lodPlanes","_sizeLods","_sigmas","_createPlanes","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_pingPongRenderTarget","_blurMaterial","weights","poleAxis","_getCommonVertexShader","_getEncodings","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","fromScene","sigma","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapShader","compileEquirectangularShader","_getEquirectShader","outputTarget","_setViewport","_textureToCubeUV","_isLDR","_createRenderTarget","tmpMesh","cubeCamera","upSign","forwardSign","maxComponent","fExp","log2","col","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","blurMesh","blurUniforms","pixels","radiansPerPixel","isFinite","sigmaPixels","exp","outputSize","lod","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","Face4","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","ClosedSplineCurve3","SplineCurve3","Spline","AxisHelper","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","WebGLRenderTargetCube","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","Handlers","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","applyMatrix","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","maxInstancedCount","linePrecision","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","transparency","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","getData","updateCubeMap","GeometryUtils","geometry1","CanvasRenderer","JSONLoader","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","detach","LensFlare","revision","_keys","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","GeometryBuilder","THREE","faces_from_edges_1","constants_1","sourceGeometry","targetGeometry","slicePlane","addedVertices","addedIntersections","newEdges","startFace","sourceFaceIndex","sourceFace","sourceFaceUvs","faceIndices","faceUvs","endFace","closeHoles","facesFromEdges","addUv","addNormal","newIndex","addIntersection","distanceA","distanceB","addIntersectionUv","addIntersectionNormal","intersectionId","vertexA","vertexB","newVertex","updateNewEdges","keyIndex","normalA","normalB","pairs","pairA","pairB","faceEdgeLength","indicesA","indicesB","addFacePart","FACE_KEYS","edgeIndex","edgeA","edgeB","ON","BACK","FRONT","joinEdges","validFace","chain","chains","connectChains","chainA","chainB","mergeChains","chainStart","chainEnd","reverseChain","sliceGeometry","GeometryBuilder_1","sliced","builder","distances","findDistance","distanceAsPosition","facePositions","lastKey","lastDistance","lastPosition"],"sourceRoot":""}